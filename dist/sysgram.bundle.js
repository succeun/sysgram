(function webpackUniversalModuleDefinition(root, factory) {
	if(typeof exports === 'object' && typeof module === 'object')
		module.exports = factory();
	else if(typeof define === 'function' && define.amd)
		define([], factory);
	else if(typeof exports === 'object')
		exports["sysgram"] = factory();
	else
		root["sysgram"] = factory();
})(self, function() {
return /******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ([
/* 0 */,
/* 1 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__),
/* harmony export */   "AElement": () => (/* binding */ AElement),
/* harmony export */   "AnimateColorElement": () => (/* binding */ AnimateColorElement),
/* harmony export */   "AnimateElement": () => (/* binding */ AnimateElement),
/* harmony export */   "AnimateTransformElement": () => (/* binding */ AnimateTransformElement),
/* harmony export */   "BoundingBox": () => (/* binding */ BoundingBox),
/* harmony export */   "CB1": () => (/* binding */ CB1),
/* harmony export */   "CB2": () => (/* binding */ CB2),
/* harmony export */   "CB3": () => (/* binding */ CB3),
/* harmony export */   "CB4": () => (/* binding */ CB4),
/* harmony export */   "Canvg": () => (/* binding */ Canvg),
/* harmony export */   "CircleElement": () => (/* binding */ CircleElement),
/* harmony export */   "ClipPathElement": () => (/* binding */ ClipPathElement),
/* harmony export */   "DefsElement": () => (/* binding */ DefsElement),
/* harmony export */   "DescElement": () => (/* binding */ DescElement),
/* harmony export */   "Document": () => (/* binding */ Document),
/* harmony export */   "Element": () => (/* binding */ Element),
/* harmony export */   "EllipseElement": () => (/* binding */ EllipseElement),
/* harmony export */   "FeColorMatrixElement": () => (/* binding */ FeColorMatrixElement),
/* harmony export */   "FeCompositeElement": () => (/* binding */ FeCompositeElement),
/* harmony export */   "FeDropShadowElement": () => (/* binding */ FeDropShadowElement),
/* harmony export */   "FeGaussianBlurElement": () => (/* binding */ FeGaussianBlurElement),
/* harmony export */   "FeMorphologyElement": () => (/* binding */ FeMorphologyElement),
/* harmony export */   "FilterElement": () => (/* binding */ FilterElement),
/* harmony export */   "Font": () => (/* binding */ Font),
/* harmony export */   "FontElement": () => (/* binding */ FontElement),
/* harmony export */   "FontFaceElement": () => (/* binding */ FontFaceElement),
/* harmony export */   "GElement": () => (/* binding */ GElement),
/* harmony export */   "GlyphElement": () => (/* binding */ GlyphElement),
/* harmony export */   "GradientElement": () => (/* binding */ GradientElement),
/* harmony export */   "ImageElement": () => (/* binding */ ImageElement),
/* harmony export */   "LineElement": () => (/* binding */ LineElement),
/* harmony export */   "LinearGradientElement": () => (/* binding */ LinearGradientElement),
/* harmony export */   "MarkerElement": () => (/* binding */ MarkerElement),
/* harmony export */   "MaskElement": () => (/* binding */ MaskElement),
/* harmony export */   "Matrix": () => (/* binding */ Matrix),
/* harmony export */   "MissingGlyphElement": () => (/* binding */ MissingGlyphElement),
/* harmony export */   "Mouse": () => (/* binding */ Mouse),
/* harmony export */   "PSEUDO_ZERO": () => (/* binding */ PSEUDO_ZERO),
/* harmony export */   "Parser": () => (/* binding */ Parser),
/* harmony export */   "PathElement": () => (/* binding */ PathElement),
/* harmony export */   "PathParser": () => (/* binding */ PathParser),
/* harmony export */   "PatternElement": () => (/* binding */ PatternElement),
/* harmony export */   "Point": () => (/* binding */ Point),
/* harmony export */   "PolygonElement": () => (/* binding */ PolygonElement),
/* harmony export */   "PolylineElement": () => (/* binding */ PolylineElement),
/* harmony export */   "Property": () => (/* binding */ Property),
/* harmony export */   "QB1": () => (/* binding */ QB1),
/* harmony export */   "QB2": () => (/* binding */ QB2),
/* harmony export */   "QB3": () => (/* binding */ QB3),
/* harmony export */   "RadialGradientElement": () => (/* binding */ RadialGradientElement),
/* harmony export */   "RectElement": () => (/* binding */ RectElement),
/* harmony export */   "RenderedElement": () => (/* binding */ RenderedElement),
/* harmony export */   "Rotate": () => (/* binding */ Rotate),
/* harmony export */   "SVGElement": () => (/* binding */ SVGElement),
/* harmony export */   "SVGFontLoader": () => (/* binding */ SVGFontLoader),
/* harmony export */   "Scale": () => (/* binding */ Scale),
/* harmony export */   "Screen": () => (/* binding */ Screen),
/* harmony export */   "Skew": () => (/* binding */ Skew),
/* harmony export */   "SkewX": () => (/* binding */ SkewX),
/* harmony export */   "SkewY": () => (/* binding */ SkewY),
/* harmony export */   "StopElement": () => (/* binding */ StopElement),
/* harmony export */   "StyleElement": () => (/* binding */ StyleElement),
/* harmony export */   "SymbolElement": () => (/* binding */ SymbolElement),
/* harmony export */   "TRefElement": () => (/* binding */ TRefElement),
/* harmony export */   "TSpanElement": () => (/* binding */ TSpanElement),
/* harmony export */   "TextElement": () => (/* binding */ TextElement),
/* harmony export */   "TextPathElement": () => (/* binding */ TextPathElement),
/* harmony export */   "TitleElement": () => (/* binding */ TitleElement),
/* harmony export */   "Transform": () => (/* binding */ Transform),
/* harmony export */   "Translate": () => (/* binding */ Translate),
/* harmony export */   "UnknownElement": () => (/* binding */ UnknownElement),
/* harmony export */   "UseElement": () => (/* binding */ UseElement),
/* harmony export */   "ViewPort": () => (/* binding */ ViewPort),
/* harmony export */   "compressSpaces": () => (/* binding */ compressSpaces),
/* harmony export */   "getSelectorSpecificity": () => (/* binding */ getSelectorSpecificity),
/* harmony export */   "normalizeAttributeName": () => (/* binding */ normalizeAttributeName),
/* harmony export */   "normalizeColor": () => (/* binding */ normalizeColor),
/* harmony export */   "parseExternalUrl": () => (/* binding */ parseExternalUrl),
/* harmony export */   "presets": () => (/* binding */ index),
/* harmony export */   "toNumbers": () => (/* binding */ toNumbers),
/* harmony export */   "trimLeft": () => (/* binding */ trimLeft),
/* harmony export */   "trimRight": () => (/* binding */ trimRight),
/* harmony export */   "vectorMagnitude": () => (/* binding */ vectorMagnitude),
/* harmony export */   "vectorsAngle": () => (/* binding */ vectorsAngle),
/* harmony export */   "vectorsRatio": () => (/* binding */ vectorsRatio)
/* harmony export */ });
/* harmony import */ var _babel_runtime_corejs3_core_js_stable_instance_starts_with__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(2);
/* harmony import */ var _babel_runtime_corejs3_core_js_stable_instance_starts_with__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_corejs3_core_js_stable_instance_starts_with__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _babel_runtime_corejs3_core_js_stable_parse_float__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(48);
/* harmony import */ var _babel_runtime_corejs3_core_js_stable_parse_float__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_corejs3_core_js_stable_parse_float__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _babel_runtime_corejs3_core_js_stable_instance_map__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(55);
/* harmony import */ var _babel_runtime_corejs3_core_js_stable_instance_map__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_corejs3_core_js_stable_instance_map__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _babel_runtime_corejs3_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(64);
/* harmony import */ var _babel_runtime_corejs3_core_js_stable_object_define_property__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(159);
/* harmony import */ var _babel_runtime_corejs3_core_js_stable_object_define_property__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_corejs3_core_js_stable_object_define_property__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var _babel_runtime_corejs3_core_js_stable_object_define_properties__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(163);
/* harmony import */ var _babel_runtime_corejs3_core_js_stable_object_define_properties__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_corejs3_core_js_stable_object_define_properties__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var _babel_runtime_corejs3_core_js_stable_object_get_own_property_descriptors__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(167);
/* harmony import */ var _babel_runtime_corejs3_core_js_stable_object_get_own_property_descriptors__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_corejs3_core_js_stable_object_get_own_property_descriptors__WEBPACK_IMPORTED_MODULE_6__);
/* harmony import */ var _babel_runtime_corejs3_core_js_stable_instance_for_each__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(172);
/* harmony import */ var _babel_runtime_corejs3_core_js_stable_instance_for_each__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_corejs3_core_js_stable_instance_for_each__WEBPACK_IMPORTED_MODULE_7__);
/* harmony import */ var _babel_runtime_corejs3_core_js_stable_object_get_own_property_descriptor__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(179);
/* harmony import */ var _babel_runtime_corejs3_core_js_stable_object_get_own_property_descriptor__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_corejs3_core_js_stable_object_get_own_property_descriptor__WEBPACK_IMPORTED_MODULE_8__);
/* harmony import */ var _babel_runtime_corejs3_core_js_stable_instance_filter__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(183);
/* harmony import */ var _babel_runtime_corejs3_core_js_stable_instance_filter__WEBPACK_IMPORTED_MODULE_9___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_corejs3_core_js_stable_instance_filter__WEBPACK_IMPORTED_MODULE_9__);
/* harmony import */ var _babel_runtime_corejs3_core_js_stable_object_get_own_property_symbols__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(188);
/* harmony import */ var _babel_runtime_corejs3_core_js_stable_object_get_own_property_symbols__WEBPACK_IMPORTED_MODULE_10___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_corejs3_core_js_stable_object_get_own_property_symbols__WEBPACK_IMPORTED_MODULE_10__);
/* harmony import */ var _babel_runtime_corejs3_core_js_stable_object_keys__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(191);
/* harmony import */ var _babel_runtime_corejs3_core_js_stable_object_keys__WEBPACK_IMPORTED_MODULE_11___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_corejs3_core_js_stable_object_keys__WEBPACK_IMPORTED_MODULE_11__);
/* harmony import */ var _babel_runtime_corejs3_regenerator__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(195);
/* harmony import */ var _babel_runtime_corejs3_regenerator__WEBPACK_IMPORTED_MODULE_12___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_corejs3_regenerator__WEBPACK_IMPORTED_MODULE_12__);
/* harmony import */ var _babel_runtime_corejs3_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(197);
/* harmony import */ var _babel_runtime_corejs3_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(226);
/* harmony import */ var _babel_runtime_corejs3_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(229);
/* harmony import */ var _babel_runtime_corejs3_helpers_createClass__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(230);
/* harmony import */ var _babel_runtime_corejs3_core_js_stable_instance_concat__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(231);
/* harmony import */ var _babel_runtime_corejs3_core_js_stable_instance_concat__WEBPACK_IMPORTED_MODULE_17___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_corejs3_core_js_stable_instance_concat__WEBPACK_IMPORTED_MODULE_17__);
/* harmony import */ var _babel_runtime_corejs3_core_js_stable_instance_reduce__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(235);
/* harmony import */ var _babel_runtime_corejs3_core_js_stable_instance_reduce__WEBPACK_IMPORTED_MODULE_18___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_corejs3_core_js_stable_instance_reduce__WEBPACK_IMPORTED_MODULE_18__);
/* harmony import */ var _babel_runtime_corejs3_core_js_stable_date_now__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(241);
/* harmony import */ var _babel_runtime_corejs3_core_js_stable_date_now__WEBPACK_IMPORTED_MODULE_19___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_corejs3_core_js_stable_date_now__WEBPACK_IMPORTED_MODULE_19__);
/* harmony import */ var _babel_runtime_corejs3_core_js_stable_instance_every__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(245);
/* harmony import */ var _babel_runtime_corejs3_core_js_stable_instance_every__WEBPACK_IMPORTED_MODULE_20___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_corejs3_core_js_stable_instance_every__WEBPACK_IMPORTED_MODULE_20__);
/* harmony import */ var _babel_runtime_corejs3_core_js_stable_promise__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(250);
/* harmony import */ var _babel_runtime_corejs3_core_js_stable_promise__WEBPACK_IMPORTED_MODULE_21___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_corejs3_core_js_stable_promise__WEBPACK_IMPORTED_MODULE_21__);
/* harmony import */ var _babel_runtime_corejs3_core_js_stable_instance_bind__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(252);
/* harmony import */ var _babel_runtime_corejs3_core_js_stable_instance_bind__WEBPACK_IMPORTED_MODULE_22___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_corejs3_core_js_stable_instance_bind__WEBPACK_IMPORTED_MODULE_22__);
/* harmony import */ var raf__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(258);
/* harmony import */ var raf__WEBPACK_IMPORTED_MODULE_23___default = /*#__PURE__*/__webpack_require__.n(raf__WEBPACK_IMPORTED_MODULE_23__);
/* harmony import */ var _babel_runtime_corejs3_core_js_stable_instance_trim__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(260);
/* harmony import */ var _babel_runtime_corejs3_core_js_stable_instance_trim__WEBPACK_IMPORTED_MODULE_24___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_corejs3_core_js_stable_instance_trim__WEBPACK_IMPORTED_MODULE_24__);
/* harmony import */ var rgbcolor__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(266);
/* harmony import */ var rgbcolor__WEBPACK_IMPORTED_MODULE_25___default = /*#__PURE__*/__webpack_require__.n(rgbcolor__WEBPACK_IMPORTED_MODULE_25__);
/* harmony import */ var _babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(267);
/* harmony import */ var _babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26__);
/* harmony import */ var _babel_runtime_corejs3_helpers_inherits__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(271);
/* harmony import */ var _babel_runtime_corejs3_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(281);
/* harmony import */ var _babel_runtime_corejs3_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(287);
/* harmony import */ var _babel_runtime_corejs3_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(292);
/* harmony import */ var _babel_runtime_corejs3_core_js_stable_instance_some__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(296);
/* harmony import */ var _babel_runtime_corejs3_core_js_stable_instance_some__WEBPACK_IMPORTED_MODULE_31___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_corejs3_core_js_stable_instance_some__WEBPACK_IMPORTED_MODULE_31__);
/* harmony import */ var _babel_runtime_corejs3_core_js_stable_instance_includes__WEBPACK_IMPORTED_MODULE_32__ = __webpack_require__(301);
/* harmony import */ var _babel_runtime_corejs3_core_js_stable_instance_includes__WEBPACK_IMPORTED_MODULE_32___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_corejs3_core_js_stable_instance_includes__WEBPACK_IMPORTED_MODULE_32__);
/* harmony import */ var _babel_runtime_corejs3_core_js_stable_array_from__WEBPACK_IMPORTED_MODULE_33__ = __webpack_require__(308);
/* harmony import */ var _babel_runtime_corejs3_core_js_stable_array_from__WEBPACK_IMPORTED_MODULE_33___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_corejs3_core_js_stable_array_from__WEBPACK_IMPORTED_MODULE_33__);
/* harmony import */ var _babel_runtime_corejs3_core_js_stable_instance_reverse__WEBPACK_IMPORTED_MODULE_34__ = __webpack_require__(310);
/* harmony import */ var _babel_runtime_corejs3_core_js_stable_instance_reverse__WEBPACK_IMPORTED_MODULE_34___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_corejs3_core_js_stable_instance_reverse__WEBPACK_IMPORTED_MODULE_34__);
/* harmony import */ var _babel_runtime_corejs3_core_js_stable_instance_index_of__WEBPACK_IMPORTED_MODULE_35__ = __webpack_require__(315);
/* harmony import */ var _babel_runtime_corejs3_core_js_stable_instance_index_of__WEBPACK_IMPORTED_MODULE_35___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_corejs3_core_js_stable_instance_index_of__WEBPACK_IMPORTED_MODULE_35__);
/* harmony import */ var _babel_runtime_corejs3_helpers_get__WEBPACK_IMPORTED_MODULE_36__ = __webpack_require__(320);
/* harmony import */ var _babel_runtime_corejs3_core_js_stable_instance_fill__WEBPACK_IMPORTED_MODULE_37__ = __webpack_require__(328);
/* harmony import */ var _babel_runtime_corejs3_core_js_stable_instance_fill__WEBPACK_IMPORTED_MODULE_37___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_corejs3_core_js_stable_instance_fill__WEBPACK_IMPORTED_MODULE_37__);
/* harmony import */ var svg_pathdata__WEBPACK_IMPORTED_MODULE_38__ = __webpack_require__(334);
/* harmony import */ var _babel_runtime_corejs3_core_js_stable_reflect_delete_property__WEBPACK_IMPORTED_MODULE_39__ = __webpack_require__(335);
/* harmony import */ var _babel_runtime_corejs3_core_js_stable_reflect_delete_property__WEBPACK_IMPORTED_MODULE_39___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_corejs3_core_js_stable_reflect_delete_property__WEBPACK_IMPORTED_MODULE_39__);
/* harmony import */ var _babel_runtime_corejs3_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_40__ = __webpack_require__(286);
/* harmony import */ var _babel_runtime_corejs3_core_js_stable_instance_values__WEBPACK_IMPORTED_MODULE_41__ = __webpack_require__(339);
/* harmony import */ var _babel_runtime_corejs3_core_js_stable_instance_values__WEBPACK_IMPORTED_MODULE_41___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_corejs3_core_js_stable_instance_values__WEBPACK_IMPORTED_MODULE_41__);
/* harmony import */ var _babel_runtime_corejs3_core_js_stable_parse_int__WEBPACK_IMPORTED_MODULE_42__ = __webpack_require__(343);
/* harmony import */ var _babel_runtime_corejs3_core_js_stable_parse_int__WEBPACK_IMPORTED_MODULE_42___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_corejs3_core_js_stable_parse_int__WEBPACK_IMPORTED_MODULE_42__);
/* harmony import */ var _babel_runtime_corejs3_core_js_get_iterator__WEBPACK_IMPORTED_MODULE_43__ = __webpack_require__(348);
/* harmony import */ var _babel_runtime_corejs3_core_js_get_iterator__WEBPACK_IMPORTED_MODULE_43___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_corejs3_core_js_get_iterator__WEBPACK_IMPORTED_MODULE_43__);
/* harmony import */ var _babel_runtime_corejs3_core_js_stable_array_is_array__WEBPACK_IMPORTED_MODULE_44__ = __webpack_require__(351);
/* harmony import */ var _babel_runtime_corejs3_core_js_stable_array_is_array__WEBPACK_IMPORTED_MODULE_44___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_corejs3_core_js_stable_array_is_array__WEBPACK_IMPORTED_MODULE_44__);
/* harmony import */ var _babel_runtime_corejs3_core_js_get_iterator_method__WEBPACK_IMPORTED_MODULE_45__ = __webpack_require__(125);
/* harmony import */ var _babel_runtime_corejs3_core_js_get_iterator_method__WEBPACK_IMPORTED_MODULE_45___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_corejs3_core_js_get_iterator_method__WEBPACK_IMPORTED_MODULE_45__);
/* harmony import */ var _babel_runtime_corejs3_core_js_stable_symbol__WEBPACK_IMPORTED_MODULE_46__ = __webpack_require__(353);
/* harmony import */ var _babel_runtime_corejs3_core_js_stable_symbol__WEBPACK_IMPORTED_MODULE_46___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_corejs3_core_js_stable_symbol__WEBPACK_IMPORTED_MODULE_46__);
/* harmony import */ var _babel_runtime_corejs3_core_js_stable_instance_slice__WEBPACK_IMPORTED_MODULE_47__ = __webpack_require__(355);
/* harmony import */ var _babel_runtime_corejs3_core_js_stable_instance_slice__WEBPACK_IMPORTED_MODULE_47___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_corejs3_core_js_stable_instance_slice__WEBPACK_IMPORTED_MODULE_47__);
/* harmony import */ var _babel_runtime_corejs3_core_js_stable_map__WEBPACK_IMPORTED_MODULE_48__ = __webpack_require__(357);
/* harmony import */ var _babel_runtime_corejs3_core_js_stable_map__WEBPACK_IMPORTED_MODULE_48___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_corejs3_core_js_stable_map__WEBPACK_IMPORTED_MODULE_48__);
/* harmony import */ var _babel_runtime_corejs3_core_js_stable_reflect_apply__WEBPACK_IMPORTED_MODULE_49__ = __webpack_require__(365);
/* harmony import */ var _babel_runtime_corejs3_core_js_stable_reflect_apply__WEBPACK_IMPORTED_MODULE_49___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_corejs3_core_js_stable_reflect_apply__WEBPACK_IMPORTED_MODULE_49__);
/* harmony import */ var _babel_runtime_corejs3_core_js_stable_reflect_get_prototype_of__WEBPACK_IMPORTED_MODULE_50__ = __webpack_require__(369);
/* harmony import */ var _babel_runtime_corejs3_core_js_stable_reflect_get_prototype_of__WEBPACK_IMPORTED_MODULE_50___default = /*#__PURE__*/__webpack_require__.n(_babel_runtime_corejs3_core_js_stable_reflect_get_prototype_of__WEBPACK_IMPORTED_MODULE_50__);
/* harmony import */ var stackblur_canvas__WEBPACK_IMPORTED_MODULE_51__ = __webpack_require__(373);




















































/**
 * HTML-safe compress white-spaces.
 * @param str - String to compress.
 */

function compressSpaces(str) {
  return str.replace(/(?!\u3000)\s+/gm, ' ');
}
/**
 * HTML-safe left trim.
 * @param str - String to trim.
 */


function trimLeft(str) {
  return str.replace(/^[\n \t]+/, '');
}
/**
 * HTML-safe right trim.
 * @param str - String to trim.
 */


function trimRight(str) {
  return str.replace(/[\n \t]+$/, '');
}
/**
 * String to numbers array.
 * @param str - Numbers string.
 */


function toNumbers(str) {
  var matches = (str || '').match(/-?(\d+(?:\.\d*(?:[eE][+-]?\d+)?)?|\.\d+)(?=\D|$)/gm) || [];
  return _babel_runtime_corejs3_core_js_stable_instance_map__WEBPACK_IMPORTED_MODULE_2___default()(matches).call(matches, (_babel_runtime_corejs3_core_js_stable_parse_float__WEBPACK_IMPORTED_MODULE_1___default()));
} // Microsoft Edge fix


var allUppercase = /^[A-Z-]+$/;
/**
 * Normalize attribute name.
 * @param name - Attribute name.
 */

function normalizeAttributeName(name) {
  if (allUppercase.test(name)) {
    return name.toLowerCase();
  }

  return name;
}
/**
 * Parse external URL.
 * @param url - CSS url string.
 */


function parseExternalUrl(url) {
  //                                   single quotes [2]
  //                                   v           double quotes [3]
  //                                   v           v        no quotes [4]
  //                                   v           v        v
  var urlMatch = url.match(/url\(('([^']+)'|"([^"]+)"|([^'"\)]+))\)/) || [];
  return urlMatch[2] || urlMatch[3] || urlMatch[4];
}
/**
 * Transform floats to integers in rgb colors.
 * @param color - Color to normalize.
 */


function normalizeColor(color) {
  if (!_babel_runtime_corejs3_core_js_stable_instance_starts_with__WEBPACK_IMPORTED_MODULE_0___default()(color).call(color, 'rgb')) {
    return color;
  }

  var rgbParts = 3;
  var normalizedColor = color.replace(/\d+(\.\d+)?/g, function (num, isFloat) {
    return rgbParts-- && isFloat ? String(Math.round(_babel_runtime_corejs3_core_js_stable_parse_float__WEBPACK_IMPORTED_MODULE_1___default()(num))) : num;
  });
  return normalizedColor;
} // slightly modified version of https://github.com/keeganstreet/specificity/blob/master/specificity.js


var attributeRegex = /(\[[^\]]+\])/g;
var idRegex = /(#[^\s\+>~\.\[:]+)/g;
var classRegex = /(\.[^\s\+>~\.\[:]+)/g;
var pseudoElementRegex = /(::[^\s\+>~\.\[:]+|:first-line|:first-letter|:before|:after)/gi;
var pseudoClassWithBracketsRegex = /(:[\w-]+\([^\)]*\))/gi;
var pseudoClassRegex = /(:[^\s\+>~\.\[:]+)/g;
var elementRegex = /([^\s\+>~\.\[:]+)/g;

function findSelectorMatch(selector, regex) {
  var matches = selector.match(regex);

  if (!matches) {
    return [selector, 0];
  }

  return [selector.replace(regex, ' '), matches.length];
}
/**
 * Measure selector specificity.
 * @param selector - Selector to measure.
 */


function getSelectorSpecificity(selector) {
  var specificity = [0, 0, 0];
  var currentSelector = selector.replace(/:not\(([^\)]*)\)/g, '     $1 ').replace(/{[\s\S]*/gm, ' ');
  var delta = 0;

  var _findSelectorMatch = findSelectorMatch(currentSelector, attributeRegex);

  var _findSelectorMatch2 = (0,_babel_runtime_corejs3_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_3__.default)(_findSelectorMatch, 2);

  currentSelector = _findSelectorMatch2[0];
  delta = _findSelectorMatch2[1];
  specificity[1] += delta;

  var _findSelectorMatch3 = findSelectorMatch(currentSelector, idRegex);

  var _findSelectorMatch4 = (0,_babel_runtime_corejs3_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_3__.default)(_findSelectorMatch3, 2);

  currentSelector = _findSelectorMatch4[0];
  delta = _findSelectorMatch4[1];
  specificity[0] += delta;

  var _findSelectorMatch5 = findSelectorMatch(currentSelector, classRegex);

  var _findSelectorMatch6 = (0,_babel_runtime_corejs3_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_3__.default)(_findSelectorMatch5, 2);

  currentSelector = _findSelectorMatch6[0];
  delta = _findSelectorMatch6[1];
  specificity[1] += delta;

  var _findSelectorMatch7 = findSelectorMatch(currentSelector, pseudoElementRegex);

  var _findSelectorMatch8 = (0,_babel_runtime_corejs3_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_3__.default)(_findSelectorMatch7, 2);

  currentSelector = _findSelectorMatch8[0];
  delta = _findSelectorMatch8[1];
  specificity[2] += delta;

  var _findSelectorMatch9 = findSelectorMatch(currentSelector, pseudoClassWithBracketsRegex);

  var _findSelectorMatch10 = (0,_babel_runtime_corejs3_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_3__.default)(_findSelectorMatch9, 2);

  currentSelector = _findSelectorMatch10[0];
  delta = _findSelectorMatch10[1];
  specificity[1] += delta;

  var _findSelectorMatch11 = findSelectorMatch(currentSelector, pseudoClassRegex);

  var _findSelectorMatch12 = (0,_babel_runtime_corejs3_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_3__.default)(_findSelectorMatch11, 2);

  currentSelector = _findSelectorMatch12[0];
  delta = _findSelectorMatch12[1];
  specificity[1] += delta;
  currentSelector = currentSelector.replace(/[\*\s\+>~]/g, ' ').replace(/[#\.]/g, ' ');

  var _findSelectorMatch13 = findSelectorMatch(currentSelector, elementRegex);

  var _findSelectorMatch14 = (0,_babel_runtime_corejs3_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_3__.default)(_findSelectorMatch13, 2);

  currentSelector = _findSelectorMatch14[0];
  delta = _findSelectorMatch14[1]; // lgtm [js/useless-assignment-to-local]

  specificity[2] += delta;
  return specificity.join('');
}

var PSEUDO_ZERO = .00000001;
/**
 * Vector magnitude.
 */

function vectorMagnitude(v) {
  return Math.sqrt(Math.pow(v[0], 2) + Math.pow(v[1], 2));
}
/**
 * Ratio between two vectors.
 */


function vectorsRatio(u, v) {
  return (u[0] * v[0] + u[1] * v[1]) / (vectorMagnitude(u) * vectorMagnitude(v));
}
/**
 * Angle between two vectors.
 */


function vectorsAngle(u, v) {
  return (u[0] * v[1] < u[1] * v[0] ? -1 : 1) * Math.acos(vectorsRatio(u, v));
}

function CB1(t) {
  return t * t * t;
}

function CB2(t) {
  return 3 * t * t * (1 - t);
}

function CB3(t) {
  return 3 * t * (1 - t) * (1 - t);
}

function CB4(t) {
  return (1 - t) * (1 - t) * (1 - t);
}

function QB1(t) {
  return t * t;
}

function QB2(t) {
  return 2 * t * (1 - t);
}

function QB3(t) {
  return (1 - t) * (1 - t);
}

var Property = /*#__PURE__*/function () {
  function Property(document, name, value) {
    (0,_babel_runtime_corejs3_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_15__.default)(this, Property);

    this.document = document;
    this.name = name;
    this.value = value;
    this.isNormalizedColor = false;
  }

  (0,_babel_runtime_corejs3_helpers_createClass__WEBPACK_IMPORTED_MODULE_16__.default)(Property, [{
    key: "split",
    value: function split() {
      var _context, _context2;

      var separator = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : ' ';
      var document = this.document,
          name = this.name;
      return _babel_runtime_corejs3_core_js_stable_instance_map__WEBPACK_IMPORTED_MODULE_2___default()(_context = _babel_runtime_corejs3_core_js_stable_instance_trim__WEBPACK_IMPORTED_MODULE_24___default()(_context2 = compressSpaces(this.getString())).call(_context2).split(separator)).call(_context, function (value) {
        return new Property(document, name, value);
      });
    }
  }, {
    key: "hasValue",
    value: function hasValue(zeroIsValue) {
      var value = this.value;
      return value !== null && value !== '' && (zeroIsValue || value !== 0) && typeof value !== 'undefined';
    }
  }, {
    key: "isString",
    value: function isString(regexp) {
      var value = this.value;
      var result = typeof value === 'string';

      if (!result || !regexp) {
        return result;
      }

      return regexp.test(value);
    }
  }, {
    key: "isUrlDefinition",
    value: function isUrlDefinition() {
      return this.isString(/^url\(/);
    }
  }, {
    key: "isPixels",
    value: function isPixels() {
      if (!this.hasValue()) {
        return false;
      }

      var asString = this.getString();

      switch (true) {
        case /px$/.test(asString):
        case /^[0-9]+$/.test(asString):
          return true;

        default:
          return false;
      }
    }
  }, {
    key: "setValue",
    value: function setValue(value) {
      this.value = value;
      return this;
    }
  }, {
    key: "getValue",
    value: function getValue(def) {
      if (typeof def === 'undefined' || this.hasValue()) {
        return this.value;
      }

      return def;
    }
  }, {
    key: "getNumber",
    value: function getNumber(def) {
      if (!this.hasValue()) {
        if (typeof def === 'undefined') {
          return 0;
        }

        return _babel_runtime_corejs3_core_js_stable_parse_float__WEBPACK_IMPORTED_MODULE_1___default()(def);
      }

      var value = this.value;

      var n = _babel_runtime_corejs3_core_js_stable_parse_float__WEBPACK_IMPORTED_MODULE_1___default()(value);

      if (this.isString(/%$/)) {
        n = n / 100.0;
      }

      return n;
    }
  }, {
    key: "getString",
    value: function getString(def) {
      if (typeof def === 'undefined' || this.hasValue()) {
        return typeof this.value === 'undefined' ? '' : String(this.value);
      }

      return String(def);
    }
  }, {
    key: "getColor",
    value: function getColor(def) {
      var color = this.getString(def);

      if (this.isNormalizedColor) {
        return color;
      }

      this.isNormalizedColor = true;
      color = normalizeColor(color);
      this.value = color;
      return color;
    }
  }, {
    key: "getDpi",
    value: function getDpi() {
      return 96.0; // TODO: compute?
    }
  }, {
    key: "getRem",
    value: function getRem() {
      return this.document.rootEmSize;
    }
  }, {
    key: "getEm",
    value: function getEm() {
      return this.document.emSize;
    }
  }, {
    key: "getUnits",
    value: function getUnits() {
      return this.getString().replace(/[0-9\.\-]/g, '');
    }
  }, {
    key: "getPixels",
    value: function getPixels(axisOrIsFontSize) {
      var processPercent = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;

      if (!this.hasValue()) {
        return 0;
      }

      var _ref = typeof axisOrIsFontSize === 'boolean' ? [undefined, axisOrIsFontSize] : [axisOrIsFontSize],
          _ref2 = (0,_babel_runtime_corejs3_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_3__.default)(_ref, 2),
          axis = _ref2[0],
          isFontSize = _ref2[1];

      var viewPort = this.document.screen.viewPort;

      switch (true) {
        case this.isString(/vmin$/):
          return this.getNumber() / 100.0 * Math.min(viewPort.computeSize('x'), viewPort.computeSize('y'));

        case this.isString(/vmax$/):
          return this.getNumber() / 100.0 * Math.max(viewPort.computeSize('x'), viewPort.computeSize('y'));

        case this.isString(/vw$/):
          return this.getNumber() / 100.0 * viewPort.computeSize('x');

        case this.isString(/vh$/):
          return this.getNumber() / 100.0 * viewPort.computeSize('y');

        case this.isString(/rem$/):
          return this.getNumber() * this.getRem();

        case this.isString(/em$/):
          return this.getNumber() * this.getEm();

        case this.isString(/ex$/):
          return this.getNumber() * this.getEm() / 2.0;

        case this.isString(/px$/):
          return this.getNumber();

        case this.isString(/pt$/):
          return this.getNumber() * this.getDpi() * (1.0 / 72.0);

        case this.isString(/pc$/):
          return this.getNumber() * 15;

        case this.isString(/cm$/):
          return this.getNumber() * this.getDpi() / 2.54;

        case this.isString(/mm$/):
          return this.getNumber() * this.getDpi() / 25.4;

        case this.isString(/in$/):
          return this.getNumber() * this.getDpi();

        case this.isString(/%$/) && isFontSize:
          return this.getNumber() * this.getEm();

        case this.isString(/%$/):
          return this.getNumber() * viewPort.computeSize(axis);

        default:
          {
            var n = this.getNumber();

            if (processPercent && n < 1.0) {
              return n * viewPort.computeSize(axis);
            }

            return n;
          }
      }
    }
  }, {
    key: "getMilliseconds",
    value: function getMilliseconds() {
      if (!this.hasValue()) {
        return 0;
      }

      if (this.isString(/ms$/)) {
        return this.getNumber();
      }

      return this.getNumber() * 1000;
    }
  }, {
    key: "getRadians",
    value: function getRadians() {
      if (!this.hasValue()) {
        return 0;
      }

      switch (true) {
        case this.isString(/deg$/):
          return this.getNumber() * (Math.PI / 180.0);

        case this.isString(/grad$/):
          return this.getNumber() * (Math.PI / 200.0);

        case this.isString(/rad$/):
          return this.getNumber();

        default:
          return this.getNumber() * (Math.PI / 180.0);
      }
    }
  }, {
    key: "getDefinition",
    value: function getDefinition() {
      var asString = this.getString();
      var name = asString.match(/#([^\)'"]+)/);

      if (name) {
        name = name[1];
      }

      if (!name) {
        name = asString;
      }

      return this.document.definitions[name];
    }
  }, {
    key: "getFillStyleDefinition",
    value: function getFillStyleDefinition(element, opacity) {
      var def = this.getDefinition();

      if (!def) {
        return null;
      } // gradient


      if (typeof def.createGradient === 'function') {
        return def.createGradient(this.document.ctx, element, opacity);
      } // pattern


      if (typeof def.createPattern === 'function') {
        if (def.getHrefAttribute().hasValue()) {
          var patternTransform = def.getAttribute('patternTransform');
          def = def.getHrefAttribute().getDefinition();

          if (patternTransform.hasValue()) {
            def.getAttribute('patternTransform', true).setValue(patternTransform.value);
          }
        }

        return def.createPattern(this.document.ctx, element, opacity);
      }

      return null;
    }
  }, {
    key: "getTextBaseline",
    value: function getTextBaseline() {
      if (!this.hasValue()) {
        return null;
      }

      return Property.textBaselineMapping[this.getString()];
    }
  }, {
    key: "addOpacity",
    value: function addOpacity(opacity) {
      var value = this.getColor();
      var len = value.length;
      var commas = 0; // Simulate old RGBColor version, which can't parse rgba.

      for (var i = 0; i < len; i++) {
        if (value[i] === ',') {
          commas++;
        }

        if (commas === 3) {
          break;
        }
      }

      if (opacity.hasValue() && this.isString() && commas !== 3) {
        var color = new (rgbcolor__WEBPACK_IMPORTED_MODULE_25___default())(value);

        if (color.ok) {
          color.alpha = opacity.getNumber();
          value = color.toRGBA();
        }
      }

      return new Property(this.document, this.name, value);
    }
  }], [{
    key: "empty",
    value: function empty(document) {
      return new Property(document, 'EMPTY', '');
    }
  }]);

  return Property;
}();

Property.textBaselineMapping = {
  'baseline': 'alphabetic',
  'before-edge': 'top',
  'text-before-edge': 'top',
  'middle': 'middle',
  'central': 'middle',
  'after-edge': 'bottom',
  'text-after-edge': 'bottom',
  'ideographic': 'ideographic',
  'alphabetic': 'alphabetic',
  'hanging': 'hanging',
  'mathematical': 'alphabetic'
};

var ViewPort = /*#__PURE__*/function () {
  function ViewPort() {
    (0,_babel_runtime_corejs3_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_15__.default)(this, ViewPort);

    this.viewPorts = [];
  }

  (0,_babel_runtime_corejs3_helpers_createClass__WEBPACK_IMPORTED_MODULE_16__.default)(ViewPort, [{
    key: "clear",
    value: function clear() {
      this.viewPorts = [];
    }
  }, {
    key: "setCurrent",
    value: function setCurrent(width, height) {
      this.viewPorts.push({
        width: width,
        height: height
      });
    }
  }, {
    key: "removeCurrent",
    value: function removeCurrent() {
      this.viewPorts.pop();
    }
  }, {
    key: "getCurrent",
    value: function getCurrent() {
      var viewPorts = this.viewPorts;
      return viewPorts[viewPorts.length - 1];
    }
  }, {
    key: "computeSize",
    value: function computeSize(d) {
      if (typeof d === 'number') {
        return d;
      }

      if (d === 'x') {
        return this.width;
      }

      if (d === 'y') {
        return this.height;
      }

      return Math.sqrt(Math.pow(this.width, 2) + Math.pow(this.height, 2)) / Math.sqrt(2);
    }
  }, {
    key: "width",
    get: function get() {
      return this.getCurrent().width;
    }
  }, {
    key: "height",
    get: function get() {
      return this.getCurrent().height;
    }
  }]);

  return ViewPort;
}();

var Point = /*#__PURE__*/function () {
  function Point(x, y) {
    (0,_babel_runtime_corejs3_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_15__.default)(this, Point);

    this.x = x;
    this.y = y;
  }

  (0,_babel_runtime_corejs3_helpers_createClass__WEBPACK_IMPORTED_MODULE_16__.default)(Point, [{
    key: "angleTo",
    value: function angleTo(point) {
      return Math.atan2(point.y - this.y, point.x - this.x);
    }
  }, {
    key: "applyTransform",
    value: function applyTransform(transform) {
      var x = this.x,
          y = this.y;
      var xp = x * transform[0] + y * transform[2] + transform[4];
      var yp = x * transform[1] + y * transform[3] + transform[5];
      this.x = xp;
      this.y = yp;
    }
  }], [{
    key: "parse",
    value: function parse(point) {
      var defaultValue = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;

      var _toNumbers = toNumbers(point),
          _toNumbers2 = (0,_babel_runtime_corejs3_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_3__.default)(_toNumbers, 2),
          _toNumbers2$ = _toNumbers2[0],
          x = _toNumbers2$ === void 0 ? defaultValue : _toNumbers2$,
          _toNumbers2$2 = _toNumbers2[1],
          y = _toNumbers2$2 === void 0 ? defaultValue : _toNumbers2$2;

      return new Point(x, y);
    }
  }, {
    key: "parseScale",
    value: function parseScale(scale) {
      var defaultValue = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;

      var _toNumbers3 = toNumbers(scale),
          _toNumbers4 = (0,_babel_runtime_corejs3_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_3__.default)(_toNumbers3, 2),
          _toNumbers4$ = _toNumbers4[0],
          x = _toNumbers4$ === void 0 ? defaultValue : _toNumbers4$,
          _toNumbers4$2 = _toNumbers4[1],
          y = _toNumbers4$2 === void 0 ? x : _toNumbers4$2;

      return new Point(x, y);
    }
  }, {
    key: "parsePath",
    value: function parsePath(path) {
      var points = toNumbers(path);
      var len = points.length;
      var pathPoints = [];

      for (var i = 0; i < len; i += 2) {
        pathPoints.push(new Point(points[i], points[i + 1]));
      }

      return pathPoints;
    }
  }]);

  return Point;
}();

var Mouse = /*#__PURE__*/function () {
  function Mouse(screen) {
    var _context, _context2;

    (0,_babel_runtime_corejs3_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_15__.default)(this, Mouse);

    this.screen = screen;
    this.working = false;
    this.events = [];
    this.eventElements = [];
    this.onClick = _babel_runtime_corejs3_core_js_stable_instance_bind__WEBPACK_IMPORTED_MODULE_22___default()(_context = this.onClick).call(_context, this);
    this.onMouseMove = _babel_runtime_corejs3_core_js_stable_instance_bind__WEBPACK_IMPORTED_MODULE_22___default()(_context2 = this.onMouseMove).call(_context2, this);
  }

  (0,_babel_runtime_corejs3_helpers_createClass__WEBPACK_IMPORTED_MODULE_16__.default)(Mouse, [{
    key: "isWorking",
    value: function isWorking() {
      return this.working;
    }
  }, {
    key: "start",
    value: function start() {
      if (this.working) {
        return;
      }

      var screen = this.screen,
          onClick = this.onClick,
          onMouseMove = this.onMouseMove;
      var canvas = screen.ctx.canvas;
      canvas.onclick = onClick;
      canvas.onmousemove = onMouseMove;
      this.working = true;
    }
  }, {
    key: "stop",
    value: function stop() {
      if (!this.working) {
        return;
      }

      var canvas = this.screen.ctx.canvas;
      this.working = false;
      canvas.onclick = null;
      canvas.onmousemove = null;
    }
  }, {
    key: "hasEvents",
    value: function hasEvents() {
      return this.working && this.events.length > 0;
    }
  }, {
    key: "runEvents",
    value: function runEvents() {
      if (!this.working) {
        return;
      }

      var document = this.screen,
          events = this.events,
          eventElements = this.eventElements;
      var style = document.ctx.canvas.style;

      if (style) {
        style.cursor = '';
      }

      _babel_runtime_corejs3_core_js_stable_instance_for_each__WEBPACK_IMPORTED_MODULE_7___default()(events).call(events, function (_ref, i) {
        var run = _ref.run;
        var element = eventElements[i];

        while (element) {
          run(element);
          element = element.parent;
        }
      }); // done running, clear


      this.events = [];
      this.eventElements = [];
    }
  }, {
    key: "checkPath",
    value: function checkPath(element, ctx) {
      if (!this.working || !ctx) {
        return;
      }

      var events = this.events,
          eventElements = this.eventElements;

      _babel_runtime_corejs3_core_js_stable_instance_for_each__WEBPACK_IMPORTED_MODULE_7___default()(events).call(events, function (_ref2, i) {
        var x = _ref2.x,
            y = _ref2.y;

        if (!eventElements[i] && ctx.isPointInPath && ctx.isPointInPath(x, y)) {
          eventElements[i] = element;
        }
      });
    }
  }, {
    key: "checkBoundingBox",
    value: function checkBoundingBox(element, boundingBox) {
      if (!this.working || !boundingBox) {
        return;
      }

      var events = this.events,
          eventElements = this.eventElements;

      _babel_runtime_corejs3_core_js_stable_instance_for_each__WEBPACK_IMPORTED_MODULE_7___default()(events).call(events, function (_ref3, i) {
        var x = _ref3.x,
            y = _ref3.y;

        if (!eventElements[i] && boundingBox.isPointInBox(x, y)) {
          eventElements[i] = element;
        }
      });
    }
  }, {
    key: "mapXY",
    value: function mapXY(x, y) {
      var _this$screen = this.screen,
          window = _this$screen.window,
          ctx = _this$screen.ctx;
      var point = new Point(x, y);
      var element = ctx.canvas;

      while (element) {
        point.x -= element.offsetLeft;
        point.y -= element.offsetTop;
        element = element.offsetParent;
      }

      if (window.scrollX) {
        point.x += window.scrollX;
      }

      if (window.scrollY) {
        point.y += window.scrollY;
      }

      return point;
    }
  }, {
    key: "onClick",
    value: function onClick(evt) {
      var _this$mapXY = this.mapXY((evt || event).clientX, (evt || event).clientY),
          x = _this$mapXY.x,
          y = _this$mapXY.y;

      this.events.push({
        type: 'onclick',
        x: x,
        y: y,
        run: function run(event) {
          if (event.onClick) {
            event.onClick();
          }
        }
      });
    }
  }, {
    key: "onMouseMove",
    value: function onMouseMove(evt) {
      var _this$mapXY2 = this.mapXY((evt || event).clientX, (evt || event).clientY),
          x = _this$mapXY2.x,
          y = _this$mapXY2.y;

      this.events.push({
        type: 'onmousemove',
        x: x,
        y: y,
        run: function run(event) {
          if (event.onMouseMove) {
            event.onMouseMove();
          }
        }
      });
    }
  }]);

  return Mouse;
}();

var defaultWindow = typeof window !== 'undefined' ? window : null;
var defaultFetch = typeof fetch !== 'undefined' ? _babel_runtime_corejs3_core_js_stable_instance_bind__WEBPACK_IMPORTED_MODULE_22___default()(fetch).call(fetch, void 0) // `fetch` depends on context: `someObject.fetch(...)` will throw error.
: null;

var Screen = /*#__PURE__*/function () {
  function Screen(ctx) {
    var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},
        _ref$fetch = _ref.fetch,
        fetch = _ref$fetch === void 0 ? defaultFetch : _ref$fetch,
        _ref$window = _ref.window,
        window = _ref$window === void 0 ? defaultWindow : _ref$window;

    (0,_babel_runtime_corejs3_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_15__.default)(this, Screen);

    this.ctx = ctx;
    this.FRAMERATE = 30;
    this.MAX_VIRTUAL_PIXELS = 30000;
    this.CLIENT_WIDTH = 800;
    this.CLIENT_HEIGHT = 600;
    this.viewPort = new ViewPort();
    this.mouse = new Mouse(this);
    this.animations = [];
    this.waits = [];
    this.frameDuration = 0;
    this.isReadyLock = false;
    this.isFirstRender = true;
    this.intervalId = null;
    this.window = window;
    this.fetch = fetch;
  }

  (0,_babel_runtime_corejs3_helpers_createClass__WEBPACK_IMPORTED_MODULE_16__.default)(Screen, [{
    key: "wait",
    value: function wait(checker) {
      this.waits.push(checker);
    }
  }, {
    key: "ready",
    value: function ready() {
      if (!this.readyPromise) {
        return _babel_runtime_corejs3_core_js_stable_promise__WEBPACK_IMPORTED_MODULE_21___default().resolve();
      }

      return this.readyPromise;
    }
  }, {
    key: "isReady",
    value: function isReady() {
      var _context;

      if (this.isReadyLock) {
        return true;
      }

      var isReadyLock = _babel_runtime_corejs3_core_js_stable_instance_every__WEBPACK_IMPORTED_MODULE_20___default()(_context = this.waits).call(_context, function (_) {
        return _();
      });

      if (isReadyLock) {
        this.waits = [];

        if (this.resolveReady) {
          this.resolveReady();
        }
      }

      this.isReadyLock = isReadyLock;
      return isReadyLock;
    }
  }, {
    key: "setDefaults",
    value: function setDefaults(ctx) {
      // initial values and defaults
      ctx.strokeStyle = 'rgba(0,0,0,0)';
      ctx.lineCap = 'butt';
      ctx.lineJoin = 'miter';
      ctx.miterLimit = 4;
    }
  }, {
    key: "setViewBox",
    value: function setViewBox(_ref2) {
      var document = _ref2.document,
          ctx = _ref2.ctx,
          aspectRatio = _ref2.aspectRatio,
          width = _ref2.width,
          desiredWidth = _ref2.desiredWidth,
          height = _ref2.height,
          desiredHeight = _ref2.desiredHeight,
          _ref2$minX = _ref2.minX,
          minX = _ref2$minX === void 0 ? 0 : _ref2$minX,
          _ref2$minY = _ref2.minY,
          minY = _ref2$minY === void 0 ? 0 : _ref2$minY,
          refX = _ref2.refX,
          refY = _ref2.refY,
          _ref2$clip = _ref2.clip,
          clip = _ref2$clip === void 0 ? false : _ref2$clip,
          _ref2$clipX = _ref2.clipX,
          clipX = _ref2$clipX === void 0 ? 0 : _ref2$clipX,
          _ref2$clipY = _ref2.clipY,
          clipY = _ref2$clipY === void 0 ? 0 : _ref2$clipY; // aspect ratio - http://www.w3.org/TR/SVG/coords.html#PreserveAspectRatioAttribute

      var cleanAspectRatio = compressSpaces(aspectRatio).replace(/^defer\s/, ''); // ignore defer

      var _cleanAspectRatio$spl = cleanAspectRatio.split(' '),
          _cleanAspectRatio$spl2 = (0,_babel_runtime_corejs3_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_3__.default)(_cleanAspectRatio$spl, 2),
          aspectRatioAlign = _cleanAspectRatio$spl2[0],
          aspectRatioMeetOrSlice = _cleanAspectRatio$spl2[1];

      var align = aspectRatioAlign || 'xMidYMid';
      var meetOrSlice = aspectRatioMeetOrSlice || 'meet'; // calculate scale

      var scaleX = width / desiredWidth;
      var scaleY = height / desiredHeight;
      var scaleMin = Math.min(scaleX, scaleY);
      var scaleMax = Math.max(scaleX, scaleY);
      var finalDesiredWidth = desiredWidth;
      var finalDesiredHeight = desiredHeight;

      if (meetOrSlice === 'meet') {
        finalDesiredWidth *= scaleMin;
        finalDesiredHeight *= scaleMin;
      }

      if (meetOrSlice === 'slice') {
        finalDesiredWidth *= scaleMax;
        finalDesiredHeight *= scaleMax;
      }

      var refXProp = new Property(document, 'refX', refX);
      var refYProp = new Property(document, 'refY', refY);
      var hasRefs = refXProp.hasValue() && refYProp.hasValue();

      if (hasRefs) {
        ctx.translate(-scaleMin * refXProp.getPixels('x'), -scaleMin * refYProp.getPixels('y'));
      }

      if (clip) {
        var scaledClipX = scaleMin * clipX;
        var scaledClipY = scaleMin * clipY;
        ctx.beginPath();
        ctx.moveTo(scaledClipX, scaledClipY);
        ctx.lineTo(width, scaledClipY);
        ctx.lineTo(width, height);
        ctx.lineTo(scaledClipX, height);
        ctx.closePath();
        ctx.clip();
      }

      if (!hasRefs) {
        var isMeetMinY = meetOrSlice === 'meet' && scaleMin === scaleY;
        var isSliceMaxY = meetOrSlice === 'slice' && scaleMax === scaleY;
        var isMeetMinX = meetOrSlice === 'meet' && scaleMin === scaleX;
        var isSliceMaxX = meetOrSlice === 'slice' && scaleMax === scaleX;

        if (/^xMid/.test(align) && (isMeetMinY || isSliceMaxY)) {
          ctx.translate(width / 2.0 - finalDesiredWidth / 2.0, 0);
        }

        if (/YMid$/.test(align) && (isMeetMinX || isSliceMaxX)) {
          ctx.translate(0, height / 2.0 - finalDesiredHeight / 2.0);
        }

        if (/^xMax/.test(align) && (isMeetMinY || isSliceMaxY)) {
          ctx.translate(width - finalDesiredWidth, 0);
        }

        if (/YMax$/.test(align) && (isMeetMinX || isSliceMaxX)) {
          ctx.translate(0, height - finalDesiredHeight);
        }
      } // scale


      switch (true) {
        case align === 'none':
          ctx.scale(scaleX, scaleY);
          break;

        case meetOrSlice === 'meet':
          ctx.scale(scaleMin, scaleMin);
          break;

        case meetOrSlice === 'slice':
          ctx.scale(scaleMax, scaleMax);
          break;
      } // translate


      ctx.translate(-minX, -minY);
    }
  }, {
    key: "start",
    value: function start(element) {
      var _this = this;

      var _ref3 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},
          _ref3$enableRedraw = _ref3.enableRedraw,
          enableRedraw = _ref3$enableRedraw === void 0 ? false : _ref3$enableRedraw,
          _ref3$ignoreMouse = _ref3.ignoreMouse,
          ignoreMouse = _ref3$ignoreMouse === void 0 ? false : _ref3$ignoreMouse,
          _ref3$ignoreAnimation = _ref3.ignoreAnimation,
          ignoreAnimation = _ref3$ignoreAnimation === void 0 ? false : _ref3$ignoreAnimation,
          _ref3$ignoreDimension = _ref3.ignoreDimensions,
          ignoreDimensions = _ref3$ignoreDimension === void 0 ? false : _ref3$ignoreDimension,
          _ref3$ignoreClear = _ref3.ignoreClear,
          ignoreClear = _ref3$ignoreClear === void 0 ? false : _ref3$ignoreClear,
          forceRedraw = _ref3.forceRedraw,
          scaleWidth = _ref3.scaleWidth,
          scaleHeight = _ref3.scaleHeight,
          offsetX = _ref3.offsetX,
          offsetY = _ref3.offsetY;

      var FRAMERATE = this.FRAMERATE,
          mouse = this.mouse;
      var frameDuration = 1000 / FRAMERATE;
      this.frameDuration = frameDuration;
      this.readyPromise = new (_babel_runtime_corejs3_core_js_stable_promise__WEBPACK_IMPORTED_MODULE_21___default())(function (resolve) {
        _this.resolveReady = resolve;
      });

      if (this.isReady()) {
        this.render(element, ignoreDimensions, ignoreClear, scaleWidth, scaleHeight, offsetX, offsetY);
      }

      if (!enableRedraw) {
        return;
      }

      var now = _babel_runtime_corejs3_core_js_stable_date_now__WEBPACK_IMPORTED_MODULE_19___default()();

      var then = now;
      var delta = 0;

      var tick = function tick() {
        now = _babel_runtime_corejs3_core_js_stable_date_now__WEBPACK_IMPORTED_MODULE_19___default()();
        delta = now - then;

        if (delta >= frameDuration) {
          then = now - delta % frameDuration;

          if (_this.shouldUpdate(ignoreAnimation, forceRedraw)) {
            _this.render(element, ignoreDimensions, ignoreClear, scaleWidth, scaleHeight, offsetX, offsetY);

            mouse.runEvents();
          }
        }

        _this.intervalId = raf__WEBPACK_IMPORTED_MODULE_23___default()(tick);
      };

      if (!ignoreMouse) {
        mouse.start();
      }

      this.intervalId = raf__WEBPACK_IMPORTED_MODULE_23___default()(tick);
    }
  }, {
    key: "stop",
    value: function stop() {
      if (this.intervalId) {
        raf__WEBPACK_IMPORTED_MODULE_23___default().cancel(this.intervalId);
        this.intervalId = null;
      }

      this.mouse.stop();
    }
  }, {
    key: "shouldUpdate",
    value: function shouldUpdate(ignoreAnimation, forceRedraw) {
      // need update from animations?
      if (!ignoreAnimation) {
        var _context2;

        var frameDuration = this.frameDuration;

        var shouldUpdate = _babel_runtime_corejs3_core_js_stable_instance_reduce__WEBPACK_IMPORTED_MODULE_18___default()(_context2 = this.animations).call(_context2, function (shouldUpdate, animation) {
          return animation.update(frameDuration) || shouldUpdate;
        }, false);

        if (shouldUpdate) {
          return true;
        }
      } // need update from redraw?


      if (typeof forceRedraw === 'function' && forceRedraw()) {
        return true;
      }

      if (!this.isReadyLock && this.isReady()) {
        return true;
      } // need update from mouse events?


      if (this.mouse.hasEvents()) {
        return true;
      }

      return false;
    }
  }, {
    key: "render",
    value: function render(element, ignoreDimensions, ignoreClear, scaleWidth, scaleHeight, offsetX, offsetY) {
      var CLIENT_WIDTH = this.CLIENT_WIDTH,
          CLIENT_HEIGHT = this.CLIENT_HEIGHT,
          viewPort = this.viewPort,
          ctx = this.ctx,
          isFirstRender = this.isFirstRender;
      var canvas = ctx.canvas;
      viewPort.clear();

      if (canvas.width && canvas.height) {
        viewPort.setCurrent(canvas.width, canvas.height);
      } else {
        viewPort.setCurrent(CLIENT_WIDTH, CLIENT_HEIGHT);
      }

      var widthStyle = element.getStyle('width');
      var heightStyle = element.getStyle('height');

      if (!ignoreDimensions && (isFirstRender || typeof scaleWidth !== 'number' && typeof scaleHeight !== 'number')) {
        // set canvas size
        if (widthStyle.hasValue()) {
          canvas.width = widthStyle.getPixels('x');

          if (canvas.style) {
            canvas.style.width = "".concat(canvas.width, "px");
          }
        }

        if (heightStyle.hasValue()) {
          canvas.height = heightStyle.getPixels('y');

          if (canvas.style) {
            canvas.style.height = "".concat(canvas.height, "px");
          }
        }
      }

      var cWidth = canvas.clientWidth || canvas.width;
      var cHeight = canvas.clientHeight || canvas.height;

      if (ignoreDimensions && widthStyle.hasValue() && heightStyle.hasValue()) {
        cWidth = widthStyle.getPixels('x');
        cHeight = heightStyle.getPixels('y');
      }

      viewPort.setCurrent(cWidth, cHeight);

      if (typeof offsetX === 'number') {
        element.getAttribute('x', true).setValue(offsetX);
      }

      if (typeof offsetY === 'number') {
        element.getAttribute('y', true).setValue(offsetY);
      }

      if (typeof scaleWidth === 'number' || typeof scaleHeight === 'number') {
        var _context3, _context4;

        var viewBox = toNumbers(element.getAttribute('viewBox').getString());
        var xRatio = 0;
        var yRatio = 0;

        if (typeof scaleWidth === 'number') {
          var _widthStyle = element.getStyle('width');

          if (_widthStyle.hasValue()) {
            xRatio = _widthStyle.getPixels('x') / scaleWidth;
          } else if (!isNaN(viewBox[2])) {
            xRatio = viewBox[2] / scaleWidth;
          }
        }

        if (typeof scaleHeight === 'number') {
          var _heightStyle = element.getStyle('height');

          if (_heightStyle.hasValue()) {
            yRatio = _heightStyle.getPixels('y') / scaleHeight;
          } else if (!isNaN(viewBox[3])) {
            yRatio = viewBox[3] / scaleHeight;
          }
        }

        if (!xRatio) {
          xRatio = yRatio;
        }

        if (!yRatio) {
          yRatio = xRatio;
        }

        element.getAttribute('width', true).setValue(scaleWidth);
        element.getAttribute('height', true).setValue(scaleHeight);
        var transformStyle = element.getStyle('transform', true, true);
        transformStyle.setValue(_babel_runtime_corejs3_core_js_stable_instance_concat__WEBPACK_IMPORTED_MODULE_17___default()(_context3 = _babel_runtime_corejs3_core_js_stable_instance_concat__WEBPACK_IMPORTED_MODULE_17___default()(_context4 = "".concat(transformStyle.getString(), " scale(")).call(_context4, 1.0 / xRatio, ", ")).call(_context3, 1.0 / yRatio, ")"));
      } // clear and render


      if (!ignoreClear) {
        ctx.clearRect(0, 0, cWidth, cHeight);
      }

      element.render(ctx);

      if (isFirstRender) {
        this.isFirstRender = false;
      }
    }
  }]);

  return Screen;
}();

Screen.defaultWindow = defaultWindow;
Screen.defaultFetch = defaultFetch;
var defaultFetch$1 = Screen.defaultFetch;
var DefaultDOMParser = typeof DOMParser !== 'undefined' ? DOMParser : null;

var Parser = /*#__PURE__*/function () {
  function Parser() {
    var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
        _ref$fetch = _ref.fetch,
        fetch = _ref$fetch === void 0 ? defaultFetch$1 : _ref$fetch,
        _ref$DOMParser = _ref.DOMParser,
        DOMParser = _ref$DOMParser === void 0 ? DefaultDOMParser : _ref$DOMParser;

    (0,_babel_runtime_corejs3_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_15__.default)(this, Parser);

    this.fetch = fetch;
    this.DOMParser = DOMParser;
  }

  (0,_babel_runtime_corejs3_helpers_createClass__WEBPACK_IMPORTED_MODULE_16__.default)(Parser, [{
    key: "parse",
    value: function () {
      var _parse = (0,_babel_runtime_corejs3_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_13__.default)( /*#__PURE__*/_babel_runtime_corejs3_regenerator__WEBPACK_IMPORTED_MODULE_12___default().mark(function _callee(resource) {
        return _babel_runtime_corejs3_regenerator__WEBPACK_IMPORTED_MODULE_12___default().wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                if (!/^</.test(resource)) {
                  _context.next = 2;
                  break;
                }

                return _context.abrupt("return", this.parseFromString(resource));

              case 2:
                return _context.abrupt("return", this.load(resource));

              case 3:
              case "end":
                return _context.stop();
            }
          }
        }, _callee, this);
      }));

      function parse(_x) {
        return _parse.apply(this, arguments);
      }

      return parse;
    }()
  }, {
    key: "parseFromString",
    value: function parseFromString(xml) {
      var parser = new this.DOMParser();

      try {
        return this.checkDocument(parser.parseFromString(xml, 'image/svg+xml'));
      } catch (err) {
        return this.checkDocument(parser.parseFromString(xml, 'text/xml'));
      }
    }
  }, {
    key: "checkDocument",
    value: function checkDocument(document) {
      var parserError = document.getElementsByTagName('parsererror')[0];

      if (parserError) {
        throw new Error(parserError.textContent);
      }

      return document;
    }
  }, {
    key: "load",
    value: function () {
      var _load = (0,_babel_runtime_corejs3_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_13__.default)( /*#__PURE__*/_babel_runtime_corejs3_regenerator__WEBPACK_IMPORTED_MODULE_12___default().mark(function _callee2(url) {
        var response, xml;
        return _babel_runtime_corejs3_regenerator__WEBPACK_IMPORTED_MODULE_12___default().wrap(function _callee2$(_context2) {
          while (1) {
            switch (_context2.prev = _context2.next) {
              case 0:
                _context2.next = 2;
                return this.fetch(url);

              case 2:
                response = _context2.sent;
                _context2.next = 5;
                return response.text();

              case 5:
                xml = _context2.sent;
                return _context2.abrupt("return", this.parseFromString(xml));

              case 7:
              case "end":
                return _context2.stop();
            }
          }
        }, _callee2, this);
      }));

      function load(_x2) {
        return _load.apply(this, arguments);
      }

      return load;
    }()
  }]);

  return Parser;
}();

var Translate = /*#__PURE__*/function () {
  function Translate(_, point) {
    (0,_babel_runtime_corejs3_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_15__.default)(this, Translate);

    this.type = 'translate';
    this.point = null;
    this.point = Point.parse(point);
  }

  (0,_babel_runtime_corejs3_helpers_createClass__WEBPACK_IMPORTED_MODULE_16__.default)(Translate, [{
    key: "apply",
    value: function apply(ctx) {
      var _this$point = this.point,
          x = _this$point.x,
          y = _this$point.y;
      ctx.translate(x || 0.0, y || 0.0);
    }
  }, {
    key: "unapply",
    value: function unapply(ctx) {
      var _this$point2 = this.point,
          x = _this$point2.x,
          y = _this$point2.y;
      ctx.translate(-1.0 * x || 0.0, -1.0 * y || 0.0);
    }
  }, {
    key: "applyToPoint",
    value: function applyToPoint(point) {
      var _this$point3 = this.point,
          x = _this$point3.x,
          y = _this$point3.y;
      point.applyTransform([1, 0, 0, 1, x || 0.0, y || 0.0]);
    }
  }]);

  return Translate;
}();

var Rotate = /*#__PURE__*/function () {
  function Rotate(document, rotate, transformOrigin) {
    (0,_babel_runtime_corejs3_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_15__.default)(this, Rotate);

    this.type = 'rotate';
    this.angle = null;
    this.originX = null;
    this.originY = null;
    this.cx = 0;
    this.cy = 0;
    var numbers = toNumbers(rotate);
    this.angle = new Property(document, 'angle', numbers[0]);
    this.originX = transformOrigin[0];
    this.originY = transformOrigin[1];
    this.cx = numbers[1] || 0;
    this.cy = numbers[2] || 0;
  }

  (0,_babel_runtime_corejs3_helpers_createClass__WEBPACK_IMPORTED_MODULE_16__.default)(Rotate, [{
    key: "apply",
    value: function apply(ctx) {
      var cx = this.cx,
          cy = this.cy,
          originX = this.originX,
          originY = this.originY,
          angle = this.angle;
      var x = cx + originX.getPixels('x');
      var y = cy + originY.getPixels('y');
      ctx.translate(x, y);
      ctx.rotate(angle.getRadians());
      ctx.translate(-x, -y);
    }
  }, {
    key: "unapply",
    value: function unapply(ctx) {
      var cx = this.cx,
          cy = this.cy,
          angle = this.angle;
      ctx.translate(cx, cy);
      ctx.rotate(-1.0 * angle.getRadians());
      ctx.translate(-cx, -cy);
    }
  }, {
    key: "applyToPoint",
    value: function applyToPoint(point) {
      var cx = this.cx,
          cy = this.cy,
          angle = this.angle;
      var rad = angle.getRadians();
      point.applyTransform([1, 0, 0, 1, cx || 0.0, cy || 0.0 // this.p.y
      ]);
      point.applyTransform([Math.cos(rad), Math.sin(rad), -Math.sin(rad), Math.cos(rad), 0, 0]);
      point.applyTransform([1, 0, 0, 1, -cx || 0.0, -cy || 0.0 // -this.p.y
      ]);
    }
  }]);

  return Rotate;
}();

var Scale = /*#__PURE__*/function () {
  function Scale(_, scale) {
    (0,_babel_runtime_corejs3_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_15__.default)(this, Scale);

    this.type = 'scale';
    this.scale = null;
    var scaleSize = Point.parseScale(scale); // Workaround for node-canvas

    if (scaleSize.x === 0 || scaleSize.y === 0) {
      scaleSize.x = PSEUDO_ZERO;
      scaleSize.y = PSEUDO_ZERO;
    }

    this.scale = scaleSize;
  }

  (0,_babel_runtime_corejs3_helpers_createClass__WEBPACK_IMPORTED_MODULE_16__.default)(Scale, [{
    key: "apply",
    value: function apply(ctx) {
      var _this$scale = this.scale,
          x = _this$scale.x,
          y = _this$scale.y;
      ctx.scale(x, y || x);
    }
  }, {
    key: "unapply",
    value: function unapply(ctx) {
      var _this$scale2 = this.scale,
          x = _this$scale2.x,
          y = _this$scale2.y;
      ctx.scale(1.0 / x, 1.0 / y || x);
    }
  }, {
    key: "applyToPoint",
    value: function applyToPoint(point) {
      var _this$scale3 = this.scale,
          x = _this$scale3.x,
          y = _this$scale3.y;
      point.applyTransform([x || 0.0, 0, 0, y || 0.0, 0, 0]);
    }
  }]);

  return Scale;
}();

var Matrix = /*#__PURE__*/function () {
  function Matrix(_, matrix) {
    (0,_babel_runtime_corejs3_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_15__.default)(this, Matrix);

    this.type = 'matrix';
    this.matrix = [];
    this.matrix = toNumbers(matrix);
  }

  (0,_babel_runtime_corejs3_helpers_createClass__WEBPACK_IMPORTED_MODULE_16__.default)(Matrix, [{
    key: "apply",
    value: function apply(ctx) {
      var matrix = this.matrix;
      ctx.transform(matrix[0], matrix[1], matrix[2], matrix[3], matrix[4], matrix[5]);
    }
  }, {
    key: "unapply",
    value: function unapply(ctx) {
      var matrix = this.matrix;
      var a = matrix[0];
      var b = matrix[2];
      var c = matrix[4];
      var d = matrix[1];
      var e = matrix[3];
      var f = matrix[5];
      var g = 0.0;
      var h = 0.0;
      var i = 1.0;
      var det = 1 / (a * (e * i - f * h) - b * (d * i - f * g) + c * (d * h - e * g));
      ctx.transform(det * (e * i - f * h), det * (f * g - d * i), det * (c * h - b * i), det * (a * i - c * g), det * (b * f - c * e), det * (c * d - a * f));
    }
  }, {
    key: "applyToPoint",
    value: function applyToPoint(point) {
      point.applyTransform(this.matrix);
    }
  }]);

  return Matrix;
}();

function _createSuper(Derived) {
  var hasNativeReflectConstruct = _isNativeReflectConstruct();

  return function _createSuperInternal() {
    var Super = (0,_babel_runtime_corejs3_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_29__.default)(Derived),
        result;

    if (hasNativeReflectConstruct) {
      var NewTarget = (0,_babel_runtime_corejs3_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_29__.default)(this).constructor;

      result = _babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default()(Super, arguments, NewTarget);
    } else {
      result = Super.apply(this, arguments);
    }

    return (0,_babel_runtime_corejs3_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_28__.default)(this, result);
  };
}

function _isNativeReflectConstruct() {
  if (typeof Reflect === "undefined" || !(_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default())) return false;
  if ((_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default().sham)) return false;
  if (typeof Proxy === "function") return true;

  try {
    Date.prototype.toString.call(_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default()(Date, [], function () {}));
    return true;
  } catch (e) {
    return false;
  }
}

var Skew = /*#__PURE__*/function (_Matrix) {
  (0,_babel_runtime_corejs3_helpers_inherits__WEBPACK_IMPORTED_MODULE_27__.default)(Skew, _Matrix);

  var _super = _createSuper(Skew);

  function Skew(document, skew) {
    var _this;

    (0,_babel_runtime_corejs3_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_15__.default)(this, Skew);

    _this = _super.call(this, document, skew);
    _this.type = 'skew';
    _this.angle = null;
    _this.angle = new Property(document, 'angle', skew);
    return _this;
  }

  return Skew;
}(Matrix);

function _createSuper$1(Derived) {
  var hasNativeReflectConstruct = _isNativeReflectConstruct$1();

  return function _createSuperInternal() {
    var Super = (0,_babel_runtime_corejs3_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_29__.default)(Derived),
        result;

    if (hasNativeReflectConstruct) {
      var NewTarget = (0,_babel_runtime_corejs3_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_29__.default)(this).constructor;

      result = _babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default()(Super, arguments, NewTarget);
    } else {
      result = Super.apply(this, arguments);
    }

    return (0,_babel_runtime_corejs3_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_28__.default)(this, result);
  };
}

function _isNativeReflectConstruct$1() {
  if (typeof Reflect === "undefined" || !(_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default())) return false;
  if ((_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default().sham)) return false;
  if (typeof Proxy === "function") return true;

  try {
    Date.prototype.toString.call(_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default()(Date, [], function () {}));
    return true;
  } catch (e) {
    return false;
  }
}

var SkewX = /*#__PURE__*/function (_Skew) {
  (0,_babel_runtime_corejs3_helpers_inherits__WEBPACK_IMPORTED_MODULE_27__.default)(SkewX, _Skew);

  var _super = _createSuper$1(SkewX);

  function SkewX(document, skew) {
    var _this;

    (0,_babel_runtime_corejs3_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_15__.default)(this, SkewX);

    _this = _super.call(this, document, skew);
    _this.type = 'skewX';
    _this.matrix = [1, 0, Math.tan(_this.angle.getRadians()), 1, 0, 0];
    return _this;
  }

  return SkewX;
}(Skew);

function _createSuper$2(Derived) {
  var hasNativeReflectConstruct = _isNativeReflectConstruct$2();

  return function _createSuperInternal() {
    var Super = (0,_babel_runtime_corejs3_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_29__.default)(Derived),
        result;

    if (hasNativeReflectConstruct) {
      var NewTarget = (0,_babel_runtime_corejs3_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_29__.default)(this).constructor;

      result = _babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default()(Super, arguments, NewTarget);
    } else {
      result = Super.apply(this, arguments);
    }

    return (0,_babel_runtime_corejs3_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_28__.default)(this, result);
  };
}

function _isNativeReflectConstruct$2() {
  if (typeof Reflect === "undefined" || !(_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default())) return false;
  if ((_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default().sham)) return false;
  if (typeof Proxy === "function") return true;

  try {
    Date.prototype.toString.call(_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default()(Date, [], function () {}));
    return true;
  } catch (e) {
    return false;
  }
}

var SkewY = /*#__PURE__*/function (_Skew) {
  (0,_babel_runtime_corejs3_helpers_inherits__WEBPACK_IMPORTED_MODULE_27__.default)(SkewY, _Skew);

  var _super = _createSuper$2(SkewY);

  function SkewY(document, skew) {
    var _this;

    (0,_babel_runtime_corejs3_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_15__.default)(this, SkewY);

    _this = _super.call(this, document, skew);
    _this.type = 'skewY';
    _this.matrix = [1, Math.tan(_this.angle.getRadians()), 0, 1, 0, 0];
    return _this;
  }

  return SkewY;
}(Skew);

function parseTransforms(transform) {
  var _context;

  return _babel_runtime_corejs3_core_js_stable_instance_trim__WEBPACK_IMPORTED_MODULE_24___default()(_context = compressSpaces(transform)).call(_context).replace(/\)([a-zA-Z])/g, ') $1').replace(/\)(\s?,\s?)/g, ') ').split(/\s(?=[a-z])/);
}

function parseTransform(transform) {
  var _transform$split = transform.split('('),
      _transform$split2 = (0,_babel_runtime_corejs3_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_3__.default)(_transform$split, 2),
      type = _transform$split2[0],
      value = _transform$split2[1];

  return [_babel_runtime_corejs3_core_js_stable_instance_trim__WEBPACK_IMPORTED_MODULE_24___default()(type).call(type), _babel_runtime_corejs3_core_js_stable_instance_trim__WEBPACK_IMPORTED_MODULE_24___default()(value).call(value).replace(')', '')];
}

var Transform = /*#__PURE__*/function () {
  function Transform(document, transform, transformOrigin) {
    var _this = this;

    (0,_babel_runtime_corejs3_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_15__.default)(this, Transform);

    this.document = document;
    this.transforms = [];
    var data = parseTransforms(transform);

    _babel_runtime_corejs3_core_js_stable_instance_for_each__WEBPACK_IMPORTED_MODULE_7___default()(data).call(data, function (transform) {
      if (transform === 'none') {
        return;
      }

      var _parseTransform = parseTransform(transform),
          _parseTransform2 = (0,_babel_runtime_corejs3_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_3__.default)(_parseTransform, 2),
          type = _parseTransform2[0],
          value = _parseTransform2[1];

      var TransformType = Transform.transformTypes[type];

      if (typeof TransformType !== 'undefined') {
        _this.transforms.push(new TransformType(_this.document, value, transformOrigin));
      }
    });
  }

  (0,_babel_runtime_corejs3_helpers_createClass__WEBPACK_IMPORTED_MODULE_16__.default)(Transform, [{
    key: "apply",
    value: function apply(ctx) {
      var transforms = this.transforms;
      var len = transforms.length;

      for (var i = 0; i < len; i++) {
        transforms[i].apply(ctx);
      }
    }
  }, {
    key: "unapply",
    value: function unapply(ctx) {
      var transforms = this.transforms;
      var len = transforms.length;

      for (var i = len - 1; i >= 0; i--) {
        transforms[i].unapply(ctx);
      }
    } // TODO: applyToPoint unused ... remove?

  }, {
    key: "applyToPoint",
    value: function applyToPoint(point) {
      var transforms = this.transforms;
      var len = transforms.length;

      for (var i = 0; i < len; i++) {
        transforms[i].applyToPoint(point);
      }
    }
  }], [{
    key: "fromElement",
    value: function fromElement(document, element) {
      var transformStyle = element.getStyle('transform', false, true);

      var _element$getStyle$spl = element.getStyle('transform-origin', false, true).split(),
          _element$getStyle$spl2 = (0,_babel_runtime_corejs3_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_3__.default)(_element$getStyle$spl, 2),
          transformOriginXProperty = _element$getStyle$spl2[0],
          _element$getStyle$spl3 = _element$getStyle$spl2[1],
          transformOriginYProperty = _element$getStyle$spl3 === void 0 ? transformOriginXProperty : _element$getStyle$spl3;

      var transformOrigin = [transformOriginXProperty, transformOriginYProperty];

      if (transformStyle.hasValue()) {
        return new Transform(document, transformStyle.getString(), transformOrigin);
      }

      return null;
    }
  }]);

  return Transform;
}();

Transform.transformTypes = {
  translate: Translate,
  rotate: Rotate,
  scale: Scale,
  matrix: Matrix,
  skewX: SkewX,
  skewY: SkewY
};

var Element = /*#__PURE__*/function () {
  function Element(document, node) {
    var _context,
        _this = this,
        _context4;

    var captureTextNodes = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;

    (0,_babel_runtime_corejs3_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_15__.default)(this, Element);

    this.document = document;
    this.node = node;
    this.captureTextNodes = captureTextNodes;
    this.attributes = {};
    this.styles = {};
    this.stylesSpecificity = {};
    this.animationFrozen = false;
    this.animationFrozenValue = '';
    this.parent = null;
    this.children = [];

    if (!node || node.nodeType !== 1) {
      // ELEMENT_NODE
      return;
    } // add attributes


    _babel_runtime_corejs3_core_js_stable_instance_for_each__WEBPACK_IMPORTED_MODULE_7___default()(_context = _babel_runtime_corejs3_core_js_stable_array_from__WEBPACK_IMPORTED_MODULE_33___default()(node.attributes)).call(_context, function (attribute) {
      var nodeName = normalizeAttributeName(attribute.nodeName);
      _this.attributes[nodeName] = new Property(document, nodeName, attribute.value);
    });

    this.addStylesFromStyleDefinition(); // add inline styles

    if (this.getAttribute('style').hasValue()) {
      var _context2;

      var styles = _babel_runtime_corejs3_core_js_stable_instance_map__WEBPACK_IMPORTED_MODULE_2___default()(_context2 = this.getAttribute('style').getString().split(';')).call(_context2, function (_) {
        return _babel_runtime_corejs3_core_js_stable_instance_trim__WEBPACK_IMPORTED_MODULE_24___default()(_).call(_);
      });

      _babel_runtime_corejs3_core_js_stable_instance_for_each__WEBPACK_IMPORTED_MODULE_7___default()(styles).call(styles, function (style) {
        var _context3;

        if (!style) {
          return;
        }

        var _style$split$map = _babel_runtime_corejs3_core_js_stable_instance_map__WEBPACK_IMPORTED_MODULE_2___default()(_context3 = style.split(':')).call(_context3, function (_) {
          return _babel_runtime_corejs3_core_js_stable_instance_trim__WEBPACK_IMPORTED_MODULE_24___default()(_).call(_);
        }),
            _style$split$map2 = (0,_babel_runtime_corejs3_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_3__.default)(_style$split$map, 2),
            name = _style$split$map2[0],
            value = _style$split$map2[1];

        _this.styles[name] = new Property(document, name, value);
      });
    }

    var definitions = document.definitions;
    var id = this.getAttribute('id'); // add id

    if (id.hasValue()) {
      if (!definitions[id.getValue()]) {
        definitions[id.getValue()] = this;
      }
    }

    _babel_runtime_corejs3_core_js_stable_instance_for_each__WEBPACK_IMPORTED_MODULE_7___default()(_context4 = _babel_runtime_corejs3_core_js_stable_array_from__WEBPACK_IMPORTED_MODULE_33___default()(node.childNodes)).call(_context4, function (childNode) {
      if (childNode.nodeType === 1) {
        _this.addChild(childNode); // ELEMENT_NODE

      } else if (captureTextNodes && (childNode.nodeType === 3 || childNode.nodeType === 4)) {
        var textNode = document.createTextNode(childNode);

        if (textNode.getText().length > 0) {
          _this.addChild(textNode); // TEXT_NODE

        }
      }
    });
  }

  (0,_babel_runtime_corejs3_helpers_createClass__WEBPACK_IMPORTED_MODULE_16__.default)(Element, [{
    key: "getAttribute",
    value: function getAttribute(name) {
      var createIfNotExists = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
      var attr = this.attributes[name];

      if (!attr && createIfNotExists) {
        var _attr = new Property(this.document, name, '');

        this.attributes[name] = _attr;
        return _attr;
      }

      return attr || Property.empty(this.document);
    }
  }, {
    key: "getHrefAttribute",
    value: function getHrefAttribute() {
      for (var key in this.attributes) {
        if (key === 'href' || /:href$/.test(key)) {
          return this.attributes[key];
        }
      }

      return Property.empty(this.document);
    }
  }, {
    key: "getStyle",
    value: function getStyle(name) {
      var createIfNotExists = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
      var skipAncestors = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;
      var style = this.styles[name];

      if (style) {
        return style;
      }

      var attr = this.getAttribute(name);

      if (attr && attr.hasValue()) {
        this.styles[name] = attr; // move up to me to cache

        return attr;
      }

      if (!skipAncestors) {
        var parent = this.parent;

        if (parent) {
          var parentStyle = parent.getStyle(name);

          if (parentStyle && parentStyle.hasValue()) {
            return parentStyle;
          }
        }
      }

      if (createIfNotExists) {
        var _style = new Property(this.document, name, '');

        this.styles[name] = _style;
        return _style;
      }

      return style || Property.empty(this.document);
    }
  }, {
    key: "render",
    value: function render(ctx) {
      // don't render display=none
      // don't render visibility=hidden
      if (this.getStyle('display').getString() === 'none' || this.getStyle('visibility').getString() === 'hidden') {
        return;
      }

      ctx.save();

      if (this.getStyle('mask').hasValue()) {
        // mask
        var mask = this.getStyle('mask').getDefinition();

        if (mask) {
          this.applyEffects(ctx);
          mask.apply(ctx, this);
        }
      } else if (this.getStyle('filter').getValue('none') !== 'none') {
        // filter
        var filter = this.getStyle('filter').getDefinition();

        if (filter) {
          this.applyEffects(ctx);
          filter.apply(ctx, this);
        }
      } else {
        this.setContext(ctx);
        this.renderChildren(ctx);
        this.clearContext(ctx);
      }

      ctx.restore();
    }
  }, {
    key: "setContext",
    value: function setContext(_) {}
  }, {
    key: "applyEffects",
    value: function applyEffects(ctx) {
      // transform
      var transform = Transform.fromElement(this.document, this);

      if (transform) {
        transform.apply(ctx);
      } // clip


      var clipPathStyleProp = this.getStyle('clip-path', false, true);

      if (clipPathStyleProp.hasValue()) {
        var clip = clipPathStyleProp.getDefinition();

        if (clip) {
          clip.apply(ctx);
        }
      }
    }
  }, {
    key: "clearContext",
    value: function clearContext(_) {}
  }, {
    key: "renderChildren",
    value: function renderChildren(ctx) {
      var _context5;

      _babel_runtime_corejs3_core_js_stable_instance_for_each__WEBPACK_IMPORTED_MODULE_7___default()(_context5 = this.children).call(_context5, function (child) {
        child.render(ctx);
      });
    }
  }, {
    key: "addChild",
    value: function addChild(childNode) {
      var _context6;

      var child = childNode instanceof Element ? childNode : this.document.createElement(childNode);
      child.parent = this;

      if (!_babel_runtime_corejs3_core_js_stable_instance_includes__WEBPACK_IMPORTED_MODULE_32___default()(_context6 = Element.ignoreChildTypes).call(_context6, child.type)) {
        this.children.push(child);
      }
    }
  }, {
    key: "matchesSelector",
    value: function matchesSelector(selector) {
      var _context7;

      var node = this.node;

      if (typeof node.matches === 'function') {
        return node.matches(selector);
      }

      var styleClasses = node.getAttribute('class');

      if (!styleClasses || styleClasses === '') {
        return false;
      }

      return _babel_runtime_corejs3_core_js_stable_instance_some__WEBPACK_IMPORTED_MODULE_31___default()(_context7 = styleClasses.split(' ')).call(_context7, function (styleClass) {
        if (".".concat(styleClass) === selector) {
          return true;
        }
      });
    }
  }, {
    key: "addStylesFromStyleDefinition",
    value: function addStylesFromStyleDefinition() {
      var _this$document = this.document,
          styles = _this$document.styles,
          stylesSpecificity = _this$document.stylesSpecificity;

      for (var selector in styles) {
        if (selector[0] !== '@' && this.matchesSelector(selector)) {
          var style = styles[selector];
          var specificity = stylesSpecificity[selector];

          if (style) {
            for (var name in style) {
              var existingSpecificity = this.stylesSpecificity[name];

              if (typeof existingSpecificity === 'undefined') {
                existingSpecificity = '000';
              }

              if (specificity >= existingSpecificity) {
                this.styles[name] = style[name];
                this.stylesSpecificity[name] = specificity;
              }
            }
          }
        }
      }
    }
  }, {
    key: "removeStyles",
    value: function removeStyles(element, ignoreStyles) {
      var toRestore = _babel_runtime_corejs3_core_js_stable_instance_reduce__WEBPACK_IMPORTED_MODULE_18___default()(ignoreStyles).call(ignoreStyles, function (toRestore, name) {
        var _context8;

        var styleProp = element.getStyle(name);

        if (!styleProp.hasValue()) {
          return toRestore;
        }

        var value = styleProp.getString();
        styleProp.setValue('');
        return _babel_runtime_corejs3_core_js_stable_instance_concat__WEBPACK_IMPORTED_MODULE_17___default()(_context8 = []).call(_context8, (0,_babel_runtime_corejs3_helpers_toConsumableArray__WEBPACK_IMPORTED_MODULE_30__.default)(toRestore), [[name, value]]);
      }, []);

      return toRestore;
    }
  }, {
    key: "restoreStyles",
    value: function restoreStyles(element, styles) {
      _babel_runtime_corejs3_core_js_stable_instance_for_each__WEBPACK_IMPORTED_MODULE_7___default()(styles).call(styles, function (_ref) {
        var _ref2 = (0,_babel_runtime_corejs3_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_3__.default)(_ref, 2),
            name = _ref2[0],
            value = _ref2[1];

        element.getStyle(name, true).setValue(value);
      });
    }
  }]);

  return Element;
}();

Element.ignoreChildTypes = ['title'];

function _createSuper$3(Derived) {
  var hasNativeReflectConstruct = _isNativeReflectConstruct$3();

  return function _createSuperInternal() {
    var Super = (0,_babel_runtime_corejs3_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_29__.default)(Derived),
        result;

    if (hasNativeReflectConstruct) {
      var NewTarget = (0,_babel_runtime_corejs3_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_29__.default)(this).constructor;

      result = _babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default()(Super, arguments, NewTarget);
    } else {
      result = Super.apply(this, arguments);
    }

    return (0,_babel_runtime_corejs3_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_28__.default)(this, result);
  };
}

function _isNativeReflectConstruct$3() {
  if (typeof Reflect === "undefined" || !(_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default())) return false;
  if ((_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default().sham)) return false;
  if (typeof Proxy === "function") return true;

  try {
    Date.prototype.toString.call(_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default()(Date, [], function () {}));
    return true;
  } catch (e) {
    return false;
  }
}

var UnknownElement = /*#__PURE__*/function (_Element) {
  (0,_babel_runtime_corejs3_helpers_inherits__WEBPACK_IMPORTED_MODULE_27__.default)(UnknownElement, _Element);

  var _super = _createSuper$3(UnknownElement);

  function UnknownElement(document, node, captureTextNodes) {
    var _this;

    (0,_babel_runtime_corejs3_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_15__.default)(this, UnknownElement);

    _this = _super.call(this, document, node, captureTextNodes);
    return _this;
  }

  return UnknownElement;
}(Element);

function wrapFontFamily(fontFamily) {
  var trimmed = _babel_runtime_corejs3_core_js_stable_instance_trim__WEBPACK_IMPORTED_MODULE_24___default()(fontFamily).call(fontFamily);

  return /^('|")/.test(trimmed) ? trimmed : "\"".concat(trimmed, "\"");
}

function prepareFontFamily(fontFamily) {
  var _context;

  return typeof process === 'undefined' ? fontFamily : _babel_runtime_corejs3_core_js_stable_instance_map__WEBPACK_IMPORTED_MODULE_2___default()(_context = _babel_runtime_corejs3_core_js_stable_instance_trim__WEBPACK_IMPORTED_MODULE_24___default()(fontFamily).call(fontFamily).split(',')).call(_context, wrapFontFamily).join(',');
}
/**
 * https://developer.mozilla.org/en-US/docs/Web/CSS/font-style
 */


function prepareFontStyle(fontStyle) {
  if (!fontStyle) {
    return '';
  }

  var targetFontStyle = _babel_runtime_corejs3_core_js_stable_instance_trim__WEBPACK_IMPORTED_MODULE_24___default()(fontStyle).call(fontStyle).toLowerCase();

  switch (targetFontStyle) {
    case 'normal':
    case 'italic':
    case 'oblique':
    case 'inherit':
    case 'initial':
    case 'unset':
      return targetFontStyle;

    default:
      if (/^oblique\s+(-|)\d+deg$/.test(targetFontStyle)) {
        return targetFontStyle;
      }

      return '';
  }
}
/**
 * https://developer.mozilla.org/en-US/docs/Web/CSS/font-weight
 */


function prepareFontWeight(fontWeight) {
  if (!fontWeight) {
    return '';
  }

  var targetFontWeight = _babel_runtime_corejs3_core_js_stable_instance_trim__WEBPACK_IMPORTED_MODULE_24___default()(fontWeight).call(fontWeight).toLowerCase();

  switch (targetFontWeight) {
    case 'normal':
    case 'bold':
    case 'lighter':
    case 'bolder':
    case 'inherit':
    case 'initial':
    case 'unset':
      return targetFontWeight;

    default:
      if (/^[\d.]+$/.test(targetFontWeight)) {
        return targetFontWeight;
      }

      return '';
  }
}

var Font = /*#__PURE__*/function () {
  function Font(fontStyle, fontVariant, fontWeight, fontSize, fontFamily, inherit) {
    (0,_babel_runtime_corejs3_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_15__.default)(this, Font);

    var inheritFont = inherit ? typeof inherit === 'string' ? Font.parse(inherit) : inherit : {};
    this.fontFamily = fontFamily || inheritFont.fontFamily;
    this.fontSize = fontSize || inheritFont.fontSize;
    this.fontStyle = fontStyle || inheritFont.fontStyle;
    this.fontWeight = fontWeight || inheritFont.fontWeight;
    this.fontVariant = fontVariant || inheritFont.fontVariant;
  }

  (0,_babel_runtime_corejs3_helpers_createClass__WEBPACK_IMPORTED_MODULE_16__.default)(Font, [{
    key: "toString",
    value: function toString() {
      var _context2;

      return _babel_runtime_corejs3_core_js_stable_instance_trim__WEBPACK_IMPORTED_MODULE_24___default()(_context2 = [prepareFontStyle(this.fontStyle), this.fontVariant, prepareFontWeight(this.fontWeight), this.fontSize, // Wrap fontFamily only on nodejs and only for canvas.ctx
      prepareFontFamily(this.fontFamily)].join(' ')).call(_context2);
    }
  }], [{
    key: "parse",
    value: function parse() {
      var _context3;

      var font = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';
      var inherit = arguments.length > 1 ? arguments[1] : undefined;
      var fontStyle = '';
      var fontVariant = '';
      var fontWeight = '';
      var fontSize = '';
      var fontFamily = '';

      var parts = _babel_runtime_corejs3_core_js_stable_instance_trim__WEBPACK_IMPORTED_MODULE_24___default()(_context3 = compressSpaces(font)).call(_context3).split(' ');

      var set = {
        fontSize: false,
        fontStyle: false,
        fontWeight: false,
        fontVariant: false
      };

      _babel_runtime_corejs3_core_js_stable_instance_for_each__WEBPACK_IMPORTED_MODULE_7___default()(parts).call(parts, function (part) {
        var _context4, _context5, _context6;

        switch (true) {
          case !set.fontStyle && _babel_runtime_corejs3_core_js_stable_instance_includes__WEBPACK_IMPORTED_MODULE_32___default()(_context4 = Font.styles).call(_context4, part):
            if (part !== 'inherit') {
              fontStyle = part;
            }

            set.fontStyle = true;
            break;

          case !set.fontVariant && _babel_runtime_corejs3_core_js_stable_instance_includes__WEBPACK_IMPORTED_MODULE_32___default()(_context5 = Font.variants).call(_context5, part):
            if (part !== 'inherit') {
              fontVariant = part;
            }

            set.fontStyle = true;
            set.fontVariant = true;
            break;

          case !set.fontWeight && _babel_runtime_corejs3_core_js_stable_instance_includes__WEBPACK_IMPORTED_MODULE_32___default()(_context6 = Font.weights).call(_context6, part):
            if (part !== 'inherit') {
              fontWeight = part;
            }

            set.fontStyle = true;
            set.fontVariant = true;
            set.fontWeight = true;
            break;

          case !set.fontSize:
            if (part !== 'inherit') {
              var _part$split = part.split('/');

              var _part$split2 = (0,_babel_runtime_corejs3_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_3__.default)(_part$split, 1);

              fontSize = _part$split2[0];
            }

            set.fontStyle = true;
            set.fontVariant = true;
            set.fontWeight = true;
            set.fontSize = true;
            break;

          default:
            if (part !== 'inherit') {
              fontFamily += part;
            }

        }
      });

      return new Font(fontStyle, fontVariant, fontWeight, fontSize, fontFamily, inherit);
    }
  }]);

  return Font;
}();

Font.styles = 'normal|italic|oblique|inherit';
Font.variants = 'normal|small-caps|inherit';
Font.weights = 'normal|bold|bolder|lighter|100|200|300|400|500|600|700|800|900|inherit';

var BoundingBox = /*#__PURE__*/function () {
  function BoundingBox() {
    var x1 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : Number.NaN;
    var y1 = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : Number.NaN;
    var x2 = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : Number.NaN;
    var y2 = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : Number.NaN;

    (0,_babel_runtime_corejs3_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_15__.default)(this, BoundingBox);

    this.x1 = x1;
    this.y1 = y1;
    this.x2 = x2;
    this.y2 = y2;
    this.addPoint(x1, y1);
    this.addPoint(x2, y2);
  }

  (0,_babel_runtime_corejs3_helpers_createClass__WEBPACK_IMPORTED_MODULE_16__.default)(BoundingBox, [{
    key: "addPoint",
    value: function addPoint(x, y) {
      if (typeof x !== 'undefined') {
        if (isNaN(this.x1) || isNaN(this.x2)) {
          this.x1 = x;
          this.x2 = x;
        }

        if (x < this.x1) {
          this.x1 = x;
        }

        if (x > this.x2) {
          this.x2 = x;
        }
      }

      if (typeof y !== 'undefined') {
        if (isNaN(this.y1) || isNaN(this.y2)) {
          this.y1 = y;
          this.y2 = y;
        }

        if (y < this.y1) {
          this.y1 = y;
        }

        if (y > this.y2) {
          this.y2 = y;
        }
      }
    }
  }, {
    key: "addX",
    value: function addX(x) {
      this.addPoint(x, null);
    }
  }, {
    key: "addY",
    value: function addY(y) {
      this.addPoint(null, y);
    }
  }, {
    key: "addBoundingBox",
    value: function addBoundingBox(boundingBox) {
      if (!boundingBox) {
        return;
      }

      var x1 = boundingBox.x1,
          y1 = boundingBox.y1,
          x2 = boundingBox.x2,
          y2 = boundingBox.y2;
      this.addPoint(x1, y1);
      this.addPoint(x2, y2);
    }
  }, {
    key: "sumCubic",
    value: function sumCubic(t, p0, p1, p2, p3) {
      return Math.pow(1 - t, 3) * p0 + 3 * Math.pow(1 - t, 2) * t * p1 + 3 * (1 - t) * Math.pow(t, 2) * p2 + Math.pow(t, 3) * p3;
    }
  }, {
    key: "bezierCurveAdd",
    value: function bezierCurveAdd(forX, p0, p1, p2, p3) {
      var b = 6 * p0 - 12 * p1 + 6 * p2;
      var a = -3 * p0 + 9 * p1 - 9 * p2 + 3 * p3;
      var c = 3 * p1 - 3 * p0;

      if (a === 0) {
        if (b === 0) {
          return;
        }

        var t = -c / b;

        if (0 < t && t < 1) {
          if (forX) {
            this.addX(this.sumCubic(t, p0, p1, p2, p3));
          } else {
            this.addY(this.sumCubic(t, p0, p1, p2, p3));
          }
        }

        return;
      }

      var b2ac = Math.pow(b, 2) - 4 * c * a;

      if (b2ac < 0) {
        return;
      }

      var t1 = (-b + Math.sqrt(b2ac)) / (2 * a);

      if (0 < t1 && t1 < 1) {
        if (forX) {
          this.addX(this.sumCubic(t1, p0, p1, p2, p3));
        } else {
          this.addY(this.sumCubic(t1, p0, p1, p2, p3));
        }
      }

      var t2 = (-b - Math.sqrt(b2ac)) / (2 * a);

      if (0 < t2 && t2 < 1) {
        if (forX) {
          this.addX(this.sumCubic(t2, p0, p1, p2, p3));
        } else {
          this.addY(this.sumCubic(t2, p0, p1, p2, p3));
        }
      }
    } // from http://blog.hackers-cafe.net/2009/06/how-to-calculate-bezier-curves-bounding.html

  }, {
    key: "addBezierCurve",
    value: function addBezierCurve(p0x, p0y, p1x, p1y, p2x, p2y, p3x, p3y) {
      this.addPoint(p0x, p0y);
      this.addPoint(p3x, p3y);
      this.bezierCurveAdd(true, p0x, p1x, p2x, p3x);
      this.bezierCurveAdd(false, p0y, p1y, p2y, p3y);
    }
  }, {
    key: "addQuadraticCurve",
    value: function addQuadraticCurve(p0x, p0y, p1x, p1y, p2x, p2y) {
      var cp1x = p0x + 2 / 3 * (p1x - p0x); // CP1 = QP0 + 2/3 *(QP1-QP0)

      var cp1y = p0y + 2 / 3 * (p1y - p0y); // CP1 = QP0 + 2/3 *(QP1-QP0)

      var cp2x = cp1x + 1 / 3 * (p2x - p0x); // CP2 = CP1 + 1/3 *(QP2-QP0)

      var cp2y = cp1y + 1 / 3 * (p2y - p0y); // CP2 = CP1 + 1/3 *(QP2-QP0)

      this.addBezierCurve(p0x, p0y, cp1x, cp2x, cp1y, cp2y, p2x, p2y);
    }
  }, {
    key: "isPointInBox",
    value: function isPointInBox(x, y) {
      var x1 = this.x1,
          y1 = this.y1,
          x2 = this.x2,
          y2 = this.y2;
      return x1 <= x && x <= x2 && y1 <= y && y <= y2;
    }
  }, {
    key: "x",
    get: function get() {
      return this.x1;
    }
  }, {
    key: "y",
    get: function get() {
      return this.y1;
    }
  }, {
    key: "width",
    get: function get() {
      return this.x2 - this.x1;
    }
  }, {
    key: "height",
    get: function get() {
      return this.y2 - this.y1;
    }
  }]);

  return BoundingBox;
}();

function _createSuper$4(Derived) {
  var hasNativeReflectConstruct = _isNativeReflectConstruct$4();

  return function _createSuperInternal() {
    var Super = (0,_babel_runtime_corejs3_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_29__.default)(Derived),
        result;

    if (hasNativeReflectConstruct) {
      var NewTarget = (0,_babel_runtime_corejs3_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_29__.default)(this).constructor;

      result = _babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default()(Super, arguments, NewTarget);
    } else {
      result = Super.apply(this, arguments);
    }

    return (0,_babel_runtime_corejs3_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_28__.default)(this, result);
  };
}

function _isNativeReflectConstruct$4() {
  if (typeof Reflect === "undefined" || !(_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default())) return false;
  if ((_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default().sham)) return false;
  if (typeof Proxy === "function") return true;

  try {
    Date.prototype.toString.call(_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default()(Date, [], function () {}));
    return true;
  } catch (e) {
    return false;
  }
}

var RenderedElement = /*#__PURE__*/function (_Element) {
  (0,_babel_runtime_corejs3_helpers_inherits__WEBPACK_IMPORTED_MODULE_27__.default)(RenderedElement, _Element);

  var _super = _createSuper$4(RenderedElement);

  function RenderedElement() {
    var _this;

    (0,_babel_runtime_corejs3_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_15__.default)(this, RenderedElement);

    _this = _super.apply(this, arguments);
    _this.modifiedEmSizeStack = false;
    return _this;
  }

  (0,_babel_runtime_corejs3_helpers_createClass__WEBPACK_IMPORTED_MODULE_16__.default)(RenderedElement, [{
    key: "calculateOpacity",
    value: function calculateOpacity() {
      var opacity = 1.0; // tslint:disable-next-line: no-this-assignment

      var element = this;

      while (element) {
        var opacityStyle = element.getStyle('opacity', false, true); // no ancestors on style call

        if (opacityStyle.hasValue(true)) {
          opacity *= opacityStyle.getNumber();
        }

        element = element.parent;
      }

      return opacity;
    }
  }, {
    key: "setContext",
    value: function setContext(ctx) {
      var fromMeasure = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;

      if (!fromMeasure) {
        // causes stack overflow when measuring text with gradients
        // fill
        var fillStyleProp = this.getStyle('fill');
        var fillOpacityStyleProp = this.getStyle('fill-opacity');
        var strokeStyleProp = this.getStyle('stroke');
        var strokeOpacityProp = this.getStyle('stroke-opacity');

        if (fillStyleProp.isUrlDefinition()) {
          var fillStyle = fillStyleProp.getFillStyleDefinition(this, fillOpacityStyleProp);

          if (fillStyle) {
            ctx.fillStyle = fillStyle;
          }
        } else if (fillStyleProp.hasValue()) {
          if (fillStyleProp.getString() === 'currentColor') {
            fillStyleProp.setValue(this.getStyle('color').getColor());
          }

          var _fillStyle = fillStyleProp.getColor();

          if (_fillStyle !== 'inherit') {
            ctx.fillStyle = _fillStyle === 'none' ? 'rgba(0,0,0,0)' : _fillStyle;
          }
        }

        if (fillOpacityStyleProp.hasValue()) {
          var _fillStyle2 = new Property(this.document, 'fill', ctx.fillStyle).addOpacity(fillOpacityStyleProp).getColor();

          ctx.fillStyle = _fillStyle2;
        } // stroke


        if (strokeStyleProp.isUrlDefinition()) {
          var strokeStyle = strokeStyleProp.getFillStyleDefinition(this, strokeOpacityProp);

          if (strokeStyle) {
            ctx.strokeStyle = strokeStyle;
          }
        } else if (strokeStyleProp.hasValue()) {
          if (strokeStyleProp.getString() === 'currentColor') {
            strokeStyleProp.setValue(this.getStyle('color').getColor());
          }

          var _strokeStyle = strokeStyleProp.getString();

          if (_strokeStyle !== 'inherit') {
            ctx.strokeStyle = _strokeStyle === 'none' ? 'rgba(0,0,0,0)' : _strokeStyle;
          }
        }

        if (strokeOpacityProp.hasValue()) {
          var _strokeStyle2 = new Property(this.document, 'stroke', ctx.strokeStyle).addOpacity(strokeOpacityProp).getString();

          ctx.strokeStyle = _strokeStyle2;
        }

        var strokeWidthStyleProp = this.getStyle('stroke-width');

        if (strokeWidthStyleProp.hasValue()) {
          var newLineWidth = strokeWidthStyleProp.getPixels();
          ctx.lineWidth = !newLineWidth ? PSEUDO_ZERO // browsers don't respect 0 (or node-canvas? :-)
          : newLineWidth;
        }

        var strokeLinecapStyleProp = this.getStyle('stroke-linecap');
        var strokeLinejoinStyleProp = this.getStyle('stroke-linejoin');
        var strokeMiterlimitProp = this.getStyle('stroke-miterlimit');
        var pointOrderStyleProp = this.getStyle('paint-order');
        var strokeDasharrayStyleProp = this.getStyle('stroke-dasharray');
        var strokeDashoffsetProp = this.getStyle('stroke-dashoffset');

        if (strokeLinecapStyleProp.hasValue()) {
          ctx.lineCap = strokeLinecapStyleProp.getString();
        }

        if (strokeLinejoinStyleProp.hasValue()) {
          ctx.lineJoin = strokeLinejoinStyleProp.getString();
        }

        if (strokeMiterlimitProp.hasValue()) {
          ctx.miterLimit = strokeMiterlimitProp.getNumber();
        }

        if (pointOrderStyleProp.hasValue()) {
          // ?
          ctx.paintOrder = pointOrderStyleProp.getValue();
        }

        if (strokeDasharrayStyleProp.hasValue() && strokeDasharrayStyleProp.getString() !== 'none') {
          var gaps = toNumbers(strokeDasharrayStyleProp.getString());

          if (typeof ctx.setLineDash !== 'undefined') {
            ctx.setLineDash(gaps);
          } else if (typeof ctx.webkitLineDash !== 'undefined') {
            ctx.webkitLineDash = gaps;
          } else if (typeof ctx.mozDash !== 'undefined' && !(gaps.length === 1 && gaps[0] === 0)) {
            ctx.mozDash = gaps;
          }

          var offset = strokeDashoffsetProp.getPixels();

          if (typeof ctx.lineDashOffset !== 'undefined') {
            ctx.lineDashOffset = offset;
          } else if (typeof ctx.webkitLineDashOffset !== 'undefined') {
            ctx.webkitLineDashOffset = offset;
          } else if (typeof ctx.mozDashOffset !== 'undefined') {
            ctx.mozDashOffset = offset;
          }
        }
      } // font


      this.modifiedEmSizeStack = false;

      if (typeof ctx.font !== 'undefined') {
        var fontStyleProp = this.getStyle('font');
        var fontStyleStyleProp = this.getStyle('font-style');
        var fontVariantStyleProp = this.getStyle('font-variant');
        var fontWeightStyleProp = this.getStyle('font-weight');
        var fontSizeStyleProp = this.getStyle('font-size');
        var fontFamilyStyleProp = this.getStyle('font-family');
        var font = new Font(fontStyleStyleProp.getString(), fontVariantStyleProp.getString(), fontWeightStyleProp.getString(), fontSizeStyleProp.hasValue() ? "".concat(fontSizeStyleProp.getPixels(true), "px") : '', fontFamilyStyleProp.getString(), Font.parse(fontStyleProp.getString(), ctx.font));
        fontStyleStyleProp.setValue(font.fontStyle);
        fontVariantStyleProp.setValue(font.fontVariant);
        fontWeightStyleProp.setValue(font.fontWeight);
        fontSizeStyleProp.setValue(font.fontSize);
        fontFamilyStyleProp.setValue(font.fontFamily);
        ctx.font = font.toString();

        if (fontSizeStyleProp.isPixels()) {
          this.document.emSize = fontSizeStyleProp.getPixels();
          this.modifiedEmSizeStack = true;
        }
      }

      if (!fromMeasure) {
        // effects
        this.applyEffects(ctx); // opacity

        ctx.globalAlpha = this.calculateOpacity();
      }
    }
  }, {
    key: "clearContext",
    value: function clearContext(ctx) {
      (0,_babel_runtime_corejs3_helpers_get__WEBPACK_IMPORTED_MODULE_36__.default)((0,_babel_runtime_corejs3_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_29__.default)(RenderedElement.prototype), "clearContext", this).call(this, ctx);

      if (this.modifiedEmSizeStack) {
        this.document.popEmSize();
      }
    }
  }]);

  return RenderedElement;
}(Element);

function _createSuper$5(Derived) {
  var hasNativeReflectConstruct = _isNativeReflectConstruct$5();

  return function _createSuperInternal() {
    var Super = (0,_babel_runtime_corejs3_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_29__.default)(Derived),
        result;

    if (hasNativeReflectConstruct) {
      var NewTarget = (0,_babel_runtime_corejs3_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_29__.default)(this).constructor;

      result = _babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default()(Super, arguments, NewTarget);
    } else {
      result = Super.apply(this, arguments);
    }

    return (0,_babel_runtime_corejs3_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_28__.default)(this, result);
  };
}

function _isNativeReflectConstruct$5() {
  if (typeof Reflect === "undefined" || !(_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default())) return false;
  if ((_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default().sham)) return false;
  if (typeof Proxy === "function") return true;

  try {
    Date.prototype.toString.call(_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default()(Date, [], function () {}));
    return true;
  } catch (e) {
    return false;
  }
}

var TextElement = /*#__PURE__*/function (_RenderedElement) {
  (0,_babel_runtime_corejs3_helpers_inherits__WEBPACK_IMPORTED_MODULE_27__.default)(TextElement, _RenderedElement);

  var _super = _createSuper$5(TextElement);

  function TextElement(document, node, captureTextNodes) {
    var _this;

    (0,_babel_runtime_corejs3_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_15__.default)(this, TextElement);

    _this = _super.call(this, document, node, (this instanceof TextElement ? this.constructor : void 0) === TextElement ? true : captureTextNodes);
    _this.type = 'text';
    _this.x = 0;
    _this.y = 0;
    _this.measureCache = -1;
    return _this;
  }

  (0,_babel_runtime_corejs3_helpers_createClass__WEBPACK_IMPORTED_MODULE_16__.default)(TextElement, [{
    key: "setContext",
    value: function setContext(ctx) {
      var fromMeasure = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;

      (0,_babel_runtime_corejs3_helpers_get__WEBPACK_IMPORTED_MODULE_36__.default)((0,_babel_runtime_corejs3_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_29__.default)(TextElement.prototype), "setContext", this).call(this, ctx, fromMeasure);

      var textBaseline = this.getStyle('dominant-baseline').getTextBaseline() || this.getStyle('alignment-baseline').getTextBaseline();

      if (textBaseline) {
        ctx.textBaseline = textBaseline;
      }
    }
  }, {
    key: "initializeCoordinates",
    value: function initializeCoordinates(ctx) {
      this.x = this.getAttribute('x').getPixels('x');
      this.y = this.getAttribute('y').getPixels('y');
      var dxAttr = this.getAttribute('dx');
      var dyAttr = this.getAttribute('dy');

      if (dxAttr.hasValue()) {
        this.x += dxAttr.getPixels('x');
      }

      if (dyAttr.hasValue()) {
        this.y += dyAttr.getPixels('y');
      }

      this.x += this.getAnchorDelta(ctx, this, 0);
    }
  }, {
    key: "getBoundingBox",
    value: function getBoundingBox(ctx) {
      var _context,
          _this2 = this;

      if (this.type !== 'text') {
        return this.getTElementBoundingBox(ctx);
      }

      this.initializeCoordinates(ctx);
      var boundingBox = null;

      _babel_runtime_corejs3_core_js_stable_instance_for_each__WEBPACK_IMPORTED_MODULE_7___default()(_context = this.children).call(_context, function (_, i) {
        var childBoundingBox = _this2.getChildBoundingBox(ctx, _this2, _this2, i);

        if (!boundingBox) {
          boundingBox = childBoundingBox;
        } else {
          boundingBox.addBoundingBox(childBoundingBox);
        }
      });

      return boundingBox;
    }
  }, {
    key: "getFontSize",
    value: function getFontSize() {
      var document = this.document,
          parent = this.parent;
      var inheritFontSize = Font.parse(document.ctx.font).fontSize;
      var fontSize = parent.getStyle('font-size').getNumber(inheritFontSize);
      return fontSize;
    }
  }, {
    key: "getTElementBoundingBox",
    value: function getTElementBoundingBox(ctx) {
      var fontSize = this.getFontSize();
      return new BoundingBox(this.x, this.y - fontSize, this.x + this.measureText(ctx), this.y);
    }
  }, {
    key: "getGlyph",
    value: function getGlyph(font, text, i) {
      var char = text[i];
      var glyph = null;

      if (font.isArabic) {
        var len = text.length;
        var prevChar = text[i - 1];
        var nextChar = text[i + 1];
        var arabicForm = 'isolated';

        if ((i === 0 || prevChar === ' ') && i < len - 2 && nextChar !== ' ') {
          arabicForm = 'terminal';
        }

        if (i > 0 && prevChar !== ' ' && i < len - 2 && nextChar !== ' ') {
          arabicForm = 'medial';
        }

        if (i > 0 && prevChar !== ' ' && (i === len - 1 || nextChar === ' ')) {
          arabicForm = 'initial';
        }

        if (typeof font.glyphs[char] !== 'undefined') {
          glyph = font.glyphs[char][arabicForm];

          if (!glyph && font.glyphs[char].type === 'glyph') {
            glyph = font.glyphs[char];
          }
        }
      } else {
        glyph = font.glyphs[char];
      }

      if (!glyph) {
        glyph = font.missingGlyph;
      }

      return glyph;
    }
  }, {
    key: "getText",
    value: function getText() {
      return '';
    }
  }, {
    key: "getTextFromNode",
    value: function getTextFromNode(node) {
      var textNode = node || this.node;

      var childNodes = _babel_runtime_corejs3_core_js_stable_array_from__WEBPACK_IMPORTED_MODULE_33___default()(textNode.parentNode.childNodes);

      var index = _babel_runtime_corejs3_core_js_stable_instance_index_of__WEBPACK_IMPORTED_MODULE_35___default()(childNodes).call(childNodes, textNode);

      var lastIndex = childNodes.length - 1;
      var text = compressSpaces(textNode.value || textNode.text || textNode.textContent || '');

      if (index === 0) {
        text = trimLeft(text);
      }

      if (index === lastIndex) {
        text = trimRight(text);
      }

      return text;
    }
  }, {
    key: "renderChildren",
    value: function renderChildren(ctx) {
      var _context2,
          _this3 = this;

      if (this.type !== 'text') {
        this.renderTElementChildren(ctx);
        return;
      }

      this.initializeCoordinates(ctx);

      _babel_runtime_corejs3_core_js_stable_instance_for_each__WEBPACK_IMPORTED_MODULE_7___default()(_context2 = this.children).call(_context2, function (_, i) {
        _this3.renderChild(ctx, _this3, _this3, i);
      });

      var mouse = this.document.screen.mouse; // Do not calc bounding box if mouse is not working.

      if (mouse.isWorking()) {
        mouse.checkBoundingBox(this, this.getBoundingBox(ctx));
      }
    }
  }, {
    key: "renderTElementChildren",
    value: function renderTElementChildren(ctx) {
      var document = this.document,
          parent = this.parent;
      var renderText = this.getText();
      var customFont = parent.getStyle('font-family').getDefinition();

      if (customFont) {
        var _context3;

        var unitsPerEm = customFont.fontFace.unitsPerEm;
        var ctxFont = Font.parse(document.ctx.font);
        var fontSize = parent.getStyle('font-size').getNumber(ctxFont.fontSize);
        var fontStyle = parent.getStyle('font-style').getString(ctxFont.fontStyle);
        var scale = fontSize / unitsPerEm;
        var text = customFont.isRTL ? _babel_runtime_corejs3_core_js_stable_instance_reverse__WEBPACK_IMPORTED_MODULE_34___default()(_context3 = renderText.split('')).call(_context3).join('') : renderText;
        var dx = toNumbers(parent.getAttribute('dx').getString());
        var len = text.length;

        for (var i = 0; i < len; i++) {
          var glyph = this.getGlyph(customFont, text, i);
          ctx.translate(this.x, this.y);
          ctx.scale(scale, -scale);
          var lw = ctx.lineWidth;
          ctx.lineWidth = ctx.lineWidth * unitsPerEm / fontSize;

          if (fontStyle === 'italic') {
            ctx.transform(1, 0, .4, 1, 0, 0);
          }

          glyph.render(ctx);

          if (fontStyle === 'italic') {
            ctx.transform(1, 0, -.4, 1, 0, 0);
          }

          ctx.lineWidth = lw;
          ctx.scale(1 / scale, -1 / scale);
          ctx.translate(-this.x, -this.y);
          this.x += fontSize * (glyph.horizAdvX || customFont.horizAdvX) / unitsPerEm;

          if (typeof dx[i] !== 'undefined' && !isNaN(dx[i])) {
            this.x += dx[i];
          }
        }

        return;
      }

      var x = this.x,
          y = this.y;

      if (ctx.paintOrder === 'stroke') {
        if (ctx.strokeStyle) {
          ctx.strokeText(renderText, x, y);
        }

        if (ctx.fillStyle) {
          ctx.fillText(renderText, x, y);
        }
      } else {
        if (ctx.fillStyle) {
          ctx.fillText(renderText, x, y);
        }

        if (ctx.strokeStyle) {
          ctx.strokeText(renderText, x, y);
        }
      }
    }
  }, {
    key: "getAnchorDelta",
    value: function getAnchorDelta(ctx, parent, startI) {
      var textAnchor = this.getStyle('text-anchor').getString('start');

      if (textAnchor !== 'start') {
        var children = parent.children;
        var len = children.length;
        var child = null;
        var width = 0;

        for (var i = startI; i < len; i++) {
          child = children[i];

          if (i > startI && child.getAttribute('x').hasValue() || child.getAttribute('text-anchor').hasValue()) {
            break; // new group
          }

          width += child.measureTextRecursive(ctx);
        }

        return -1 * (textAnchor === 'end' ? width : width / 2.0);
      }

      return 0;
    }
  }, {
    key: "adjustChildCoordinates",
    value: function adjustChildCoordinates(ctx, textParent, parent, i) {
      var child = parent.children[i];

      if (typeof child.measureText !== 'function') {
        return child;
      }

      ctx.save();
      child.setContext(ctx, true);
      var xAttr = child.getAttribute('x');
      var yAttr = child.getAttribute('y');
      var dxAttr = child.getAttribute('dx');
      var dyAttr = child.getAttribute('dy');
      var textAnchor = child.getAttribute('text-anchor').getString('start');

      if (i === 0 && child.type !== 'textNode') {
        if (!xAttr.hasValue()) {
          xAttr.setValue(textParent.getAttribute('x').getValue('0'));
        }

        if (!yAttr.hasValue()) {
          yAttr.setValue(textParent.getAttribute('y').getValue('0'));
        }

        if (!dxAttr.hasValue()) {
          dxAttr.setValue(textParent.getAttribute('dx').getValue('0'));
        }

        if (!dyAttr.hasValue()) {
          dyAttr.setValue(textParent.getAttribute('dy').getValue('0'));
        }
      }

      if (xAttr.hasValue()) {
        child.x = xAttr.getPixels('x') + textParent.getAnchorDelta(ctx, parent, i);

        if (textAnchor !== 'start') {
          var width = child.measureTextRecursive(ctx);
          child.x += -1 * (textAnchor === 'end' ? width : width / 2.0);
        }

        if (dxAttr.hasValue()) {
          child.x += dxAttr.getPixels('x');
        }
      } else {
        if (textAnchor !== 'start') {
          var _width = child.measureTextRecursive(ctx);

          textParent.x += -1 * (textAnchor === 'end' ? _width : _width / 2.0);
        }

        if (dxAttr.hasValue()) {
          textParent.x += dxAttr.getPixels('x');
        }

        child.x = textParent.x;
      }

      textParent.x = child.x + child.measureText(ctx);

      if (yAttr.hasValue()) {
        child.y = yAttr.getPixels('y');

        if (dyAttr.hasValue()) {
          child.y += dyAttr.getPixels('y');
        }
      } else {
        if (dyAttr.hasValue()) {
          textParent.y += dyAttr.getPixels('y');
        }

        child.y = textParent.y;
      }

      textParent.y = child.y;
      child.clearContext(ctx);
      ctx.restore();
      return child;
    }
  }, {
    key: "getChildBoundingBox",
    value: function getChildBoundingBox(ctx, textParent, parent, i) {
      var _context4;

      var child = this.adjustChildCoordinates(ctx, textParent, parent, i); // not a text node?

      if (typeof child.getBoundingBox !== 'function') {
        return null;
      }

      var boundingBox = child.getBoundingBox(ctx);

      if (!boundingBox) {
        return null;
      }

      _babel_runtime_corejs3_core_js_stable_instance_for_each__WEBPACK_IMPORTED_MODULE_7___default()(_context4 = child.children).call(_context4, function (_, i) {
        var childBoundingBox = textParent.getChildBoundingBox(ctx, textParent, child, i);
        boundingBox.addBoundingBox(childBoundingBox);
      });

      return boundingBox;
    }
  }, {
    key: "renderChild",
    value: function renderChild(ctx, textParent, parent, i) {
      var _context5;

      var child = this.adjustChildCoordinates(ctx, textParent, parent, i);
      child.render(ctx);

      _babel_runtime_corejs3_core_js_stable_instance_for_each__WEBPACK_IMPORTED_MODULE_7___default()(_context5 = child.children).call(_context5, function (_, i) {
        textParent.renderChild(ctx, textParent, child, i);
      });
    }
  }, {
    key: "measureTextRecursive",
    value: function measureTextRecursive(ctx) {
      var _context6;

      var width = _babel_runtime_corejs3_core_js_stable_instance_reduce__WEBPACK_IMPORTED_MODULE_18___default()(_context6 = this.children).call(_context6, function (width, child) {
        return width + child.measureTextRecursive(ctx);
      }, this.measureText(ctx));

      return width;
    }
  }, {
    key: "measureText",
    value: function measureText(ctx) {
      var measureCache = this.measureCache;

      if (~measureCache) {
        return measureCache;
      }

      var renderText = this.getText();
      var measure = this.measureTargetText(ctx, renderText);
      this.measureCache = measure;
      return measure;
    }
  }, {
    key: "measureTargetText",
    value: function measureTargetText(ctx, targetText) {
      if (!targetText.length) {
        return 0;
      }

      var parent = this.parent;
      var customFont = parent.getStyle('font-family').getDefinition();

      if (customFont) {
        var _context7;

        var fontSize = this.getFontSize();
        var text = customFont.isRTL ? _babel_runtime_corejs3_core_js_stable_instance_reverse__WEBPACK_IMPORTED_MODULE_34___default()(_context7 = targetText.split('')).call(_context7).join('') : targetText;
        var dx = toNumbers(parent.getAttribute('dx').getString());
        var len = text.length;
        var _measure = 0;

        for (var i = 0; i < len; i++) {
          var glyph = this.getGlyph(customFont, text, i);
          _measure += (glyph.horizAdvX || customFont.horizAdvX) * fontSize / customFont.fontFace.unitsPerEm;

          if (typeof dx[i] !== 'undefined' && !isNaN(dx[i])) {
            _measure += dx[i];
          }
        }

        return _measure;
      }

      if (!ctx.measureText) {
        return targetText.length * 10;
      }

      ctx.save();
      this.setContext(ctx, true);

      var _ctx$measureText = ctx.measureText(targetText),
          measure = _ctx$measureText.width;

      this.clearContext(ctx);
      ctx.restore();
      return measure;
    }
  }]);

  return TextElement;
}(RenderedElement);

function _createSuper$6(Derived) {
  var hasNativeReflectConstruct = _isNativeReflectConstruct$6();

  return function _createSuperInternal() {
    var Super = (0,_babel_runtime_corejs3_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_29__.default)(Derived),
        result;

    if (hasNativeReflectConstruct) {
      var NewTarget = (0,_babel_runtime_corejs3_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_29__.default)(this).constructor;

      result = _babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default()(Super, arguments, NewTarget);
    } else {
      result = Super.apply(this, arguments);
    }

    return (0,_babel_runtime_corejs3_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_28__.default)(this, result);
  };
}

function _isNativeReflectConstruct$6() {
  if (typeof Reflect === "undefined" || !(_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default())) return false;
  if ((_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default().sham)) return false;
  if (typeof Proxy === "function") return true;

  try {
    Date.prototype.toString.call(_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default()(Date, [], function () {}));
    return true;
  } catch (e) {
    return false;
  }
}

var TSpanElement = /*#__PURE__*/function (_TextElement) {
  (0,_babel_runtime_corejs3_helpers_inherits__WEBPACK_IMPORTED_MODULE_27__.default)(TSpanElement, _TextElement);

  var _super = _createSuper$6(TSpanElement);

  function TSpanElement(document, node, captureTextNodes) {
    var _this;

    (0,_babel_runtime_corejs3_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_15__.default)(this, TSpanElement);

    _this = _super.call(this, document, node, (this instanceof TSpanElement ? this.constructor : void 0) === TSpanElement ? true : captureTextNodes);
    _this.type = 'tspan'; // if this node has children, then they own the text

    _this.text = _this.children.length > 0 ? '' : _this.getTextFromNode();
    return _this;
  }

  (0,_babel_runtime_corejs3_helpers_createClass__WEBPACK_IMPORTED_MODULE_16__.default)(TSpanElement, [{
    key: "getText",
    value: function getText() {
      return this.text;
    }
  }]);

  return TSpanElement;
}(TextElement);

function _createSuper$7(Derived) {
  var hasNativeReflectConstruct = _isNativeReflectConstruct$7();

  return function _createSuperInternal() {
    var Super = (0,_babel_runtime_corejs3_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_29__.default)(Derived),
        result;

    if (hasNativeReflectConstruct) {
      var NewTarget = (0,_babel_runtime_corejs3_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_29__.default)(this).constructor;

      result = _babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default()(Super, arguments, NewTarget);
    } else {
      result = Super.apply(this, arguments);
    }

    return (0,_babel_runtime_corejs3_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_28__.default)(this, result);
  };
}

function _isNativeReflectConstruct$7() {
  if (typeof Reflect === "undefined" || !(_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default())) return false;
  if ((_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default().sham)) return false;
  if (typeof Proxy === "function") return true;

  try {
    Date.prototype.toString.call(_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default()(Date, [], function () {}));
    return true;
  } catch (e) {
    return false;
  }
}

var TextNode = /*#__PURE__*/function (_TSpanElement) {
  (0,_babel_runtime_corejs3_helpers_inherits__WEBPACK_IMPORTED_MODULE_27__.default)(TextNode, _TSpanElement);

  var _super = _createSuper$7(TextNode);

  function TextNode() {
    var _this;

    (0,_babel_runtime_corejs3_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_15__.default)(this, TextNode);

    _this = _super.apply(this, arguments);
    _this.type = 'textNode';
    return _this;
  }

  return TextNode;
}(TSpanElement);

function _createSuper$8(Derived) {
  var hasNativeReflectConstruct = _isNativeReflectConstruct$8();

  return function _createSuperInternal() {
    var Super = (0,_babel_runtime_corejs3_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_29__.default)(Derived),
        result;

    if (hasNativeReflectConstruct) {
      var NewTarget = (0,_babel_runtime_corejs3_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_29__.default)(this).constructor;

      result = _babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default()(Super, arguments, NewTarget);
    } else {
      result = Super.apply(this, arguments);
    }

    return (0,_babel_runtime_corejs3_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_28__.default)(this, result);
  };
}

function _isNativeReflectConstruct$8() {
  if (typeof Reflect === "undefined" || !(_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default())) return false;
  if ((_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default().sham)) return false;
  if (typeof Proxy === "function") return true;

  try {
    Date.prototype.toString.call(_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default()(Date, [], function () {}));
    return true;
  } catch (e) {
    return false;
  }
}

var PathParser = /*#__PURE__*/function (_SVGPathData) {
  (0,_babel_runtime_corejs3_helpers_inherits__WEBPACK_IMPORTED_MODULE_27__.default)(PathParser, _SVGPathData);

  var _super = _createSuper$8(PathParser);

  function PathParser(path) {
    var _this;

    (0,_babel_runtime_corejs3_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_15__.default)(this, PathParser);

    _this = _super.call(this, path // Fix spaces after signs.
    .replace(/[+-.]\s+/g, '-') // Remove invalid part.
    .replace(/[^MmZzLlHhVvCcSsQqTtAae\d\s.,+-].*/g, ''));
    _this.control = null;
    _this.start = null;
    _this.current = null;
    _this.command = null;
    _this.commands = _this.commands;
    _this.i = -1;
    _this.previousCommand = null;
    _this.points = [];
    _this.angles = [];
    return _this;
  }

  (0,_babel_runtime_corejs3_helpers_createClass__WEBPACK_IMPORTED_MODULE_16__.default)(PathParser, [{
    key: "reset",
    value: function reset() {
      this.i = -1;
      this.command = null;
      this.previousCommand = null;
      this.start = new Point(0, 0);
      this.control = new Point(0, 0);
      this.current = new Point(0, 0);
      this.points = [];
      this.angles = [];
    }
  }, {
    key: "isEnd",
    value: function isEnd() {
      var i = this.i,
          commands = this.commands;
      return i >= commands.length - 1;
    }
  }, {
    key: "next",
    value: function next() {
      var command = this.commands[++this.i];
      this.previousCommand = this.command;
      this.command = command;
      return command;
    }
  }, {
    key: "getPoint",
    value: function getPoint() {
      var xProp = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'x';
      var yProp = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'y';
      var point = new Point(this.command[xProp], this.command[yProp]);
      return this.makeAbsolute(point);
    }
  }, {
    key: "getAsControlPoint",
    value: function getAsControlPoint(xProp, yProp) {
      var point = this.getPoint(xProp, yProp);
      this.control = point;
      return point;
    }
  }, {
    key: "getAsCurrentPoint",
    value: function getAsCurrentPoint(xProp, yProp) {
      var point = this.getPoint(xProp, yProp);
      this.current = point;
      return point;
    }
  }, {
    key: "getReflectedControlPoint",
    value: function getReflectedControlPoint() {
      var previousCommand = this.previousCommand.type;

      if (previousCommand !== svg_pathdata__WEBPACK_IMPORTED_MODULE_38__.SVGPathData.CURVE_TO && previousCommand !== svg_pathdata__WEBPACK_IMPORTED_MODULE_38__.SVGPathData.SMOOTH_CURVE_TO && previousCommand !== svg_pathdata__WEBPACK_IMPORTED_MODULE_38__.SVGPathData.QUAD_TO && previousCommand !== svg_pathdata__WEBPACK_IMPORTED_MODULE_38__.SVGPathData.SMOOTH_QUAD_TO) {
        return this.current;
      } // reflect point


      var _this$current = this.current,
          cx = _this$current.x,
          cy = _this$current.y,
          _this$control = this.control,
          ox = _this$control.x,
          oy = _this$control.y;
      var point = new Point(2 * cx - ox, 2 * cy - oy);
      return point;
    }
  }, {
    key: "makeAbsolute",
    value: function makeAbsolute(point) {
      if (this.command.relative) {
        var _this$current2 = this.current,
            x = _this$current2.x,
            y = _this$current2.y;
        point.x += x;
        point.y += y;
      }

      return point;
    }
  }, {
    key: "addMarker",
    value: function addMarker(point, from, priorTo) {
      var points = this.points,
          angles = this.angles; // if the last angle isn't filled in because we didn't have this point yet ...

      if (priorTo && angles.length > 0 && !angles[angles.length - 1]) {
        angles[angles.length - 1] = points[points.length - 1].angleTo(priorTo);
      }

      this.addMarkerAngle(point, from ? from.angleTo(point) : null);
    }
  }, {
    key: "addMarkerAngle",
    value: function addMarkerAngle(point, angle) {
      this.points.push(point);
      this.angles.push(angle);
    }
  }, {
    key: "getMarkerPoints",
    value: function getMarkerPoints() {
      return this.points;
    }
  }, {
    key: "getMarkerAngles",
    value: function getMarkerAngles() {
      var angles = this.angles;
      var len = angles.length;

      for (var i = 0; i < len; i++) {
        if (!angles[i]) {
          for (var j = i + 1; j < len; j++) {
            if (angles[j]) {
              angles[i] = angles[j];
              break;
            }
          }
        }
      }

      return angles;
    }
  }]);

  return PathParser;
}(svg_pathdata__WEBPACK_IMPORTED_MODULE_38__.SVGPathData);

function _createSuper$9(Derived) {
  var hasNativeReflectConstruct = _isNativeReflectConstruct$9();

  return function _createSuperInternal() {
    var Super = (0,_babel_runtime_corejs3_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_29__.default)(Derived),
        result;

    if (hasNativeReflectConstruct) {
      var NewTarget = (0,_babel_runtime_corejs3_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_29__.default)(this).constructor;

      result = _babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default()(Super, arguments, NewTarget);
    } else {
      result = Super.apply(this, arguments);
    }

    return (0,_babel_runtime_corejs3_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_28__.default)(this, result);
  };
}

function _isNativeReflectConstruct$9() {
  if (typeof Reflect === "undefined" || !(_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default())) return false;
  if ((_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default().sham)) return false;
  if (typeof Proxy === "function") return true;

  try {
    Date.prototype.toString.call(_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default()(Date, [], function () {}));
    return true;
  } catch (e) {
    return false;
  }
}

var PathElement = /*#__PURE__*/function (_RenderedElement) {
  (0,_babel_runtime_corejs3_helpers_inherits__WEBPACK_IMPORTED_MODULE_27__.default)(PathElement, _RenderedElement);

  var _super = _createSuper$9(PathElement);

  function PathElement(document, node, captureTextNodes) {
    var _this;

    (0,_babel_runtime_corejs3_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_15__.default)(this, PathElement);

    _this = _super.call(this, document, node, captureTextNodes);
    _this.type = 'path';
    _this.pathParser = null;
    _this.pathParser = new PathParser(_this.getAttribute('d').getString());
    return _this;
  }

  (0,_babel_runtime_corejs3_helpers_createClass__WEBPACK_IMPORTED_MODULE_16__.default)(PathElement, [{
    key: "path",
    value: function path(ctx) {
      var pathParser = this.pathParser;
      var boundingBox = new BoundingBox();
      pathParser.reset();

      if (ctx) {
        ctx.beginPath();
      }

      while (!pathParser.isEnd()) {
        switch (pathParser.next().type) {
          case PathParser.MOVE_TO:
            this.pathM(ctx, boundingBox);
            break;

          case PathParser.LINE_TO:
            this.pathL(ctx, boundingBox);
            break;

          case PathParser.HORIZ_LINE_TO:
            this.pathH(ctx, boundingBox);
            break;

          case PathParser.VERT_LINE_TO:
            this.pathV(ctx, boundingBox);
            break;

          case PathParser.CURVE_TO:
            this.pathC(ctx, boundingBox);
            break;

          case PathParser.SMOOTH_CURVE_TO:
            this.pathS(ctx, boundingBox);
            break;

          case PathParser.QUAD_TO:
            this.pathQ(ctx, boundingBox);
            break;

          case PathParser.SMOOTH_QUAD_TO:
            this.pathT(ctx, boundingBox);
            break;

          case PathParser.ARC:
            this.pathA(ctx, boundingBox);
            break;

          case PathParser.CLOSE_PATH:
            this.pathZ(ctx, boundingBox);
            break;
        }
      }

      return boundingBox;
    }
  }, {
    key: "getBoundingBox",
    value: function getBoundingBox(_) {
      return this.path();
    }
  }, {
    key: "getMarkers",
    value: function getMarkers() {
      var pathParser = this.pathParser;
      var points = pathParser.getMarkerPoints();
      var angles = pathParser.getMarkerAngles();

      var markers = _babel_runtime_corejs3_core_js_stable_instance_map__WEBPACK_IMPORTED_MODULE_2___default()(points).call(points, function (point, i) {
        return [point, angles[i]];
      });

      return markers;
    }
  }, {
    key: "renderChildren",
    value: function renderChildren(ctx) {
      this.path(ctx);
      this.document.screen.mouse.checkPath(this, ctx);
      var fillRuleStyleProp = this.getStyle('fill-rule');

      if (ctx.fillStyle !== '') {
        if (fillRuleStyleProp.getString('inherit') !== 'inherit') {
          _babel_runtime_corejs3_core_js_stable_instance_fill__WEBPACK_IMPORTED_MODULE_37___default()(ctx).call(ctx, fillRuleStyleProp.getString());
        } else {
          _babel_runtime_corejs3_core_js_stable_instance_fill__WEBPACK_IMPORTED_MODULE_37___default()(ctx).call(ctx);
        }
      }

      if (ctx.strokeStyle !== '') {
        ctx.stroke();
      }

      var markers = this.getMarkers();

      if (markers) {
        var markersLastIndex = markers.length - 1;
        var markerStartStyleProp = this.getStyle('marker-start');
        var markerMidStyleProp = this.getStyle('marker-mid');
        var markerEndStyleProp = this.getStyle('marker-end');

        if (markerStartStyleProp.isUrlDefinition()) {
          var marker = markerStartStyleProp.getDefinition();

          var _markers$ = (0,_babel_runtime_corejs3_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_3__.default)(markers[0], 2),
              point = _markers$[0],
              angle = _markers$[1];

          marker.render(ctx, point, angle);
        }

        if (markerMidStyleProp.isUrlDefinition()) {
          var _marker = markerMidStyleProp.getDefinition();

          for (var i = 1; i < markersLastIndex; i++) {
            var _markers$i = (0,_babel_runtime_corejs3_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_3__.default)(markers[i], 2),
                _point = _markers$i[0],
                _angle = _markers$i[1];

            _marker.render(ctx, _point, _angle);
          }
        }

        if (markerEndStyleProp.isUrlDefinition()) {
          var _marker2 = markerEndStyleProp.getDefinition();

          var _markers$markersLastI = (0,_babel_runtime_corejs3_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_3__.default)(markers[markersLastIndex], 2),
              _point2 = _markers$markersLastI[0],
              _angle2 = _markers$markersLastI[1];

          _marker2.render(ctx, _point2, _angle2);
        }
      }
    }
  }, {
    key: "pathM",
    value: function pathM(ctx, boundingBox) {
      var pathParser = this.pathParser;

      var _PathElement$pathM = PathElement.pathM(pathParser),
          point = _PathElement$pathM.point;

      var x = point.x,
          y = point.y;
      pathParser.addMarker(point);
      boundingBox.addPoint(x, y);

      if (ctx) {
        ctx.moveTo(x, y);
      }
    }
  }, {
    key: "pathL",
    value: function pathL(ctx, boundingBox) {
      var pathParser = this.pathParser;

      var _PathElement$pathL = PathElement.pathL(pathParser),
          current = _PathElement$pathL.current,
          point = _PathElement$pathL.point;

      var x = point.x,
          y = point.y;
      pathParser.addMarker(point, current);
      boundingBox.addPoint(x, y);

      if (ctx) {
        ctx.lineTo(x, y);
      }
    }
  }, {
    key: "pathH",
    value: function pathH(ctx, boundingBox) {
      var pathParser = this.pathParser;

      var _PathElement$pathH = PathElement.pathH(pathParser),
          current = _PathElement$pathH.current,
          point = _PathElement$pathH.point;

      var x = point.x,
          y = point.y;
      pathParser.addMarker(point, current);
      boundingBox.addPoint(x, y);

      if (ctx) {
        ctx.lineTo(x, y);
      }
    }
  }, {
    key: "pathV",
    value: function pathV(ctx, boundingBox) {
      var pathParser = this.pathParser;

      var _PathElement$pathV = PathElement.pathV(pathParser),
          current = _PathElement$pathV.current,
          point = _PathElement$pathV.point;

      var x = point.x,
          y = point.y;
      pathParser.addMarker(point, current);
      boundingBox.addPoint(x, y);

      if (ctx) {
        ctx.lineTo(x, y);
      }
    }
  }, {
    key: "pathC",
    value: function pathC(ctx, boundingBox) {
      var pathParser = this.pathParser;

      var _PathElement$pathC = PathElement.pathC(pathParser),
          current = _PathElement$pathC.current,
          point = _PathElement$pathC.point,
          controlPoint = _PathElement$pathC.controlPoint,
          currentPoint = _PathElement$pathC.currentPoint;

      pathParser.addMarker(currentPoint, controlPoint, point);
      boundingBox.addBezierCurve(current.x, current.y, point.x, point.y, controlPoint.x, controlPoint.y, currentPoint.x, currentPoint.y);

      if (ctx) {
        ctx.bezierCurveTo(point.x, point.y, controlPoint.x, controlPoint.y, currentPoint.x, currentPoint.y);
      }
    }
  }, {
    key: "pathS",
    value: function pathS(ctx, boundingBox) {
      var pathParser = this.pathParser;

      var _PathElement$pathS = PathElement.pathS(pathParser),
          current = _PathElement$pathS.current,
          point = _PathElement$pathS.point,
          controlPoint = _PathElement$pathS.controlPoint,
          currentPoint = _PathElement$pathS.currentPoint;

      pathParser.addMarker(currentPoint, controlPoint, point);
      boundingBox.addBezierCurve(current.x, current.y, point.x, point.y, controlPoint.x, controlPoint.y, currentPoint.x, currentPoint.y);

      if (ctx) {
        ctx.bezierCurveTo(point.x, point.y, controlPoint.x, controlPoint.y, currentPoint.x, currentPoint.y);
      }
    }
  }, {
    key: "pathQ",
    value: function pathQ(ctx, boundingBox) {
      var pathParser = this.pathParser;

      var _PathElement$pathQ = PathElement.pathQ(pathParser),
          current = _PathElement$pathQ.current,
          controlPoint = _PathElement$pathQ.controlPoint,
          currentPoint = _PathElement$pathQ.currentPoint;

      pathParser.addMarker(currentPoint, controlPoint, controlPoint);
      boundingBox.addQuadraticCurve(current.x, current.y, controlPoint.x, controlPoint.y, currentPoint.x, currentPoint.y);

      if (ctx) {
        ctx.quadraticCurveTo(controlPoint.x, controlPoint.y, currentPoint.x, currentPoint.y);
      }
    }
  }, {
    key: "pathT",
    value: function pathT(ctx, boundingBox) {
      var pathParser = this.pathParser;

      var _PathElement$pathT = PathElement.pathT(pathParser),
          current = _PathElement$pathT.current,
          controlPoint = _PathElement$pathT.controlPoint,
          currentPoint = _PathElement$pathT.currentPoint;

      pathParser.addMarker(currentPoint, controlPoint, controlPoint);
      boundingBox.addQuadraticCurve(current.x, current.y, controlPoint.x, controlPoint.y, currentPoint.x, currentPoint.y);

      if (ctx) {
        ctx.quadraticCurveTo(controlPoint.x, controlPoint.y, currentPoint.x, currentPoint.y);
      }
    }
  }, {
    key: "pathA",
    value: function pathA(ctx, boundingBox) {
      var pathParser = this.pathParser;

      var _PathElement$pathA = PathElement.pathA(pathParser),
          currentPoint = _PathElement$pathA.currentPoint,
          rX = _PathElement$pathA.rX,
          rY = _PathElement$pathA.rY,
          sweepFlag = _PathElement$pathA.sweepFlag,
          xAxisRotation = _PathElement$pathA.xAxisRotation,
          centp = _PathElement$pathA.centp,
          a1 = _PathElement$pathA.a1,
          ad = _PathElement$pathA.ad; // for markers


      var dir = 1 - sweepFlag ? 1.0 : -1.0;
      var ah = a1 + dir * (ad / 2.0);
      var halfWay = new Point(centp.x + rX * Math.cos(ah), centp.y + rY * Math.sin(ah));
      pathParser.addMarkerAngle(halfWay, ah - dir * Math.PI / 2);
      pathParser.addMarkerAngle(currentPoint, ah - dir * Math.PI);
      boundingBox.addPoint(currentPoint.x, currentPoint.y); // TODO: this is too naive, make it better

      if (ctx && !isNaN(a1) && !isNaN(ad)) {
        var r = rX > rY ? rX : rY;
        var sx = rX > rY ? 1 : rX / rY;
        var sy = rX > rY ? rY / rX : 1;
        ctx.translate(centp.x, centp.y);
        ctx.rotate(xAxisRotation);
        ctx.scale(sx, sy);
        ctx.arc(0, 0, r, a1, a1 + ad, Boolean(1 - sweepFlag));
        ctx.scale(1 / sx, 1 / sy);
        ctx.rotate(-xAxisRotation);
        ctx.translate(-centp.x, -centp.y);
      }
    }
  }, {
    key: "pathZ",
    value: function pathZ(ctx, boundingBox) {
      PathElement.pathZ(this.pathParser);

      if (ctx) {
        // only close path if it is not a straight line
        if (boundingBox.x1 !== boundingBox.x2 && boundingBox.y1 !== boundingBox.y2) {
          ctx.closePath();
        }
      }
    }
  }], [{
    key: "pathM",
    value: function pathM(pathParser) {
      var point = pathParser.getAsCurrentPoint();
      pathParser.start = pathParser.current;
      return {
        point: point
      };
    }
  }, {
    key: "pathL",
    value: function pathL(pathParser) {
      var current = pathParser.current;
      var point = pathParser.getAsCurrentPoint();
      return {
        current: current,
        point: point
      };
    }
  }, {
    key: "pathH",
    value: function pathH(pathParser) {
      var current = pathParser.current,
          command = pathParser.command;
      var point = new Point((command.relative ? current.x : 0) + command.x, current.y);
      pathParser.current = point;
      return {
        current: current,
        point: point
      };
    }
  }, {
    key: "pathV",
    value: function pathV(pathParser) {
      var current = pathParser.current,
          command = pathParser.command;
      var point = new Point(current.x, (command.relative ? current.y : 0) + command.y);
      pathParser.current = point;
      return {
        current: current,
        point: point
      };
    }
  }, {
    key: "pathC",
    value: function pathC(pathParser) {
      var current = pathParser.current;
      var point = pathParser.getPoint('x1', 'y1');
      var controlPoint = pathParser.getAsControlPoint('x2', 'y2');
      var currentPoint = pathParser.getAsCurrentPoint();
      return {
        current: current,
        point: point,
        controlPoint: controlPoint,
        currentPoint: currentPoint
      };
    }
  }, {
    key: "pathS",
    value: function pathS(pathParser) {
      var current = pathParser.current;
      var point = pathParser.getReflectedControlPoint();
      var controlPoint = pathParser.getAsControlPoint('x2', 'y2');
      var currentPoint = pathParser.getAsCurrentPoint();
      return {
        current: current,
        point: point,
        controlPoint: controlPoint,
        currentPoint: currentPoint
      };
    }
  }, {
    key: "pathQ",
    value: function pathQ(pathParser) {
      var current = pathParser.current;
      var controlPoint = pathParser.getAsControlPoint('x1', 'y1');
      var currentPoint = pathParser.getAsCurrentPoint();
      return {
        current: current,
        controlPoint: controlPoint,
        currentPoint: currentPoint
      };
    }
  }, {
    key: "pathT",
    value: function pathT(pathParser) {
      var current = pathParser.current;
      var controlPoint = pathParser.getReflectedControlPoint();
      pathParser.control = controlPoint;
      var currentPoint = pathParser.getAsCurrentPoint();
      return {
        current: current,
        controlPoint: controlPoint,
        currentPoint: currentPoint
      };
    }
  }, {
    key: "pathA",
    value: function pathA(pathParser) {
      var current = pathParser.current,
          command = pathParser.command;
      var rX = command.rX,
          rY = command.rY,
          xRot = command.xRot,
          lArcFlag = command.lArcFlag,
          sweepFlag = command.sweepFlag;
      var xAxisRotation = xRot * (Math.PI / 180.0);
      var currentPoint = pathParser.getAsCurrentPoint(); // Conversion from endpoint to center parameterization
      // http://www.w3.org/TR/SVG11/implnote.html#ArcImplementationNotes
      // x1', y1'

      var currp = new Point(Math.cos(xAxisRotation) * (current.x - currentPoint.x) / 2.0 + Math.sin(xAxisRotation) * (current.y - currentPoint.y) / 2.0, -Math.sin(xAxisRotation) * (current.x - currentPoint.x) / 2.0 + Math.cos(xAxisRotation) * (current.y - currentPoint.y) / 2.0); // adjust radii

      var l = Math.pow(currp.x, 2) / Math.pow(rX, 2) + Math.pow(currp.y, 2) / Math.pow(rY, 2);

      if (l > 1) {
        rX *= Math.sqrt(l);
        rY *= Math.sqrt(l);
      } // cx', cy'


      var s = (lArcFlag === sweepFlag ? -1 : 1) * Math.sqrt((Math.pow(rX, 2) * Math.pow(rY, 2) - Math.pow(rX, 2) * Math.pow(currp.y, 2) - Math.pow(rY, 2) * Math.pow(currp.x, 2)) / (Math.pow(rX, 2) * Math.pow(currp.y, 2) + Math.pow(rY, 2) * Math.pow(currp.x, 2)));

      if (isNaN(s)) {
        s = 0;
      }

      var cpp = new Point(s * rX * currp.y / rY, s * -rY * currp.x / rX); // cx, cy

      var centp = new Point((current.x + currentPoint.x) / 2.0 + Math.cos(xAxisRotation) * cpp.x - Math.sin(xAxisRotation) * cpp.y, (current.y + currentPoint.y) / 2.0 + Math.sin(xAxisRotation) * cpp.x + Math.cos(xAxisRotation) * cpp.y); // initial angle

      var a1 = vectorsAngle([1, 0], [(currp.x - cpp.x) / rX, (currp.y - cpp.y) / rY]); // θ1
      // angle delta

      var u = [(currp.x - cpp.x) / rX, (currp.y - cpp.y) / rY];
      var v = [(-currp.x - cpp.x) / rX, (-currp.y - cpp.y) / rY];
      var ad = vectorsAngle(u, v); // Δθ

      if (vectorsRatio(u, v) <= -1) {
        ad = Math.PI;
      }

      if (vectorsRatio(u, v) >= 1) {
        ad = 0;
      }

      return {
        currentPoint: currentPoint,
        rX: rX,
        rY: rY,
        sweepFlag: sweepFlag,
        xAxisRotation: xAxisRotation,
        centp: centp,
        a1: a1,
        ad: ad
      };
    }
  }, {
    key: "pathZ",
    value: function pathZ(pathParser) {
      pathParser.current = pathParser.start;
    }
  }]);

  return PathElement;
}(RenderedElement);

function _createSuper$a(Derived) {
  var hasNativeReflectConstruct = _isNativeReflectConstruct$a();

  return function _createSuperInternal() {
    var Super = (0,_babel_runtime_corejs3_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_29__.default)(Derived),
        result;

    if (hasNativeReflectConstruct) {
      var NewTarget = (0,_babel_runtime_corejs3_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_29__.default)(this).constructor;

      result = _babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default()(Super, arguments, NewTarget);
    } else {
      result = Super.apply(this, arguments);
    }

    return (0,_babel_runtime_corejs3_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_28__.default)(this, result);
  };
}

function _isNativeReflectConstruct$a() {
  if (typeof Reflect === "undefined" || !(_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default())) return false;
  if ((_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default().sham)) return false;
  if (typeof Proxy === "function") return true;

  try {
    Date.prototype.toString.call(_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default()(Date, [], function () {}));
    return true;
  } catch (e) {
    return false;
  }
}

var SVGElement = /*#__PURE__*/function (_RenderedElement) {
  (0,_babel_runtime_corejs3_helpers_inherits__WEBPACK_IMPORTED_MODULE_27__.default)(SVGElement, _RenderedElement);

  var _super = _createSuper$a(SVGElement);

  function SVGElement() {
    var _this;

    (0,_babel_runtime_corejs3_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_15__.default)(this, SVGElement);

    _this = _super.apply(this, arguments);
    _this.type = 'svg';
    _this.root = false;
    return _this;
  }

  (0,_babel_runtime_corejs3_helpers_createClass__WEBPACK_IMPORTED_MODULE_16__.default)(SVGElement, [{
    key: "setContext",
    value: function setContext(ctx) {
      var document = this.document;
      var screen = document.screen,
          window = document.window;
      var canvas = ctx.canvas;
      screen.setDefaults(ctx);

      if (canvas.style && typeof ctx.font !== 'undefined' && window && typeof window.getComputedStyle !== 'undefined') {
        ctx.font = window.getComputedStyle(canvas).getPropertyValue('font');
        var fontSizeProp = new Property(document, 'fontSize', Font.parse(ctx.font).fontSize);

        if (fontSizeProp.hasValue()) {
          document.rootEmSize = fontSizeProp.getPixels('y');
          document.emSize = document.rootEmSize;
        }
      } // create new view port


      if (!this.getAttribute('x').hasValue()) {
        this.getAttribute('x', true).setValue(0);
      }

      if (!this.getAttribute('y').hasValue()) {
        this.getAttribute('y', true).setValue(0);
      }

      var _screen$viewPort = screen.viewPort,
          width = _screen$viewPort.width,
          height = _screen$viewPort.height;

      if (!this.getStyle('width').hasValue()) {
        this.getStyle('width', true).setValue('100%');
      }

      if (!this.getStyle('height').hasValue()) {
        this.getStyle('height', true).setValue('100%');
      }

      if (!this.getStyle('color').hasValue()) {
        this.getStyle('color', true).setValue('black');
      }

      var refXAttr = this.getAttribute('refX');
      var refYAttr = this.getAttribute('refY');
      var viewBoxAttr = this.getAttribute('viewBox');
      var viewBox = viewBoxAttr.hasValue() ? toNumbers(viewBoxAttr.getString()) : null;
      var clip = !this.root && this.getStyle('overflow').getValue('hidden') !== 'visible';
      var minX = 0;
      var minY = 0;
      var clipX = 0;
      var clipY = 0;

      if (viewBox) {
        minX = viewBox[0];
        minY = viewBox[1];
      }

      if (!this.root) {
        width = this.getStyle('width').getPixels('x');
        height = this.getStyle('height').getPixels('y');

        if (this.type === 'marker') {
          clipX = minX;
          clipY = minY;
          minX = 0;
          minY = 0;
        }
      }

      screen.viewPort.setCurrent(width, height);

      if (this.node // is not temporary SVGElement
      && this.getStyle('transform', false, true).hasValue() && !this.getStyle('transform-origin', false, true).hasValue()) {
        this.getStyle('transform-origin', true, true).setValue('50% 50%');
      }

      (0,_babel_runtime_corejs3_helpers_get__WEBPACK_IMPORTED_MODULE_36__.default)((0,_babel_runtime_corejs3_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_29__.default)(SVGElement.prototype), "setContext", this).call(this, ctx);

      ctx.translate(this.getAttribute('x').getPixels('x'), this.getAttribute('y').getPixels('y'));

      if (viewBox) {
        width = viewBox[2];
        height = viewBox[3];
      }

      document.setViewBox({
        ctx: ctx,
        aspectRatio: this.getAttribute('preserveAspectRatio').getString(),
        width: screen.viewPort.width,
        desiredWidth: width,
        height: screen.viewPort.height,
        desiredHeight: height,
        minX: minX,
        minY: minY,
        refX: refXAttr.getValue(),
        refY: refYAttr.getValue(),
        clip: clip,
        clipX: clipX,
        clipY: clipY
      });

      if (viewBox) {
        screen.viewPort.removeCurrent();
        screen.viewPort.setCurrent(width, height);
      }
    }
  }, {
    key: "clearContext",
    value: function clearContext(ctx) {
      (0,_babel_runtime_corejs3_helpers_get__WEBPACK_IMPORTED_MODULE_36__.default)((0,_babel_runtime_corejs3_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_29__.default)(SVGElement.prototype), "clearContext", this).call(this, ctx);

      this.document.screen.viewPort.removeCurrent();
    }
    /**
     * Resize SVG to fit in given size.
     * @param width
     * @param height
     * @param preserveAspectRatio
     */

  }, {
    key: "resize",
    value: function resize(width) {
      var height = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : width;
      var preserveAspectRatio = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;
      var widthAttr = this.getAttribute('width', true);
      var heightAttr = this.getAttribute('height', true);
      var viewBoxAttr = this.getAttribute('viewBox');
      var styleAttr = this.getAttribute('style');
      var originWidth = widthAttr.getNumber(0);
      var originHeight = heightAttr.getNumber(0);

      if (preserveAspectRatio) {
        if (typeof preserveAspectRatio === 'string') {
          this.getAttribute('preserveAspectRatio', true).setValue(preserveAspectRatio);
        } else {
          var preserveAspectRatioAttr = this.getAttribute('preserveAspectRatio');

          if (preserveAspectRatioAttr.hasValue()) {
            preserveAspectRatioAttr.setValue(preserveAspectRatioAttr.getString().replace(/^\s*(\S.*\S)\s*$/, '$1'));
          }
        }
      }

      widthAttr.setValue(width);
      heightAttr.setValue(height);

      if (!viewBoxAttr.hasValue()) {
        var _context;

        viewBoxAttr.setValue(_babel_runtime_corejs3_core_js_stable_instance_concat__WEBPACK_IMPORTED_MODULE_17___default()(_context = "0 0 ".concat(originWidth || width, " ")).call(_context, originHeight || height));
      }

      if (styleAttr.hasValue()) {
        var widthStyle = this.getStyle('width');
        var heightStyle = this.getStyle('height');

        if (widthStyle.hasValue()) {
          widthStyle.setValue("".concat(width, "px"));
        }

        if (heightStyle.hasValue()) {
          heightStyle.setValue("".concat(height, "px"));
        }
      }
    }
  }]);

  return SVGElement;
}(RenderedElement);

function _createSuper$b(Derived) {
  var hasNativeReflectConstruct = _isNativeReflectConstruct$b();

  return function _createSuperInternal() {
    var Super = (0,_babel_runtime_corejs3_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_29__.default)(Derived),
        result;

    if (hasNativeReflectConstruct) {
      var NewTarget = (0,_babel_runtime_corejs3_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_29__.default)(this).constructor;

      result = _babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default()(Super, arguments, NewTarget);
    } else {
      result = Super.apply(this, arguments);
    }

    return (0,_babel_runtime_corejs3_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_28__.default)(this, result);
  };
}

function _isNativeReflectConstruct$b() {
  if (typeof Reflect === "undefined" || !(_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default())) return false;
  if ((_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default().sham)) return false;
  if (typeof Proxy === "function") return true;

  try {
    Date.prototype.toString.call(_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default()(Date, [], function () {}));
    return true;
  } catch (e) {
    return false;
  }
}

var RectElement = /*#__PURE__*/function (_PathElement) {
  (0,_babel_runtime_corejs3_helpers_inherits__WEBPACK_IMPORTED_MODULE_27__.default)(RectElement, _PathElement);

  var _super = _createSuper$b(RectElement);

  function RectElement() {
    var _this;

    (0,_babel_runtime_corejs3_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_15__.default)(this, RectElement);

    _this = _super.apply(this, arguments);
    _this.type = 'rect';
    return _this;
  }

  (0,_babel_runtime_corejs3_helpers_createClass__WEBPACK_IMPORTED_MODULE_16__.default)(RectElement, [{
    key: "path",
    value: function path(ctx) {
      var x = this.getAttribute('x').getPixels('x');
      var y = this.getAttribute('y').getPixels('y');
      var width = this.getStyle('width', false, true).getPixels('x');
      var height = this.getStyle('height', false, true).getPixels('y');
      var rxAttr = this.getAttribute('rx');
      var ryAttr = this.getAttribute('ry');
      var rx = rxAttr.getPixels('x');
      var ry = ryAttr.getPixels('y');

      if (rxAttr.hasValue() && !ryAttr.hasValue()) {
        ry = rx;
      }

      if (ryAttr.hasValue() && !rxAttr.hasValue()) {
        rx = ry;
      }

      rx = Math.min(rx, width / 2.0);
      ry = Math.min(ry, height / 2.0);

      if (ctx) {
        var KAPPA = 4 * ((Math.sqrt(2) - 1) / 3);
        ctx.beginPath(); // always start the path so we don't fill prior paths

        if (height > 0 && width > 0) {
          ctx.moveTo(x + rx, y);
          ctx.lineTo(x + width - rx, y);
          ctx.bezierCurveTo(x + width - rx + KAPPA * rx, y, x + width, y + ry - KAPPA * ry, x + width, y + ry);
          ctx.lineTo(x + width, y + height - ry);
          ctx.bezierCurveTo(x + width, y + height - ry + KAPPA * ry, x + width - rx + KAPPA * rx, y + height, x + width - rx, y + height);
          ctx.lineTo(x + rx, y + height);
          ctx.bezierCurveTo(x + rx - KAPPA * rx, y + height, x, y + height - ry + KAPPA * ry, x, y + height - ry);
          ctx.lineTo(x, y + ry);
          ctx.bezierCurveTo(x, y + ry - KAPPA * ry, x + rx - KAPPA * rx, y, x + rx, y);
          ctx.closePath();
        }
      }

      return new BoundingBox(x, y, x + width, y + height);
    }
  }, {
    key: "getMarkers",
    value: function getMarkers() {
      return null;
    }
  }]);

  return RectElement;
}(PathElement);

function _createSuper$c(Derived) {
  var hasNativeReflectConstruct = _isNativeReflectConstruct$c();

  return function _createSuperInternal() {
    var Super = (0,_babel_runtime_corejs3_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_29__.default)(Derived),
        result;

    if (hasNativeReflectConstruct) {
      var NewTarget = (0,_babel_runtime_corejs3_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_29__.default)(this).constructor;

      result = _babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default()(Super, arguments, NewTarget);
    } else {
      result = Super.apply(this, arguments);
    }

    return (0,_babel_runtime_corejs3_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_28__.default)(this, result);
  };
}

function _isNativeReflectConstruct$c() {
  if (typeof Reflect === "undefined" || !(_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default())) return false;
  if ((_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default().sham)) return false;
  if (typeof Proxy === "function") return true;

  try {
    Date.prototype.toString.call(_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default()(Date, [], function () {}));
    return true;
  } catch (e) {
    return false;
  }
}

var CircleElement = /*#__PURE__*/function (_PathElement) {
  (0,_babel_runtime_corejs3_helpers_inherits__WEBPACK_IMPORTED_MODULE_27__.default)(CircleElement, _PathElement);

  var _super = _createSuper$c(CircleElement);

  function CircleElement() {
    var _this;

    (0,_babel_runtime_corejs3_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_15__.default)(this, CircleElement);

    _this = _super.apply(this, arguments);
    _this.type = 'circle';
    return _this;
  }

  (0,_babel_runtime_corejs3_helpers_createClass__WEBPACK_IMPORTED_MODULE_16__.default)(CircleElement, [{
    key: "path",
    value: function path(ctx) {
      var cx = this.getAttribute('cx').getPixels('x');
      var cy = this.getAttribute('cy').getPixels('y');
      var r = this.getAttribute('r').getPixels();

      if (ctx && r > 0) {
        ctx.beginPath();
        ctx.arc(cx, cy, r, 0, Math.PI * 2, false);
        ctx.closePath();
      }

      return new BoundingBox(cx - r, cy - r, cx + r, cy + r);
    }
  }, {
    key: "getMarkers",
    value: function getMarkers() {
      return null;
    }
  }]);

  return CircleElement;
}(PathElement);

function _createSuper$d(Derived) {
  var hasNativeReflectConstruct = _isNativeReflectConstruct$d();

  return function _createSuperInternal() {
    var Super = (0,_babel_runtime_corejs3_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_29__.default)(Derived),
        result;

    if (hasNativeReflectConstruct) {
      var NewTarget = (0,_babel_runtime_corejs3_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_29__.default)(this).constructor;

      result = _babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default()(Super, arguments, NewTarget);
    } else {
      result = Super.apply(this, arguments);
    }

    return (0,_babel_runtime_corejs3_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_28__.default)(this, result);
  };
}

function _isNativeReflectConstruct$d() {
  if (typeof Reflect === "undefined" || !(_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default())) return false;
  if ((_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default().sham)) return false;
  if (typeof Proxy === "function") return true;

  try {
    Date.prototype.toString.call(_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default()(Date, [], function () {}));
    return true;
  } catch (e) {
    return false;
  }
}

var EllipseElement = /*#__PURE__*/function (_PathElement) {
  (0,_babel_runtime_corejs3_helpers_inherits__WEBPACK_IMPORTED_MODULE_27__.default)(EllipseElement, _PathElement);

  var _super = _createSuper$d(EllipseElement);

  function EllipseElement() {
    var _this;

    (0,_babel_runtime_corejs3_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_15__.default)(this, EllipseElement);

    _this = _super.apply(this, arguments);
    _this.type = 'ellipse';
    return _this;
  }

  (0,_babel_runtime_corejs3_helpers_createClass__WEBPACK_IMPORTED_MODULE_16__.default)(EllipseElement, [{
    key: "path",
    value: function path(ctx) {
      var KAPPA = 4 * ((Math.sqrt(2) - 1) / 3);
      var rx = this.getAttribute('rx').getPixels('x');
      var ry = this.getAttribute('ry').getPixels('y');
      var cx = this.getAttribute('cx').getPixels('x');
      var cy = this.getAttribute('cy').getPixels('y');

      if (ctx && rx > 0 && ry > 0) {
        ctx.beginPath();
        ctx.moveTo(cx + rx, cy);
        ctx.bezierCurveTo(cx + rx, cy + KAPPA * ry, cx + KAPPA * rx, cy + ry, cx, cy + ry);
        ctx.bezierCurveTo(cx - KAPPA * rx, cy + ry, cx - rx, cy + KAPPA * ry, cx - rx, cy);
        ctx.bezierCurveTo(cx - rx, cy - KAPPA * ry, cx - KAPPA * rx, cy - ry, cx, cy - ry);
        ctx.bezierCurveTo(cx + KAPPA * rx, cy - ry, cx + rx, cy - KAPPA * ry, cx + rx, cy);
        ctx.closePath();
      }

      return new BoundingBox(cx - rx, cy - ry, cx + rx, cy + ry);
    }
  }, {
    key: "getMarkers",
    value: function getMarkers() {
      return null;
    }
  }]);

  return EllipseElement;
}(PathElement);

function _createSuper$e(Derived) {
  var hasNativeReflectConstruct = _isNativeReflectConstruct$e();

  return function _createSuperInternal() {
    var Super = (0,_babel_runtime_corejs3_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_29__.default)(Derived),
        result;

    if (hasNativeReflectConstruct) {
      var NewTarget = (0,_babel_runtime_corejs3_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_29__.default)(this).constructor;

      result = _babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default()(Super, arguments, NewTarget);
    } else {
      result = Super.apply(this, arguments);
    }

    return (0,_babel_runtime_corejs3_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_28__.default)(this, result);
  };
}

function _isNativeReflectConstruct$e() {
  if (typeof Reflect === "undefined" || !(_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default())) return false;
  if ((_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default().sham)) return false;
  if (typeof Proxy === "function") return true;

  try {
    Date.prototype.toString.call(_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default()(Date, [], function () {}));
    return true;
  } catch (e) {
    return false;
  }
}

var LineElement = /*#__PURE__*/function (_PathElement) {
  (0,_babel_runtime_corejs3_helpers_inherits__WEBPACK_IMPORTED_MODULE_27__.default)(LineElement, _PathElement);

  var _super = _createSuper$e(LineElement);

  function LineElement() {
    var _this;

    (0,_babel_runtime_corejs3_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_15__.default)(this, LineElement);

    _this = _super.apply(this, arguments);
    _this.type = 'line';
    return _this;
  }

  (0,_babel_runtime_corejs3_helpers_createClass__WEBPACK_IMPORTED_MODULE_16__.default)(LineElement, [{
    key: "getPoints",
    value: function getPoints() {
      return [new Point(this.getAttribute('x1').getPixels('x'), this.getAttribute('y1').getPixels('y')), new Point(this.getAttribute('x2').getPixels('x'), this.getAttribute('y2').getPixels('y'))];
    }
  }, {
    key: "path",
    value: function path(ctx) {
      var _this$getPoints = this.getPoints(),
          _this$getPoints2 = (0,_babel_runtime_corejs3_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_3__.default)(_this$getPoints, 2),
          _this$getPoints2$ = _this$getPoints2[0],
          x0 = _this$getPoints2$.x,
          y0 = _this$getPoints2$.y,
          _this$getPoints2$2 = _this$getPoints2[1],
          x1 = _this$getPoints2$2.x,
          y1 = _this$getPoints2$2.y;

      if (ctx) {
        ctx.beginPath();
        ctx.moveTo(x0, y0);
        ctx.lineTo(x1, y1);
      }

      return new BoundingBox(x0, y0, x1, y1);
    }
  }, {
    key: "getMarkers",
    value: function getMarkers() {
      var _this$getPoints3 = this.getPoints(),
          _this$getPoints4 = (0,_babel_runtime_corejs3_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_3__.default)(_this$getPoints3, 2),
          p0 = _this$getPoints4[0],
          p1 = _this$getPoints4[1];

      var a = p0.angleTo(p1);
      return [[p0, a], [p1, a]];
    }
  }]);

  return LineElement;
}(PathElement);

function _createSuper$f(Derived) {
  var hasNativeReflectConstruct = _isNativeReflectConstruct$f();

  return function _createSuperInternal() {
    var Super = (0,_babel_runtime_corejs3_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_29__.default)(Derived),
        result;

    if (hasNativeReflectConstruct) {
      var NewTarget = (0,_babel_runtime_corejs3_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_29__.default)(this).constructor;

      result = _babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default()(Super, arguments, NewTarget);
    } else {
      result = Super.apply(this, arguments);
    }

    return (0,_babel_runtime_corejs3_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_28__.default)(this, result);
  };
}

function _isNativeReflectConstruct$f() {
  if (typeof Reflect === "undefined" || !(_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default())) return false;
  if ((_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default().sham)) return false;
  if (typeof Proxy === "function") return true;

  try {
    Date.prototype.toString.call(_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default()(Date, [], function () {}));
    return true;
  } catch (e) {
    return false;
  }
}

var PolylineElement = /*#__PURE__*/function (_PathElement) {
  (0,_babel_runtime_corejs3_helpers_inherits__WEBPACK_IMPORTED_MODULE_27__.default)(PolylineElement, _PathElement);

  var _super = _createSuper$f(PolylineElement);

  function PolylineElement(document, node, captureTextNodes) {
    var _this;

    (0,_babel_runtime_corejs3_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_15__.default)(this, PolylineElement);

    _this = _super.call(this, document, node, captureTextNodes);
    _this.type = 'polyline';
    _this.points = [];
    _this.points = Point.parsePath(_this.getAttribute('points').getString());
    return _this;
  }

  (0,_babel_runtime_corejs3_helpers_createClass__WEBPACK_IMPORTED_MODULE_16__.default)(PolylineElement, [{
    key: "path",
    value: function path(ctx) {
      var points = this.points;

      var _points = (0,_babel_runtime_corejs3_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_3__.default)(points, 1),
          _points$ = _points[0],
          x0 = _points$.x,
          y0 = _points$.y;

      var boundingBox = new BoundingBox(x0, y0);

      if (ctx) {
        ctx.beginPath();
        ctx.moveTo(x0, y0);
      }

      _babel_runtime_corejs3_core_js_stable_instance_for_each__WEBPACK_IMPORTED_MODULE_7___default()(points).call(points, function (_ref) {
        var x = _ref.x,
            y = _ref.y;
        boundingBox.addPoint(x, y);

        if (ctx) {
          ctx.lineTo(x, y);
        }
      });

      return boundingBox;
    }
  }, {
    key: "getMarkers",
    value: function getMarkers() {
      var points = this.points;
      var lastIndex = points.length - 1;
      var markers = [];

      _babel_runtime_corejs3_core_js_stable_instance_for_each__WEBPACK_IMPORTED_MODULE_7___default()(points).call(points, function (point, i) {
        if (i === lastIndex) {
          return;
        }

        markers.push([point, point.angleTo(points[i + 1])]);
      });

      if (markers.length > 0) {
        markers.push([points[points.length - 1], markers[markers.length - 1][1]]);
      }

      return markers;
    }
  }]);

  return PolylineElement;
}(PathElement);

function _createSuper$g(Derived) {
  var hasNativeReflectConstruct = _isNativeReflectConstruct$g();

  return function _createSuperInternal() {
    var Super = (0,_babel_runtime_corejs3_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_29__.default)(Derived),
        result;

    if (hasNativeReflectConstruct) {
      var NewTarget = (0,_babel_runtime_corejs3_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_29__.default)(this).constructor;

      result = _babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default()(Super, arguments, NewTarget);
    } else {
      result = Super.apply(this, arguments);
    }

    return (0,_babel_runtime_corejs3_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_28__.default)(this, result);
  };
}

function _isNativeReflectConstruct$g() {
  if (typeof Reflect === "undefined" || !(_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default())) return false;
  if ((_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default().sham)) return false;
  if (typeof Proxy === "function") return true;

  try {
    Date.prototype.toString.call(_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default()(Date, [], function () {}));
    return true;
  } catch (e) {
    return false;
  }
}

var PolygonElement = /*#__PURE__*/function (_PolylineElement) {
  (0,_babel_runtime_corejs3_helpers_inherits__WEBPACK_IMPORTED_MODULE_27__.default)(PolygonElement, _PolylineElement);

  var _super = _createSuper$g(PolygonElement);

  function PolygonElement() {
    var _this;

    (0,_babel_runtime_corejs3_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_15__.default)(this, PolygonElement);

    _this = _super.apply(this, arguments);
    _this.type = 'polygon';
    return _this;
  }

  (0,_babel_runtime_corejs3_helpers_createClass__WEBPACK_IMPORTED_MODULE_16__.default)(PolygonElement, [{
    key: "path",
    value: function path(ctx) {
      var boundingBox = (0,_babel_runtime_corejs3_helpers_get__WEBPACK_IMPORTED_MODULE_36__.default)((0,_babel_runtime_corejs3_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_29__.default)(PolygonElement.prototype), "path", this).call(this, ctx);

      var _this$points = (0,_babel_runtime_corejs3_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_3__.default)(this.points, 1),
          _this$points$ = _this$points[0],
          x = _this$points$.x,
          y = _this$points$.y;

      if (ctx) {
        ctx.lineTo(x, y);
        ctx.closePath();
      }

      return boundingBox;
    }
  }]);

  return PolygonElement;
}(PolylineElement);

function _createSuper$h(Derived) {
  var hasNativeReflectConstruct = _isNativeReflectConstruct$h();

  return function _createSuperInternal() {
    var Super = (0,_babel_runtime_corejs3_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_29__.default)(Derived),
        result;

    if (hasNativeReflectConstruct) {
      var NewTarget = (0,_babel_runtime_corejs3_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_29__.default)(this).constructor;

      result = _babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default()(Super, arguments, NewTarget);
    } else {
      result = Super.apply(this, arguments);
    }

    return (0,_babel_runtime_corejs3_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_28__.default)(this, result);
  };
}

function _isNativeReflectConstruct$h() {
  if (typeof Reflect === "undefined" || !(_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default())) return false;
  if ((_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default().sham)) return false;
  if (typeof Proxy === "function") return true;

  try {
    Date.prototype.toString.call(_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default()(Date, [], function () {}));
    return true;
  } catch (e) {
    return false;
  }
}

var PatternElement = /*#__PURE__*/function (_Element) {
  (0,_babel_runtime_corejs3_helpers_inherits__WEBPACK_IMPORTED_MODULE_27__.default)(PatternElement, _Element);

  var _super = _createSuper$h(PatternElement);

  function PatternElement() {
    var _this;

    (0,_babel_runtime_corejs3_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_15__.default)(this, PatternElement);

    _this = _super.apply(this, arguments);
    _this.type = 'pattern';
    return _this;
  }

  (0,_babel_runtime_corejs3_helpers_createClass__WEBPACK_IMPORTED_MODULE_16__.default)(PatternElement, [{
    key: "createPattern",
    value: function createPattern(ctx, _, parentOpacityProp) {
      var width = this.getStyle('width').getPixels('x', true);
      var height = this.getStyle('height').getPixels('y', true); // render me using a temporary svg element

      var patternSvg = new SVGElement(this.document, null);
      patternSvg.attributes.viewBox = new Property(this.document, 'viewBox', this.getAttribute('viewBox').getValue());
      patternSvg.attributes.width = new Property(this.document, 'width', "".concat(width, "px"));
      patternSvg.attributes.height = new Property(this.document, 'height', "".concat(height, "px"));
      patternSvg.attributes.transform = new Property(this.document, 'transform', this.getAttribute('patternTransform').getValue());
      patternSvg.children = this.children;
      var patternCanvas = this.document.createCanvas(width, height);
      var patternCtx = patternCanvas.getContext('2d');
      var xAttr = this.getAttribute('x');
      var yAttr = this.getAttribute('y');

      if (xAttr.hasValue() && yAttr.hasValue()) {
        patternCtx.translate(xAttr.getPixels('x', true), yAttr.getPixels('y', true));
      }

      if (parentOpacityProp.hasValue()) {
        this.styles['fill-opacity'] = parentOpacityProp;
      } else {
        _babel_runtime_corejs3_core_js_stable_reflect_delete_property__WEBPACK_IMPORTED_MODULE_39___default()(this.styles, 'fill-opacity');
      } // render 3x3 grid so when we transform there's no white space on edges


      for (var x = -1; x <= 1; x++) {
        for (var y = -1; y <= 1; y++) {
          patternCtx.save();
          patternSvg.attributes.x = new Property(this.document, 'x', x * patternCanvas.width);
          patternSvg.attributes.y = new Property(this.document, 'y', y * patternCanvas.height);
          patternSvg.render(patternCtx);
          patternCtx.restore();
        }
      }

      var pattern = ctx.createPattern(patternCanvas, 'repeat');
      return pattern;
    }
  }]);

  return PatternElement;
}(Element);

function _createSuper$i(Derived) {
  var hasNativeReflectConstruct = _isNativeReflectConstruct$i();

  return function _createSuperInternal() {
    var Super = (0,_babel_runtime_corejs3_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_29__.default)(Derived),
        result;

    if (hasNativeReflectConstruct) {
      var NewTarget = (0,_babel_runtime_corejs3_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_29__.default)(this).constructor;

      result = _babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default()(Super, arguments, NewTarget);
    } else {
      result = Super.apply(this, arguments);
    }

    return (0,_babel_runtime_corejs3_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_28__.default)(this, result);
  };
}

function _isNativeReflectConstruct$i() {
  if (typeof Reflect === "undefined" || !(_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default())) return false;
  if ((_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default().sham)) return false;
  if (typeof Proxy === "function") return true;

  try {
    Date.prototype.toString.call(_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default()(Date, [], function () {}));
    return true;
  } catch (e) {
    return false;
  }
}

var MarkerElement = /*#__PURE__*/function (_Element) {
  (0,_babel_runtime_corejs3_helpers_inherits__WEBPACK_IMPORTED_MODULE_27__.default)(MarkerElement, _Element);

  var _super = _createSuper$i(MarkerElement);

  function MarkerElement() {
    var _this;

    (0,_babel_runtime_corejs3_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_15__.default)(this, MarkerElement);

    _this = _super.apply(this, arguments);
    _this.type = 'marker';
    return _this;
  }

  (0,_babel_runtime_corejs3_helpers_createClass__WEBPACK_IMPORTED_MODULE_16__.default)(MarkerElement, [{
    key: "render",
    value: function render(ctx, point, angle) {
      if (!point) {
        return;
      }

      var x = point.x,
          y = point.y;
      var orient = this.getAttribute('orient').getValue('auto');
      var markerUnits = this.getAttribute('markerUnits').getValue('strokeWidth');
      ctx.translate(x, y);

      if (orient === 'auto') {
        ctx.rotate(angle);
      }

      if (markerUnits === 'strokeWidth') {
        ctx.scale(ctx.lineWidth, ctx.lineWidth);
      }

      ctx.save(); // render me using a temporary svg element

      var markerSvg = new SVGElement(this.document, null);
      markerSvg.type = this.type;
      markerSvg.attributes.viewBox = new Property(this.document, 'viewBox', this.getAttribute('viewBox').getValue());
      markerSvg.attributes.refX = new Property(this.document, 'refX', this.getAttribute('refX').getValue());
      markerSvg.attributes.refY = new Property(this.document, 'refY', this.getAttribute('refY').getValue());
      markerSvg.attributes.width = new Property(this.document, 'width', this.getAttribute('markerWidth').getValue());
      markerSvg.attributes.height = new Property(this.document, 'height', this.getAttribute('markerHeight').getValue());
      markerSvg.attributes.overflow = new Property(this.document, 'overflow', this.getAttribute('overflow').getValue());
      markerSvg.attributes.fill = new Property(this.document, 'fill', this.getAttribute('fill').getColor('black'));
      markerSvg.attributes.stroke = new Property(this.document, 'stroke', this.getAttribute('stroke').getValue('none'));
      markerSvg.children = this.children;
      markerSvg.render(ctx);
      ctx.restore();

      if (markerUnits === 'strokeWidth') {
        ctx.scale(1 / ctx.lineWidth, 1 / ctx.lineWidth);
      }

      if (orient === 'auto') {
        ctx.rotate(-angle);
      }

      ctx.translate(-x, -y);
    }
  }]);

  return MarkerElement;
}(Element);

function _createSuper$j(Derived) {
  var hasNativeReflectConstruct = _isNativeReflectConstruct$j();

  return function _createSuperInternal() {
    var Super = (0,_babel_runtime_corejs3_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_29__.default)(Derived),
        result;

    if (hasNativeReflectConstruct) {
      var NewTarget = (0,_babel_runtime_corejs3_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_29__.default)(this).constructor;

      result = _babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default()(Super, arguments, NewTarget);
    } else {
      result = Super.apply(this, arguments);
    }

    return (0,_babel_runtime_corejs3_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_28__.default)(this, result);
  };
}

function _isNativeReflectConstruct$j() {
  if (typeof Reflect === "undefined" || !(_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default())) return false;
  if ((_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default().sham)) return false;
  if (typeof Proxy === "function") return true;

  try {
    Date.prototype.toString.call(_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default()(Date, [], function () {}));
    return true;
  } catch (e) {
    return false;
  }
}

var DefsElement = /*#__PURE__*/function (_Element) {
  (0,_babel_runtime_corejs3_helpers_inherits__WEBPACK_IMPORTED_MODULE_27__.default)(DefsElement, _Element);

  var _super = _createSuper$j(DefsElement);

  function DefsElement() {
    var _this;

    (0,_babel_runtime_corejs3_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_15__.default)(this, DefsElement);

    _this = _super.apply(this, arguments);
    _this.type = 'defs';
    return _this;
  }

  (0,_babel_runtime_corejs3_helpers_createClass__WEBPACK_IMPORTED_MODULE_16__.default)(DefsElement, [{
    key: "render",
    value: function render() {// NOOP
    }
  }]);

  return DefsElement;
}(Element);

function _createSuper$k(Derived) {
  var hasNativeReflectConstruct = _isNativeReflectConstruct$k();

  return function _createSuperInternal() {
    var Super = (0,_babel_runtime_corejs3_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_29__.default)(Derived),
        result;

    if (hasNativeReflectConstruct) {
      var NewTarget = (0,_babel_runtime_corejs3_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_29__.default)(this).constructor;

      result = _babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default()(Super, arguments, NewTarget);
    } else {
      result = Super.apply(this, arguments);
    }

    return (0,_babel_runtime_corejs3_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_28__.default)(this, result);
  };
}

function _isNativeReflectConstruct$k() {
  if (typeof Reflect === "undefined" || !(_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default())) return false;
  if ((_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default().sham)) return false;
  if (typeof Proxy === "function") return true;

  try {
    Date.prototype.toString.call(_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default()(Date, [], function () {}));
    return true;
  } catch (e) {
    return false;
  }
}

var GElement = /*#__PURE__*/function (_RenderedElement) {
  (0,_babel_runtime_corejs3_helpers_inherits__WEBPACK_IMPORTED_MODULE_27__.default)(GElement, _RenderedElement);

  var _super = _createSuper$k(GElement);

  function GElement() {
    var _this;

    (0,_babel_runtime_corejs3_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_15__.default)(this, GElement);

    _this = _super.apply(this, arguments);
    _this.type = 'g';
    return _this;
  }

  (0,_babel_runtime_corejs3_helpers_createClass__WEBPACK_IMPORTED_MODULE_16__.default)(GElement, [{
    key: "getBoundingBox",
    value: function getBoundingBox(ctx) {
      var _context;

      var boundingBox = new BoundingBox();

      _babel_runtime_corejs3_core_js_stable_instance_for_each__WEBPACK_IMPORTED_MODULE_7___default()(_context = this.children).call(_context, function (child) {
        boundingBox.addBoundingBox(child.getBoundingBox(ctx));
      });

      return boundingBox;
    }
  }]);

  return GElement;
}(RenderedElement);

function _createSuper$l(Derived) {
  var hasNativeReflectConstruct = _isNativeReflectConstruct$l();

  return function _createSuperInternal() {
    var Super = (0,_babel_runtime_corejs3_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_29__.default)(Derived),
        result;

    if (hasNativeReflectConstruct) {
      var NewTarget = (0,_babel_runtime_corejs3_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_29__.default)(this).constructor;

      result = _babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default()(Super, arguments, NewTarget);
    } else {
      result = Super.apply(this, arguments);
    }

    return (0,_babel_runtime_corejs3_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_28__.default)(this, result);
  };
}

function _isNativeReflectConstruct$l() {
  if (typeof Reflect === "undefined" || !(_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default())) return false;
  if ((_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default().sham)) return false;
  if (typeof Proxy === "function") return true;

  try {
    Date.prototype.toString.call(_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default()(Date, [], function () {}));
    return true;
  } catch (e) {
    return false;
  }
}

var GradientElement = /*#__PURE__*/function (_Element) {
  (0,_babel_runtime_corejs3_helpers_inherits__WEBPACK_IMPORTED_MODULE_27__.default)(GradientElement, _Element);

  var _super = _createSuper$l(GradientElement);

  function GradientElement(document, node, captureTextNodes) {
    var _this;

    (0,_babel_runtime_corejs3_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_15__.default)(this, GradientElement);

    _this = _super.call(this, document, node, captureTextNodes);
    _this.attributesToInherit = ['gradientUnits'];
    _this.stops = [];

    var _assertThisInitialize = (0,_babel_runtime_corejs3_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_40__.default)(_this),
        stops = _assertThisInitialize.stops,
        children = _assertThisInitialize.children;

    _babel_runtime_corejs3_core_js_stable_instance_for_each__WEBPACK_IMPORTED_MODULE_7___default()(children).call(children, function (child) {
      if (child.type === 'stop') {
        stops.push(child);
      }
    });

    return _this;
  }

  (0,_babel_runtime_corejs3_helpers_createClass__WEBPACK_IMPORTED_MODULE_16__.default)(GradientElement, [{
    key: "getGradientUnits",
    value: function getGradientUnits() {
      return this.getAttribute('gradientUnits').getString('objectBoundingBox');
    }
  }, {
    key: "createGradient",
    value: function createGradient(ctx, element, parentOpacityProp) {
      var _this2 = this; // tslint:disable-next-line: no-this-assignment


      var stopsContainer = this;

      if (this.getHrefAttribute().hasValue()) {
        stopsContainer = this.getHrefAttribute().getDefinition();
        this.inheritStopContainer(stopsContainer);
      }

      var _stopsContainer = stopsContainer,
          stops = _stopsContainer.stops;
      var gradient = this.getGradient(ctx, element);

      if (!gradient) {
        return this.addParentOpacity(parentOpacityProp, stops[stops.length - 1].color);
      }

      _babel_runtime_corejs3_core_js_stable_instance_for_each__WEBPACK_IMPORTED_MODULE_7___default()(stops).call(stops, function (stop) {
        gradient.addColorStop(stop.offset, _this2.addParentOpacity(parentOpacityProp, stop.color));
      });

      if (this.getAttribute('gradientTransform').hasValue()) {
        // render as transformed pattern on temporary canvas
        var document = this.document;
        var _document$screen = document.screen,
            MAX_VIRTUAL_PIXELS = _document$screen.MAX_VIRTUAL_PIXELS,
            viewPort = _document$screen.viewPort;

        var _viewPort$viewPorts = (0,_babel_runtime_corejs3_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_3__.default)(viewPort.viewPorts, 1),
            rootView = _viewPort$viewPorts[0];

        var rect = new RectElement(document, null);
        rect.attributes.x = new Property(document, 'x', -MAX_VIRTUAL_PIXELS / 3.0);
        rect.attributes.y = new Property(document, 'y', -MAX_VIRTUAL_PIXELS / 3.0);
        rect.attributes.width = new Property(document, 'width', MAX_VIRTUAL_PIXELS);
        rect.attributes.height = new Property(document, 'height', MAX_VIRTUAL_PIXELS);
        var group = new GElement(document, null);
        group.attributes.transform = new Property(document, 'transform', this.getAttribute('gradientTransform').getValue());
        group.children = [rect];
        var patternSvg = new SVGElement(document, null);
        patternSvg.attributes.x = new Property(document, 'x', 0);
        patternSvg.attributes.y = new Property(document, 'y', 0);
        patternSvg.attributes.width = new Property(document, 'width', rootView.width);
        patternSvg.attributes.height = new Property(document, 'height', rootView.height);
        patternSvg.children = [group];
        var patternCanvas = document.createCanvas(rootView.width, rootView.height);
        var patternCtx = patternCanvas.getContext('2d');
        patternCtx.fillStyle = gradient;
        patternSvg.render(patternCtx);
        return patternCtx.createPattern(patternCanvas, 'no-repeat');
      }

      return gradient;
    }
  }, {
    key: "inheritStopContainer",
    value: function inheritStopContainer(stopsContainer) {
      var _context,
          _this3 = this;

      _babel_runtime_corejs3_core_js_stable_instance_for_each__WEBPACK_IMPORTED_MODULE_7___default()(_context = this.attributesToInherit).call(_context, function (attributeToInherit) {
        if (!_this3.getAttribute(attributeToInherit).hasValue() && stopsContainer.getAttribute(attributeToInherit).hasValue()) {
          _this3.getAttribute(attributeToInherit, true).setValue(stopsContainer.getAttribute(attributeToInherit).getValue());
        }
      });
    }
  }, {
    key: "addParentOpacity",
    value: function addParentOpacity(parentOpacityProp, color) {
      if (parentOpacityProp.hasValue()) {
        var colorProp = new Property(this.document, 'color', color);
        return colorProp.addOpacity(parentOpacityProp).getColor();
      }

      return color;
    }
  }]);

  return GradientElement;
}(Element);

function _createSuper$m(Derived) {
  var hasNativeReflectConstruct = _isNativeReflectConstruct$m();

  return function _createSuperInternal() {
    var Super = (0,_babel_runtime_corejs3_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_29__.default)(Derived),
        result;

    if (hasNativeReflectConstruct) {
      var NewTarget = (0,_babel_runtime_corejs3_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_29__.default)(this).constructor;

      result = _babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default()(Super, arguments, NewTarget);
    } else {
      result = Super.apply(this, arguments);
    }

    return (0,_babel_runtime_corejs3_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_28__.default)(this, result);
  };
}

function _isNativeReflectConstruct$m() {
  if (typeof Reflect === "undefined" || !(_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default())) return false;
  if ((_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default().sham)) return false;
  if (typeof Proxy === "function") return true;

  try {
    Date.prototype.toString.call(_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default()(Date, [], function () {}));
    return true;
  } catch (e) {
    return false;
  }
}

var LinearGradientElement = /*#__PURE__*/function (_GradientElement) {
  (0,_babel_runtime_corejs3_helpers_inherits__WEBPACK_IMPORTED_MODULE_27__.default)(LinearGradientElement, _GradientElement);

  var _super = _createSuper$m(LinearGradientElement);

  function LinearGradientElement(document, node, captureTextNodes) {
    var _this;

    (0,_babel_runtime_corejs3_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_15__.default)(this, LinearGradientElement);

    _this = _super.call(this, document, node, captureTextNodes);
    _this.type = 'linearGradient';

    _this.attributesToInherit.push('x1', 'y1', 'x2', 'y2');

    return _this;
  }

  (0,_babel_runtime_corejs3_helpers_createClass__WEBPACK_IMPORTED_MODULE_16__.default)(LinearGradientElement, [{
    key: "getGradient",
    value: function getGradient(ctx, element) {
      var isBoundingBoxUnits = this.getGradientUnits() === 'objectBoundingBox';
      var boundingBox = isBoundingBoxUnits ? element.getBoundingBox(ctx) : null;

      if (isBoundingBoxUnits && !boundingBox) {
        return null;
      }

      if (!this.getAttribute('x1').hasValue() && !this.getAttribute('y1').hasValue() && !this.getAttribute('x2').hasValue() && !this.getAttribute('y2').hasValue()) {
        this.getAttribute('x1', true).setValue(0);
        this.getAttribute('y1', true).setValue(0);
        this.getAttribute('x2', true).setValue(1);
        this.getAttribute('y2', true).setValue(0);
      }

      var x1 = isBoundingBoxUnits ? boundingBox.x + boundingBox.width * this.getAttribute('x1').getNumber() : this.getAttribute('x1').getPixels('x');
      var y1 = isBoundingBoxUnits ? boundingBox.y + boundingBox.height * this.getAttribute('y1').getNumber() : this.getAttribute('y1').getPixels('y');
      var x2 = isBoundingBoxUnits ? boundingBox.x + boundingBox.width * this.getAttribute('x2').getNumber() : this.getAttribute('x2').getPixels('x');
      var y2 = isBoundingBoxUnits ? boundingBox.y + boundingBox.height * this.getAttribute('y2').getNumber() : this.getAttribute('y2').getPixels('y');

      if (x1 === x2 && y1 === y2) {
        return null;
      }

      return ctx.createLinearGradient(x1, y1, x2, y2);
    }
  }]);

  return LinearGradientElement;
}(GradientElement);

function _createSuper$n(Derived) {
  var hasNativeReflectConstruct = _isNativeReflectConstruct$n();

  return function _createSuperInternal() {
    var Super = (0,_babel_runtime_corejs3_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_29__.default)(Derived),
        result;

    if (hasNativeReflectConstruct) {
      var NewTarget = (0,_babel_runtime_corejs3_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_29__.default)(this).constructor;

      result = _babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default()(Super, arguments, NewTarget);
    } else {
      result = Super.apply(this, arguments);
    }

    return (0,_babel_runtime_corejs3_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_28__.default)(this, result);
  };
}

function _isNativeReflectConstruct$n() {
  if (typeof Reflect === "undefined" || !(_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default())) return false;
  if ((_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default().sham)) return false;
  if (typeof Proxy === "function") return true;

  try {
    Date.prototype.toString.call(_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default()(Date, [], function () {}));
    return true;
  } catch (e) {
    return false;
  }
}

var RadialGradientElement = /*#__PURE__*/function (_GradientElement) {
  (0,_babel_runtime_corejs3_helpers_inherits__WEBPACK_IMPORTED_MODULE_27__.default)(RadialGradientElement, _GradientElement);

  var _super = _createSuper$n(RadialGradientElement);

  function RadialGradientElement(document, node, captureTextNodes) {
    var _this;

    (0,_babel_runtime_corejs3_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_15__.default)(this, RadialGradientElement);

    _this = _super.call(this, document, node, captureTextNodes);
    _this.type = 'radialGradient';

    _this.attributesToInherit.push('cx', 'cy', 'r', 'fx', 'fy', 'fr');

    return _this;
  }

  (0,_babel_runtime_corejs3_helpers_createClass__WEBPACK_IMPORTED_MODULE_16__.default)(RadialGradientElement, [{
    key: "getGradient",
    value: function getGradient(ctx, element) {
      var isBoundingBoxUnits = this.getGradientUnits() === 'objectBoundingBox';
      var boundingBox = element.getBoundingBox(ctx);

      if (isBoundingBoxUnits && !boundingBox) {
        return null;
      }

      if (!this.getAttribute('cx').hasValue()) {
        this.getAttribute('cx', true).setValue('50%');
      }

      if (!this.getAttribute('cy').hasValue()) {
        this.getAttribute('cy', true).setValue('50%');
      }

      if (!this.getAttribute('r').hasValue()) {
        this.getAttribute('r', true).setValue('50%');
      }

      var cx = isBoundingBoxUnits ? boundingBox.x + boundingBox.width * this.getAttribute('cx').getNumber() : this.getAttribute('cx').getPixels('x');
      var cy = isBoundingBoxUnits ? boundingBox.y + boundingBox.height * this.getAttribute('cy').getNumber() : this.getAttribute('cy').getPixels('y');
      var fx = cx;
      var fy = cy;

      if (this.getAttribute('fx').hasValue()) {
        fx = isBoundingBoxUnits ? boundingBox.x + boundingBox.width * this.getAttribute('fx').getNumber() : this.getAttribute('fx').getPixels('x');
      }

      if (this.getAttribute('fy').hasValue()) {
        fy = isBoundingBoxUnits ? boundingBox.y + boundingBox.height * this.getAttribute('fy').getNumber() : this.getAttribute('fy').getPixels('y');
      }

      var r = isBoundingBoxUnits ? (boundingBox.width + boundingBox.height) / 2.0 * this.getAttribute('r').getNumber() : this.getAttribute('r').getPixels();
      var fr = this.getAttribute('fr').getPixels();
      return ctx.createRadialGradient(fx, fy, fr, cx, cy, r);
    }
  }]);

  return RadialGradientElement;
}(GradientElement);

function _createSuper$o(Derived) {
  var hasNativeReflectConstruct = _isNativeReflectConstruct$o();

  return function _createSuperInternal() {
    var Super = (0,_babel_runtime_corejs3_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_29__.default)(Derived),
        result;

    if (hasNativeReflectConstruct) {
      var NewTarget = (0,_babel_runtime_corejs3_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_29__.default)(this).constructor;

      result = _babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default()(Super, arguments, NewTarget);
    } else {
      result = Super.apply(this, arguments);
    }

    return (0,_babel_runtime_corejs3_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_28__.default)(this, result);
  };
}

function _isNativeReflectConstruct$o() {
  if (typeof Reflect === "undefined" || !(_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default())) return false;
  if ((_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default().sham)) return false;
  if (typeof Proxy === "function") return true;

  try {
    Date.prototype.toString.call(_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default()(Date, [], function () {}));
    return true;
  } catch (e) {
    return false;
  }
}

var StopElement = /*#__PURE__*/function (_Element) {
  (0,_babel_runtime_corejs3_helpers_inherits__WEBPACK_IMPORTED_MODULE_27__.default)(StopElement, _Element);

  var _super = _createSuper$o(StopElement);

  function StopElement(document, node, captureTextNodes) {
    var _this;

    (0,_babel_runtime_corejs3_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_15__.default)(this, StopElement);

    _this = _super.call(this, document, node, captureTextNodes);
    _this.type = 'stop';
    var offset = Math.max(0, Math.min(1, _this.getAttribute('offset').getNumber()));

    var stopOpacity = _this.getStyle('stop-opacity');

    var stopColor = _this.getStyle('stop-color', true);

    if (stopColor.getString() === '') {
      stopColor.setValue('#000');
    }

    if (stopOpacity.hasValue()) {
      stopColor = stopColor.addOpacity(stopOpacity);
    }

    _this.offset = offset;
    _this.color = stopColor.getColor();
    return _this;
  }

  return StopElement;
}(Element);

function _createSuper$p(Derived) {
  var hasNativeReflectConstruct = _isNativeReflectConstruct$p();

  return function _createSuperInternal() {
    var Super = (0,_babel_runtime_corejs3_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_29__.default)(Derived),
        result;

    if (hasNativeReflectConstruct) {
      var NewTarget = (0,_babel_runtime_corejs3_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_29__.default)(this).constructor;

      result = _babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default()(Super, arguments, NewTarget);
    } else {
      result = Super.apply(this, arguments);
    }

    return (0,_babel_runtime_corejs3_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_28__.default)(this, result);
  };
}

function _isNativeReflectConstruct$p() {
  if (typeof Reflect === "undefined" || !(_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default())) return false;
  if ((_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default().sham)) return false;
  if (typeof Proxy === "function") return true;

  try {
    Date.prototype.toString.call(_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default()(Date, [], function () {}));
    return true;
  } catch (e) {
    return false;
  }
}

var AnimateElement = /*#__PURE__*/function (_Element) {
  (0,_babel_runtime_corejs3_helpers_inherits__WEBPACK_IMPORTED_MODULE_27__.default)(AnimateElement, _Element);

  var _super = _createSuper$p(AnimateElement);

  function AnimateElement(document, node, captureTextNodes) {
    var _this;

    (0,_babel_runtime_corejs3_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_15__.default)(this, AnimateElement);

    _this = _super.call(this, document, node, captureTextNodes);
    _this.type = 'animate';
    _this.duration = 0;
    _this.initialValue = null;
    _this.initialUnits = '';
    _this.removed = false;
    _this.frozen = false;
    document.screen.animations.push((0,_babel_runtime_corejs3_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_40__.default)(_this));
    _this.begin = _this.getAttribute('begin').getMilliseconds();
    _this.maxDuration = _this.begin + _this.getAttribute('dur').getMilliseconds();
    _this.from = _this.getAttribute('from');
    _this.to = _this.getAttribute('to');
    _this.values = _this.getAttribute('values');

    if (_babel_runtime_corejs3_core_js_stable_instance_values__WEBPACK_IMPORTED_MODULE_41___default()(_this).hasValue()) {
      _babel_runtime_corejs3_core_js_stable_instance_values__WEBPACK_IMPORTED_MODULE_41___default()(_this).setValue(_babel_runtime_corejs3_core_js_stable_instance_values__WEBPACK_IMPORTED_MODULE_41___default()(_this).getString().split(';'));
    }

    return _this;
  }

  (0,_babel_runtime_corejs3_helpers_createClass__WEBPACK_IMPORTED_MODULE_16__.default)(AnimateElement, [{
    key: "getProperty",
    value: function getProperty() {
      var attributeType = this.getAttribute('attributeType').getString();
      var attributeName = this.getAttribute('attributeName').getString();

      if (attributeType === 'CSS') {
        return this.parent.getStyle(attributeName, true);
      }

      return this.parent.getAttribute(attributeName, true);
    }
  }, {
    key: "calcValue",
    value: function calcValue() {
      var _context;

      var initialUnits = this.initialUnits;

      var _this$getProgress = this.getProgress(),
          progress = _this$getProgress.progress,
          from = _this$getProgress.from,
          to = _this$getProgress.to; // tween value linearly


      var newValue = from.getNumber() + (to.getNumber() - from.getNumber()) * progress;

      if (initialUnits === '%') {
        newValue *= 100.0; // numValue() returns 0-1 whereas properties are 0-100
      }

      return _babel_runtime_corejs3_core_js_stable_instance_concat__WEBPACK_IMPORTED_MODULE_17___default()(_context = "".concat(newValue)).call(_context, initialUnits);
    }
  }, {
    key: "update",
    value: function update(delta) {
      var parent = this.parent;
      var prop = this.getProperty(); // set initial value

      if (!this.initialValue) {
        this.initialValue = prop.getString();
        this.initialUnits = prop.getUnits();
      } // if we're past the end time


      if (this.duration > this.maxDuration) {
        var fill = this.getAttribute('fill').getString('remove'); // loop for indefinitely repeating animations

        if (this.getAttribute('repeatCount').getString() === 'indefinite' || this.getAttribute('repeatDur').getString() === 'indefinite') {
          this.duration = 0;
        } else if (fill === 'freeze' && !this.frozen) {
          this.frozen = true;
          parent.animationFrozen = true;
          parent.animationFrozenValue = prop.getString();
        } else if (fill === 'remove' && !this.removed) {
          this.removed = true;
          prop.setValue(parent.animationFrozen ? parent.animationFrozenValue : this.initialValue);
          return true;
        }

        return false;
      }

      this.duration += delta; // if we're past the begin time

      var updated = false;

      if (this.begin < this.duration) {
        var newValue = this.calcValue(); // tween

        var typeAttr = this.getAttribute('type');

        if (typeAttr.hasValue()) {
          var _context2; // for transform, etc.


          var type = typeAttr.getString();
          newValue = _babel_runtime_corejs3_core_js_stable_instance_concat__WEBPACK_IMPORTED_MODULE_17___default()(_context2 = "".concat(type, "(")).call(_context2, newValue, ")");
        }

        prop.setValue(newValue);
        updated = true;
      }

      return updated;
    }
  }, {
    key: "getProgress",
    value: function getProgress() {
      var document = this.document,
          values = _babel_runtime_corejs3_core_js_stable_instance_values__WEBPACK_IMPORTED_MODULE_41___default()(this);

      var result = {
        progress: (this.duration - this.begin) / (this.maxDuration - this.begin)
      };

      if (values.hasValue()) {
        var p = result.progress * (values.getValue().length - 1);
        var lb = Math.floor(p);
        var ub = Math.ceil(p);
        result.from = new Property(document, 'from', _babel_runtime_corejs3_core_js_stable_parse_float__WEBPACK_IMPORTED_MODULE_1___default()(values.getValue()[lb]));
        result.to = new Property(document, 'to', _babel_runtime_corejs3_core_js_stable_parse_float__WEBPACK_IMPORTED_MODULE_1___default()(values.getValue()[ub]));
        result.progress = (p - lb) / (ub - lb);
      } else {
        result.from = this.from;
        result.to = this.to;
      }

      return result;
    }
  }]);

  return AnimateElement;
}(Element);

function _createSuper$q(Derived) {
  var hasNativeReflectConstruct = _isNativeReflectConstruct$q();

  return function _createSuperInternal() {
    var Super = (0,_babel_runtime_corejs3_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_29__.default)(Derived),
        result;

    if (hasNativeReflectConstruct) {
      var NewTarget = (0,_babel_runtime_corejs3_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_29__.default)(this).constructor;

      result = _babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default()(Super, arguments, NewTarget);
    } else {
      result = Super.apply(this, arguments);
    }

    return (0,_babel_runtime_corejs3_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_28__.default)(this, result);
  };
}

function _isNativeReflectConstruct$q() {
  if (typeof Reflect === "undefined" || !(_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default())) return false;
  if ((_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default().sham)) return false;
  if (typeof Proxy === "function") return true;

  try {
    Date.prototype.toString.call(_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default()(Date, [], function () {}));
    return true;
  } catch (e) {
    return false;
  }
}

var AnimateColorElement = /*#__PURE__*/function (_AnimateElement) {
  (0,_babel_runtime_corejs3_helpers_inherits__WEBPACK_IMPORTED_MODULE_27__.default)(AnimateColorElement, _AnimateElement);

  var _super = _createSuper$q(AnimateColorElement);

  function AnimateColorElement() {
    var _this;

    (0,_babel_runtime_corejs3_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_15__.default)(this, AnimateColorElement);

    _this = _super.apply(this, arguments);
    _this.type = 'animateColor';
    return _this;
  }

  (0,_babel_runtime_corejs3_helpers_createClass__WEBPACK_IMPORTED_MODULE_16__.default)(AnimateColorElement, [{
    key: "calcValue",
    value: function calcValue() {
      var _this$getProgress = this.getProgress(),
          progress = _this$getProgress.progress,
          from = _this$getProgress.from,
          to = _this$getProgress.to;

      var colorFrom = new (rgbcolor__WEBPACK_IMPORTED_MODULE_25___default())(from.getColor());
      var colorTo = new (rgbcolor__WEBPACK_IMPORTED_MODULE_25___default())(to.getColor());

      if (colorFrom.ok && colorTo.ok) {
        var _context, _context2; // tween color linearly


        var r = colorFrom.r + (colorTo.r - colorFrom.r) * progress;
        var g = colorFrom.g + (colorTo.g - colorFrom.g) * progress;
        var b = colorFrom.b + (colorTo.b - colorFrom.b) * progress; // ? alpha

        return _babel_runtime_corejs3_core_js_stable_instance_concat__WEBPACK_IMPORTED_MODULE_17___default()(_context = _babel_runtime_corejs3_core_js_stable_instance_concat__WEBPACK_IMPORTED_MODULE_17___default()(_context2 = "rgb(".concat(_babel_runtime_corejs3_core_js_stable_parse_int__WEBPACK_IMPORTED_MODULE_42___default()(r, 10), ", ")).call(_context2, _babel_runtime_corejs3_core_js_stable_parse_int__WEBPACK_IMPORTED_MODULE_42___default()(g, 10), ", ")).call(_context, _babel_runtime_corejs3_core_js_stable_parse_int__WEBPACK_IMPORTED_MODULE_42___default()(b, 10), ")");
      }

      return this.getAttribute('from').getColor();
    }
  }]);

  return AnimateColorElement;
}(AnimateElement);

function _createSuper$r(Derived) {
  var hasNativeReflectConstruct = _isNativeReflectConstruct$r();

  return function _createSuperInternal() {
    var Super = (0,_babel_runtime_corejs3_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_29__.default)(Derived),
        result;

    if (hasNativeReflectConstruct) {
      var NewTarget = (0,_babel_runtime_corejs3_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_29__.default)(this).constructor;

      result = _babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default()(Super, arguments, NewTarget);
    } else {
      result = Super.apply(this, arguments);
    }

    return (0,_babel_runtime_corejs3_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_28__.default)(this, result);
  };
}

function _isNativeReflectConstruct$r() {
  if (typeof Reflect === "undefined" || !(_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default())) return false;
  if ((_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default().sham)) return false;
  if (typeof Proxy === "function") return true;

  try {
    Date.prototype.toString.call(_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default()(Date, [], function () {}));
    return true;
  } catch (e) {
    return false;
  }
}

var AnimateTransformElement = /*#__PURE__*/function (_AnimateElement) {
  (0,_babel_runtime_corejs3_helpers_inherits__WEBPACK_IMPORTED_MODULE_27__.default)(AnimateTransformElement, _AnimateElement);

  var _super = _createSuper$r(AnimateTransformElement);

  function AnimateTransformElement() {
    var _this;

    (0,_babel_runtime_corejs3_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_15__.default)(this, AnimateTransformElement);

    _this = _super.apply(this, arguments);
    _this.type = 'animateTransform';
    return _this;
  }

  (0,_babel_runtime_corejs3_helpers_createClass__WEBPACK_IMPORTED_MODULE_16__.default)(AnimateTransformElement, [{
    key: "calcValue",
    value: function calcValue() {
      var _this$getProgress = this.getProgress(),
          progress = _this$getProgress.progress,
          from = _this$getProgress.from,
          to = _this$getProgress.to; // tween value linearly


      var transformFrom = toNumbers(from.getString());
      var transformTo = toNumbers(to.getString());

      var newValue = _babel_runtime_corejs3_core_js_stable_instance_map__WEBPACK_IMPORTED_MODULE_2___default()(transformFrom).call(transformFrom, function (from, i) {
        var to = transformTo[i];
        return from + (to - from) * progress;
      }).join(' ');

      return newValue;
    }
  }]);

  return AnimateTransformElement;
}(AnimateElement);

function _createForOfIteratorHelper(o, allowArrayLike) {
  var it;

  if (typeof (_babel_runtime_corejs3_core_js_stable_symbol__WEBPACK_IMPORTED_MODULE_46___default()) === "undefined" || _babel_runtime_corejs3_core_js_get_iterator_method__WEBPACK_IMPORTED_MODULE_45___default()(o) == null) {
    if (_babel_runtime_corejs3_core_js_stable_array_is_array__WEBPACK_IMPORTED_MODULE_44___default()(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") {
      if (it) o = it;
      var i = 0;

      var F = function F() {};

      return {
        s: F,
        n: function n() {
          if (i >= o.length) return {
            done: true
          };
          return {
            done: false,
            value: o[i++]
          };
        },
        e: function e(_e) {
          throw _e;
        },
        f: F
      };
    }

    throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
  }

  var normalCompletion = true,
      didErr = false,
      err;
  return {
    s: function s() {
      it = _babel_runtime_corejs3_core_js_get_iterator__WEBPACK_IMPORTED_MODULE_43___default()(o);
    },
    n: function n() {
      var step = it.next();
      normalCompletion = step.done;
      return step;
    },
    e: function e(_e2) {
      didErr = true;
      err = _e2;
    },
    f: function f() {
      try {
        if (!normalCompletion && it.return != null) it.return();
      } finally {
        if (didErr) throw err;
      }
    }
  };
}

function _unsupportedIterableToArray(o, minLen) {
  var _context;

  if (!o) return;
  if (typeof o === "string") return _arrayLikeToArray(o, minLen);

  var n = _babel_runtime_corejs3_core_js_stable_instance_slice__WEBPACK_IMPORTED_MODULE_47___default()(_context = Object.prototype.toString.call(o)).call(_context, 8, -1);

  if (n === "Object" && o.constructor) n = o.constructor.name;
  if (n === "Map" || n === "Set") return _babel_runtime_corejs3_core_js_stable_array_from__WEBPACK_IMPORTED_MODULE_33___default()(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);
}

function _arrayLikeToArray(arr, len) {
  if (len == null || len > arr.length) len = arr.length;

  for (var i = 0, arr2 = new Array(len); i < len; i++) {
    arr2[i] = arr[i];
  }

  return arr2;
}

function _createSuper$s(Derived) {
  var hasNativeReflectConstruct = _isNativeReflectConstruct$s();

  return function _createSuperInternal() {
    var Super = (0,_babel_runtime_corejs3_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_29__.default)(Derived),
        result;

    if (hasNativeReflectConstruct) {
      var NewTarget = (0,_babel_runtime_corejs3_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_29__.default)(this).constructor;

      result = _babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default()(Super, arguments, NewTarget);
    } else {
      result = Super.apply(this, arguments);
    }

    return (0,_babel_runtime_corejs3_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_28__.default)(this, result);
  };
}

function _isNativeReflectConstruct$s() {
  if (typeof Reflect === "undefined" || !(_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default())) return false;
  if ((_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default().sham)) return false;
  if (typeof Proxy === "function") return true;

  try {
    Date.prototype.toString.call(_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default()(Date, [], function () {}));
    return true;
  } catch (e) {
    return false;
  }
}

var FontElement = /*#__PURE__*/function (_Element) {
  (0,_babel_runtime_corejs3_helpers_inherits__WEBPACK_IMPORTED_MODULE_27__.default)(FontElement, _Element);

  var _super = _createSuper$s(FontElement);

  function FontElement(document, node, captureTextNodes) {
    var _this;

    (0,_babel_runtime_corejs3_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_15__.default)(this, FontElement);

    _this = _super.call(this, document, node, captureTextNodes);
    _this.type = 'font';
    _this.glyphs = {};
    _this.horizAdvX = _this.getAttribute('horiz-adv-x').getNumber();
    var definitions = document.definitions;

    var _assertThisInitialize = (0,_babel_runtime_corejs3_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_40__.default)(_this),
        children = _assertThisInitialize.children;

    var _iterator = _createForOfIteratorHelper(children),
        _step;

    try {
      for (_iterator.s(); !(_step = _iterator.n()).done;) {
        var child = _step.value;

        switch (child.type) {
          case 'font-face':
            {
              _this.fontFace = child;
              var fontFamilyStyle = child.getStyle('font-family');

              if (fontFamilyStyle.hasValue()) {
                definitions[fontFamilyStyle.getString()] = (0,_babel_runtime_corejs3_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_40__.default)(_this);
              }

              break;
            }

          case 'missing-glyph':
            _this.missingGlyph = child;
            break;

          case 'glyph':
            {
              var glyph = child;

              if (glyph.arabicForm) {
                _this.isRTL = true;
                _this.isArabic = true;

                if (typeof _this.glyphs[glyph.unicode] === 'undefined') {
                  _this.glyphs[glyph.unicode] = {};
                }

                _this.glyphs[glyph.unicode][glyph.arabicForm] = glyph;
              } else {
                _this.glyphs[glyph.unicode] = glyph;
              }

              break;
            }

          default:
        }
      }
    } catch (err) {
      _iterator.e(err);
    } finally {
      _iterator.f();
    }

    return _this;
  }

  (0,_babel_runtime_corejs3_helpers_createClass__WEBPACK_IMPORTED_MODULE_16__.default)(FontElement, [{
    key: "render",
    value: function render() {// NO RENDER
    }
  }]);

  return FontElement;
}(Element);

function _createSuper$t(Derived) {
  var hasNativeReflectConstruct = _isNativeReflectConstruct$t();

  return function _createSuperInternal() {
    var Super = (0,_babel_runtime_corejs3_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_29__.default)(Derived),
        result;

    if (hasNativeReflectConstruct) {
      var NewTarget = (0,_babel_runtime_corejs3_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_29__.default)(this).constructor;

      result = _babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default()(Super, arguments, NewTarget);
    } else {
      result = Super.apply(this, arguments);
    }

    return (0,_babel_runtime_corejs3_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_28__.default)(this, result);
  };
}

function _isNativeReflectConstruct$t() {
  if (typeof Reflect === "undefined" || !(_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default())) return false;
  if ((_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default().sham)) return false;
  if (typeof Proxy === "function") return true;

  try {
    Date.prototype.toString.call(_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default()(Date, [], function () {}));
    return true;
  } catch (e) {
    return false;
  }
}

var FontFaceElement = /*#__PURE__*/function (_Element) {
  (0,_babel_runtime_corejs3_helpers_inherits__WEBPACK_IMPORTED_MODULE_27__.default)(FontFaceElement, _Element);

  var _super = _createSuper$t(FontFaceElement);

  function FontFaceElement(document, node, captureTextNodes) {
    var _this;

    (0,_babel_runtime_corejs3_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_15__.default)(this, FontFaceElement);

    _this = _super.call(this, document, node, captureTextNodes);
    _this.type = 'font-face';
    _this.ascent = _this.getAttribute('ascent').getNumber();
    _this.descent = _this.getAttribute('descent').getNumber();
    _this.unitsPerEm = _this.getAttribute('units-per-em').getNumber();
    return _this;
  }

  return FontFaceElement;
}(Element);

function _createSuper$u(Derived) {
  var hasNativeReflectConstruct = _isNativeReflectConstruct$u();

  return function _createSuperInternal() {
    var Super = (0,_babel_runtime_corejs3_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_29__.default)(Derived),
        result;

    if (hasNativeReflectConstruct) {
      var NewTarget = (0,_babel_runtime_corejs3_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_29__.default)(this).constructor;

      result = _babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default()(Super, arguments, NewTarget);
    } else {
      result = Super.apply(this, arguments);
    }

    return (0,_babel_runtime_corejs3_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_28__.default)(this, result);
  };
}

function _isNativeReflectConstruct$u() {
  if (typeof Reflect === "undefined" || !(_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default())) return false;
  if ((_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default().sham)) return false;
  if (typeof Proxy === "function") return true;

  try {
    Date.prototype.toString.call(_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default()(Date, [], function () {}));
    return true;
  } catch (e) {
    return false;
  }
}

var MissingGlyphElement = /*#__PURE__*/function (_PathElement) {
  (0,_babel_runtime_corejs3_helpers_inherits__WEBPACK_IMPORTED_MODULE_27__.default)(MissingGlyphElement, _PathElement);

  var _super = _createSuper$u(MissingGlyphElement);

  function MissingGlyphElement() {
    var _this;

    (0,_babel_runtime_corejs3_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_15__.default)(this, MissingGlyphElement);

    _this = _super.apply(this, arguments);
    _this.type = 'missing-glyph';
    _this.horizAdvX = 0;
    return _this;
  }

  return MissingGlyphElement;
}(PathElement);

function _createSuper$v(Derived) {
  var hasNativeReflectConstruct = _isNativeReflectConstruct$v();

  return function _createSuperInternal() {
    var Super = (0,_babel_runtime_corejs3_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_29__.default)(Derived),
        result;

    if (hasNativeReflectConstruct) {
      var NewTarget = (0,_babel_runtime_corejs3_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_29__.default)(this).constructor;

      result = _babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default()(Super, arguments, NewTarget);
    } else {
      result = Super.apply(this, arguments);
    }

    return (0,_babel_runtime_corejs3_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_28__.default)(this, result);
  };
}

function _isNativeReflectConstruct$v() {
  if (typeof Reflect === "undefined" || !(_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default())) return false;
  if ((_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default().sham)) return false;
  if (typeof Proxy === "function") return true;

  try {
    Date.prototype.toString.call(_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default()(Date, [], function () {}));
    return true;
  } catch (e) {
    return false;
  }
}

var GlyphElement = /*#__PURE__*/function (_PathElement) {
  (0,_babel_runtime_corejs3_helpers_inherits__WEBPACK_IMPORTED_MODULE_27__.default)(GlyphElement, _PathElement);

  var _super = _createSuper$v(GlyphElement);

  function GlyphElement(document, node, captureTextNodes) {
    var _this;

    (0,_babel_runtime_corejs3_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_15__.default)(this, GlyphElement);

    _this = _super.call(this, document, node, captureTextNodes);
    _this.type = 'glyph';
    _this.horizAdvX = _this.getAttribute('horiz-adv-x').getNumber();
    _this.unicode = _this.getAttribute('unicode').getString();
    _this.arabicForm = _this.getAttribute('arabic-form').getString();
    return _this;
  }

  return GlyphElement;
}(PathElement);

function _createSuper$w(Derived) {
  var hasNativeReflectConstruct = _isNativeReflectConstruct$w();

  return function _createSuperInternal() {
    var Super = (0,_babel_runtime_corejs3_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_29__.default)(Derived),
        result;

    if (hasNativeReflectConstruct) {
      var NewTarget = (0,_babel_runtime_corejs3_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_29__.default)(this).constructor;

      result = _babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default()(Super, arguments, NewTarget);
    } else {
      result = Super.apply(this, arguments);
    }

    return (0,_babel_runtime_corejs3_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_28__.default)(this, result);
  };
}

function _isNativeReflectConstruct$w() {
  if (typeof Reflect === "undefined" || !(_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default())) return false;
  if ((_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default().sham)) return false;
  if (typeof Proxy === "function") return true;

  try {
    Date.prototype.toString.call(_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default()(Date, [], function () {}));
    return true;
  } catch (e) {
    return false;
  }
}

var TRefElement = /*#__PURE__*/function (_TextElement) {
  (0,_babel_runtime_corejs3_helpers_inherits__WEBPACK_IMPORTED_MODULE_27__.default)(TRefElement, _TextElement);

  var _super = _createSuper$w(TRefElement);

  function TRefElement() {
    var _this;

    (0,_babel_runtime_corejs3_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_15__.default)(this, TRefElement);

    _this = _super.apply(this, arguments);
    _this.type = 'tref';
    return _this;
  }

  (0,_babel_runtime_corejs3_helpers_createClass__WEBPACK_IMPORTED_MODULE_16__.default)(TRefElement, [{
    key: "getText",
    value: function getText() {
      var element = this.getHrefAttribute().getDefinition();

      if (element) {
        var firstChild = element.children[0];

        if (firstChild) {
          return firstChild.getText();
        }
      }

      return '';
    }
  }]);

  return TRefElement;
}(TextElement);

function _createSuper$x(Derived) {
  var hasNativeReflectConstruct = _isNativeReflectConstruct$x();

  return function _createSuperInternal() {
    var Super = (0,_babel_runtime_corejs3_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_29__.default)(Derived),
        result;

    if (hasNativeReflectConstruct) {
      var NewTarget = (0,_babel_runtime_corejs3_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_29__.default)(this).constructor;

      result = _babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default()(Super, arguments, NewTarget);
    } else {
      result = Super.apply(this, arguments);
    }

    return (0,_babel_runtime_corejs3_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_28__.default)(this, result);
  };
}

function _isNativeReflectConstruct$x() {
  if (typeof Reflect === "undefined" || !(_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default())) return false;
  if ((_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default().sham)) return false;
  if (typeof Proxy === "function") return true;

  try {
    Date.prototype.toString.call(_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default()(Date, [], function () {}));
    return true;
  } catch (e) {
    return false;
  }
}

var AElement = /*#__PURE__*/function (_TextElement) {
  (0,_babel_runtime_corejs3_helpers_inherits__WEBPACK_IMPORTED_MODULE_27__.default)(AElement, _TextElement);

  var _super = _createSuper$x(AElement);

  function AElement(document, node, captureTextNodes) {
    var _context;

    var _this;

    (0,_babel_runtime_corejs3_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_15__.default)(this, AElement);

    _this = _super.call(this, document, node, captureTextNodes);
    _this.type = 'a';
    var childNodes = node.childNodes;
    var firstChild = childNodes[0];

    var hasText = childNodes.length > 0 && _babel_runtime_corejs3_core_js_stable_instance_every__WEBPACK_IMPORTED_MODULE_20___default()(_context = _babel_runtime_corejs3_core_js_stable_array_from__WEBPACK_IMPORTED_MODULE_33___default()(childNodes)).call(_context, function (node) {
      return node.nodeType === 3;
    });

    _this.hasText = hasText;
    _this.text = hasText ? _this.getTextFromNode(firstChild) : '';
    return _this;
  }

  (0,_babel_runtime_corejs3_helpers_createClass__WEBPACK_IMPORTED_MODULE_16__.default)(AElement, [{
    key: "getText",
    value: function getText() {
      return this.text;
    }
  }, {
    key: "renderChildren",
    value: function renderChildren(ctx) {
      if (this.hasText) {
        // render as text element
        (0,_babel_runtime_corejs3_helpers_get__WEBPACK_IMPORTED_MODULE_36__.default)((0,_babel_runtime_corejs3_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_29__.default)(AElement.prototype), "renderChildren", this).call(this, ctx);

        var document = this.document,
            x = this.x,
            y = this.y;
        var mouse = document.screen.mouse;
        var fontSize = new Property(document, 'fontSize', Font.parse(document.ctx.font).fontSize); // Do not calc bounding box if mouse is not working.

        if (mouse.isWorking()) {
          mouse.checkBoundingBox(this, new BoundingBox(x, y - fontSize.getPixels('y'), x + this.measureText(ctx), y));
        }
      } else if (this.children.length > 0) {
        // render as temporary group
        var g = new GElement(this.document, null);
        g.children = this.children;
        g.parent = this;
        g.render(ctx);
      }
    }
  }, {
    key: "onClick",
    value: function onClick() {
      var window = this.document.window;

      if (window) {
        window.open(this.getHrefAttribute().getString());
      }
    }
  }, {
    key: "onMouseMove",
    value: function onMouseMove() {
      var ctx = this.document.ctx;
      ctx.canvas.style.cursor = 'pointer';
    }
  }]);

  return AElement;
}(TextElement);

function _createForOfIteratorHelper$1(o, allowArrayLike) {
  var it;

  if (typeof (_babel_runtime_corejs3_core_js_stable_symbol__WEBPACK_IMPORTED_MODULE_46___default()) === "undefined" || _babel_runtime_corejs3_core_js_get_iterator_method__WEBPACK_IMPORTED_MODULE_45___default()(o) == null) {
    if (_babel_runtime_corejs3_core_js_stable_array_is_array__WEBPACK_IMPORTED_MODULE_44___default()(o) || (it = _unsupportedIterableToArray$1(o)) || allowArrayLike && o && typeof o.length === "number") {
      if (it) o = it;
      var i = 0;

      var F = function F() {};

      return {
        s: F,
        n: function n() {
          if (i >= o.length) return {
            done: true
          };
          return {
            done: false,
            value: o[i++]
          };
        },
        e: function e(_e) {
          throw _e;
        },
        f: F
      };
    }

    throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
  }

  var normalCompletion = true,
      didErr = false,
      err;
  return {
    s: function s() {
      it = _babel_runtime_corejs3_core_js_get_iterator__WEBPACK_IMPORTED_MODULE_43___default()(o);
    },
    n: function n() {
      var step = it.next();
      normalCompletion = step.done;
      return step;
    },
    e: function e(_e2) {
      didErr = true;
      err = _e2;
    },
    f: function f() {
      try {
        if (!normalCompletion && it.return != null) it.return();
      } finally {
        if (didErr) throw err;
      }
    }
  };
}

function _unsupportedIterableToArray$1(o, minLen) {
  var _context5;

  if (!o) return;
  if (typeof o === "string") return _arrayLikeToArray$1(o, minLen);

  var n = _babel_runtime_corejs3_core_js_stable_instance_slice__WEBPACK_IMPORTED_MODULE_47___default()(_context5 = Object.prototype.toString.call(o)).call(_context5, 8, -1);

  if (n === "Object" && o.constructor) n = o.constructor.name;
  if (n === "Map" || n === "Set") return _babel_runtime_corejs3_core_js_stable_array_from__WEBPACK_IMPORTED_MODULE_33___default()(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray$1(o, minLen);
}

function _arrayLikeToArray$1(arr, len) {
  if (len == null || len > arr.length) len = arr.length;

  for (var i = 0, arr2 = new Array(len); i < len; i++) {
    arr2[i] = arr[i];
  }

  return arr2;
}

function ownKeys(object, enumerableOnly) {
  var keys = _babel_runtime_corejs3_core_js_stable_object_keys__WEBPACK_IMPORTED_MODULE_11___default()(object);

  if ((_babel_runtime_corejs3_core_js_stable_object_get_own_property_symbols__WEBPACK_IMPORTED_MODULE_10___default())) {
    var symbols = _babel_runtime_corejs3_core_js_stable_object_get_own_property_symbols__WEBPACK_IMPORTED_MODULE_10___default()(object);

    if (enumerableOnly) symbols = _babel_runtime_corejs3_core_js_stable_instance_filter__WEBPACK_IMPORTED_MODULE_9___default()(symbols).call(symbols, function (sym) {
      return _babel_runtime_corejs3_core_js_stable_object_get_own_property_descriptor__WEBPACK_IMPORTED_MODULE_8___default()(object, sym).enumerable;
    });
    keys.push.apply(keys, symbols);
  }

  return keys;
}

function _objectSpread(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};

    if (i % 2) {
      var _context3;

      _babel_runtime_corejs3_core_js_stable_instance_for_each__WEBPACK_IMPORTED_MODULE_7___default()(_context3 = ownKeys(Object(source), true)).call(_context3, function (key) {
        (0,_babel_runtime_corejs3_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_14__.default)(target, key, source[key]);
      });
    } else if ((_babel_runtime_corejs3_core_js_stable_object_get_own_property_descriptors__WEBPACK_IMPORTED_MODULE_6___default())) {
      _babel_runtime_corejs3_core_js_stable_object_define_properties__WEBPACK_IMPORTED_MODULE_5___default()(target, _babel_runtime_corejs3_core_js_stable_object_get_own_property_descriptors__WEBPACK_IMPORTED_MODULE_6___default()(source));
    } else {
      var _context4;

      _babel_runtime_corejs3_core_js_stable_instance_for_each__WEBPACK_IMPORTED_MODULE_7___default()(_context4 = ownKeys(Object(source))).call(_context4, function (key) {
        _babel_runtime_corejs3_core_js_stable_object_define_property__WEBPACK_IMPORTED_MODULE_4___default()(target, key, _babel_runtime_corejs3_core_js_stable_object_get_own_property_descriptor__WEBPACK_IMPORTED_MODULE_8___default()(source, key));
      });
    }
  }

  return target;
}

function _createSuper$y(Derived) {
  var hasNativeReflectConstruct = _isNativeReflectConstruct$y();

  return function _createSuperInternal() {
    var Super = (0,_babel_runtime_corejs3_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_29__.default)(Derived),
        result;

    if (hasNativeReflectConstruct) {
      var NewTarget = (0,_babel_runtime_corejs3_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_29__.default)(this).constructor;

      result = _babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default()(Super, arguments, NewTarget);
    } else {
      result = Super.apply(this, arguments);
    }

    return (0,_babel_runtime_corejs3_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_28__.default)(this, result);
  };
}

function _isNativeReflectConstruct$y() {
  if (typeof Reflect === "undefined" || !(_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default())) return false;
  if ((_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default().sham)) return false;
  if (typeof Proxy === "function") return true;

  try {
    Date.prototype.toString.call(_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default()(Date, [], function () {}));
    return true;
  } catch (e) {
    return false;
  }
}

var TextPathElement = /*#__PURE__*/function (_TextElement) {
  (0,_babel_runtime_corejs3_helpers_inherits__WEBPACK_IMPORTED_MODULE_27__.default)(TextPathElement, _TextElement);

  var _super = _createSuper$y(TextPathElement);

  function TextPathElement(document, node, captureTextNodes) {
    var _this;

    (0,_babel_runtime_corejs3_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_15__.default)(this, TextPathElement);

    _this = _super.call(this, document, node, captureTextNodes);
    _this.type = 'textPath';
    _this.textWidth = 0;
    _this.textHeight = 0;
    _this.pathLength = -1;
    _this.glyphInfo = null;
    _this.letterSpacingCache = [];
    _this.measuresCache = new (_babel_runtime_corejs3_core_js_stable_map__WEBPACK_IMPORTED_MODULE_48___default())([['', 0]]);

    var pathElement = _this.getHrefAttribute().getDefinition();

    _this.text = _this.getTextFromNode();
    _this.dataArray = _this.parsePathData(pathElement);
    return _this;
  }

  (0,_babel_runtime_corejs3_helpers_createClass__WEBPACK_IMPORTED_MODULE_16__.default)(TextPathElement, [{
    key: "getText",
    value: function getText() {
      return this.text;
    }
  }, {
    key: "path",
    value: function path(ctx) {
      var dataArray = this.dataArray;

      if (ctx) {
        ctx.beginPath();
      }

      _babel_runtime_corejs3_core_js_stable_instance_for_each__WEBPACK_IMPORTED_MODULE_7___default()(dataArray).call(dataArray, function (_ref) {
        var type = _ref.type,
            points = _ref.points;

        switch (type) {
          case PathParser.LINE_TO:
            if (ctx) {
              ctx.lineTo(points[0], points[1]);
            }

            break;

          case PathParser.MOVE_TO:
            if (ctx) {
              ctx.moveTo(points[0], points[1]);
            }

            break;

          case PathParser.CURVE_TO:
            if (ctx) {
              ctx.bezierCurveTo(points[0], points[1], points[2], points[3], points[4], points[5]);
            }

            break;

          case PathParser.QUAD_TO:
            if (ctx) {
              ctx.quadraticCurveTo(points[0], points[1], points[2], points[3]);
            }

            break;

          case PathParser.ARC:
            {
              var _points = (0,_babel_runtime_corejs3_helpers_slicedToArray__WEBPACK_IMPORTED_MODULE_3__.default)(points, 8),
                  cx = _points[0],
                  cy = _points[1],
                  rx = _points[2],
                  ry = _points[3],
                  theta = _points[4],
                  dTheta = _points[5],
                  psi = _points[6],
                  fs = _points[7];

              var r = rx > ry ? rx : ry;
              var scaleX = rx > ry ? 1 : rx / ry;
              var scaleY = rx > ry ? ry / rx : 1;

              if (ctx) {
                ctx.translate(cx, cy);
                ctx.rotate(psi);
                ctx.scale(scaleX, scaleY);
                ctx.arc(0, 0, r, theta, theta + dTheta, Boolean(1 - fs));
                ctx.scale(1 / scaleX, 1 / scaleY);
                ctx.rotate(-psi);
                ctx.translate(-cx, -cy);
              }

              break;
            }

          case PathParser.CLOSE_PATH:
            if (ctx) {
              ctx.closePath();
            }

            break;
        }
      });
    }
  }, {
    key: "renderChildren",
    value: function renderChildren(ctx) {
      this.setTextData(ctx);
      ctx.save();
      var textDecoration = this.parent.getStyle('text-decoration').getString();
      var fontSize = this.getFontSize();
      var glyphInfo = this.glyphInfo;
      var fill = ctx.fillStyle;

      if (textDecoration === 'underline') {
        ctx.beginPath();
      }

      _babel_runtime_corejs3_core_js_stable_instance_for_each__WEBPACK_IMPORTED_MODULE_7___default()(glyphInfo).call(glyphInfo, function (glyph, i) {
        var p0 = glyph.p0,
            p1 = glyph.p1,
            rotation = glyph.rotation,
            partialText = glyph.text;
        ctx.save();
        ctx.translate(p0.x, p0.y);
        ctx.rotate(rotation);

        if (ctx.fillStyle) {
          ctx.fillText(partialText, 0, 0);
        }

        if (ctx.strokeStyle) {
          ctx.strokeText(partialText, 0, 0);
        }

        ctx.restore();

        if (textDecoration === 'underline') {
          if (i === 0) {
            ctx.moveTo(p0.x, p0.y + fontSize / 8);
          }

          ctx.lineTo(p1.x, p1.y + fontSize / 5);
        } //// To assist with debugging visually, uncomment following
        //
        // ctx.beginPath();
        // if (i % 2)
        // 	ctx.strokeStyle = 'red';
        // else
        // 	ctx.strokeStyle = 'green';
        // ctx.moveTo(p0.x, p0.y);
        // ctx.lineTo(p1.x, p1.y);
        // ctx.stroke();
        // ctx.closePath();

      });

      if (textDecoration === 'underline') {
        ctx.lineWidth = fontSize / 20;
        ctx.strokeStyle = fill;
        ctx.stroke();
        ctx.closePath();
      }

      ctx.restore();
    }
  }, {
    key: "getLetterSpacingAt",
    value: function getLetterSpacingAt() {
      var idx = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;
      return this.letterSpacingCache[idx] || 0;
    }
  }, {
    key: "findSegmentToFitChar",
    value: function findSegmentToFitChar(ctx, anchor, textFullWidth, fullPathWidth, spacesNumber, inputOffset, dy, c, charI) {
      var offset = inputOffset;
      var glyphWidth = this.measureText(ctx, c);

      if (c === ' ' && anchor === 'justify' && textFullWidth < fullPathWidth) {
        glyphWidth += (fullPathWidth - textFullWidth) / spacesNumber;
      }

      if (charI > -1) {
        offset += this.getLetterSpacingAt(charI);
      }

      var splineStep = this.textHeight / 20;
      var p0 = this.getEquidistantPointOnPath(offset, splineStep, 0);
      var p1 = this.getEquidistantPointOnPath(offset + glyphWidth, splineStep, 0);
      var segment = {
        p0: p0,
        p1: p1
      };
      var rotation = p0 && p1 ? Math.atan2(p1.y - p0.y, p1.x - p0.x) : 0;

      if (dy) {
        var dyX = Math.cos(Math.PI / 2 + rotation) * dy;
        var dyY = Math.cos(-rotation) * dy;
        segment.p0 = _objectSpread(_objectSpread({}, p0), {}, {
          x: p0.x + dyX,
          y: p0.y + dyY
        });
        segment.p1 = _objectSpread(_objectSpread({}, p1), {}, {
          x: p1.x + dyX,
          y: p1.y + dyY
        });
      }

      offset += glyphWidth;
      return {
        offset: offset,
        segment: segment,
        rotation: rotation
      };
    }
  }, {
    key: "measureText",
    value: function measureText(ctx, text) {
      var measuresCache = this.measuresCache;
      var targetText = text || this.getText();

      if (measuresCache.has(targetText)) {
        return measuresCache.get(targetText);
      }

      var measure = this.measureTargetText(ctx, targetText);
      measuresCache.set(targetText, measure);
      return measure;
    } // This method supposes what all custom fonts already loaded.
    // If some font will be loaded after this method call, <textPath> will not be rendered correctly.
    // You need to call this method manually to update glyphs cache.

  }, {
    key: "setTextData",
    value: function setTextData(ctx) {
      var _context,
          _this2 = this;

      if (this.glyphInfo) {
        return;
      }

      var renderText = this.getText();
      var chars = renderText.split('');
      var spacesNumber = renderText.split(' ').length - 1;

      var dx = _babel_runtime_corejs3_core_js_stable_instance_map__WEBPACK_IMPORTED_MODULE_2___default()(_context = this.parent.getAttribute('dx').split()).call(_context, function (_) {
        return _.getPixels('x');
      });

      var dy = this.parent.getAttribute('dy').getPixels('y');
      var anchor = this.parent.getStyle('text-anchor').getString('start');
      var thisSpacing = this.getStyle('letter-spacing');
      var parentSpacing = this.parent.getStyle('letter-spacing');
      var letterSpacing = 0;

      if (!thisSpacing.hasValue() || thisSpacing.getValue() === 'inherit') {
        letterSpacing = parentSpacing.getPixels();
      } else if (thisSpacing.hasValue()) {
        if (thisSpacing.getValue() !== 'initial' && thisSpacing.getValue() !== 'unset') {
          letterSpacing = thisSpacing.getPixels();
        }
      } // fill letter-spacing cache


      var letterSpacingCache = [];
      var textLen = renderText.length;
      this.letterSpacingCache = letterSpacingCache;

      for (var i = 0; i < textLen; i++) {
        letterSpacingCache.push(typeof dx[i] !== 'undefined' ? dx[i] : letterSpacing);
      }

      var dxSum = _babel_runtime_corejs3_core_js_stable_instance_reduce__WEBPACK_IMPORTED_MODULE_18___default()(letterSpacingCache).call(letterSpacingCache, function (acc, cur, i) {
        return i === 0 ? 0 : acc + cur || 0;
      }, 0);

      var textWidth = this.measureText(ctx);
      var textFullWidth = Math.max(textWidth + dxSum, 0);
      this.textWidth = textWidth;
      this.textHeight = this.getFontSize();
      this.glyphInfo = [];
      var fullPathWidth = this.getPathLength();
      var startOffset = this.getStyle('startOffset').getNumber(0) * fullPathWidth;
      var offset = 0;

      if (anchor === 'middle' || anchor === 'center') {
        offset = -textFullWidth / 2;
      }

      if (anchor === 'end' || anchor === 'right') {
        offset = -textFullWidth;
      }

      offset += startOffset;

      _babel_runtime_corejs3_core_js_stable_instance_for_each__WEBPACK_IMPORTED_MODULE_7___default()(chars).call(chars, function (char, i) {
        // Find such segment what distance between p0 and p1 is approx. width of glyph
        var _this2$findSegmentToF = _this2.findSegmentToFitChar(ctx, anchor, textFullWidth, fullPathWidth, spacesNumber, offset, dy, char, i),
            nextOffset = _this2$findSegmentToF.offset,
            segment = _this2$findSegmentToF.segment,
            rotation = _this2$findSegmentToF.rotation;

        offset = nextOffset;

        if (!segment.p0 || !segment.p1) {
          return;
        } // const width = this.getLineLength(
        // 	segment.p0.x,
        // 	segment.p0.y,
        // 	segment.p1.x,
        // 	segment.p1.y
        // );
        // Note: Since glyphs are rendered one at a time, any kerning pair data built into the font will not be used.
        // Can foresee having a rough pair table built in that the developer can override as needed.
        // Or use "dx" attribute of the <text> node as a naive replacement
        // const kern = 0;
        // placeholder for future implementation
        // const midpoint = this.getPointOnLine(
        // 	kern + width / 2.0,
        // 	segment.p0.x, segment.p0.y, segment.p1.x, segment.p1.y
        // );


        _this2.glyphInfo.push({
          // transposeX: midpoint.x,
          // transposeY: midpoint.y,
          text: chars[i],
          p0: segment.p0,
          p1: segment.p1,
          rotation: rotation
        });
      });
    }
  }, {
    key: "parsePathData",
    value: function parsePathData(path) {
      this.pathLength = -1; // reset path length

      if (!path) {
        return [];
      }

      var pathCommands = [];
      var pathParser = path.pathParser;
      pathParser.reset(); // convert l, H, h, V, and v to L

      while (!pathParser.isEnd()) {
        var current = pathParser.current;
        var startX = current ? current.x : 0;
        var startY = current ? current.y : 0;
        var command = pathParser.next();
        var nextCommandType = command.type;
        var points = [];

        switch (command.type) {
          case PathParser.MOVE_TO:
            this.pathM(pathParser, points);
            break;

          case PathParser.LINE_TO:
            nextCommandType = this.pathL(pathParser, points);
            break;

          case PathParser.HORIZ_LINE_TO:
            nextCommandType = this.pathH(pathParser, points);
            break;

          case PathParser.VERT_LINE_TO:
            nextCommandType = this.pathV(pathParser, points);
            break;

          case PathParser.CURVE_TO:
            this.pathC(pathParser, points);
            break;

          case PathParser.SMOOTH_CURVE_TO:
            nextCommandType = this.pathS(pathParser, points);
            break;

          case PathParser.QUAD_TO:
            this.pathQ(pathParser, points);
            break;

          case PathParser.SMOOTH_QUAD_TO:
            nextCommandType = this.pathT(pathParser, points);
            break;

          case PathParser.ARC:
            points = this.pathA(pathParser);
            break;

          case PathParser.CLOSE_PATH:
            PathElement.pathZ(pathParser);
            break;
        }

        if (command.type !== PathParser.CLOSE_PATH) {
          pathCommands.push({
            type: nextCommandType,
            points: points,
            start: {
              x: startX,
              y: startY
            },
            pathLength: this.calcLength(startX, startY, nextCommandType, points)
          });
        } else {
          pathCommands.push({
            type: PathParser.CLOSE_PATH,
            points: [],
            pathLength: 0
          });
        }
      }

      return pathCommands;
    }
  }, {
    key: "pathM",
    value: function pathM(pathParser, points) {
      var _PathElement$pathM$po = PathElement.pathM(pathParser).point,
          x = _PathElement$pathM$po.x,
          y = _PathElement$pathM$po.y;
      points.push(x, y);
    }
  }, {
    key: "pathL",
    value: function pathL(pathParser, points) {
      var _PathElement$pathL$po = PathElement.pathL(pathParser).point,
          x = _PathElement$pathL$po.x,
          y = _PathElement$pathL$po.y;
      points.push(x, y);
      return PathParser.LINE_TO;
    }
  }, {
    key: "pathH",
    value: function pathH(pathParser, points) {
      var _PathElement$pathH$po = PathElement.pathH(pathParser).point,
          x = _PathElement$pathH$po.x,
          y = _PathElement$pathH$po.y;
      points.push(x, y);
      return PathParser.LINE_TO;
    }
  }, {
    key: "pathV",
    value: function pathV(pathParser, points) {
      var _PathElement$pathV$po = PathElement.pathV(pathParser).point,
          x = _PathElement$pathV$po.x,
          y = _PathElement$pathV$po.y;
      points.push(x, y);
      return PathParser.LINE_TO;
    }
  }, {
    key: "pathC",
    value: function pathC(pathParser, points) {
      var _PathElement$pathC = PathElement.pathC(pathParser),
          point = _PathElement$pathC.point,
          controlPoint = _PathElement$pathC.controlPoint,
          currentPoint = _PathElement$pathC.currentPoint;

      points.push(point.x, point.y, controlPoint.x, controlPoint.y, currentPoint.x, currentPoint.y);
    }
  }, {
    key: "pathS",
    value: function pathS(pathParser, points) {
      var _PathElement$pathS = PathElement.pathS(pathParser),
          point = _PathElement$pathS.point,
          controlPoint = _PathElement$pathS.controlPoint,
          currentPoint = _PathElement$pathS.currentPoint;

      points.push(point.x, point.y, controlPoint.x, controlPoint.y, currentPoint.x, currentPoint.y);
      return PathParser.CURVE_TO;
    }
  }, {
    key: "pathQ",
    value: function pathQ(pathParser, points) {
      var _PathElement$pathQ = PathElement.pathQ(pathParser),
          controlPoint = _PathElement$pathQ.controlPoint,
          currentPoint = _PathElement$pathQ.currentPoint;

      points.push(controlPoint.x, controlPoint.y, currentPoint.x, currentPoint.y);
    }
  }, {
    key: "pathT",
    value: function pathT(pathParser, points) {
      var _PathElement$pathT = PathElement.pathT(pathParser),
          controlPoint = _PathElement$pathT.controlPoint,
          currentPoint = _PathElement$pathT.currentPoint;

      points.push(controlPoint.x, controlPoint.y, currentPoint.x, currentPoint.y);
      return PathParser.QUAD_TO;
    }
  }, {
    key: "pathA",
    value: function pathA(pathParser) {
      var _PathElement$pathA = PathElement.pathA(pathParser),
          rX = _PathElement$pathA.rX,
          rY = _PathElement$pathA.rY,
          sweepFlag = _PathElement$pathA.sweepFlag,
          xAxisRotation = _PathElement$pathA.xAxisRotation,
          centp = _PathElement$pathA.centp,
          a1 = _PathElement$pathA.a1,
          ad = _PathElement$pathA.ad;

      if (sweepFlag === 0 && ad > 0) {
        ad = ad - 2 * Math.PI;
      }

      if (sweepFlag === 1 && ad < 0) {
        ad = ad + 2 * Math.PI;
      }

      return [centp.x, centp.y, rX, rY, a1, ad, xAxisRotation, sweepFlag];
    }
  }, {
    key: "calcLength",
    value: function calcLength(x, y, commandType, points) {
      var len = 0;
      var p1 = null;
      var p2 = null;
      var t = 0;

      switch (commandType) {
        case PathParser.LINE_TO:
          return this.getLineLength(x, y, points[0], points[1]);

        case PathParser.CURVE_TO:
          // Approximates by breaking curve into 100 line segments
          len = 0.0;
          p1 = this.getPointOnCubicBezier(0, x, y, points[0], points[1], points[2], points[3], points[4], points[5]);

          for (t = 0.01; t <= 1; t += 0.01) {
            p2 = this.getPointOnCubicBezier(t, x, y, points[0], points[1], points[2], points[3], points[4], points[5]);
            len += this.getLineLength(p1.x, p1.y, p2.x, p2.y);
            p1 = p2;
          }

          return len;

        case PathParser.QUAD_TO:
          // Approximates by breaking curve into 100 line segments
          len = 0.0;
          p1 = this.getPointOnQuadraticBezier(0, x, y, points[0], points[1], points[2], points[3]);

          for (t = 0.01; t <= 1; t += 0.01) {
            p2 = this.getPointOnQuadraticBezier(t, x, y, points[0], points[1], points[2], points[3]);
            len += this.getLineLength(p1.x, p1.y, p2.x, p2.y);
            p1 = p2;
          }

          return len;

        case PathParser.ARC:
          // Approximates by breaking curve into line segments
          len = 0.0;
          var start = points[4]; // 4 = theta

          var dTheta = points[5]; // 5 = dTheta

          var end = points[4] + dTheta;
          var inc = Math.PI / 180.0; // 1 degree resolution

          if (Math.abs(start - end) < inc) {
            inc = Math.abs(start - end);
          } // Note: for purpose of calculating arc length, not going to worry about rotating X-axis by angle psi


          p1 = this.getPointOnEllipticalArc(points[0], points[1], points[2], points[3], start, 0);

          if (dTheta < 0) {
            // clockwise
            for (t = start - inc; t > end; t -= inc) {
              p2 = this.getPointOnEllipticalArc(points[0], points[1], points[2], points[3], t, 0);
              len += this.getLineLength(p1.x, p1.y, p2.x, p2.y);
              p1 = p2;
            }
          } else {
            // counter-clockwise
            for (t = start + inc; t < end; t += inc) {
              p2 = this.getPointOnEllipticalArc(points[0], points[1], points[2], points[3], t, 0);
              len += this.getLineLength(p1.x, p1.y, p2.x, p2.y);
              p1 = p2;
            }
          }

          p2 = this.getPointOnEllipticalArc(points[0], points[1], points[2], points[3], end, 0);
          len += this.getLineLength(p1.x, p1.y, p2.x, p2.y);
          return len;
      }

      return 0;
    }
  }, {
    key: "getPointOnLine",
    value: function getPointOnLine(dist, P1x, P1y, P2x, P2y) {
      var fromX = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : P1x;
      var fromY = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : P1y;
      var m = (P2y - P1y) / (P2x - P1x + PSEUDO_ZERO);
      var run = Math.sqrt(dist * dist / (1 + m * m));

      if (P2x < P1x) {
        run *= -1;
      }

      var rise = m * run;
      var pt = null;

      if (P2x === P1x) {
        // vertical line
        pt = {
          x: fromX,
          y: fromY + rise
        };
      } else if ((fromY - P1y) / (fromX - P1x + PSEUDO_ZERO) === m) {
        pt = {
          x: fromX + run,
          y: fromY + rise
        };
      } else {
        var ix = 0;
        var iy = 0;
        var len = this.getLineLength(P1x, P1y, P2x, P2y);

        if (len < PSEUDO_ZERO) {
          return null;
        }

        var u = (fromX - P1x) * (P2x - P1x) + (fromY - P1y) * (P2y - P1y);
        u = u / (len * len);
        ix = P1x + u * (P2x - P1x);
        iy = P1y + u * (P2y - P1y);
        var pRise = this.getLineLength(fromX, fromY, ix, iy);
        var pRun = Math.sqrt(dist * dist - pRise * pRise);
        run = Math.sqrt(pRun * pRun / (1 + m * m));

        if (P2x < P1x) {
          run *= -1;
        }

        rise = m * run;
        pt = {
          x: ix + run,
          y: iy + rise
        };
      }

      return pt;
    }
  }, {
    key: "getPointOnPath",
    value: function getPointOnPath(distance) {
      var fullLen = this.getPathLength();
      var cumulativePathLength = 0;
      var p = null;

      if (distance < -0.00005 || distance - 0.00005 > fullLen) {
        return null;
      }

      var dataArray = this.dataArray;

      var _iterator = _createForOfIteratorHelper$1(dataArray),
          _step;

      try {
        for (_iterator.s(); !(_step = _iterator.n()).done;) {
          var command = _step.value;

          if (command && (command.pathLength < 0.00005 || cumulativePathLength + command.pathLength + 0.00005 < distance)) {
            cumulativePathLength += command.pathLength;
            continue;
          }

          var delta = distance - cumulativePathLength;
          var currentT = 0;

          switch (command.type) {
            case PathParser.LINE_TO:
              p = this.getPointOnLine(delta, command.start.x, command.start.y, command.points[0], command.points[1], command.start.x, command.start.y);
              break;

            case PathParser.ARC:
              var start = command.points[4]; // 4 = theta

              var dTheta = command.points[5]; // 5 = dTheta

              var end = command.points[4] + dTheta;
              currentT = start + delta / command.pathLength * dTheta;

              if (dTheta < 0 && currentT < end || dTheta >= 0 && currentT > end) {
                break;
              }

              p = this.getPointOnEllipticalArc(command.points[0], command.points[1], command.points[2], command.points[3], currentT, command.points[6]);
              break;

            case PathParser.CURVE_TO:
              currentT = delta / command.pathLength;

              if (currentT > 1) {
                currentT = 1;
              }

              p = this.getPointOnCubicBezier(currentT, command.start.x, command.start.y, command.points[0], command.points[1], command.points[2], command.points[3], command.points[4], command.points[5]);
              break;

            case PathParser.QUAD_TO:
              currentT = delta / command.pathLength;

              if (currentT > 1) {
                currentT = 1;
              }

              p = this.getPointOnQuadraticBezier(currentT, command.start.x, command.start.y, command.points[0], command.points[1], command.points[2], command.points[3]);
              break;

            default:
          }

          if (p) {
            return p;
          }

          break;
        }
      } catch (err) {
        _iterator.e(err);
      } finally {
        _iterator.f();
      }

      return null;
    }
  }, {
    key: "getLineLength",
    value: function getLineLength(x1, y1, x2, y2) {
      return Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));
    }
  }, {
    key: "getPathLength",
    value: function getPathLength() {
      if (this.pathLength === -1) {
        var _context2;

        this.pathLength = _babel_runtime_corejs3_core_js_stable_instance_reduce__WEBPACK_IMPORTED_MODULE_18___default()(_context2 = this.dataArray).call(_context2, function (length, command) {
          return command.pathLength > 0 ? length + command.pathLength : length;
        }, 0);
      }

      return this.pathLength;
    }
  }, {
    key: "getPointOnCubicBezier",
    value: function getPointOnCubicBezier(pct, P1x, P1y, P2x, P2y, P3x, P3y, P4x, P4y) {
      var x = P4x * CB1(pct) + P3x * CB2(pct) + P2x * CB3(pct) + P1x * CB4(pct);
      var y = P4y * CB1(pct) + P3y * CB2(pct) + P2y * CB3(pct) + P1y * CB4(pct);
      return {
        x: x,
        y: y
      };
    }
  }, {
    key: "getPointOnQuadraticBezier",
    value: function getPointOnQuadraticBezier(pct, P1x, P1y, P2x, P2y, P3x, P3y) {
      var x = P3x * QB1(pct) + P2x * QB2(pct) + P1x * QB3(pct);
      var y = P3y * QB1(pct) + P2y * QB2(pct) + P1y * QB3(pct);
      return {
        x: x,
        y: y
      };
    }
  }, {
    key: "getPointOnEllipticalArc",
    value: function getPointOnEllipticalArc(cx, cy, rx, ry, theta, psi) {
      var cosPsi = Math.cos(psi);
      var sinPsi = Math.sin(psi);
      var pt = {
        x: rx * Math.cos(theta),
        y: ry * Math.sin(theta)
      };
      return {
        x: cx + (pt.x * cosPsi - pt.y * sinPsi),
        y: cy + (pt.x * sinPsi + pt.y * cosPsi)
      };
    } // TODO need some optimisations. possibly build cache only for curved segments?

  }, {
    key: "buildEquidistantCache",
    value: function buildEquidistantCache(inputStep, inputPrecision) {
      var fullLen = this.getPathLength();
      var precision = inputPrecision || 0.25; // accuracy vs performance

      var step = inputStep || fullLen / 100;

      if (!this.equidistantCache || this.equidistantCache.step !== step || this.equidistantCache.precision !== precision) {
        // Prepare cache
        this.equidistantCache = {
          step: step,
          precision: precision,
          points: []
        }; // Calculate points

        var s = 0;

        for (var l = 0; l <= fullLen; l += precision) {
          var p0 = this.getPointOnPath(l);
          var p1 = this.getPointOnPath(l + precision);

          if (!p0 || !p1) {
            continue;
          }

          s += this.getLineLength(p0.x, p0.y, p1.x, p1.y);

          if (s >= step) {
            this.equidistantCache.points.push({
              x: p0.x,
              y: p0.y,
              distance: l
            });
            s -= step;
          }
        }
      }
    }
  }, {
    key: "getEquidistantPointOnPath",
    value: function getEquidistantPointOnPath(targetDistance, step, precision) {
      this.buildEquidistantCache(step, precision);

      if (targetDistance < 0 || targetDistance - this.getPathLength() > 0.00005) {
        return null;
      }

      var idx = Math.round(targetDistance / this.getPathLength() * (this.equidistantCache.points.length - 1));
      return this.equidistantCache.points[idx] || null;
    }
  }]);

  return TextPathElement;
}(TextElement);

function _createSuper$z(Derived) {
  var hasNativeReflectConstruct = _isNativeReflectConstruct$z();

  return function _createSuperInternal() {
    var Super = (0,_babel_runtime_corejs3_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_29__.default)(Derived),
        result;

    if (hasNativeReflectConstruct) {
      var NewTarget = (0,_babel_runtime_corejs3_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_29__.default)(this).constructor;

      result = _babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default()(Super, arguments, NewTarget);
    } else {
      result = Super.apply(this, arguments);
    }

    return (0,_babel_runtime_corejs3_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_28__.default)(this, result);
  };
}

function _isNativeReflectConstruct$z() {
  if (typeof Reflect === "undefined" || !(_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default())) return false;
  if ((_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default().sham)) return false;
  if (typeof Proxy === "function") return true;

  try {
    Date.prototype.toString.call(_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default()(Date, [], function () {}));
    return true;
  } catch (e) {
    return false;
  }
}

var ImageElement = /*#__PURE__*/function (_RenderedElement) {
  (0,_babel_runtime_corejs3_helpers_inherits__WEBPACK_IMPORTED_MODULE_27__.default)(ImageElement, _RenderedElement);

  var _super = _createSuper$z(ImageElement);

  function ImageElement(document, node, captureTextNodes) {
    var _this;

    (0,_babel_runtime_corejs3_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_15__.default)(this, ImageElement);

    _this = _super.call(this, document, node, captureTextNodes);
    _this.type = 'image';
    _this.loaded = false;

    var href = _this.getHrefAttribute().getString();

    if (!href) {
      return (0,_babel_runtime_corejs3_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_28__.default)(_this);
    }

    var isSvg = /\.svg$/.test(href);
    document.images.push((0,_babel_runtime_corejs3_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_40__.default)(_this));

    if (!isSvg) {
      _this.loadImage(href);
    } else {
      _this.loadSvg(href);
    }

    _this.isSvg = isSvg;
    return _this;
  }

  (0,_babel_runtime_corejs3_helpers_createClass__WEBPACK_IMPORTED_MODULE_16__.default)(ImageElement, [{
    key: "loadImage",
    value: function () {
      var _loadImage = (0,_babel_runtime_corejs3_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_13__.default)( /*#__PURE__*/_babel_runtime_corejs3_regenerator__WEBPACK_IMPORTED_MODULE_12___default().mark(function _callee(href) {
        var image;
        return _babel_runtime_corejs3_regenerator__WEBPACK_IMPORTED_MODULE_12___default().wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                _context.prev = 0;
                _context.next = 3;
                return this.document.createImage(href);

              case 3:
                image = _context.sent;
                this.image = image;
                _context.next = 10;
                break;

              case 7:
                _context.prev = 7;
                _context.t0 = _context["catch"](0); // tslint:disable-next-line: no-console

                console.error("Error while loading image \"".concat(href, "\":"), _context.t0);

              case 10:
                this.loaded = true;

              case 11:
              case "end":
                return _context.stop();
            }
          }
        }, _callee, this, [[0, 7]]);
      }));

      function loadImage(_x) {
        return _loadImage.apply(this, arguments);
      }

      return loadImage;
    }()
  }, {
    key: "loadSvg",
    value: function () {
      var _loadSvg = (0,_babel_runtime_corejs3_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_13__.default)( /*#__PURE__*/_babel_runtime_corejs3_regenerator__WEBPACK_IMPORTED_MODULE_12___default().mark(function _callee2(href) {
        var response, svg;
        return _babel_runtime_corejs3_regenerator__WEBPACK_IMPORTED_MODULE_12___default().wrap(function _callee2$(_context2) {
          while (1) {
            switch (_context2.prev = _context2.next) {
              case 0:
                _context2.prev = 0;
                _context2.next = 3;
                return this.document.fetch(href);

              case 3:
                response = _context2.sent;
                _context2.next = 6;
                return response.text();

              case 6:
                svg = _context2.sent;
                this.image = svg;
                _context2.next = 13;
                break;

              case 10:
                _context2.prev = 10;
                _context2.t0 = _context2["catch"](0); // tslint:disable-next-line: no-console

                console.error("Error while loading image \"".concat(href, "\":"), _context2.t0);

              case 13:
                this.loaded = true;

              case 14:
              case "end":
                return _context2.stop();
            }
          }
        }, _callee2, this, [[0, 10]]);
      }));

      function loadSvg(_x2) {
        return _loadSvg.apply(this, arguments);
      }

      return loadSvg;
    }()
  }, {
    key: "renderChildren",
    value: function renderChildren(ctx) {
      var document = this.document,
          image = this.image,
          loaded = this.loaded;
      var x = this.getAttribute('x').getPixels('x');
      var y = this.getAttribute('y').getPixels('y');
      var width = this.getStyle('width').getPixels('x');
      var height = this.getStyle('height').getPixels('y');

      if (!loaded || !image || !width || !height) {
        return;
      }

      ctx.save();

      if (this.isSvg) {
        document.canvg.forkString(ctx, this.image, {
          ignoreMouse: true,
          ignoreAnimation: true,
          ignoreDimensions: true,
          ignoreClear: true,
          offsetX: x,
          offsetY: y,
          scaleWidth: width,
          scaleHeight: height
        }).render();
      } else {
        var _image = this.image;
        ctx.translate(x, y);
        document.setViewBox({
          ctx: ctx,
          aspectRatio: this.getAttribute('preserveAspectRatio').getString(),
          width: width,
          desiredWidth: _image.width,
          height: height,
          desiredHeight: _image.height
        });

        if (this.loaded) {
          if (typeof _image.complete === 'undefined' || _image.complete) {
            ctx.drawImage(_image, 0, 0);
          }
        }
      }

      ctx.restore();
    }
  }, {
    key: "getBoundingBox",
    value: function getBoundingBox() {
      var x = this.getAttribute('x').getPixels('x');
      var y = this.getAttribute('y').getPixels('y');
      var width = this.getStyle('width').getPixels('x');
      var height = this.getStyle('height').getPixels('y');
      return new BoundingBox(x, y, x + width, y + height);
    }
  }]);

  return ImageElement;
}(RenderedElement);

function _createSuper$A(Derived) {
  var hasNativeReflectConstruct = _isNativeReflectConstruct$A();

  return function _createSuperInternal() {
    var Super = (0,_babel_runtime_corejs3_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_29__.default)(Derived),
        result;

    if (hasNativeReflectConstruct) {
      var NewTarget = (0,_babel_runtime_corejs3_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_29__.default)(this).constructor;

      result = _babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default()(Super, arguments, NewTarget);
    } else {
      result = Super.apply(this, arguments);
    }

    return (0,_babel_runtime_corejs3_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_28__.default)(this, result);
  };
}

function _isNativeReflectConstruct$A() {
  if (typeof Reflect === "undefined" || !(_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default())) return false;
  if ((_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default().sham)) return false;
  if (typeof Proxy === "function") return true;

  try {
    Date.prototype.toString.call(_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default()(Date, [], function () {}));
    return true;
  } catch (e) {
    return false;
  }
}

var SymbolElement = /*#__PURE__*/function (_RenderedElement) {
  (0,_babel_runtime_corejs3_helpers_inherits__WEBPACK_IMPORTED_MODULE_27__.default)(SymbolElement, _RenderedElement);

  var _super = _createSuper$A(SymbolElement);

  function SymbolElement() {
    var _this;

    (0,_babel_runtime_corejs3_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_15__.default)(this, SymbolElement);

    _this = _super.apply(this, arguments);
    _this.type = 'symbol';
    return _this;
  }

  (0,_babel_runtime_corejs3_helpers_createClass__WEBPACK_IMPORTED_MODULE_16__.default)(SymbolElement, [{
    key: "render",
    value: function render(_) {// NO RENDER
    }
  }]);

  return SymbolElement;
}(RenderedElement);

var SVGFontLoader = /*#__PURE__*/function () {
  function SVGFontLoader(document) {
    (0,_babel_runtime_corejs3_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_15__.default)(this, SVGFontLoader);

    this.document = document;
    this.loaded = false;
    document.fonts.push(this);
  }

  (0,_babel_runtime_corejs3_helpers_createClass__WEBPACK_IMPORTED_MODULE_16__.default)(SVGFontLoader, [{
    key: "load",
    value: function () {
      var _load = (0,_babel_runtime_corejs3_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_13__.default)( /*#__PURE__*/_babel_runtime_corejs3_regenerator__WEBPACK_IMPORTED_MODULE_12___default().mark(function _callee(fontFamily, url) {
        var _context, document, svgDocument, fonts;

        return _babel_runtime_corejs3_regenerator__WEBPACK_IMPORTED_MODULE_12___default().wrap(function _callee$(_context2) {
          while (1) {
            switch (_context2.prev = _context2.next) {
              case 0:
                _context2.prev = 0;
                document = this.document;
                _context2.next = 4;
                return document.canvg.parser.load(url);

              case 4:
                svgDocument = _context2.sent;
                fonts = svgDocument.getElementsByTagName('font');

                _babel_runtime_corejs3_core_js_stable_instance_for_each__WEBPACK_IMPORTED_MODULE_7___default()(_context = _babel_runtime_corejs3_core_js_stable_array_from__WEBPACK_IMPORTED_MODULE_33___default()(fonts)).call(_context, function (fontNode) {
                  var font = document.createElement(fontNode);
                  document.definitions[fontFamily] = font;
                });

                _context2.next = 12;
                break;

              case 9:
                _context2.prev = 9;
                _context2.t0 = _context2["catch"](0); // tslint:disable-next-line: no-console

                console.error("Error while loading font \"".concat(url, "\":"), _context2.t0);

              case 12:
                this.loaded = true;

              case 13:
              case "end":
                return _context2.stop();
            }
          }
        }, _callee, this, [[0, 9]]);
      }));

      function load(_x, _x2) {
        return _load.apply(this, arguments);
      }

      return load;
    }()
  }]);

  return SVGFontLoader;
}();

function _createSuper$B(Derived) {
  var hasNativeReflectConstruct = _isNativeReflectConstruct$B();

  return function _createSuperInternal() {
    var Super = (0,_babel_runtime_corejs3_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_29__.default)(Derived),
        result;

    if (hasNativeReflectConstruct) {
      var NewTarget = (0,_babel_runtime_corejs3_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_29__.default)(this).constructor;

      result = _babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default()(Super, arguments, NewTarget);
    } else {
      result = Super.apply(this, arguments);
    }

    return (0,_babel_runtime_corejs3_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_28__.default)(this, result);
  };
}

function _isNativeReflectConstruct$B() {
  if (typeof Reflect === "undefined" || !(_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default())) return false;
  if ((_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default().sham)) return false;
  if (typeof Proxy === "function") return true;

  try {
    Date.prototype.toString.call(_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default()(Date, [], function () {}));
    return true;
  } catch (e) {
    return false;
  }
}

var StyleElement = /*#__PURE__*/function (_Element) {
  (0,_babel_runtime_corejs3_helpers_inherits__WEBPACK_IMPORTED_MODULE_27__.default)(StyleElement, _Element);

  var _super = _createSuper$B(StyleElement);

  function StyleElement(document, node, captureTextNodes) {
    var _context;

    var _this;

    (0,_babel_runtime_corejs3_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_15__.default)(this, StyleElement);

    _this = _super.call(this, document, node, captureTextNodes);
    _this.type = 'style';
    var css = compressSpaces(_babel_runtime_corejs3_core_js_stable_instance_map__WEBPACK_IMPORTED_MODULE_2___default()(_context = _babel_runtime_corejs3_core_js_stable_array_from__WEBPACK_IMPORTED_MODULE_33___default()(node.childNodes)).call(_context, function (_) {
      return _.data;
    }).join('').replace(/(\/\*([^*]|[\r\n]|(\*+([^*\/]|[\r\n])))*\*+\/)|(^[\s]*\/\/.*)/gm, '') // remove comments
    .replace(/@import.*;/g, '') // remove imports
    );
    var cssDefs = css.split('}');

    _babel_runtime_corejs3_core_js_stable_instance_for_each__WEBPACK_IMPORTED_MODULE_7___default()(cssDefs).call(cssDefs, function (_) {
      var def = _babel_runtime_corejs3_core_js_stable_instance_trim__WEBPACK_IMPORTED_MODULE_24___default()(_).call(_);

      if (!def) {
        return;
      }

      var cssParts = def.split('{');
      var cssClasses = cssParts[0].split(',');
      var cssProps = cssParts[1].split(';');

      _babel_runtime_corejs3_core_js_stable_instance_for_each__WEBPACK_IMPORTED_MODULE_7___default()(cssClasses).call(cssClasses, function (_) {
        var cssClass = _babel_runtime_corejs3_core_js_stable_instance_trim__WEBPACK_IMPORTED_MODULE_24___default()(_).call(_);

        if (!cssClass) {
          return;
        }

        var props = document.styles[cssClass] || {};

        _babel_runtime_corejs3_core_js_stable_instance_for_each__WEBPACK_IMPORTED_MODULE_7___default()(cssProps).call(cssProps, function (cssProp) {
          var _context2, _context3;

          var prop = _babel_runtime_corejs3_core_js_stable_instance_index_of__WEBPACK_IMPORTED_MODULE_35___default()(cssProp).call(cssProp, ':');

          var name = _babel_runtime_corejs3_core_js_stable_instance_trim__WEBPACK_IMPORTED_MODULE_24___default()(_context2 = cssProp.substr(0, prop)).call(_context2);

          var value = _babel_runtime_corejs3_core_js_stable_instance_trim__WEBPACK_IMPORTED_MODULE_24___default()(_context3 = cssProp.substr(prop + 1, cssProp.length - prop)).call(_context3);

          if (name && value) {
            props[name] = new Property(document, name, value);
          }
        });

        document.styles[cssClass] = props;
        document.stylesSpecificity[cssClass] = getSelectorSpecificity(cssClass);

        if (cssClass === '@font-face') {
          //  && !nodeEnv
          var fontFamily = props['font-family'].getString().replace(/"|'/g, '');
          var srcs = props.src.getString().split(',');

          _babel_runtime_corejs3_core_js_stable_instance_for_each__WEBPACK_IMPORTED_MODULE_7___default()(srcs).call(srcs, function (src) {
            if (_babel_runtime_corejs3_core_js_stable_instance_index_of__WEBPACK_IMPORTED_MODULE_35___default()(src).call(src, 'format("svg")') > 0) {
              var url = parseExternalUrl(src);

              if (url) {
                new SVGFontLoader(document).load(fontFamily, url);
              }
            }
          });
        }
      });
    });

    return _this;
  }

  return StyleElement;
}(Element);

StyleElement.parseExternalUrl = parseExternalUrl;

function _createSuper$C(Derived) {
  var hasNativeReflectConstruct = _isNativeReflectConstruct$C();

  return function _createSuperInternal() {
    var Super = (0,_babel_runtime_corejs3_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_29__.default)(Derived),
        result;

    if (hasNativeReflectConstruct) {
      var NewTarget = (0,_babel_runtime_corejs3_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_29__.default)(this).constructor;

      result = _babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default()(Super, arguments, NewTarget);
    } else {
      result = Super.apply(this, arguments);
    }

    return (0,_babel_runtime_corejs3_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_28__.default)(this, result);
  };
}

function _isNativeReflectConstruct$C() {
  if (typeof Reflect === "undefined" || !(_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default())) return false;
  if ((_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default().sham)) return false;
  if (typeof Proxy === "function") return true;

  try {
    Date.prototype.toString.call(_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default()(Date, [], function () {}));
    return true;
  } catch (e) {
    return false;
  }
}

var UseElement = /*#__PURE__*/function (_RenderedElement) {
  (0,_babel_runtime_corejs3_helpers_inherits__WEBPACK_IMPORTED_MODULE_27__.default)(UseElement, _RenderedElement);

  var _super = _createSuper$C(UseElement);

  function UseElement() {
    var _this;

    (0,_babel_runtime_corejs3_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_15__.default)(this, UseElement);

    _this = _super.apply(this, arguments);
    _this.type = 'use';
    return _this;
  }

  (0,_babel_runtime_corejs3_helpers_createClass__WEBPACK_IMPORTED_MODULE_16__.default)(UseElement, [{
    key: "setContext",
    value: function setContext(ctx) {
      (0,_babel_runtime_corejs3_helpers_get__WEBPACK_IMPORTED_MODULE_36__.default)((0,_babel_runtime_corejs3_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_29__.default)(UseElement.prototype), "setContext", this).call(this, ctx);

      var xAttr = this.getAttribute('x');
      var yAttr = this.getAttribute('y');

      if (xAttr.hasValue()) {
        ctx.translate(xAttr.getPixels('x'), 0);
      }

      if (yAttr.hasValue()) {
        ctx.translate(0, yAttr.getPixels('y'));
      }
    }
  }, {
    key: "path",
    value: function path(ctx) {
      var element = this.element;

      if (element) {
        element.path(ctx);
      }
    }
  }, {
    key: "renderChildren",
    value: function renderChildren(ctx) {
      var document = this.document,
          element = this.element;

      if (element) {
        var tempSvg = element;

        if (element.type === 'symbol') {
          // render me using a temporary svg element in symbol cases (http://www.w3.org/TR/SVG/struct.html#UseElement)
          tempSvg = new SVGElement(document, null);
          tempSvg.attributes.viewBox = new Property(document, 'viewBox', element.getAttribute('viewBox').getString());
          tempSvg.attributes.preserveAspectRatio = new Property(document, 'preserveAspectRatio', element.getAttribute('preserveAspectRatio').getString());
          tempSvg.attributes.overflow = new Property(document, 'overflow', element.getAttribute('overflow').getString());
          tempSvg.children = element.children; // element is still the parent of the children

          element.styles.opacity = new Property(document, 'opacity', this.calculateOpacity());
        }

        if (tempSvg.type === 'svg') {
          var widthStyle = this.getStyle('width', false, true);
          var heightStyle = this.getStyle('height', false, true); // if symbol or svg, inherit width/height from me

          if (widthStyle.hasValue()) {
            tempSvg.attributes.width = new Property(document, 'width', widthStyle.getString());
          }

          if (heightStyle.hasValue()) {
            tempSvg.attributes.height = new Property(document, 'height', heightStyle.getString());
          }
        }

        var oldParent = tempSvg.parent;
        tempSvg.parent = this;
        tempSvg.render(ctx);
        tempSvg.parent = oldParent;
      }
    }
  }, {
    key: "getBoundingBox",
    value: function getBoundingBox(ctx) {
      var element = this.element;

      if (element) {
        return element.getBoundingBox(ctx);
      }

      return null;
    }
  }, {
    key: "elementTransform",
    value: function elementTransform() {
      var document = this.document,
          element = this.element;
      return Transform.fromElement(document, element);
    }
  }, {
    key: "element",
    get: function get() {
      if (!this._element) {
        this._element = this.getHrefAttribute().getDefinition();
      }

      return this._element;
    }
  }]);

  return UseElement;
}(RenderedElement);

function _createSuper$D(Derived) {
  var hasNativeReflectConstruct = _isNativeReflectConstruct$D();

  return function _createSuperInternal() {
    var Super = (0,_babel_runtime_corejs3_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_29__.default)(Derived),
        result;

    if (hasNativeReflectConstruct) {
      var NewTarget = (0,_babel_runtime_corejs3_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_29__.default)(this).constructor;

      result = _babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default()(Super, arguments, NewTarget);
    } else {
      result = Super.apply(this, arguments);
    }

    return (0,_babel_runtime_corejs3_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_28__.default)(this, result);
  };
}

function _isNativeReflectConstruct$D() {
  if (typeof Reflect === "undefined" || !(_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default())) return false;
  if ((_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default().sham)) return false;
  if (typeof Proxy === "function") return true;

  try {
    Date.prototype.toString.call(_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default()(Date, [], function () {}));
    return true;
  } catch (e) {
    return false;
  }
}

function imGet(img, x, y, width, _, rgba) {
  return img[y * width * 4 + x * 4 + rgba];
}

function imSet(img, x, y, width, _, rgba, val) {
  img[y * width * 4 + x * 4 + rgba] = val;
}

function m(matrix, i, v) {
  var mi = matrix[i];
  return mi * v;
}

function c(a, m1, m2, m3) {
  return m1 + Math.cos(a) * m2 + Math.sin(a) * m3;
}

var FeColorMatrixElement = /*#__PURE__*/function (_Element) {
  (0,_babel_runtime_corejs3_helpers_inherits__WEBPACK_IMPORTED_MODULE_27__.default)(FeColorMatrixElement, _Element);

  var _super = _createSuper$D(FeColorMatrixElement);

  function FeColorMatrixElement(document, node, captureTextNodes) {
    var _this;

    (0,_babel_runtime_corejs3_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_15__.default)(this, FeColorMatrixElement);

    _this = _super.call(this, document, node, captureTextNodes);
    _this.type = 'feColorMatrix';
    var matrix = toNumbers(_this.getAttribute('values').getString());

    switch (_this.getAttribute('type').getString('matrix')) {
      // http://www.w3.org/TR/SVG/filters.html#feColorMatrixElement
      case 'saturate':
        {
          var s = matrix[0];
          matrix = [0.213 + 0.787 * s, 0.715 - 0.715 * s, 0.072 - 0.072 * s, 0, 0, 0.213 - 0.213 * s, 0.715 + 0.285 * s, 0.072 - 0.072 * s, 0, 0, 0.213 - 0.213 * s, 0.715 - 0.715 * s, 0.072 + 0.928 * s, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1];
          break;
        }

      case 'hueRotate':
        {
          var a = matrix[0] * Math.PI / 180.0;
          matrix = [c(a, 0.213, 0.787, -0.213), c(a, 0.715, -0.715, -0.715), c(a, 0.072, -0.072, 0.928), 0, 0, c(a, 0.213, -0.213, 0.143), c(a, 0.715, 0.285, 0.140), c(a, 0.072, -0.072, -0.283), 0, 0, c(a, 0.213, -0.213, -0.787), c(a, 0.715, -0.715, 0.715), c(a, 0.072, 0.928, 0.072), 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1];
          break;
        }

      case 'luminanceToAlpha':
        matrix = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0.2125, 0.7154, 0.0721, 0, 0, 0, 0, 0, 0, 1];
        break;
    }

    _this.matrix = matrix;
    _this.includeOpacity = _this.getAttribute('includeOpacity').hasValue();
    return _this;
  }

  (0,_babel_runtime_corejs3_helpers_createClass__WEBPACK_IMPORTED_MODULE_16__.default)(FeColorMatrixElement, [{
    key: "apply",
    value: function apply(ctx, _, __, width, height) {
      // assuming x==0 && y==0 for now
      var includeOpacity = this.includeOpacity,
          matrix = this.matrix;
      var srcData = ctx.getImageData(0, 0, width, height);

      for (var y = 0; y < height; y++) {
        for (var x = 0; x < width; x++) {
          var r = imGet(srcData.data, x, y, width, height, 0);
          var g = imGet(srcData.data, x, y, width, height, 1);
          var b = imGet(srcData.data, x, y, width, height, 2);
          var a = imGet(srcData.data, x, y, width, height, 3);
          var nr = m(matrix, 0, r) + m(matrix, 1, g) + m(matrix, 2, b) + m(matrix, 3, a) + m(matrix, 4, 1);
          var ng = m(matrix, 5, r) + m(matrix, 6, g) + m(matrix, 7, b) + m(matrix, 8, a) + m(matrix, 9, 1);
          var nb = m(matrix, 10, r) + m(matrix, 11, g) + m(matrix, 12, b) + m(matrix, 13, a) + m(matrix, 14, 1);
          var na = m(matrix, 15, r) + m(matrix, 16, g) + m(matrix, 17, b) + m(matrix, 18, a) + m(matrix, 19, 1);

          if (includeOpacity) {
            nr = ng = nb = 0;
            na *= a / 255;
          }

          imSet(srcData.data, x, y, width, height, 0, nr);
          imSet(srcData.data, x, y, width, height, 1, ng);
          imSet(srcData.data, x, y, width, height, 2, nb);
          imSet(srcData.data, x, y, width, height, 3, na);
        }
      }

      ctx.clearRect(0, 0, width, height);
      ctx.putImageData(srcData, 0, 0);
    }
  }]);

  return FeColorMatrixElement;
}(Element);

function _createSuper$E(Derived) {
  var hasNativeReflectConstruct = _isNativeReflectConstruct$E();

  return function _createSuperInternal() {
    var Super = (0,_babel_runtime_corejs3_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_29__.default)(Derived),
        result;

    if (hasNativeReflectConstruct) {
      var NewTarget = (0,_babel_runtime_corejs3_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_29__.default)(this).constructor;

      result = _babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default()(Super, arguments, NewTarget);
    } else {
      result = Super.apply(this, arguments);
    }

    return (0,_babel_runtime_corejs3_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_28__.default)(this, result);
  };
}

function _isNativeReflectConstruct$E() {
  if (typeof Reflect === "undefined" || !(_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default())) return false;
  if ((_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default().sham)) return false;
  if (typeof Proxy === "function") return true;

  try {
    Date.prototype.toString.call(_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default()(Date, [], function () {}));
    return true;
  } catch (e) {
    return false;
  }
}

var MaskElement = /*#__PURE__*/function (_Element) {
  (0,_babel_runtime_corejs3_helpers_inherits__WEBPACK_IMPORTED_MODULE_27__.default)(MaskElement, _Element);

  var _super = _createSuper$E(MaskElement);

  function MaskElement() {
    var _this;

    (0,_babel_runtime_corejs3_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_15__.default)(this, MaskElement);

    _this = _super.apply(this, arguments);
    _this.type = 'mask';
    return _this;
  }

  (0,_babel_runtime_corejs3_helpers_createClass__WEBPACK_IMPORTED_MODULE_16__.default)(MaskElement, [{
    key: "apply",
    value: function apply(ctx, element) {
      var document = this.document; // render as temp svg

      var x = this.getAttribute('x').getPixels('x');
      var y = this.getAttribute('y').getPixels('y');
      var width = this.getStyle('width').getPixels('x');
      var height = this.getStyle('height').getPixels('y');

      if (!width && !height) {
        var _context;

        var boundingBox = new BoundingBox();

        _babel_runtime_corejs3_core_js_stable_instance_for_each__WEBPACK_IMPORTED_MODULE_7___default()(_context = this.children).call(_context, function (child) {
          boundingBox.addBoundingBox(child.getBoundingBox(ctx));
        });

        x = Math.floor(boundingBox.x1);
        y = Math.floor(boundingBox.y1);
        width = Math.floor(boundingBox.width);
        height = Math.floor(boundingBox.height);
      }

      var ignoredStyles = this.removeStyles(element, MaskElement.ignoreStyles);
      var maskCanvas = document.createCanvas(x + width, y + height);
      var maskCtx = maskCanvas.getContext('2d');
      document.screen.setDefaults(maskCtx);
      this.renderChildren(maskCtx); // convert mask to alpha with a fake node
      // TODO: refactor out apply from feColorMatrix

      new FeColorMatrixElement(document, {
        nodeType: 1,
        childNodes: [],
        attributes: [{
          nodeName: 'type',
          value: 'luminanceToAlpha'
        }, {
          nodeName: 'includeOpacity',
          value: 'true'
        }]
      }).apply(maskCtx, 0, 0, x + width, y + height);
      var tmpCanvas = document.createCanvas(x + width, y + height);
      var tmpCtx = tmpCanvas.getContext('2d');
      document.screen.setDefaults(tmpCtx);
      element.render(tmpCtx);
      tmpCtx.globalCompositeOperation = 'destination-in';
      tmpCtx.fillStyle = maskCtx.createPattern(maskCanvas, 'no-repeat');
      tmpCtx.fillRect(0, 0, x + width, y + height);
      ctx.fillStyle = tmpCtx.createPattern(tmpCanvas, 'no-repeat');
      ctx.fillRect(0, 0, x + width, y + height); // reassign mask

      this.restoreStyles(element, ignoredStyles);
    }
  }, {
    key: "render",
    value: function render(_) {// NO RENDER
    }
  }]);

  return MaskElement;
}(Element);

MaskElement.ignoreStyles = ['mask', 'transform', 'clip-path'];

function _createSuper$F(Derived) {
  var hasNativeReflectConstruct = _isNativeReflectConstruct$F();

  return function _createSuperInternal() {
    var Super = (0,_babel_runtime_corejs3_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_29__.default)(Derived),
        result;

    if (hasNativeReflectConstruct) {
      var NewTarget = (0,_babel_runtime_corejs3_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_29__.default)(this).constructor;

      result = _babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default()(Super, arguments, NewTarget);
    } else {
      result = Super.apply(this, arguments);
    }

    return (0,_babel_runtime_corejs3_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_28__.default)(this, result);
  };
}

function _isNativeReflectConstruct$F() {
  if (typeof Reflect === "undefined" || !(_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default())) return false;
  if ((_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default().sham)) return false;
  if (typeof Proxy === "function") return true;

  try {
    Date.prototype.toString.call(_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default()(Date, [], function () {}));
    return true;
  } catch (e) {
    return false;
  }
}

var noop = function noop() {};

var ClipPathElement = /*#__PURE__*/function (_Element) {
  (0,_babel_runtime_corejs3_helpers_inherits__WEBPACK_IMPORTED_MODULE_27__.default)(ClipPathElement, _Element);

  var _super = _createSuper$F(ClipPathElement);

  function ClipPathElement() {
    var _this;

    (0,_babel_runtime_corejs3_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_15__.default)(this, ClipPathElement);

    _this = _super.apply(this, arguments);
    _this.type = 'clipPath';
    return _this;
  }

  (0,_babel_runtime_corejs3_helpers_createClass__WEBPACK_IMPORTED_MODULE_16__.default)(ClipPathElement, [{
    key: "apply",
    value: function apply(ctx) {
      var _context;

      var document = this.document;

      var contextProto = _babel_runtime_corejs3_core_js_stable_reflect_get_prototype_of__WEBPACK_IMPORTED_MODULE_50___default()(ctx);

      var beginPath = ctx.beginPath,
          closePath = ctx.closePath;

      if (contextProto) {
        contextProto.beginPath = noop;
        contextProto.closePath = noop;
      }

      _babel_runtime_corejs3_core_js_stable_reflect_apply__WEBPACK_IMPORTED_MODULE_49___default()(beginPath, ctx, []);

      _babel_runtime_corejs3_core_js_stable_instance_for_each__WEBPACK_IMPORTED_MODULE_7___default()(_context = this.children).call(_context, function (child) {
        if (typeof child.path === 'undefined') {
          return;
        }

        var transform = typeof child.elementTransform !== 'undefined' ? child.elementTransform() : null; // handle <use />

        if (!transform) {
          transform = Transform.fromElement(document, child);
        }

        if (transform) {
          transform.apply(ctx);
        }

        child.path(ctx);

        if (contextProto) {
          contextProto.closePath = closePath;
        }

        if (transform) {
          transform.unapply(ctx);
        }
      });

      _babel_runtime_corejs3_core_js_stable_reflect_apply__WEBPACK_IMPORTED_MODULE_49___default()(closePath, ctx, []);

      ctx.clip();

      if (contextProto) {
        contextProto.beginPath = beginPath;
        contextProto.closePath = closePath;
      }
    }
  }, {
    key: "render",
    value: function render(_) {// NO RENDER
    }
  }]);

  return ClipPathElement;
}(Element);

function _createSuper$G(Derived) {
  var hasNativeReflectConstruct = _isNativeReflectConstruct$G();

  return function _createSuperInternal() {
    var Super = (0,_babel_runtime_corejs3_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_29__.default)(Derived),
        result;

    if (hasNativeReflectConstruct) {
      var NewTarget = (0,_babel_runtime_corejs3_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_29__.default)(this).constructor;

      result = _babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default()(Super, arguments, NewTarget);
    } else {
      result = Super.apply(this, arguments);
    }

    return (0,_babel_runtime_corejs3_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_28__.default)(this, result);
  };
}

function _isNativeReflectConstruct$G() {
  if (typeof Reflect === "undefined" || !(_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default())) return false;
  if ((_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default().sham)) return false;
  if (typeof Proxy === "function") return true;

  try {
    Date.prototype.toString.call(_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default()(Date, [], function () {}));
    return true;
  } catch (e) {
    return false;
  }
}

var FilterElement = /*#__PURE__*/function (_Element) {
  (0,_babel_runtime_corejs3_helpers_inherits__WEBPACK_IMPORTED_MODULE_27__.default)(FilterElement, _Element);

  var _super = _createSuper$G(FilterElement);

  function FilterElement() {
    var _this;

    (0,_babel_runtime_corejs3_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_15__.default)(this, FilterElement);

    _this = _super.apply(this, arguments);
    _this.type = 'filter';
    return _this;
  }

  (0,_babel_runtime_corejs3_helpers_createClass__WEBPACK_IMPORTED_MODULE_16__.default)(FilterElement, [{
    key: "apply",
    value: function apply(ctx, element) {
      // render as temp svg
      var document = this.document,
          children = this.children;
      var boundingBox = element.getBoundingBox(ctx);

      if (!boundingBox) {
        return;
      }

      var px = 0;
      var py = 0;

      _babel_runtime_corejs3_core_js_stable_instance_for_each__WEBPACK_IMPORTED_MODULE_7___default()(children).call(children, function (child) {
        var efd = child.extraFilterDistance || 0;
        px = Math.max(px, efd);
        py = Math.max(py, efd);
      });

      var width = Math.floor(boundingBox.width);
      var height = Math.floor(boundingBox.height);
      var tmpCanvasWidth = width + 2 * px;
      var tmpCanvasHeight = height + 2 * py;

      if (tmpCanvasWidth < 1 || tmpCanvasHeight < 1) {
        return;
      }

      var x = Math.floor(boundingBox.x);
      var y = Math.floor(boundingBox.y);
      var ignoredStyles = this.removeStyles(element, FilterElement.ignoreStyles);
      var tmpCanvas = document.createCanvas(tmpCanvasWidth, tmpCanvasHeight);
      var tmpCtx = tmpCanvas.getContext('2d');
      document.screen.setDefaults(tmpCtx);
      tmpCtx.translate(-x + px, -y + py);
      element.render(tmpCtx); // apply filters

      _babel_runtime_corejs3_core_js_stable_instance_for_each__WEBPACK_IMPORTED_MODULE_7___default()(children).call(children, function (child) {
        if (typeof child.apply === 'function') {
          child.apply(tmpCtx, 0, 0, tmpCanvasWidth, tmpCanvasHeight);
        }
      }); // render on me


      ctx.drawImage(tmpCanvas, 0, 0, tmpCanvasWidth, tmpCanvasHeight, x - px, y - py, tmpCanvasWidth, tmpCanvasHeight);
      this.restoreStyles(element, ignoredStyles);
    }
  }, {
    key: "render",
    value: function render(_) {// NO RENDER
    }
  }]);

  return FilterElement;
}(Element);

FilterElement.ignoreStyles = ['filter', 'transform', 'clip-path'];

function _createSuper$H(Derived) {
  var hasNativeReflectConstruct = _isNativeReflectConstruct$H();

  return function _createSuperInternal() {
    var Super = (0,_babel_runtime_corejs3_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_29__.default)(Derived),
        result;

    if (hasNativeReflectConstruct) {
      var NewTarget = (0,_babel_runtime_corejs3_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_29__.default)(this).constructor;

      result = _babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default()(Super, arguments, NewTarget);
    } else {
      result = Super.apply(this, arguments);
    }

    return (0,_babel_runtime_corejs3_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_28__.default)(this, result);
  };
}

function _isNativeReflectConstruct$H() {
  if (typeof Reflect === "undefined" || !(_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default())) return false;
  if ((_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default().sham)) return false;
  if (typeof Proxy === "function") return true;

  try {
    Date.prototype.toString.call(_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default()(Date, [], function () {}));
    return true;
  } catch (e) {
    return false;
  }
}

var FeDropShadowElement = /*#__PURE__*/function (_Element) {
  (0,_babel_runtime_corejs3_helpers_inherits__WEBPACK_IMPORTED_MODULE_27__.default)(FeDropShadowElement, _Element);

  var _super = _createSuper$H(FeDropShadowElement);

  function FeDropShadowElement(document, node, captureTextNodes) {
    var _this;

    (0,_babel_runtime_corejs3_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_15__.default)(this, FeDropShadowElement);

    _this = _super.call(this, document, node, captureTextNodes);
    _this.type = 'feDropShadow';

    _this.addStylesFromStyleDefinition();

    return _this;
  }

  (0,_babel_runtime_corejs3_helpers_createClass__WEBPACK_IMPORTED_MODULE_16__.default)(FeDropShadowElement, [{
    key: "apply",
    value: function apply(_, __, ___, ____, _____) {// TODO: implement
    }
  }]);

  return FeDropShadowElement;
}(Element);

function _createSuper$I(Derived) {
  var hasNativeReflectConstruct = _isNativeReflectConstruct$I();

  return function _createSuperInternal() {
    var Super = (0,_babel_runtime_corejs3_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_29__.default)(Derived),
        result;

    if (hasNativeReflectConstruct) {
      var NewTarget = (0,_babel_runtime_corejs3_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_29__.default)(this).constructor;

      result = _babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default()(Super, arguments, NewTarget);
    } else {
      result = Super.apply(this, arguments);
    }

    return (0,_babel_runtime_corejs3_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_28__.default)(this, result);
  };
}

function _isNativeReflectConstruct$I() {
  if (typeof Reflect === "undefined" || !(_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default())) return false;
  if ((_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default().sham)) return false;
  if (typeof Proxy === "function") return true;

  try {
    Date.prototype.toString.call(_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default()(Date, [], function () {}));
    return true;
  } catch (e) {
    return false;
  }
}

var FeMorphologyElement = /*#__PURE__*/function (_Element) {
  (0,_babel_runtime_corejs3_helpers_inherits__WEBPACK_IMPORTED_MODULE_27__.default)(FeMorphologyElement, _Element);

  var _super = _createSuper$I(FeMorphologyElement);

  function FeMorphologyElement() {
    var _this;

    (0,_babel_runtime_corejs3_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_15__.default)(this, FeMorphologyElement);

    _this = _super.apply(this, arguments);
    _this.type = 'feMorphology';
    return _this;
  }

  (0,_babel_runtime_corejs3_helpers_createClass__WEBPACK_IMPORTED_MODULE_16__.default)(FeMorphologyElement, [{
    key: "apply",
    value: function apply(_, __, ___, ____, _____) {// TODO: implement
    }
  }]);

  return FeMorphologyElement;
}(Element);

function _createSuper$J(Derived) {
  var hasNativeReflectConstruct = _isNativeReflectConstruct$J();

  return function _createSuperInternal() {
    var Super = (0,_babel_runtime_corejs3_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_29__.default)(Derived),
        result;

    if (hasNativeReflectConstruct) {
      var NewTarget = (0,_babel_runtime_corejs3_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_29__.default)(this).constructor;

      result = _babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default()(Super, arguments, NewTarget);
    } else {
      result = Super.apply(this, arguments);
    }

    return (0,_babel_runtime_corejs3_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_28__.default)(this, result);
  };
}

function _isNativeReflectConstruct$J() {
  if (typeof Reflect === "undefined" || !(_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default())) return false;
  if ((_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default().sham)) return false;
  if (typeof Proxy === "function") return true;

  try {
    Date.prototype.toString.call(_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default()(Date, [], function () {}));
    return true;
  } catch (e) {
    return false;
  }
}

var FeCompositeElement = /*#__PURE__*/function (_Element) {
  (0,_babel_runtime_corejs3_helpers_inherits__WEBPACK_IMPORTED_MODULE_27__.default)(FeCompositeElement, _Element);

  var _super = _createSuper$J(FeCompositeElement);

  function FeCompositeElement() {
    var _this;

    (0,_babel_runtime_corejs3_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_15__.default)(this, FeCompositeElement);

    _this = _super.apply(this, arguments);
    _this.type = 'feComposite';
    return _this;
  }

  (0,_babel_runtime_corejs3_helpers_createClass__WEBPACK_IMPORTED_MODULE_16__.default)(FeCompositeElement, [{
    key: "apply",
    value: function apply(_, __, ___, ____, _____) {// TODO: implement
    }
  }]);

  return FeCompositeElement;
}(Element);

function _createSuper$K(Derived) {
  var hasNativeReflectConstruct = _isNativeReflectConstruct$K();

  return function _createSuperInternal() {
    var Super = (0,_babel_runtime_corejs3_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_29__.default)(Derived),
        result;

    if (hasNativeReflectConstruct) {
      var NewTarget = (0,_babel_runtime_corejs3_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_29__.default)(this).constructor;

      result = _babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default()(Super, arguments, NewTarget);
    } else {
      result = Super.apply(this, arguments);
    }

    return (0,_babel_runtime_corejs3_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_28__.default)(this, result);
  };
}

function _isNativeReflectConstruct$K() {
  if (typeof Reflect === "undefined" || !(_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default())) return false;
  if ((_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default().sham)) return false;
  if (typeof Proxy === "function") return true;

  try {
    Date.prototype.toString.call(_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default()(Date, [], function () {}));
    return true;
  } catch (e) {
    return false;
  }
}

var FeGaussianBlurElement = /*#__PURE__*/function (_Element) {
  (0,_babel_runtime_corejs3_helpers_inherits__WEBPACK_IMPORTED_MODULE_27__.default)(FeGaussianBlurElement, _Element);

  var _super = _createSuper$K(FeGaussianBlurElement);

  function FeGaussianBlurElement(document, node, captureTextNodes) {
    var _this;

    (0,_babel_runtime_corejs3_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_15__.default)(this, FeGaussianBlurElement);

    _this = _super.call(this, document, node, captureTextNodes);
    _this.type = 'feGaussianBlur';
    _this.blurRadius = Math.floor(_this.getAttribute('stdDeviation').getNumber());
    _this.extraFilterDistance = _this.blurRadius;
    return _this;
  }

  (0,_babel_runtime_corejs3_helpers_createClass__WEBPACK_IMPORTED_MODULE_16__.default)(FeGaussianBlurElement, [{
    key: "apply",
    value: function apply(ctx, x, y, width, height) {
      var document = this.document,
          blurRadius = this.blurRadius;
      var body = document.window ? document.window.document.body : null;
      var canvas = ctx.canvas; // StackBlur requires canvas be on document

      canvas.id = document.getUniqueId();

      if (body) {
        canvas.style.display = 'none';
        body.appendChild(canvas);
      }

      (0,stackblur_canvas__WEBPACK_IMPORTED_MODULE_51__.canvasRGBA)(canvas, x, y, width, height, blurRadius);

      if (body) {
        body.removeChild(canvas);
      }
    }
  }]);

  return FeGaussianBlurElement;
}(Element);

function _createSuper$L(Derived) {
  var hasNativeReflectConstruct = _isNativeReflectConstruct$L();

  return function _createSuperInternal() {
    var Super = (0,_babel_runtime_corejs3_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_29__.default)(Derived),
        result;

    if (hasNativeReflectConstruct) {
      var NewTarget = (0,_babel_runtime_corejs3_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_29__.default)(this).constructor;

      result = _babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default()(Super, arguments, NewTarget);
    } else {
      result = Super.apply(this, arguments);
    }

    return (0,_babel_runtime_corejs3_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_28__.default)(this, result);
  };
}

function _isNativeReflectConstruct$L() {
  if (typeof Reflect === "undefined" || !(_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default())) return false;
  if ((_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default().sham)) return false;
  if (typeof Proxy === "function") return true;

  try {
    Date.prototype.toString.call(_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default()(Date, [], function () {}));
    return true;
  } catch (e) {
    return false;
  }
}

var TitleElement = /*#__PURE__*/function (_Element) {
  (0,_babel_runtime_corejs3_helpers_inherits__WEBPACK_IMPORTED_MODULE_27__.default)(TitleElement, _Element);

  var _super = _createSuper$L(TitleElement);

  function TitleElement() {
    var _this;

    (0,_babel_runtime_corejs3_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_15__.default)(this, TitleElement);

    _this = _super.apply(this, arguments);
    _this.type = 'title';
    return _this;
  }

  return TitleElement;
}(Element);

function _createSuper$M(Derived) {
  var hasNativeReflectConstruct = _isNativeReflectConstruct$M();

  return function _createSuperInternal() {
    var Super = (0,_babel_runtime_corejs3_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_29__.default)(Derived),
        result;

    if (hasNativeReflectConstruct) {
      var NewTarget = (0,_babel_runtime_corejs3_helpers_getPrototypeOf__WEBPACK_IMPORTED_MODULE_29__.default)(this).constructor;

      result = _babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default()(Super, arguments, NewTarget);
    } else {
      result = Super.apply(this, arguments);
    }

    return (0,_babel_runtime_corejs3_helpers_possibleConstructorReturn__WEBPACK_IMPORTED_MODULE_28__.default)(this, result);
  };
}

function _isNativeReflectConstruct$M() {
  if (typeof Reflect === "undefined" || !(_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default())) return false;
  if ((_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default().sham)) return false;
  if (typeof Proxy === "function") return true;

  try {
    Date.prototype.toString.call(_babel_runtime_corejs3_core_js_stable_reflect_construct__WEBPACK_IMPORTED_MODULE_26___default()(Date, [], function () {}));
    return true;
  } catch (e) {
    return false;
  }
}

var DescElement = /*#__PURE__*/function (_Element) {
  (0,_babel_runtime_corejs3_helpers_inherits__WEBPACK_IMPORTED_MODULE_27__.default)(DescElement, _Element);

  var _super = _createSuper$M(DescElement);

  function DescElement() {
    var _this;

    (0,_babel_runtime_corejs3_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_15__.default)(this, DescElement);

    _this = _super.apply(this, arguments);
    _this.type = 'desc';
    return _this;
  }

  return DescElement;
}(Element);

var elementTypes = {
  'svg': SVGElement,
  'rect': RectElement,
  'circle': CircleElement,
  'ellipse': EllipseElement,
  'line': LineElement,
  'polyline': PolylineElement,
  'polygon': PolygonElement,
  'path': PathElement,
  'pattern': PatternElement,
  'marker': MarkerElement,
  'defs': DefsElement,
  'linearGradient': LinearGradientElement,
  'radialGradient': RadialGradientElement,
  'stop': StopElement,
  'animate': AnimateElement,
  'animateColor': AnimateColorElement,
  'animateTransform': AnimateTransformElement,
  'font': FontElement,
  'font-face': FontFaceElement,
  'missing-glyph': MissingGlyphElement,
  'glyph': GlyphElement,
  'text': TextElement,
  'tspan': TSpanElement,
  'tref': TRefElement,
  'a': AElement,
  'textPath': TextPathElement,
  'image': ImageElement,
  'g': GElement,
  'symbol': SymbolElement,
  'style': StyleElement,
  'use': UseElement,
  'mask': MaskElement,
  'clipPath': ClipPathElement,
  'filter': FilterElement,
  'feDropShadow': FeDropShadowElement,
  'feMorphology': FeMorphologyElement,
  'feComposite': FeCompositeElement,
  'feColorMatrix': FeColorMatrixElement,
  'feGaussianBlur': FeGaussianBlurElement,
  'title': TitleElement,
  'desc': DescElement
};

function ownKeys$1(object, enumerableOnly) {
  var keys = _babel_runtime_corejs3_core_js_stable_object_keys__WEBPACK_IMPORTED_MODULE_11___default()(object);

  if ((_babel_runtime_corejs3_core_js_stable_object_get_own_property_symbols__WEBPACK_IMPORTED_MODULE_10___default())) {
    var symbols = _babel_runtime_corejs3_core_js_stable_object_get_own_property_symbols__WEBPACK_IMPORTED_MODULE_10___default()(object);

    if (enumerableOnly) symbols = _babel_runtime_corejs3_core_js_stable_instance_filter__WEBPACK_IMPORTED_MODULE_9___default()(symbols).call(symbols, function (sym) {
      return _babel_runtime_corejs3_core_js_stable_object_get_own_property_descriptor__WEBPACK_IMPORTED_MODULE_8___default()(object, sym).enumerable;
    });
    keys.push.apply(keys, symbols);
  }

  return keys;
}

function _objectSpread$1(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};

    if (i % 2) {
      var _context5;

      _babel_runtime_corejs3_core_js_stable_instance_for_each__WEBPACK_IMPORTED_MODULE_7___default()(_context5 = ownKeys$1(Object(source), true)).call(_context5, function (key) {
        (0,_babel_runtime_corejs3_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_14__.default)(target, key, source[key]);
      });
    } else if ((_babel_runtime_corejs3_core_js_stable_object_get_own_property_descriptors__WEBPACK_IMPORTED_MODULE_6___default())) {
      _babel_runtime_corejs3_core_js_stable_object_define_properties__WEBPACK_IMPORTED_MODULE_5___default()(target, _babel_runtime_corejs3_core_js_stable_object_get_own_property_descriptors__WEBPACK_IMPORTED_MODULE_6___default()(source));
    } else {
      var _context6;

      _babel_runtime_corejs3_core_js_stable_instance_for_each__WEBPACK_IMPORTED_MODULE_7___default()(_context6 = ownKeys$1(Object(source))).call(_context6, function (key) {
        _babel_runtime_corejs3_core_js_stable_object_define_property__WEBPACK_IMPORTED_MODULE_4___default()(target, key, _babel_runtime_corejs3_core_js_stable_object_get_own_property_descriptor__WEBPACK_IMPORTED_MODULE_8___default()(source, key));
      });
    }
  }

  return target;
}

function createCanvas(width, height) {
  var canvas = document.createElement('canvas');
  canvas.width = width;
  canvas.height = height;
  return canvas;
}

function createImage(_x) {
  return _createImage.apply(this, arguments);
}

function _createImage() {
  _createImage = (0,_babel_runtime_corejs3_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_13__.default)( /*#__PURE__*/_babel_runtime_corejs3_regenerator__WEBPACK_IMPORTED_MODULE_12___default().mark(function _callee(src) {
    var anonymousCrossOrigin,
        image,
        _args = arguments;
    return _babel_runtime_corejs3_regenerator__WEBPACK_IMPORTED_MODULE_12___default().wrap(function _callee$(_context7) {
      while (1) {
        switch (_context7.prev = _context7.next) {
          case 0:
            anonymousCrossOrigin = _args.length > 1 && _args[1] !== undefined ? _args[1] : false;
            image = document.createElement('img');

            if (anonymousCrossOrigin) {
              image.crossOrigin = 'Anonymous';
            }

            return _context7.abrupt("return", new (_babel_runtime_corejs3_core_js_stable_promise__WEBPACK_IMPORTED_MODULE_21___default())(function (resolve, reject) {
              image.onload = function () {
                resolve(image);
              };

              image.onerror = function () {
                reject();
              };

              image.src = src;
            }));

          case 4:
          case "end":
            return _context7.stop();
        }
      }
    }, _callee);
  }));
  return _createImage.apply(this, arguments);
}

var Document = /*#__PURE__*/function () {
  function Document(canvg) {
    var _context, _context2;

    var _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},
        _ref$rootEmSize = _ref.rootEmSize,
        rootEmSize = _ref$rootEmSize === void 0 ? 12 : _ref$rootEmSize,
        _ref$emSize = _ref.emSize,
        emSize = _ref$emSize === void 0 ? 12 : _ref$emSize,
        _ref$createCanvas = _ref.createCanvas,
        createCanvas = _ref$createCanvas === void 0 ? Document.createCanvas : _ref$createCanvas,
        _ref$createImage = _ref.createImage,
        createImage = _ref$createImage === void 0 ? Document.createImage : _ref$createImage,
        anonymousCrossOrigin = _ref.anonymousCrossOrigin;

    (0,_babel_runtime_corejs3_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_15__.default)(this, Document);

    this.canvg = canvg;
    this.definitions = {};
    this.styles = {};
    this.stylesSpecificity = {};
    this.images = [];
    this.fonts = [];
    this.emSizeStack = [];
    this.uniqueId = 0;
    this.screen = canvg.screen;
    this.rootEmSize = rootEmSize;
    this.emSize = emSize;
    this.createCanvas = createCanvas;
    this.createImage = this.bindCreateImage(createImage, anonymousCrossOrigin);
    this.screen.wait(_babel_runtime_corejs3_core_js_stable_instance_bind__WEBPACK_IMPORTED_MODULE_22___default()(_context = this.isImagesLoaded).call(_context, this));
    this.screen.wait(_babel_runtime_corejs3_core_js_stable_instance_bind__WEBPACK_IMPORTED_MODULE_22___default()(_context2 = this.isFontsLoaded).call(_context2, this));
  }

  (0,_babel_runtime_corejs3_helpers_createClass__WEBPACK_IMPORTED_MODULE_16__.default)(Document, [{
    key: "bindCreateImage",
    value: function bindCreateImage(createImage, anonymousCrossOrigin) {
      if (typeof anonymousCrossOrigin === 'boolean') {
        return function (source, forceAnonymousCrossOrigin) {
          return createImage(source, typeof forceAnonymousCrossOrigin === 'boolean' ? forceAnonymousCrossOrigin : anonymousCrossOrigin);
        };
      }

      return createImage;
    }
  }, {
    key: "popEmSize",
    value: function popEmSize() {
      var emSizeStack = this.emSizeStack;
      emSizeStack.pop();
    }
  }, {
    key: "getUniqueId",
    value: function getUniqueId() {
      return "canvg".concat(++this.uniqueId);
    }
  }, {
    key: "isImagesLoaded",
    value: function isImagesLoaded() {
      var _context3;

      return _babel_runtime_corejs3_core_js_stable_instance_every__WEBPACK_IMPORTED_MODULE_20___default()(_context3 = this.images).call(_context3, function (_) {
        return _.loaded;
      });
    }
  }, {
    key: "isFontsLoaded",
    value: function isFontsLoaded() {
      var _context4;

      return _babel_runtime_corejs3_core_js_stable_instance_every__WEBPACK_IMPORTED_MODULE_20___default()(_context4 = this.fonts).call(_context4, function (_) {
        return _.loaded;
      });
    }
  }, {
    key: "createDocumentElement",
    value: function createDocumentElement(document) {
      var documentElement = this.createElement(document.documentElement);
      documentElement.root = true;
      documentElement.addStylesFromStyleDefinition();
      this.documentElement = documentElement;
      return documentElement;
    }
  }, {
    key: "createElement",
    value: function createElement(node) {
      var elementType = node.nodeName.replace(/^[^:]+:/, '');
      var ElementType = Document.elementTypes[elementType];

      if (typeof ElementType !== 'undefined') {
        return new ElementType(this, node);
      }

      return new UnknownElement(this, node);
    }
  }, {
    key: "createTextNode",
    value: function createTextNode(node) {
      return new TextNode(this, node);
    }
  }, {
    key: "setViewBox",
    value: function setViewBox(config) {
      this.screen.setViewBox(_objectSpread$1({
        document: this
      }, config));
    }
  }, {
    key: "window",
    get: function get() {
      return this.screen.window;
    }
  }, {
    key: "fetch",
    get: function get() {
      return this.screen.fetch;
    }
  }, {
    key: "ctx",
    get: function get() {
      return this.screen.ctx;
    }
  }, {
    key: "emSize",
    get: function get() {
      var emSizeStack = this.emSizeStack;
      return emSizeStack[emSizeStack.length - 1];
    },
    set: function set(value) {
      var emSizeStack = this.emSizeStack;
      emSizeStack.push(value);
    }
  }]);

  return Document;
}();

Document.createCanvas = createCanvas;
Document.createImage = createImage;
Document.elementTypes = elementTypes;

function ownKeys$2(object, enumerableOnly) {
  var keys = _babel_runtime_corejs3_core_js_stable_object_keys__WEBPACK_IMPORTED_MODULE_11___default()(object);

  if ((_babel_runtime_corejs3_core_js_stable_object_get_own_property_symbols__WEBPACK_IMPORTED_MODULE_10___default())) {
    var symbols = _babel_runtime_corejs3_core_js_stable_object_get_own_property_symbols__WEBPACK_IMPORTED_MODULE_10___default()(object);

    if (enumerableOnly) symbols = _babel_runtime_corejs3_core_js_stable_instance_filter__WEBPACK_IMPORTED_MODULE_9___default()(symbols).call(symbols, function (sym) {
      return _babel_runtime_corejs3_core_js_stable_object_get_own_property_descriptor__WEBPACK_IMPORTED_MODULE_8___default()(object, sym).enumerable;
    });
    keys.push.apply(keys, symbols);
  }

  return keys;
}

function _objectSpread$2(target) {
  for (var i = 1; i < arguments.length; i++) {
    var source = arguments[i] != null ? arguments[i] : {};

    if (i % 2) {
      var _context3;

      _babel_runtime_corejs3_core_js_stable_instance_for_each__WEBPACK_IMPORTED_MODULE_7___default()(_context3 = ownKeys$2(Object(source), true)).call(_context3, function (key) {
        (0,_babel_runtime_corejs3_helpers_defineProperty__WEBPACK_IMPORTED_MODULE_14__.default)(target, key, source[key]);
      });
    } else if ((_babel_runtime_corejs3_core_js_stable_object_get_own_property_descriptors__WEBPACK_IMPORTED_MODULE_6___default())) {
      _babel_runtime_corejs3_core_js_stable_object_define_properties__WEBPACK_IMPORTED_MODULE_5___default()(target, _babel_runtime_corejs3_core_js_stable_object_get_own_property_descriptors__WEBPACK_IMPORTED_MODULE_6___default()(source));
    } else {
      var _context4;

      _babel_runtime_corejs3_core_js_stable_instance_for_each__WEBPACK_IMPORTED_MODULE_7___default()(_context4 = ownKeys$2(Object(source))).call(_context4, function (key) {
        _babel_runtime_corejs3_core_js_stable_object_define_property__WEBPACK_IMPORTED_MODULE_4___default()(target, key, _babel_runtime_corejs3_core_js_stable_object_get_own_property_descriptor__WEBPACK_IMPORTED_MODULE_8___default()(source, key));
      });
    }
  }

  return target;
}
/**
 * SVG renderer on canvas.
 */


var Canvg = /*#__PURE__*/function () {
  /**
   * Main constructor.
   * @param ctx - Rendering context.
   * @param svg - SVG Document.
   * @param options - Rendering options.
   */
  function Canvg(ctx, svg) {
    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};

    (0,_babel_runtime_corejs3_helpers_classCallCheck__WEBPACK_IMPORTED_MODULE_15__.default)(this, Canvg);

    this.parser = new Parser(options);
    this.screen = new Screen(ctx, options);
    this.options = options;
    var document = new Document(this, options);
    var documentElement = document.createDocumentElement(svg);
    this.document = document;
    this.documentElement = documentElement;
  }
  /**
   * Create Canvg instance from SVG source string or URL.
   * @param ctx - Rendering context.
   * @param svg - SVG source string or URL.
   * @param options - Rendering options.
   */


  (0,_babel_runtime_corejs3_helpers_createClass__WEBPACK_IMPORTED_MODULE_16__.default)(Canvg, [{
    key: "fork",

    /**
     * Create new Canvg instance with inherited options.
     * @param ctx - Rendering context.
     * @param svg - SVG source string or URL.
     * @param options - Rendering options.
     */
    value: function fork(ctx, svg) {
      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
      return Canvg.from(ctx, svg, _objectSpread$2(_objectSpread$2({}, this.options), options));
    }
    /**
     * Create new Canvg instance with inherited options.
     * @param ctx - Rendering context.
     * @param svg - SVG source string.
     * @param options - Rendering options.
     */

  }, {
    key: "forkString",
    value: function forkString(ctx, svg) {
      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
      return Canvg.fromString(ctx, svg, _objectSpread$2(_objectSpread$2({}, this.options), options));
    }
    /**
     * Document is ready promise.
     */

  }, {
    key: "ready",
    value: function ready() {
      return this.screen.ready();
    }
    /**
     * Document is ready value.
     */

  }, {
    key: "isReady",
    value: function isReady() {
      return this.screen.isReady();
    }
    /**
     * Render only first frame, ignoring animations and mouse.
     * @param options - Rendering options.
     */

  }, {
    key: "render",
    value: function () {
      var _render = (0,_babel_runtime_corejs3_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_13__.default)( /*#__PURE__*/_babel_runtime_corejs3_regenerator__WEBPACK_IMPORTED_MODULE_12___default().mark(function _callee() {
        var options,
            _args = arguments;
        return _babel_runtime_corejs3_regenerator__WEBPACK_IMPORTED_MODULE_12___default().wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                options = _args.length > 0 && _args[0] !== undefined ? _args[0] : {};
                this.start(_objectSpread$2({
                  enableRedraw: true,
                  ignoreAnimation: true,
                  ignoreMouse: true
                }, options));
                _context.next = 4;
                return this.ready();

              case 4:
                this.stop();

              case 5:
              case "end":
                return _context.stop();
            }
          }
        }, _callee, this);
      }));

      function render() {
        return _render.apply(this, arguments);
      }

      return render;
    }()
    /**
     * Start rendering.
     * @param options - Render options.
     */

  }, {
    key: "start",
    value: function start() {
      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
      var documentElement = this.documentElement,
          screen = this.screen,
          baseOptions = this.options;
      screen.start(documentElement, _objectSpread$2(_objectSpread$2({
        enableRedraw: true
      }, baseOptions), options));
    }
    /**
     * Stop rendering.
     */

  }, {
    key: "stop",
    value: function stop() {
      this.screen.stop();
    }
    /**
     * Resize SVG to fit in given size.
     * @param width
     * @param height
     * @param preserveAspectRatio
     */

  }, {
    key: "resize",
    value: function resize(width) {
      var height = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : width;
      var preserveAspectRatio = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;
      this.documentElement.resize(width, height, preserveAspectRatio);
    }
  }], [{
    key: "from",
    value: function () {
      var _from = (0,_babel_runtime_corejs3_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_13__.default)( /*#__PURE__*/_babel_runtime_corejs3_regenerator__WEBPACK_IMPORTED_MODULE_12___default().mark(function _callee2(ctx, svg) {
        var options,
            parser,
            svgDocument,
            _args2 = arguments;
        return _babel_runtime_corejs3_regenerator__WEBPACK_IMPORTED_MODULE_12___default().wrap(function _callee2$(_context2) {
          while (1) {
            switch (_context2.prev = _context2.next) {
              case 0:
                options = _args2.length > 2 && _args2[2] !== undefined ? _args2[2] : {};
                parser = new Parser(options);
                _context2.next = 4;
                return parser.parse(svg);

              case 4:
                svgDocument = _context2.sent;
                return _context2.abrupt("return", new Canvg(ctx, svgDocument, options));

              case 6:
              case "end":
                return _context2.stop();
            }
          }
        }, _callee2);
      }));

      function from(_x, _x2) {
        return _from.apply(this, arguments);
      }

      return from;
    }()
    /**
     * Create Canvg instance from SVG source string.
     * @param ctx - Rendering context.
     * @param svg - SVG source string.
     * @param options - Rendering options.
     */

  }, {
    key: "fromString",
    value: function fromString(ctx, svg) {
      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
      var parser = new Parser(options);
      var svgDocument = parser.parseFromString(svg);
      return new Canvg(ctx, svgDocument, options);
    }
  }]);

  return Canvg;
}();
/**
 * Options preset for `OffscreenCanvas`.
 * @param config - Preset requirements.
 * @param config.DOMParser - XML/HTML parser from string into DOM Document.
 */


function offscreen() {
  var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},
      DOMParserFallback = _ref.DOMParser;

  var preset = {
    window: null,
    ignoreAnimation: true,
    ignoreMouse: true,
    DOMParser: DOMParserFallback,
    createCanvas: function createCanvas(width, height) {
      return new OffscreenCanvas(width, height);
    },
    createImage: function createImage(url) {
      return (0,_babel_runtime_corejs3_helpers_asyncToGenerator__WEBPACK_IMPORTED_MODULE_13__.default)( /*#__PURE__*/_babel_runtime_corejs3_regenerator__WEBPACK_IMPORTED_MODULE_12___default().mark(function _callee() {
        var response, blob, img;
        return _babel_runtime_corejs3_regenerator__WEBPACK_IMPORTED_MODULE_12___default().wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                _context.next = 2;
                return fetch(url);

              case 2:
                response = _context.sent;
                _context.next = 5;
                return response.blob();

              case 5:
                blob = _context.sent;
                _context.next = 8;
                return createImageBitmap(blob);

              case 8:
                img = _context.sent;
                return _context.abrupt("return", img);

              case 10:
              case "end":
                return _context.stop();
            }
          }
        }, _callee);
      }))();
    }
  };

  if (typeof DOMParser !== 'undefined' || typeof DOMParserFallback === 'undefined') {
    _babel_runtime_corejs3_core_js_stable_reflect_delete_property__WEBPACK_IMPORTED_MODULE_39___default()(preset, 'DOMParser');
  }

  return preset;
}
/**
 * Options preset for `node-canvas`.
 * @param config - Preset requirements.
 * @param config.DOMParser - XML/HTML parser from string into DOM Document.
 * @param config.canvas - `node-canvas` exports.
 * @param config.fetch - WHATWG-compatible `fetch` function.
 */


function node(_ref) {
  var DOMParser = _ref.DOMParser,
      canvas = _ref.canvas,
      fetch = _ref.fetch;
  return {
    window: null,
    ignoreAnimation: true,
    ignoreMouse: true,
    DOMParser: DOMParser,
    fetch: fetch,
    createCanvas: canvas.createCanvas,
    createImage: canvas.loadImage
  };
}

var index = /*#__PURE__*/Object.freeze({
  __proto__: null,
  offscreen: offscreen,
  node: node
});
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (Canvg);


/***/ }),
/* 2 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

module.exports = __webpack_require__(3);

/***/ }),
/* 3 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var parent = __webpack_require__(4);

module.exports = parent;

/***/ }),
/* 4 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var startsWith = __webpack_require__(5);

var StringPrototype = String.prototype;

module.exports = function (it) {
  var own = it.startsWith;
  return typeof it === 'string' || it === StringPrototype || it instanceof String && own === StringPrototype.startsWith ? startsWith : own;
};

/***/ }),
/* 5 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

__webpack_require__(6);

var entryVirtual = __webpack_require__(47);

module.exports = entryVirtual('String').startsWith;

/***/ }),
/* 6 */
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var $ = __webpack_require__(7);

var getOwnPropertyDescriptor = __webpack_require__(9).f;

var toLength = __webpack_require__(31);

var notARegExp = __webpack_require__(33);

var requireObjectCoercible = __webpack_require__(17);

var correctIsRegExpLogic = __webpack_require__(46);

var IS_PURE = __webpack_require__(37); // eslint-disable-next-line es/no-string-prototype-startswith -- safe


var $startsWith = ''.startsWith;
var min = Math.min;
var CORRECT_IS_REGEXP_LOGIC = correctIsRegExpLogic('startsWith'); // https://github.com/zloirock/core-js/pull/702

var MDN_POLYFILL_BUG = !IS_PURE && !CORRECT_IS_REGEXP_LOGIC && !!function () {
  var descriptor = getOwnPropertyDescriptor(String.prototype, 'startsWith');
  return descriptor && !descriptor.writable;
}(); // `String.prototype.startsWith` method
// https://tc39.es/ecma262/#sec-string.prototype.startswith

$({
  target: 'String',
  proto: true,
  forced: !MDN_POLYFILL_BUG && !CORRECT_IS_REGEXP_LOGIC
}, {
  startsWith: function startsWith(searchString
  /* , position = 0 */
  ) {
    var that = String(requireObjectCoercible(this));
    notARegExp(searchString);
    var index = toLength(min(arguments.length > 1 ? arguments[1] : undefined, that.length));
    var search = String(searchString);
    return $startsWith ? $startsWith.call(that, search, index) : that.slice(index, index + search.length) === search;
  }
});

/***/ }),
/* 7 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var global = __webpack_require__(8);

var getOwnPropertyDescriptor = __webpack_require__(9).f;

var isForced = __webpack_require__(24);

var path = __webpack_require__(25);

var bind = __webpack_require__(26);

var createNonEnumerableProperty = __webpack_require__(28);

var has = __webpack_require__(20);

var wrapConstructor = function (NativeConstructor) {
  var Wrapper = function (a, b, c) {
    if (this instanceof NativeConstructor) {
      switch (arguments.length) {
        case 0:
          return new NativeConstructor();

        case 1:
          return new NativeConstructor(a);

        case 2:
          return new NativeConstructor(a, b);
      }

      return new NativeConstructor(a, b, c);
    }

    return NativeConstructor.apply(this, arguments);
  };

  Wrapper.prototype = NativeConstructor.prototype;
  return Wrapper;
};
/*
  options.target      - name of the target object
  options.global      - target is the global object
  options.stat        - export as static methods of target
  options.proto       - export as prototype methods of target
  options.real        - real prototype method for the `pure` version
  options.forced      - export even if the native feature is available
  options.bind        - bind methods to the target, required for the `pure` version
  options.wrap        - wrap constructors to preventing global pollution, required for the `pure` version
  options.unsafe      - use the simple assignment of property instead of delete + defineProperty
  options.sham        - add a flag to not completely full polyfills
  options.enumerable  - export as enumerable property
  options.noTargetGet - prevent calling a getter on target
*/


module.exports = function (options, source) {
  var TARGET = options.target;
  var GLOBAL = options.global;
  var STATIC = options.stat;
  var PROTO = options.proto;
  var nativeSource = GLOBAL ? global : STATIC ? global[TARGET] : (global[TARGET] || {}).prototype;
  var target = GLOBAL ? path : path[TARGET] || (path[TARGET] = {});
  var targetPrototype = target.prototype;
  var FORCED, USE_NATIVE, VIRTUAL_PROTOTYPE;
  var key, sourceProperty, targetProperty, nativeProperty, resultProperty, descriptor;

  for (key in source) {
    FORCED = isForced(GLOBAL ? key : TARGET + (STATIC ? '.' : '#') + key, options.forced); // contains in native

    USE_NATIVE = !FORCED && nativeSource && has(nativeSource, key);
    targetProperty = target[key];
    if (USE_NATIVE) if (options.noTargetGet) {
      descriptor = getOwnPropertyDescriptor(nativeSource, key);
      nativeProperty = descriptor && descriptor.value;
    } else nativeProperty = nativeSource[key]; // export native or implementation

    sourceProperty = USE_NATIVE && nativeProperty ? nativeProperty : source[key];
    if (USE_NATIVE && typeof targetProperty === typeof sourceProperty) continue; // bind timers to global for call from export context

    if (options.bind && USE_NATIVE) resultProperty = bind(sourceProperty, global); // wrap global constructors for prevent changs in this version
    else if (options.wrap && USE_NATIVE) resultProperty = wrapConstructor(sourceProperty); // make static versions for prototype methods
      else if (PROTO && typeof sourceProperty == 'function') resultProperty = bind(Function.call, sourceProperty); // default case
        else resultProperty = sourceProperty; // add a flag to not completely full polyfills

    if (options.sham || sourceProperty && sourceProperty.sham || targetProperty && targetProperty.sham) {
      createNonEnumerableProperty(resultProperty, 'sham', true);
    }

    target[key] = resultProperty;

    if (PROTO) {
      VIRTUAL_PROTOTYPE = TARGET + 'Prototype';

      if (!has(path, VIRTUAL_PROTOTYPE)) {
        createNonEnumerableProperty(path, VIRTUAL_PROTOTYPE, {});
      } // export virtual prototype methods


      path[VIRTUAL_PROTOTYPE][key] = sourceProperty; // export real prototype methods

      if (options.real && targetPrototype && !targetPrototype[key]) {
        createNonEnumerableProperty(targetPrototype, key, sourceProperty);
      }
    }
  }
};

/***/ }),
/* 8 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var check = function (it) {
  return it && it.Math == Math && it;
}; // https://github.com/zloirock/core-js/issues/86#issuecomment-115759028


module.exports = // eslint-disable-next-line es/no-global-this -- safe
check(typeof globalThis == 'object' && globalThis) || check(typeof window == 'object' && window) || // eslint-disable-next-line no-restricted-globals -- safe
check(typeof self == 'object' && self) || check(typeof __webpack_require__.g == 'object' && __webpack_require__.g) || // eslint-disable-next-line no-new-func -- fallback
function () {
  return this;
}() || Function('return this')();

/***/ }),
/* 9 */
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

var DESCRIPTORS = __webpack_require__(10);

var propertyIsEnumerableModule = __webpack_require__(12);

var createPropertyDescriptor = __webpack_require__(13);

var toIndexedObject = __webpack_require__(14);

var toPrimitive = __webpack_require__(18);

var has = __webpack_require__(20);

var IE8_DOM_DEFINE = __webpack_require__(22); // eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe


var $getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor; // `Object.getOwnPropertyDescriptor` method
// https://tc39.es/ecma262/#sec-object.getownpropertydescriptor

exports.f = DESCRIPTORS ? $getOwnPropertyDescriptor : function getOwnPropertyDescriptor(O, P) {
  O = toIndexedObject(O);
  P = toPrimitive(P, true);
  if (IE8_DOM_DEFINE) try {
    return $getOwnPropertyDescriptor(O, P);
  } catch (error) {
    /* empty */
  }
  if (has(O, P)) return createPropertyDescriptor(!propertyIsEnumerableModule.f.call(O, P), O[P]);
};

/***/ }),
/* 10 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var fails = __webpack_require__(11); // Detect IE8's incomplete defineProperty implementation


module.exports = !fails(function () {
  // eslint-disable-next-line es/no-object-defineproperty -- required for testing
  return Object.defineProperty({}, 1, {
    get: function () {
      return 7;
    }
  })[1] != 7;
});

/***/ }),
/* 11 */
/***/ ((module) => {

module.exports = function (exec) {
  try {
    return !!exec();
  } catch (error) {
    return true;
  }
};

/***/ }),
/* 12 */
/***/ ((__unused_webpack_module, exports) => {

"use strict";


var $propertyIsEnumerable = {}.propertyIsEnumerable; // eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe

var getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor; // Nashorn ~ JDK8 bug

var NASHORN_BUG = getOwnPropertyDescriptor && !$propertyIsEnumerable.call({
  1: 2
}, 1); // `Object.prototype.propertyIsEnumerable` method implementation
// https://tc39.es/ecma262/#sec-object.prototype.propertyisenumerable

exports.f = NASHORN_BUG ? function propertyIsEnumerable(V) {
  var descriptor = getOwnPropertyDescriptor(this, V);
  return !!descriptor && descriptor.enumerable;
} : $propertyIsEnumerable;

/***/ }),
/* 13 */
/***/ ((module) => {

module.exports = function (bitmap, value) {
  return {
    enumerable: !(bitmap & 1),
    configurable: !(bitmap & 2),
    writable: !(bitmap & 4),
    value: value
  };
};

/***/ }),
/* 14 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

// toObject with fallback for non-array-like ES3 strings
var IndexedObject = __webpack_require__(15);

var requireObjectCoercible = __webpack_require__(17);

module.exports = function (it) {
  return IndexedObject(requireObjectCoercible(it));
};

/***/ }),
/* 15 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var fails = __webpack_require__(11);

var classof = __webpack_require__(16);

var split = ''.split; // fallback for non-array-like ES3 and non-enumerable old V8 strings

module.exports = fails(function () {
  // throws an error in rhino, see https://github.com/mozilla/rhino/issues/346
  // eslint-disable-next-line no-prototype-builtins -- safe
  return !Object('z').propertyIsEnumerable(0);
}) ? function (it) {
  return classof(it) == 'String' ? split.call(it, '') : Object(it);
} : Object;

/***/ }),
/* 16 */
/***/ ((module) => {

var toString = {}.toString;

module.exports = function (it) {
  return toString.call(it).slice(8, -1);
};

/***/ }),
/* 17 */
/***/ ((module) => {

// `RequireObjectCoercible` abstract operation
// https://tc39.es/ecma262/#sec-requireobjectcoercible
module.exports = function (it) {
  if (it == undefined) throw TypeError("Can't call method on " + it);
  return it;
};

/***/ }),
/* 18 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var isObject = __webpack_require__(19); // `ToPrimitive` abstract operation
// https://tc39.es/ecma262/#sec-toprimitive
// instead of the ES6 spec version, we didn't implement @@toPrimitive case
// and the second argument - flag - preferred type is a string


module.exports = function (input, PREFERRED_STRING) {
  if (!isObject(input)) return input;
  var fn, val;
  if (PREFERRED_STRING && typeof (fn = input.toString) == 'function' && !isObject(val = fn.call(input))) return val;
  if (typeof (fn = input.valueOf) == 'function' && !isObject(val = fn.call(input))) return val;
  if (!PREFERRED_STRING && typeof (fn = input.toString) == 'function' && !isObject(val = fn.call(input))) return val;
  throw TypeError("Can't convert object to primitive value");
};

/***/ }),
/* 19 */
/***/ ((module) => {

module.exports = function (it) {
  return typeof it === 'object' ? it !== null : typeof it === 'function';
};

/***/ }),
/* 20 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var toObject = __webpack_require__(21);

var hasOwnProperty = {}.hasOwnProperty;

module.exports = function hasOwn(it, key) {
  return hasOwnProperty.call(toObject(it), key);
};

/***/ }),
/* 21 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var requireObjectCoercible = __webpack_require__(17); // `ToObject` abstract operation
// https://tc39.es/ecma262/#sec-toobject


module.exports = function (argument) {
  return Object(requireObjectCoercible(argument));
};

/***/ }),
/* 22 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var DESCRIPTORS = __webpack_require__(10);

var fails = __webpack_require__(11);

var createElement = __webpack_require__(23); // Thank's IE8 for his funny defineProperty


module.exports = !DESCRIPTORS && !fails(function () {
  // eslint-disable-next-line es/no-object-defineproperty -- requied for testing
  return Object.defineProperty(createElement('div'), 'a', {
    get: function () {
      return 7;
    }
  }).a != 7;
});

/***/ }),
/* 23 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var global = __webpack_require__(8);

var isObject = __webpack_require__(19);

var document = global.document; // typeof document.createElement is 'object' in old IE

var EXISTS = isObject(document) && isObject(document.createElement);

module.exports = function (it) {
  return EXISTS ? document.createElement(it) : {};
};

/***/ }),
/* 24 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var fails = __webpack_require__(11);

var replacement = /#|\.prototype\./;

var isForced = function (feature, detection) {
  var value = data[normalize(feature)];
  return value == POLYFILL ? true : value == NATIVE ? false : typeof detection == 'function' ? fails(detection) : !!detection;
};

var normalize = isForced.normalize = function (string) {
  return String(string).replace(replacement, '.').toLowerCase();
};

var data = isForced.data = {};
var NATIVE = isForced.NATIVE = 'N';
var POLYFILL = isForced.POLYFILL = 'P';
module.exports = isForced;

/***/ }),
/* 25 */
/***/ ((module) => {

module.exports = {};

/***/ }),
/* 26 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var aFunction = __webpack_require__(27); // optional / simple context binding


module.exports = function (fn, that, length) {
  aFunction(fn);
  if (that === undefined) return fn;

  switch (length) {
    case 0:
      return function () {
        return fn.call(that);
      };

    case 1:
      return function (a) {
        return fn.call(that, a);
      };

    case 2:
      return function (a, b) {
        return fn.call(that, a, b);
      };

    case 3:
      return function (a, b, c) {
        return fn.call(that, a, b, c);
      };
  }

  return function ()
  /* ...args */
  {
    return fn.apply(that, arguments);
  };
};

/***/ }),
/* 27 */
/***/ ((module) => {

module.exports = function (it) {
  if (typeof it != 'function') {
    throw TypeError(String(it) + ' is not a function');
  }

  return it;
};

/***/ }),
/* 28 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var DESCRIPTORS = __webpack_require__(10);

var definePropertyModule = __webpack_require__(29);

var createPropertyDescriptor = __webpack_require__(13);

module.exports = DESCRIPTORS ? function (object, key, value) {
  return definePropertyModule.f(object, key, createPropertyDescriptor(1, value));
} : function (object, key, value) {
  object[key] = value;
  return object;
};

/***/ }),
/* 29 */
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

var DESCRIPTORS = __webpack_require__(10);

var IE8_DOM_DEFINE = __webpack_require__(22);

var anObject = __webpack_require__(30);

var toPrimitive = __webpack_require__(18); // eslint-disable-next-line es/no-object-defineproperty -- safe


var $defineProperty = Object.defineProperty; // `Object.defineProperty` method
// https://tc39.es/ecma262/#sec-object.defineproperty

exports.f = DESCRIPTORS ? $defineProperty : function defineProperty(O, P, Attributes) {
  anObject(O);
  P = toPrimitive(P, true);
  anObject(Attributes);
  if (IE8_DOM_DEFINE) try {
    return $defineProperty(O, P, Attributes);
  } catch (error) {
    /* empty */
  }
  if ('get' in Attributes || 'set' in Attributes) throw TypeError('Accessors not supported');
  if ('value' in Attributes) O[P] = Attributes.value;
  return O;
};

/***/ }),
/* 30 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var isObject = __webpack_require__(19);

module.exports = function (it) {
  if (!isObject(it)) {
    throw TypeError(String(it) + ' is not an object');
  }

  return it;
};

/***/ }),
/* 31 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var toInteger = __webpack_require__(32);

var min = Math.min; // `ToLength` abstract operation
// https://tc39.es/ecma262/#sec-tolength

module.exports = function (argument) {
  return argument > 0 ? min(toInteger(argument), 0x1FFFFFFFFFFFFF) : 0; // 2 ** 53 - 1 == 9007199254740991
};

/***/ }),
/* 32 */
/***/ ((module) => {

var ceil = Math.ceil;
var floor = Math.floor; // `ToInteger` abstract operation
// https://tc39.es/ecma262/#sec-tointeger

module.exports = function (argument) {
  return isNaN(argument = +argument) ? 0 : (argument > 0 ? floor : ceil)(argument);
};

/***/ }),
/* 33 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var isRegExp = __webpack_require__(34);

module.exports = function (it) {
  if (isRegExp(it)) {
    throw TypeError("The method doesn't accept regular expressions");
  }

  return it;
};

/***/ }),
/* 34 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var isObject = __webpack_require__(19);

var classof = __webpack_require__(16);

var wellKnownSymbol = __webpack_require__(35);

var MATCH = wellKnownSymbol('match'); // `IsRegExp` abstract operation
// https://tc39.es/ecma262/#sec-isregexp

module.exports = function (it) {
  var isRegExp;
  return isObject(it) && ((isRegExp = it[MATCH]) !== undefined ? !!isRegExp : classof(it) == 'RegExp');
};

/***/ }),
/* 35 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var global = __webpack_require__(8);

var shared = __webpack_require__(36);

var has = __webpack_require__(20);

var uid = __webpack_require__(40);

var NATIVE_SYMBOL = __webpack_require__(41);

var USE_SYMBOL_AS_UID = __webpack_require__(45);

var WellKnownSymbolsStore = shared('wks');
var Symbol = global.Symbol;
var createWellKnownSymbol = USE_SYMBOL_AS_UID ? Symbol : Symbol && Symbol.withoutSetter || uid;

module.exports = function (name) {
  if (!has(WellKnownSymbolsStore, name) || !(NATIVE_SYMBOL || typeof WellKnownSymbolsStore[name] == 'string')) {
    if (NATIVE_SYMBOL && has(Symbol, name)) {
      WellKnownSymbolsStore[name] = Symbol[name];
    } else {
      WellKnownSymbolsStore[name] = createWellKnownSymbol('Symbol.' + name);
    }
  }

  return WellKnownSymbolsStore[name];
};

/***/ }),
/* 36 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var IS_PURE = __webpack_require__(37);

var store = __webpack_require__(38);

(module.exports = function (key, value) {
  return store[key] || (store[key] = value !== undefined ? value : {});
})('versions', []).push({
  version: '3.12.1',
  mode: IS_PURE ? 'pure' : 'global',
  copyright: '© 2021 Denis Pushkarev (zloirock.ru)'
});

/***/ }),
/* 37 */
/***/ ((module) => {

module.exports = true;

/***/ }),
/* 38 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var global = __webpack_require__(8);

var setGlobal = __webpack_require__(39);

var SHARED = '__core-js_shared__';
var store = global[SHARED] || setGlobal(SHARED, {});
module.exports = store;

/***/ }),
/* 39 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var global = __webpack_require__(8);

var createNonEnumerableProperty = __webpack_require__(28);

module.exports = function (key, value) {
  try {
    createNonEnumerableProperty(global, key, value);
  } catch (error) {
    global[key] = value;
  }

  return value;
};

/***/ }),
/* 40 */
/***/ ((module) => {

var id = 0;
var postfix = Math.random();

module.exports = function (key) {
  return 'Symbol(' + String(key === undefined ? '' : key) + ')_' + (++id + postfix).toString(36);
};

/***/ }),
/* 41 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

/* eslint-disable es/no-symbol -- required for testing */
var V8_VERSION = __webpack_require__(42);

var fails = __webpack_require__(11); // eslint-disable-next-line es/no-object-getownpropertysymbols -- required for testing


module.exports = !!Object.getOwnPropertySymbols && !fails(function () {
  return !String(Symbol()) || // Chrome 38 Symbol has incorrect toString conversion
  // Chrome 38-40 symbols are not inherited from DOM collections prototypes to instances
  !Symbol.sham && V8_VERSION && V8_VERSION < 41;
});

/***/ }),
/* 42 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var global = __webpack_require__(8);

var userAgent = __webpack_require__(43);

var process = global.process;
var versions = process && process.versions;
var v8 = versions && versions.v8;
var match, version;

if (v8) {
  match = v8.split('.');
  version = match[0] < 4 ? 1 : match[0] + match[1];
} else if (userAgent) {
  match = userAgent.match(/Edge\/(\d+)/);

  if (!match || match[1] >= 74) {
    match = userAgent.match(/Chrome\/(\d+)/);
    if (match) version = match[1];
  }
}

module.exports = version && +version;

/***/ }),
/* 43 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var getBuiltIn = __webpack_require__(44);

module.exports = getBuiltIn('navigator', 'userAgent') || '';

/***/ }),
/* 44 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var path = __webpack_require__(25);

var global = __webpack_require__(8);

var aFunction = function (variable) {
  return typeof variable == 'function' ? variable : undefined;
};

module.exports = function (namespace, method) {
  return arguments.length < 2 ? aFunction(path[namespace]) || aFunction(global[namespace]) : path[namespace] && path[namespace][method] || global[namespace] && global[namespace][method];
};

/***/ }),
/* 45 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

/* eslint-disable es/no-symbol -- required for testing */
var NATIVE_SYMBOL = __webpack_require__(41);

module.exports = NATIVE_SYMBOL && !Symbol.sham && typeof Symbol.iterator == 'symbol';

/***/ }),
/* 46 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var wellKnownSymbol = __webpack_require__(35);

var MATCH = wellKnownSymbol('match');

module.exports = function (METHOD_NAME) {
  var regexp = /./;

  try {
    '/./'[METHOD_NAME](regexp);
  } catch (error1) {
    try {
      regexp[MATCH] = false;
      return '/./'[METHOD_NAME](regexp);
    } catch (error2) {
      /* empty */
    }
  }

  return false;
};

/***/ }),
/* 47 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var path = __webpack_require__(25);

module.exports = function (CONSTRUCTOR) {
  return path[CONSTRUCTOR + 'Prototype'];
};

/***/ }),
/* 48 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

module.exports = __webpack_require__(49);

/***/ }),
/* 49 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var parent = __webpack_require__(50);

module.exports = parent;

/***/ }),
/* 50 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

__webpack_require__(51);

var path = __webpack_require__(25);

module.exports = path.parseFloat;

/***/ }),
/* 51 */
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

var $ = __webpack_require__(7);

var parseFloatImplementation = __webpack_require__(52); // `parseFloat` method
// https://tc39.es/ecma262/#sec-parsefloat-string


$({
  global: true,
  forced: parseFloat != parseFloatImplementation
}, {
  parseFloat: parseFloatImplementation
});

/***/ }),
/* 52 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var global = __webpack_require__(8);

var trim = __webpack_require__(53).trim;

var whitespaces = __webpack_require__(54);

var $parseFloat = global.parseFloat;
var FORCED = 1 / $parseFloat(whitespaces + '-0') !== -Infinity; // `parseFloat` method
// https://tc39.es/ecma262/#sec-parsefloat-string

module.exports = FORCED ? function parseFloat(string) {
  var trimmedString = trim(String(string));
  var result = $parseFloat(trimmedString);
  return result === 0 && trimmedString.charAt(0) == '-' ? -0 : result;
} : $parseFloat;

/***/ }),
/* 53 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var requireObjectCoercible = __webpack_require__(17);

var whitespaces = __webpack_require__(54);

var whitespace = '[' + whitespaces + ']';
var ltrim = RegExp('^' + whitespace + whitespace + '*');
var rtrim = RegExp(whitespace + whitespace + '*$'); // `String.prototype.{ trim, trimStart, trimEnd, trimLeft, trimRight }` methods implementation

var createMethod = function (TYPE) {
  return function ($this) {
    var string = String(requireObjectCoercible($this));
    if (TYPE & 1) string = string.replace(ltrim, '');
    if (TYPE & 2) string = string.replace(rtrim, '');
    return string;
  };
};

module.exports = {
  // `String.prototype.{ trimLeft, trimStart }` methods
  // https://tc39.es/ecma262/#sec-string.prototype.trimstart
  start: createMethod(1),
  // `String.prototype.{ trimRight, trimEnd }` methods
  // https://tc39.es/ecma262/#sec-string.prototype.trimend
  end: createMethod(2),
  // `String.prototype.trim` method
  // https://tc39.es/ecma262/#sec-string.prototype.trim
  trim: createMethod(3)
};

/***/ }),
/* 54 */
/***/ ((module) => {

// a string of all valid unicode whitespaces
module.exports = '\u0009\u000A\u000B\u000C\u000D\u0020\u00A0\u1680\u2000\u2001\u2002' + '\u2003\u2004\u2005\u2006\u2007\u2008\u2009\u200A\u202F\u205F\u3000\u2028\u2029\uFEFF';

/***/ }),
/* 55 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

module.exports = __webpack_require__(56);

/***/ }),
/* 56 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var parent = __webpack_require__(57);

module.exports = parent;

/***/ }),
/* 57 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var map = __webpack_require__(58);

var ArrayPrototype = Array.prototype;

module.exports = function (it) {
  var own = it.map;
  return it === ArrayPrototype || it instanceof Array && own === ArrayPrototype.map ? map : own;
};

/***/ }),
/* 58 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

__webpack_require__(59);

var entryVirtual = __webpack_require__(47);

module.exports = entryVirtual('Array').map;

/***/ }),
/* 59 */
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var $ = __webpack_require__(7);

var $map = __webpack_require__(60).map;

var arrayMethodHasSpeciesSupport = __webpack_require__(63);

var HAS_SPECIES_SUPPORT = arrayMethodHasSpeciesSupport('map'); // `Array.prototype.map` method
// https://tc39.es/ecma262/#sec-array.prototype.map
// with adding support of @@species

$({
  target: 'Array',
  proto: true,
  forced: !HAS_SPECIES_SUPPORT
}, {
  map: function map(callbackfn
  /* , thisArg */
  ) {
    return $map(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);
  }
});

/***/ }),
/* 60 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var bind = __webpack_require__(26);

var IndexedObject = __webpack_require__(15);

var toObject = __webpack_require__(21);

var toLength = __webpack_require__(31);

var arraySpeciesCreate = __webpack_require__(61);

var push = [].push; // `Array.prototype.{ forEach, map, filter, some, every, find, findIndex, filterOut }` methods implementation

var createMethod = function (TYPE) {
  var IS_MAP = TYPE == 1;
  var IS_FILTER = TYPE == 2;
  var IS_SOME = TYPE == 3;
  var IS_EVERY = TYPE == 4;
  var IS_FIND_INDEX = TYPE == 6;
  var IS_FILTER_OUT = TYPE == 7;
  var NO_HOLES = TYPE == 5 || IS_FIND_INDEX;
  return function ($this, callbackfn, that, specificCreate) {
    var O = toObject($this);
    var self = IndexedObject(O);
    var boundFunction = bind(callbackfn, that, 3);
    var length = toLength(self.length);
    var index = 0;
    var create = specificCreate || arraySpeciesCreate;
    var target = IS_MAP ? create($this, length) : IS_FILTER || IS_FILTER_OUT ? create($this, 0) : undefined;
    var value, result;

    for (; length > index; index++) if (NO_HOLES || index in self) {
      value = self[index];
      result = boundFunction(value, index, O);

      if (TYPE) {
        if (IS_MAP) target[index] = result; // map
        else if (result) switch (TYPE) {
            case 3:
              return true;
            // some

            case 5:
              return value;
            // find

            case 6:
              return index;
            // findIndex

            case 2:
              push.call(target, value);
            // filter
          } else switch (TYPE) {
            case 4:
              return false;
            // every

            case 7:
              push.call(target, value);
            // filterOut
          }
      }
    }

    return IS_FIND_INDEX ? -1 : IS_SOME || IS_EVERY ? IS_EVERY : target;
  };
};

module.exports = {
  // `Array.prototype.forEach` method
  // https://tc39.es/ecma262/#sec-array.prototype.foreach
  forEach: createMethod(0),
  // `Array.prototype.map` method
  // https://tc39.es/ecma262/#sec-array.prototype.map
  map: createMethod(1),
  // `Array.prototype.filter` method
  // https://tc39.es/ecma262/#sec-array.prototype.filter
  filter: createMethod(2),
  // `Array.prototype.some` method
  // https://tc39.es/ecma262/#sec-array.prototype.some
  some: createMethod(3),
  // `Array.prototype.every` method
  // https://tc39.es/ecma262/#sec-array.prototype.every
  every: createMethod(4),
  // `Array.prototype.find` method
  // https://tc39.es/ecma262/#sec-array.prototype.find
  find: createMethod(5),
  // `Array.prototype.findIndex` method
  // https://tc39.es/ecma262/#sec-array.prototype.findIndex
  findIndex: createMethod(6),
  // `Array.prototype.filterOut` method
  // https://github.com/tc39/proposal-array-filtering
  filterOut: createMethod(7)
};

/***/ }),
/* 61 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var isObject = __webpack_require__(19);

var isArray = __webpack_require__(62);

var wellKnownSymbol = __webpack_require__(35);

var SPECIES = wellKnownSymbol('species'); // `ArraySpeciesCreate` abstract operation
// https://tc39.es/ecma262/#sec-arrayspeciescreate

module.exports = function (originalArray, length) {
  var C;

  if (isArray(originalArray)) {
    C = originalArray.constructor; // cross-realm fallback

    if (typeof C == 'function' && (C === Array || isArray(C.prototype))) C = undefined;else if (isObject(C)) {
      C = C[SPECIES];
      if (C === null) C = undefined;
    }
  }

  return new (C === undefined ? Array : C)(length === 0 ? 0 : length);
};

/***/ }),
/* 62 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var classof = __webpack_require__(16); // `IsArray` abstract operation
// https://tc39.es/ecma262/#sec-isarray
// eslint-disable-next-line es/no-array-isarray -- safe


module.exports = Array.isArray || function isArray(arg) {
  return classof(arg) == 'Array';
};

/***/ }),
/* 63 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var fails = __webpack_require__(11);

var wellKnownSymbol = __webpack_require__(35);

var V8_VERSION = __webpack_require__(42);

var SPECIES = wellKnownSymbol('species');

module.exports = function (METHOD_NAME) {
  // We can't use this feature detection in V8 since it causes
  // deoptimization and serious performance degradation
  // https://github.com/zloirock/core-js/issues/677
  return V8_VERSION >= 51 || !fails(function () {
    var array = [];
    var constructor = array.constructor = {};

    constructor[SPECIES] = function () {
      return {
        foo: 1
      };
    };

    return array[METHOD_NAME](Boolean).foo !== 1;
  });
};

/***/ }),
/* 64 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ _slicedToArray)
/* harmony export */ });
/* harmony import */ var _arrayWithHoles_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(65);
/* harmony import */ var _iterableToArrayLimit_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(70);
/* harmony import */ var _unsupportedIterableToArray_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(142);
/* harmony import */ var _nonIterableRest_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(158);




function _slicedToArray(arr, i) {
  return (0,_arrayWithHoles_js__WEBPACK_IMPORTED_MODULE_0__.default)(arr) || (0,_iterableToArrayLimit_js__WEBPACK_IMPORTED_MODULE_1__.default)(arr, i) || (0,_unsupportedIterableToArray_js__WEBPACK_IMPORTED_MODULE_2__.default)(arr, i) || (0,_nonIterableRest_js__WEBPACK_IMPORTED_MODULE_3__.default)();
}

/***/ }),
/* 65 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ _arrayWithHoles)
/* harmony export */ });
/* harmony import */ var _babel_runtime_corejs3_core_js_array_is_array__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(66);

function _arrayWithHoles(arr) {
  if (_babel_runtime_corejs3_core_js_array_is_array__WEBPACK_IMPORTED_MODULE_0__(arr)) return arr;
}

/***/ }),
/* 66 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

module.exports = __webpack_require__(67);

/***/ }),
/* 67 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var parent = __webpack_require__(68);

module.exports = parent;

/***/ }),
/* 68 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

__webpack_require__(69);

var path = __webpack_require__(25);

module.exports = path.Array.isArray;

/***/ }),
/* 69 */
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

var $ = __webpack_require__(7);

var isArray = __webpack_require__(62); // `Array.isArray` method
// https://tc39.es/ecma262/#sec-array.isarray


$({
  target: 'Array',
  stat: true
}, {
  isArray: isArray
});

/***/ }),
/* 70 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ _iterableToArrayLimit)
/* harmony export */ });
/* harmony import */ var _babel_runtime_corejs3_core_js_symbol__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(71);
/* harmony import */ var _babel_runtime_corejs3_core_js_get_iterator_method__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(125);


function _iterableToArrayLimit(arr, i) {
  var _i = arr && (typeof _babel_runtime_corejs3_core_js_symbol__WEBPACK_IMPORTED_MODULE_0__ !== "undefined" && _babel_runtime_corejs3_core_js_get_iterator_method__WEBPACK_IMPORTED_MODULE_1__(arr) || arr["@@iterator"]);

  if (_i == null) return;
  var _arr = [];
  var _n = true;
  var _d = false;

  var _s, _e;

  try {
    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {
      _arr.push(_s.value);

      if (i && _arr.length === i) break;
    }
  } catch (err) {
    _d = true;
    _e = err;
  } finally {
    try {
      if (!_n && _i["return"] != null) _i["return"]();
    } finally {
      if (_d) throw _e;
    }
  }

  return _arr;
}

/***/ }),
/* 71 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

module.exports = __webpack_require__(72);

/***/ }),
/* 72 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var parent = __webpack_require__(73);

__webpack_require__(118);

__webpack_require__(119);

__webpack_require__(120);

__webpack_require__(121);

__webpack_require__(122); // TODO: Remove from `core-js@4`


__webpack_require__(123); // TODO: Remove from `core-js@4`


__webpack_require__(124);

module.exports = parent;

/***/ }),
/* 73 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

__webpack_require__(74);

__webpack_require__(76);

__webpack_require__(77);

__webpack_require__(101);

__webpack_require__(102);

__webpack_require__(103);

__webpack_require__(104);

__webpack_require__(105);

__webpack_require__(106);

__webpack_require__(107);

__webpack_require__(108);

__webpack_require__(109);

__webpack_require__(110);

__webpack_require__(111);

__webpack_require__(112);

__webpack_require__(113);

__webpack_require__(114);

__webpack_require__(115);

__webpack_require__(116);

__webpack_require__(117);

var path = __webpack_require__(25);

module.exports = path.Symbol;

/***/ }),
/* 74 */
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var $ = __webpack_require__(7);

var fails = __webpack_require__(11);

var isArray = __webpack_require__(62);

var isObject = __webpack_require__(19);

var toObject = __webpack_require__(21);

var toLength = __webpack_require__(31);

var createProperty = __webpack_require__(75);

var arraySpeciesCreate = __webpack_require__(61);

var arrayMethodHasSpeciesSupport = __webpack_require__(63);

var wellKnownSymbol = __webpack_require__(35);

var V8_VERSION = __webpack_require__(42);

var IS_CONCAT_SPREADABLE = wellKnownSymbol('isConcatSpreadable');
var MAX_SAFE_INTEGER = 0x1FFFFFFFFFFFFF;
var MAXIMUM_ALLOWED_INDEX_EXCEEDED = 'Maximum allowed index exceeded'; // We can't use this feature detection in V8 since it causes
// deoptimization and serious performance degradation
// https://github.com/zloirock/core-js/issues/679

var IS_CONCAT_SPREADABLE_SUPPORT = V8_VERSION >= 51 || !fails(function () {
  var array = [];
  array[IS_CONCAT_SPREADABLE] = false;
  return array.concat()[0] !== array;
});
var SPECIES_SUPPORT = arrayMethodHasSpeciesSupport('concat');

var isConcatSpreadable = function (O) {
  if (!isObject(O)) return false;
  var spreadable = O[IS_CONCAT_SPREADABLE];
  return spreadable !== undefined ? !!spreadable : isArray(O);
};

var FORCED = !IS_CONCAT_SPREADABLE_SUPPORT || !SPECIES_SUPPORT; // `Array.prototype.concat` method
// https://tc39.es/ecma262/#sec-array.prototype.concat
// with adding support of @@isConcatSpreadable and @@species

$({
  target: 'Array',
  proto: true,
  forced: FORCED
}, {
  // eslint-disable-next-line no-unused-vars -- required for `.length`
  concat: function concat(arg) {
    var O = toObject(this);
    var A = arraySpeciesCreate(O, 0);
    var n = 0;
    var i, k, length, len, E;

    for (i = -1, length = arguments.length; i < length; i++) {
      E = i === -1 ? O : arguments[i];

      if (isConcatSpreadable(E)) {
        len = toLength(E.length);
        if (n + len > MAX_SAFE_INTEGER) throw TypeError(MAXIMUM_ALLOWED_INDEX_EXCEEDED);

        for (k = 0; k < len; k++, n++) if (k in E) createProperty(A, n, E[k]);
      } else {
        if (n >= MAX_SAFE_INTEGER) throw TypeError(MAXIMUM_ALLOWED_INDEX_EXCEEDED);
        createProperty(A, n++, E);
      }
    }

    A.length = n;
    return A;
  }
});

/***/ }),
/* 75 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var toPrimitive = __webpack_require__(18);

var definePropertyModule = __webpack_require__(29);

var createPropertyDescriptor = __webpack_require__(13);

module.exports = function (object, key, value) {
  var propertyKey = toPrimitive(key);
  if (propertyKey in object) definePropertyModule.f(object, propertyKey, createPropertyDescriptor(0, value));else object[propertyKey] = value;
};

/***/ }),
/* 76 */
/***/ (() => {

// empty

/***/ }),
/* 77 */
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var $ = __webpack_require__(7);

var global = __webpack_require__(8);

var getBuiltIn = __webpack_require__(44);

var IS_PURE = __webpack_require__(37);

var DESCRIPTORS = __webpack_require__(10);

var NATIVE_SYMBOL = __webpack_require__(41);

var USE_SYMBOL_AS_UID = __webpack_require__(45);

var fails = __webpack_require__(11);

var has = __webpack_require__(20);

var isArray = __webpack_require__(62);

var isObject = __webpack_require__(19);

var anObject = __webpack_require__(30);

var toObject = __webpack_require__(21);

var toIndexedObject = __webpack_require__(14);

var toPrimitive = __webpack_require__(18);

var createPropertyDescriptor = __webpack_require__(13);

var nativeObjectCreate = __webpack_require__(78);

var objectKeys = __webpack_require__(80);

var getOwnPropertyNamesModule = __webpack_require__(88);

var getOwnPropertyNamesExternal = __webpack_require__(89);

var getOwnPropertySymbolsModule = __webpack_require__(90);

var getOwnPropertyDescriptorModule = __webpack_require__(9);

var definePropertyModule = __webpack_require__(29);

var propertyIsEnumerableModule = __webpack_require__(12);

var createNonEnumerableProperty = __webpack_require__(28);

var redefine = __webpack_require__(91);

var shared = __webpack_require__(36);

var sharedKey = __webpack_require__(87);

var hiddenKeys = __webpack_require__(84);

var uid = __webpack_require__(40);

var wellKnownSymbol = __webpack_require__(35);

var wrappedWellKnownSymbolModule = __webpack_require__(92);

var defineWellKnownSymbol = __webpack_require__(93);

var setToStringTag = __webpack_require__(94);

var InternalStateModule = __webpack_require__(98);

var $forEach = __webpack_require__(60).forEach;

var HIDDEN = sharedKey('hidden');
var SYMBOL = 'Symbol';
var PROTOTYPE = 'prototype';
var TO_PRIMITIVE = wellKnownSymbol('toPrimitive');
var setInternalState = InternalStateModule.set;
var getInternalState = InternalStateModule.getterFor(SYMBOL);
var ObjectPrototype = Object[PROTOTYPE];
var $Symbol = global.Symbol;
var $stringify = getBuiltIn('JSON', 'stringify');
var nativeGetOwnPropertyDescriptor = getOwnPropertyDescriptorModule.f;
var nativeDefineProperty = definePropertyModule.f;
var nativeGetOwnPropertyNames = getOwnPropertyNamesExternal.f;
var nativePropertyIsEnumerable = propertyIsEnumerableModule.f;
var AllSymbols = shared('symbols');
var ObjectPrototypeSymbols = shared('op-symbols');
var StringToSymbolRegistry = shared('string-to-symbol-registry');
var SymbolToStringRegistry = shared('symbol-to-string-registry');
var WellKnownSymbolsStore = shared('wks');
var QObject = global.QObject; // Don't use setters in Qt Script, https://github.com/zloirock/core-js/issues/173

var USE_SETTER = !QObject || !QObject[PROTOTYPE] || !QObject[PROTOTYPE].findChild; // fallback for old Android, https://code.google.com/p/v8/issues/detail?id=687

var setSymbolDescriptor = DESCRIPTORS && fails(function () {
  return nativeObjectCreate(nativeDefineProperty({}, 'a', {
    get: function () {
      return nativeDefineProperty(this, 'a', {
        value: 7
      }).a;
    }
  })).a != 7;
}) ? function (O, P, Attributes) {
  var ObjectPrototypeDescriptor = nativeGetOwnPropertyDescriptor(ObjectPrototype, P);
  if (ObjectPrototypeDescriptor) delete ObjectPrototype[P];
  nativeDefineProperty(O, P, Attributes);

  if (ObjectPrototypeDescriptor && O !== ObjectPrototype) {
    nativeDefineProperty(ObjectPrototype, P, ObjectPrototypeDescriptor);
  }
} : nativeDefineProperty;

var wrap = function (tag, description) {
  var symbol = AllSymbols[tag] = nativeObjectCreate($Symbol[PROTOTYPE]);
  setInternalState(symbol, {
    type: SYMBOL,
    tag: tag,
    description: description
  });
  if (!DESCRIPTORS) symbol.description = description;
  return symbol;
};

var isSymbol = USE_SYMBOL_AS_UID ? function (it) {
  return typeof it == 'symbol';
} : function (it) {
  return Object(it) instanceof $Symbol;
};

var $defineProperty = function defineProperty(O, P, Attributes) {
  if (O === ObjectPrototype) $defineProperty(ObjectPrototypeSymbols, P, Attributes);
  anObject(O);
  var key = toPrimitive(P, true);
  anObject(Attributes);

  if (has(AllSymbols, key)) {
    if (!Attributes.enumerable) {
      if (!has(O, HIDDEN)) nativeDefineProperty(O, HIDDEN, createPropertyDescriptor(1, {}));
      O[HIDDEN][key] = true;
    } else {
      if (has(O, HIDDEN) && O[HIDDEN][key]) O[HIDDEN][key] = false;
      Attributes = nativeObjectCreate(Attributes, {
        enumerable: createPropertyDescriptor(0, false)
      });
    }

    return setSymbolDescriptor(O, key, Attributes);
  }

  return nativeDefineProperty(O, key, Attributes);
};

var $defineProperties = function defineProperties(O, Properties) {
  anObject(O);
  var properties = toIndexedObject(Properties);
  var keys = objectKeys(properties).concat($getOwnPropertySymbols(properties));
  $forEach(keys, function (key) {
    if (!DESCRIPTORS || $propertyIsEnumerable.call(properties, key)) $defineProperty(O, key, properties[key]);
  });
  return O;
};

var $create = function create(O, Properties) {
  return Properties === undefined ? nativeObjectCreate(O) : $defineProperties(nativeObjectCreate(O), Properties);
};

var $propertyIsEnumerable = function propertyIsEnumerable(V) {
  var P = toPrimitive(V, true);
  var enumerable = nativePropertyIsEnumerable.call(this, P);
  if (this === ObjectPrototype && has(AllSymbols, P) && !has(ObjectPrototypeSymbols, P)) return false;
  return enumerable || !has(this, P) || !has(AllSymbols, P) || has(this, HIDDEN) && this[HIDDEN][P] ? enumerable : true;
};

var $getOwnPropertyDescriptor = function getOwnPropertyDescriptor(O, P) {
  var it = toIndexedObject(O);
  var key = toPrimitive(P, true);
  if (it === ObjectPrototype && has(AllSymbols, key) && !has(ObjectPrototypeSymbols, key)) return;
  var descriptor = nativeGetOwnPropertyDescriptor(it, key);

  if (descriptor && has(AllSymbols, key) && !(has(it, HIDDEN) && it[HIDDEN][key])) {
    descriptor.enumerable = true;
  }

  return descriptor;
};

var $getOwnPropertyNames = function getOwnPropertyNames(O) {
  var names = nativeGetOwnPropertyNames(toIndexedObject(O));
  var result = [];
  $forEach(names, function (key) {
    if (!has(AllSymbols, key) && !has(hiddenKeys, key)) result.push(key);
  });
  return result;
};

var $getOwnPropertySymbols = function getOwnPropertySymbols(O) {
  var IS_OBJECT_PROTOTYPE = O === ObjectPrototype;
  var names = nativeGetOwnPropertyNames(IS_OBJECT_PROTOTYPE ? ObjectPrototypeSymbols : toIndexedObject(O));
  var result = [];
  $forEach(names, function (key) {
    if (has(AllSymbols, key) && (!IS_OBJECT_PROTOTYPE || has(ObjectPrototype, key))) {
      result.push(AllSymbols[key]);
    }
  });
  return result;
}; // `Symbol` constructor
// https://tc39.es/ecma262/#sec-symbol-constructor


if (!NATIVE_SYMBOL) {
  $Symbol = function Symbol() {
    if (this instanceof $Symbol) throw TypeError('Symbol is not a constructor');
    var description = !arguments.length || arguments[0] === undefined ? undefined : String(arguments[0]);
    var tag = uid(description);

    var setter = function (value) {
      if (this === ObjectPrototype) setter.call(ObjectPrototypeSymbols, value);
      if (has(this, HIDDEN) && has(this[HIDDEN], tag)) this[HIDDEN][tag] = false;
      setSymbolDescriptor(this, tag, createPropertyDescriptor(1, value));
    };

    if (DESCRIPTORS && USE_SETTER) setSymbolDescriptor(ObjectPrototype, tag, {
      configurable: true,
      set: setter
    });
    return wrap(tag, description);
  };

  redefine($Symbol[PROTOTYPE], 'toString', function toString() {
    return getInternalState(this).tag;
  });
  redefine($Symbol, 'withoutSetter', function (description) {
    return wrap(uid(description), description);
  });
  propertyIsEnumerableModule.f = $propertyIsEnumerable;
  definePropertyModule.f = $defineProperty;
  getOwnPropertyDescriptorModule.f = $getOwnPropertyDescriptor;
  getOwnPropertyNamesModule.f = getOwnPropertyNamesExternal.f = $getOwnPropertyNames;
  getOwnPropertySymbolsModule.f = $getOwnPropertySymbols;

  wrappedWellKnownSymbolModule.f = function (name) {
    return wrap(wellKnownSymbol(name), name);
  };

  if (DESCRIPTORS) {
    // https://github.com/tc39/proposal-Symbol-description
    nativeDefineProperty($Symbol[PROTOTYPE], 'description', {
      configurable: true,
      get: function description() {
        return getInternalState(this).description;
      }
    });

    if (!IS_PURE) {
      redefine(ObjectPrototype, 'propertyIsEnumerable', $propertyIsEnumerable, {
        unsafe: true
      });
    }
  }
}

$({
  global: true,
  wrap: true,
  forced: !NATIVE_SYMBOL,
  sham: !NATIVE_SYMBOL
}, {
  Symbol: $Symbol
});
$forEach(objectKeys(WellKnownSymbolsStore), function (name) {
  defineWellKnownSymbol(name);
});
$({
  target: SYMBOL,
  stat: true,
  forced: !NATIVE_SYMBOL
}, {
  // `Symbol.for` method
  // https://tc39.es/ecma262/#sec-symbol.for
  'for': function (key) {
    var string = String(key);
    if (has(StringToSymbolRegistry, string)) return StringToSymbolRegistry[string];
    var symbol = $Symbol(string);
    StringToSymbolRegistry[string] = symbol;
    SymbolToStringRegistry[symbol] = string;
    return symbol;
  },
  // `Symbol.keyFor` method
  // https://tc39.es/ecma262/#sec-symbol.keyfor
  keyFor: function keyFor(sym) {
    if (!isSymbol(sym)) throw TypeError(sym + ' is not a symbol');
    if (has(SymbolToStringRegistry, sym)) return SymbolToStringRegistry[sym];
  },
  useSetter: function () {
    USE_SETTER = true;
  },
  useSimple: function () {
    USE_SETTER = false;
  }
});
$({
  target: 'Object',
  stat: true,
  forced: !NATIVE_SYMBOL,
  sham: !DESCRIPTORS
}, {
  // `Object.create` method
  // https://tc39.es/ecma262/#sec-object.create
  create: $create,
  // `Object.defineProperty` method
  // https://tc39.es/ecma262/#sec-object.defineproperty
  defineProperty: $defineProperty,
  // `Object.defineProperties` method
  // https://tc39.es/ecma262/#sec-object.defineproperties
  defineProperties: $defineProperties,
  // `Object.getOwnPropertyDescriptor` method
  // https://tc39.es/ecma262/#sec-object.getownpropertydescriptors
  getOwnPropertyDescriptor: $getOwnPropertyDescriptor
});
$({
  target: 'Object',
  stat: true,
  forced: !NATIVE_SYMBOL
}, {
  // `Object.getOwnPropertyNames` method
  // https://tc39.es/ecma262/#sec-object.getownpropertynames
  getOwnPropertyNames: $getOwnPropertyNames,
  // `Object.getOwnPropertySymbols` method
  // https://tc39.es/ecma262/#sec-object.getownpropertysymbols
  getOwnPropertySymbols: $getOwnPropertySymbols
}); // Chrome 38 and 39 `Object.getOwnPropertySymbols` fails on primitives
// https://bugs.chromium.org/p/v8/issues/detail?id=3443

$({
  target: 'Object',
  stat: true,
  forced: fails(function () {
    getOwnPropertySymbolsModule.f(1);
  })
}, {
  getOwnPropertySymbols: function getOwnPropertySymbols(it) {
    return getOwnPropertySymbolsModule.f(toObject(it));
  }
}); // `JSON.stringify` method behavior with symbols
// https://tc39.es/ecma262/#sec-json.stringify

if ($stringify) {
  var FORCED_JSON_STRINGIFY = !NATIVE_SYMBOL || fails(function () {
    var symbol = $Symbol(); // MS Edge converts symbol values to JSON as {}

    return $stringify([symbol]) != '[null]' // WebKit converts symbol values to JSON as null
    || $stringify({
      a: symbol
    }) != '{}' // V8 throws on boxed symbols
    || $stringify(Object(symbol)) != '{}';
  });
  $({
    target: 'JSON',
    stat: true,
    forced: FORCED_JSON_STRINGIFY
  }, {
    // eslint-disable-next-line no-unused-vars -- required for `.length`
    stringify: function stringify(it, replacer, space) {
      var args = [it];
      var index = 1;
      var $replacer;

      while (arguments.length > index) args.push(arguments[index++]);

      $replacer = replacer;
      if (!isObject(replacer) && it === undefined || isSymbol(it)) return; // IE8 returns string on undefined

      if (!isArray(replacer)) replacer = function (key, value) {
        if (typeof $replacer == 'function') value = $replacer.call(this, key, value);
        if (!isSymbol(value)) return value;
      };
      args[1] = replacer;
      return $stringify.apply(null, args);
    }
  });
} // `Symbol.prototype[@@toPrimitive]` method
// https://tc39.es/ecma262/#sec-symbol.prototype-@@toprimitive


if (!$Symbol[PROTOTYPE][TO_PRIMITIVE]) {
  createNonEnumerableProperty($Symbol[PROTOTYPE], TO_PRIMITIVE, $Symbol[PROTOTYPE].valueOf);
} // `Symbol.prototype[@@toStringTag]` property
// https://tc39.es/ecma262/#sec-symbol.prototype-@@tostringtag


setToStringTag($Symbol, SYMBOL);
hiddenKeys[HIDDEN] = true;

/***/ }),
/* 78 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var anObject = __webpack_require__(30);

var defineProperties = __webpack_require__(79);

var enumBugKeys = __webpack_require__(85);

var hiddenKeys = __webpack_require__(84);

var html = __webpack_require__(86);

var documentCreateElement = __webpack_require__(23);

var sharedKey = __webpack_require__(87);

var GT = '>';
var LT = '<';
var PROTOTYPE = 'prototype';
var SCRIPT = 'script';
var IE_PROTO = sharedKey('IE_PROTO');

var EmptyConstructor = function () {
  /* empty */
};

var scriptTag = function (content) {
  return LT + SCRIPT + GT + content + LT + '/' + SCRIPT + GT;
}; // Create object with fake `null` prototype: use ActiveX Object with cleared prototype


var NullProtoObjectViaActiveX = function (activeXDocument) {
  activeXDocument.write(scriptTag(''));
  activeXDocument.close();
  var temp = activeXDocument.parentWindow.Object;
  activeXDocument = null; // avoid memory leak

  return temp;
}; // Create object with fake `null` prototype: use iframe Object with cleared prototype


var NullProtoObjectViaIFrame = function () {
  // Thrash, waste and sodomy: IE GC bug
  var iframe = documentCreateElement('iframe');
  var JS = 'java' + SCRIPT + ':';
  var iframeDocument;
  iframe.style.display = 'none';
  html.appendChild(iframe); // https://github.com/zloirock/core-js/issues/475

  iframe.src = String(JS);
  iframeDocument = iframe.contentWindow.document;
  iframeDocument.open();
  iframeDocument.write(scriptTag('document.F=Object'));
  iframeDocument.close();
  return iframeDocument.F;
}; // Check for document.domain and active x support
// No need to use active x approach when document.domain is not set
// see https://github.com/es-shims/es5-shim/issues/150
// variation of https://github.com/kitcambridge/es5-shim/commit/4f738ac066346
// avoid IE GC bug


var activeXDocument;

var NullProtoObject = function () {
  try {
    /* global ActiveXObject -- old IE */
    activeXDocument = document.domain && new ActiveXObject('htmlfile');
  } catch (error) {
    /* ignore */
  }

  NullProtoObject = activeXDocument ? NullProtoObjectViaActiveX(activeXDocument) : NullProtoObjectViaIFrame();
  var length = enumBugKeys.length;

  while (length--) delete NullProtoObject[PROTOTYPE][enumBugKeys[length]];

  return NullProtoObject();
};

hiddenKeys[IE_PROTO] = true; // `Object.create` method
// https://tc39.es/ecma262/#sec-object.create

module.exports = Object.create || function create(O, Properties) {
  var result;

  if (O !== null) {
    EmptyConstructor[PROTOTYPE] = anObject(O);
    result = new EmptyConstructor();
    EmptyConstructor[PROTOTYPE] = null; // add "__proto__" for Object.getPrototypeOf polyfill

    result[IE_PROTO] = O;
  } else result = NullProtoObject();

  return Properties === undefined ? result : defineProperties(result, Properties);
};

/***/ }),
/* 79 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var DESCRIPTORS = __webpack_require__(10);

var definePropertyModule = __webpack_require__(29);

var anObject = __webpack_require__(30);

var objectKeys = __webpack_require__(80); // `Object.defineProperties` method
// https://tc39.es/ecma262/#sec-object.defineproperties
// eslint-disable-next-line es/no-object-defineproperties -- safe


module.exports = DESCRIPTORS ? Object.defineProperties : function defineProperties(O, Properties) {
  anObject(O);
  var keys = objectKeys(Properties);
  var length = keys.length;
  var index = 0;
  var key;

  while (length > index) definePropertyModule.f(O, key = keys[index++], Properties[key]);

  return O;
};

/***/ }),
/* 80 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var internalObjectKeys = __webpack_require__(81);

var enumBugKeys = __webpack_require__(85); // `Object.keys` method
// https://tc39.es/ecma262/#sec-object.keys
// eslint-disable-next-line es/no-object-keys -- safe


module.exports = Object.keys || function keys(O) {
  return internalObjectKeys(O, enumBugKeys);
};

/***/ }),
/* 81 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var has = __webpack_require__(20);

var toIndexedObject = __webpack_require__(14);

var indexOf = __webpack_require__(82).indexOf;

var hiddenKeys = __webpack_require__(84);

module.exports = function (object, names) {
  var O = toIndexedObject(object);
  var i = 0;
  var result = [];
  var key;

  for (key in O) !has(hiddenKeys, key) && has(O, key) && result.push(key); // Don't enum bug & hidden keys


  while (names.length > i) if (has(O, key = names[i++])) {
    ~indexOf(result, key) || result.push(key);
  }

  return result;
};

/***/ }),
/* 82 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var toIndexedObject = __webpack_require__(14);

var toLength = __webpack_require__(31);

var toAbsoluteIndex = __webpack_require__(83); // `Array.prototype.{ indexOf, includes }` methods implementation


var createMethod = function (IS_INCLUDES) {
  return function ($this, el, fromIndex) {
    var O = toIndexedObject($this);
    var length = toLength(O.length);
    var index = toAbsoluteIndex(fromIndex, length);
    var value; // Array#includes uses SameValueZero equality algorithm
    // eslint-disable-next-line no-self-compare -- NaN check

    if (IS_INCLUDES && el != el) while (length > index) {
      value = O[index++]; // eslint-disable-next-line no-self-compare -- NaN check

      if (value != value) return true; // Array#indexOf ignores holes, Array#includes - not
    } else for (; length > index; index++) {
      if ((IS_INCLUDES || index in O) && O[index] === el) return IS_INCLUDES || index || 0;
    }
    return !IS_INCLUDES && -1;
  };
};

module.exports = {
  // `Array.prototype.includes` method
  // https://tc39.es/ecma262/#sec-array.prototype.includes
  includes: createMethod(true),
  // `Array.prototype.indexOf` method
  // https://tc39.es/ecma262/#sec-array.prototype.indexof
  indexOf: createMethod(false)
};

/***/ }),
/* 83 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var toInteger = __webpack_require__(32);

var max = Math.max;
var min = Math.min; // Helper for a popular repeating case of the spec:
// Let integer be ? ToInteger(index).
// If integer < 0, let result be max((length + integer), 0); else let result be min(integer, length).

module.exports = function (index, length) {
  var integer = toInteger(index);
  return integer < 0 ? max(integer + length, 0) : min(integer, length);
};

/***/ }),
/* 84 */
/***/ ((module) => {

module.exports = {};

/***/ }),
/* 85 */
/***/ ((module) => {

// IE8- don't enum bug keys
module.exports = ['constructor', 'hasOwnProperty', 'isPrototypeOf', 'propertyIsEnumerable', 'toLocaleString', 'toString', 'valueOf'];

/***/ }),
/* 86 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var getBuiltIn = __webpack_require__(44);

module.exports = getBuiltIn('document', 'documentElement');

/***/ }),
/* 87 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var shared = __webpack_require__(36);

var uid = __webpack_require__(40);

var keys = shared('keys');

module.exports = function (key) {
  return keys[key] || (keys[key] = uid(key));
};

/***/ }),
/* 88 */
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

var internalObjectKeys = __webpack_require__(81);

var enumBugKeys = __webpack_require__(85);

var hiddenKeys = enumBugKeys.concat('length', 'prototype'); // `Object.getOwnPropertyNames` method
// https://tc39.es/ecma262/#sec-object.getownpropertynames
// eslint-disable-next-line es/no-object-getownpropertynames -- safe

exports.f = Object.getOwnPropertyNames || function getOwnPropertyNames(O) {
  return internalObjectKeys(O, hiddenKeys);
};

/***/ }),
/* 89 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

/* eslint-disable es/no-object-getownpropertynames -- safe */
var toIndexedObject = __webpack_require__(14);

var $getOwnPropertyNames = __webpack_require__(88).f;

var toString = {}.toString;
var windowNames = typeof window == 'object' && window && Object.getOwnPropertyNames ? Object.getOwnPropertyNames(window) : [];

var getWindowNames = function (it) {
  try {
    return $getOwnPropertyNames(it);
  } catch (error) {
    return windowNames.slice();
  }
}; // fallback for IE11 buggy Object.getOwnPropertyNames with iframe and window


module.exports.f = function getOwnPropertyNames(it) {
  return windowNames && toString.call(it) == '[object Window]' ? getWindowNames(it) : $getOwnPropertyNames(toIndexedObject(it));
};

/***/ }),
/* 90 */
/***/ ((__unused_webpack_module, exports) => {

// eslint-disable-next-line es/no-object-getownpropertysymbols -- safe
exports.f = Object.getOwnPropertySymbols;

/***/ }),
/* 91 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var createNonEnumerableProperty = __webpack_require__(28);

module.exports = function (target, key, value, options) {
  if (options && options.enumerable) target[key] = value;else createNonEnumerableProperty(target, key, value);
};

/***/ }),
/* 92 */
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

var wellKnownSymbol = __webpack_require__(35);

exports.f = wellKnownSymbol;

/***/ }),
/* 93 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var path = __webpack_require__(25);

var has = __webpack_require__(20);

var wrappedWellKnownSymbolModule = __webpack_require__(92);

var defineProperty = __webpack_require__(29).f;

module.exports = function (NAME) {
  var Symbol = path.Symbol || (path.Symbol = {});
  if (!has(Symbol, NAME)) defineProperty(Symbol, NAME, {
    value: wrappedWellKnownSymbolModule.f(NAME)
  });
};

/***/ }),
/* 94 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var TO_STRING_TAG_SUPPORT = __webpack_require__(95);

var defineProperty = __webpack_require__(29).f;

var createNonEnumerableProperty = __webpack_require__(28);

var has = __webpack_require__(20);

var toString = __webpack_require__(96);

var wellKnownSymbol = __webpack_require__(35);

var TO_STRING_TAG = wellKnownSymbol('toStringTag');

module.exports = function (it, TAG, STATIC, SET_METHOD) {
  if (it) {
    var target = STATIC ? it : it.prototype;

    if (!has(target, TO_STRING_TAG)) {
      defineProperty(target, TO_STRING_TAG, {
        configurable: true,
        value: TAG
      });
    }

    if (SET_METHOD && !TO_STRING_TAG_SUPPORT) {
      createNonEnumerableProperty(target, 'toString', toString);
    }
  }
};

/***/ }),
/* 95 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var wellKnownSymbol = __webpack_require__(35);

var TO_STRING_TAG = wellKnownSymbol('toStringTag');
var test = {};
test[TO_STRING_TAG] = 'z';
module.exports = String(test) === '[object z]';

/***/ }),
/* 96 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var TO_STRING_TAG_SUPPORT = __webpack_require__(95);

var classof = __webpack_require__(97); // `Object.prototype.toString` method implementation
// https://tc39.es/ecma262/#sec-object.prototype.tostring


module.exports = TO_STRING_TAG_SUPPORT ? {}.toString : function toString() {
  return '[object ' + classof(this) + ']';
};

/***/ }),
/* 97 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var TO_STRING_TAG_SUPPORT = __webpack_require__(95);

var classofRaw = __webpack_require__(16);

var wellKnownSymbol = __webpack_require__(35);

var TO_STRING_TAG = wellKnownSymbol('toStringTag'); // ES3 wrong here

var CORRECT_ARGUMENTS = classofRaw(function () {
  return arguments;
}()) == 'Arguments'; // fallback for IE11 Script Access Denied error

var tryGet = function (it, key) {
  try {
    return it[key];
  } catch (error) {
    /* empty */
  }
}; // getting tag from ES6+ `Object.prototype.toString`


module.exports = TO_STRING_TAG_SUPPORT ? classofRaw : function (it) {
  var O, tag, result;
  return it === undefined ? 'Undefined' : it === null ? 'Null' // @@toStringTag case
  : typeof (tag = tryGet(O = Object(it), TO_STRING_TAG)) == 'string' ? tag // builtinTag case
  : CORRECT_ARGUMENTS ? classofRaw(O) // ES3 arguments fallback
  : (result = classofRaw(O)) == 'Object' && typeof O.callee == 'function' ? 'Arguments' : result;
};

/***/ }),
/* 98 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var NATIVE_WEAK_MAP = __webpack_require__(99);

var global = __webpack_require__(8);

var isObject = __webpack_require__(19);

var createNonEnumerableProperty = __webpack_require__(28);

var objectHas = __webpack_require__(20);

var shared = __webpack_require__(38);

var sharedKey = __webpack_require__(87);

var hiddenKeys = __webpack_require__(84);

var OBJECT_ALREADY_INITIALIZED = 'Object already initialized';
var WeakMap = global.WeakMap;
var set, get, has;

var enforce = function (it) {
  return has(it) ? get(it) : set(it, {});
};

var getterFor = function (TYPE) {
  return function (it) {
    var state;

    if (!isObject(it) || (state = get(it)).type !== TYPE) {
      throw TypeError('Incompatible receiver, ' + TYPE + ' required');
    }

    return state;
  };
};

if (NATIVE_WEAK_MAP || shared.state) {
  var store = shared.state || (shared.state = new WeakMap());
  var wmget = store.get;
  var wmhas = store.has;
  var wmset = store.set;

  set = function (it, metadata) {
    if (wmhas.call(store, it)) throw new TypeError(OBJECT_ALREADY_INITIALIZED);
    metadata.facade = it;
    wmset.call(store, it, metadata);
    return metadata;
  };

  get = function (it) {
    return wmget.call(store, it) || {};
  };

  has = function (it) {
    return wmhas.call(store, it);
  };
} else {
  var STATE = sharedKey('state');
  hiddenKeys[STATE] = true;

  set = function (it, metadata) {
    if (objectHas(it, STATE)) throw new TypeError(OBJECT_ALREADY_INITIALIZED);
    metadata.facade = it;
    createNonEnumerableProperty(it, STATE, metadata);
    return metadata;
  };

  get = function (it) {
    return objectHas(it, STATE) ? it[STATE] : {};
  };

  has = function (it) {
    return objectHas(it, STATE);
  };
}

module.exports = {
  set: set,
  get: get,
  has: has,
  enforce: enforce,
  getterFor: getterFor
};

/***/ }),
/* 99 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var global = __webpack_require__(8);

var inspectSource = __webpack_require__(100);

var WeakMap = global.WeakMap;
module.exports = typeof WeakMap === 'function' && /native code/.test(inspectSource(WeakMap));

/***/ }),
/* 100 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var store = __webpack_require__(38);

var functionToString = Function.toString; // this helper broken in `3.4.1-3.4.4`, so we can't use `shared` helper

if (typeof store.inspectSource != 'function') {
  store.inspectSource = function (it) {
    return functionToString.call(it);
  };
}

module.exports = store.inspectSource;

/***/ }),
/* 101 */
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

var defineWellKnownSymbol = __webpack_require__(93); // `Symbol.asyncIterator` well-known symbol
// https://tc39.es/ecma262/#sec-symbol.asynciterator


defineWellKnownSymbol('asyncIterator');

/***/ }),
/* 102 */
/***/ (() => {

// empty

/***/ }),
/* 103 */
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

var defineWellKnownSymbol = __webpack_require__(93); // `Symbol.hasInstance` well-known symbol
// https://tc39.es/ecma262/#sec-symbol.hasinstance


defineWellKnownSymbol('hasInstance');

/***/ }),
/* 104 */
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

var defineWellKnownSymbol = __webpack_require__(93); // `Symbol.isConcatSpreadable` well-known symbol
// https://tc39.es/ecma262/#sec-symbol.isconcatspreadable


defineWellKnownSymbol('isConcatSpreadable');

/***/ }),
/* 105 */
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

var defineWellKnownSymbol = __webpack_require__(93); // `Symbol.iterator` well-known symbol
// https://tc39.es/ecma262/#sec-symbol.iterator


defineWellKnownSymbol('iterator');

/***/ }),
/* 106 */
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

var defineWellKnownSymbol = __webpack_require__(93); // `Symbol.match` well-known symbol
// https://tc39.es/ecma262/#sec-symbol.match


defineWellKnownSymbol('match');

/***/ }),
/* 107 */
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

var defineWellKnownSymbol = __webpack_require__(93); // `Symbol.matchAll` well-known symbol
// https://tc39.es/ecma262/#sec-symbol.matchall


defineWellKnownSymbol('matchAll');

/***/ }),
/* 108 */
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

var defineWellKnownSymbol = __webpack_require__(93); // `Symbol.replace` well-known symbol
// https://tc39.es/ecma262/#sec-symbol.replace


defineWellKnownSymbol('replace');

/***/ }),
/* 109 */
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

var defineWellKnownSymbol = __webpack_require__(93); // `Symbol.search` well-known symbol
// https://tc39.es/ecma262/#sec-symbol.search


defineWellKnownSymbol('search');

/***/ }),
/* 110 */
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

var defineWellKnownSymbol = __webpack_require__(93); // `Symbol.species` well-known symbol
// https://tc39.es/ecma262/#sec-symbol.species


defineWellKnownSymbol('species');

/***/ }),
/* 111 */
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

var defineWellKnownSymbol = __webpack_require__(93); // `Symbol.split` well-known symbol
// https://tc39.es/ecma262/#sec-symbol.split


defineWellKnownSymbol('split');

/***/ }),
/* 112 */
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

var defineWellKnownSymbol = __webpack_require__(93); // `Symbol.toPrimitive` well-known symbol
// https://tc39.es/ecma262/#sec-symbol.toprimitive


defineWellKnownSymbol('toPrimitive');

/***/ }),
/* 113 */
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

var defineWellKnownSymbol = __webpack_require__(93); // `Symbol.toStringTag` well-known symbol
// https://tc39.es/ecma262/#sec-symbol.tostringtag


defineWellKnownSymbol('toStringTag');

/***/ }),
/* 114 */
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

var defineWellKnownSymbol = __webpack_require__(93); // `Symbol.unscopables` well-known symbol
// https://tc39.es/ecma262/#sec-symbol.unscopables


defineWellKnownSymbol('unscopables');

/***/ }),
/* 115 */
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

var global = __webpack_require__(8);

var setToStringTag = __webpack_require__(94); // JSON[@@toStringTag] property
// https://tc39.es/ecma262/#sec-json-@@tostringtag


setToStringTag(global.JSON, 'JSON', true);

/***/ }),
/* 116 */
/***/ (() => {

// empty

/***/ }),
/* 117 */
/***/ (() => {

// empty

/***/ }),
/* 118 */
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

var defineWellKnownSymbol = __webpack_require__(93); // `Symbol.asyncDispose` well-known symbol
// https://github.com/tc39/proposal-using-statement


defineWellKnownSymbol('asyncDispose');

/***/ }),
/* 119 */
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

var defineWellKnownSymbol = __webpack_require__(93); // `Symbol.dispose` well-known symbol
// https://github.com/tc39/proposal-using-statement


defineWellKnownSymbol('dispose');

/***/ }),
/* 120 */
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

var defineWellKnownSymbol = __webpack_require__(93); // `Symbol.matcher` well-known symbol
// https://github.com/tc39/proposal-pattern-matching


defineWellKnownSymbol('matcher');

/***/ }),
/* 121 */
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

var defineWellKnownSymbol = __webpack_require__(93); // `Symbol.metadata` well-known symbol
// https://github.com/tc39/proposal-decorators


defineWellKnownSymbol('metadata');

/***/ }),
/* 122 */
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

var defineWellKnownSymbol = __webpack_require__(93); // `Symbol.observable` well-known symbol
// https://github.com/tc39/proposal-observable


defineWellKnownSymbol('observable');

/***/ }),
/* 123 */
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

// TODO: remove from `core-js@4`
var defineWellKnownSymbol = __webpack_require__(93); // `Symbol.patternMatch` well-known symbol
// https://github.com/tc39/proposal-pattern-matching


defineWellKnownSymbol('patternMatch');

/***/ }),
/* 124 */
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

// TODO: remove from `core-js@4`
var defineWellKnownSymbol = __webpack_require__(93);

defineWellKnownSymbol('replaceAll');

/***/ }),
/* 125 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

module.exports = __webpack_require__(126);

/***/ }),
/* 126 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

__webpack_require__(127);

__webpack_require__(139);

var getIteratorMethod = __webpack_require__(141);

module.exports = getIteratorMethod;

/***/ }),
/* 127 */
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

__webpack_require__(128);

var DOMIterables = __webpack_require__(138);

var global = __webpack_require__(8);

var classof = __webpack_require__(97);

var createNonEnumerableProperty = __webpack_require__(28);

var Iterators = __webpack_require__(130);

var wellKnownSymbol = __webpack_require__(35);

var TO_STRING_TAG = wellKnownSymbol('toStringTag');

for (var COLLECTION_NAME in DOMIterables) {
  var Collection = global[COLLECTION_NAME];
  var CollectionPrototype = Collection && Collection.prototype;

  if (CollectionPrototype && classof(CollectionPrototype) !== TO_STRING_TAG) {
    createNonEnumerableProperty(CollectionPrototype, TO_STRING_TAG, COLLECTION_NAME);
  }

  Iterators[COLLECTION_NAME] = Iterators.Array;
}

/***/ }),
/* 128 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var toIndexedObject = __webpack_require__(14);

var addToUnscopables = __webpack_require__(129);

var Iterators = __webpack_require__(130);

var InternalStateModule = __webpack_require__(98);

var defineIterator = __webpack_require__(131);

var ARRAY_ITERATOR = 'Array Iterator';
var setInternalState = InternalStateModule.set;
var getInternalState = InternalStateModule.getterFor(ARRAY_ITERATOR); // `Array.prototype.entries` method
// https://tc39.es/ecma262/#sec-array.prototype.entries
// `Array.prototype.keys` method
// https://tc39.es/ecma262/#sec-array.prototype.keys
// `Array.prototype.values` method
// https://tc39.es/ecma262/#sec-array.prototype.values
// `Array.prototype[@@iterator]` method
// https://tc39.es/ecma262/#sec-array.prototype-@@iterator
// `CreateArrayIterator` internal method
// https://tc39.es/ecma262/#sec-createarrayiterator

module.exports = defineIterator(Array, 'Array', function (iterated, kind) {
  setInternalState(this, {
    type: ARRAY_ITERATOR,
    target: toIndexedObject(iterated),
    // target
    index: 0,
    // next index
    kind: kind // kind

  }); // `%ArrayIteratorPrototype%.next` method
  // https://tc39.es/ecma262/#sec-%arrayiteratorprototype%.next
}, function () {
  var state = getInternalState(this);
  var target = state.target;
  var kind = state.kind;
  var index = state.index++;

  if (!target || index >= target.length) {
    state.target = undefined;
    return {
      value: undefined,
      done: true
    };
  }

  if (kind == 'keys') return {
    value: index,
    done: false
  };
  if (kind == 'values') return {
    value: target[index],
    done: false
  };
  return {
    value: [index, target[index]],
    done: false
  };
}, 'values'); // argumentsList[@@iterator] is %ArrayProto_values%
// https://tc39.es/ecma262/#sec-createunmappedargumentsobject
// https://tc39.es/ecma262/#sec-createmappedargumentsobject

Iterators.Arguments = Iterators.Array; // https://tc39.es/ecma262/#sec-array.prototype-@@unscopables

addToUnscopables('keys');
addToUnscopables('values');
addToUnscopables('entries');

/***/ }),
/* 129 */
/***/ ((module) => {

module.exports = function () {
  /* empty */
};

/***/ }),
/* 130 */
/***/ ((module) => {

module.exports = {};

/***/ }),
/* 131 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var $ = __webpack_require__(7);

var createIteratorConstructor = __webpack_require__(132);

var getPrototypeOf = __webpack_require__(134);

var setPrototypeOf = __webpack_require__(136);

var setToStringTag = __webpack_require__(94);

var createNonEnumerableProperty = __webpack_require__(28);

var redefine = __webpack_require__(91);

var wellKnownSymbol = __webpack_require__(35);

var IS_PURE = __webpack_require__(37);

var Iterators = __webpack_require__(130);

var IteratorsCore = __webpack_require__(133);

var IteratorPrototype = IteratorsCore.IteratorPrototype;
var BUGGY_SAFARI_ITERATORS = IteratorsCore.BUGGY_SAFARI_ITERATORS;
var ITERATOR = wellKnownSymbol('iterator');
var KEYS = 'keys';
var VALUES = 'values';
var ENTRIES = 'entries';

var returnThis = function () {
  return this;
};

module.exports = function (Iterable, NAME, IteratorConstructor, next, DEFAULT, IS_SET, FORCED) {
  createIteratorConstructor(IteratorConstructor, NAME, next);

  var getIterationMethod = function (KIND) {
    if (KIND === DEFAULT && defaultIterator) return defaultIterator;
    if (!BUGGY_SAFARI_ITERATORS && KIND in IterablePrototype) return IterablePrototype[KIND];

    switch (KIND) {
      case KEYS:
        return function keys() {
          return new IteratorConstructor(this, KIND);
        };

      case VALUES:
        return function values() {
          return new IteratorConstructor(this, KIND);
        };

      case ENTRIES:
        return function entries() {
          return new IteratorConstructor(this, KIND);
        };
    }

    return function () {
      return new IteratorConstructor(this);
    };
  };

  var TO_STRING_TAG = NAME + ' Iterator';
  var INCORRECT_VALUES_NAME = false;
  var IterablePrototype = Iterable.prototype;
  var nativeIterator = IterablePrototype[ITERATOR] || IterablePrototype['@@iterator'] || DEFAULT && IterablePrototype[DEFAULT];
  var defaultIterator = !BUGGY_SAFARI_ITERATORS && nativeIterator || getIterationMethod(DEFAULT);
  var anyNativeIterator = NAME == 'Array' ? IterablePrototype.entries || nativeIterator : nativeIterator;
  var CurrentIteratorPrototype, methods, KEY; // fix native

  if (anyNativeIterator) {
    CurrentIteratorPrototype = getPrototypeOf(anyNativeIterator.call(new Iterable()));

    if (IteratorPrototype !== Object.prototype && CurrentIteratorPrototype.next) {
      if (!IS_PURE && getPrototypeOf(CurrentIteratorPrototype) !== IteratorPrototype) {
        if (setPrototypeOf) {
          setPrototypeOf(CurrentIteratorPrototype, IteratorPrototype);
        } else if (typeof CurrentIteratorPrototype[ITERATOR] != 'function') {
          createNonEnumerableProperty(CurrentIteratorPrototype, ITERATOR, returnThis);
        }
      } // Set @@toStringTag to native iterators


      setToStringTag(CurrentIteratorPrototype, TO_STRING_TAG, true, true);
      if (IS_PURE) Iterators[TO_STRING_TAG] = returnThis;
    }
  } // fix Array#{values, @@iterator}.name in V8 / FF


  if (DEFAULT == VALUES && nativeIterator && nativeIterator.name !== VALUES) {
    INCORRECT_VALUES_NAME = true;

    defaultIterator = function values() {
      return nativeIterator.call(this);
    };
  } // define iterator


  if ((!IS_PURE || FORCED) && IterablePrototype[ITERATOR] !== defaultIterator) {
    createNonEnumerableProperty(IterablePrototype, ITERATOR, defaultIterator);
  }

  Iterators[NAME] = defaultIterator; // export additional methods

  if (DEFAULT) {
    methods = {
      values: getIterationMethod(VALUES),
      keys: IS_SET ? defaultIterator : getIterationMethod(KEYS),
      entries: getIterationMethod(ENTRIES)
    };
    if (FORCED) for (KEY in methods) {
      if (BUGGY_SAFARI_ITERATORS || INCORRECT_VALUES_NAME || !(KEY in IterablePrototype)) {
        redefine(IterablePrototype, KEY, methods[KEY]);
      }
    } else $({
      target: NAME,
      proto: true,
      forced: BUGGY_SAFARI_ITERATORS || INCORRECT_VALUES_NAME
    }, methods);
  }

  return methods;
};

/***/ }),
/* 132 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var IteratorPrototype = __webpack_require__(133).IteratorPrototype;

var create = __webpack_require__(78);

var createPropertyDescriptor = __webpack_require__(13);

var setToStringTag = __webpack_require__(94);

var Iterators = __webpack_require__(130);

var returnThis = function () {
  return this;
};

module.exports = function (IteratorConstructor, NAME, next) {
  var TO_STRING_TAG = NAME + ' Iterator';
  IteratorConstructor.prototype = create(IteratorPrototype, {
    next: createPropertyDescriptor(1, next)
  });
  setToStringTag(IteratorConstructor, TO_STRING_TAG, false, true);
  Iterators[TO_STRING_TAG] = returnThis;
  return IteratorConstructor;
};

/***/ }),
/* 133 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var fails = __webpack_require__(11);

var getPrototypeOf = __webpack_require__(134);

var createNonEnumerableProperty = __webpack_require__(28);

var has = __webpack_require__(20);

var wellKnownSymbol = __webpack_require__(35);

var IS_PURE = __webpack_require__(37);

var ITERATOR = wellKnownSymbol('iterator');
var BUGGY_SAFARI_ITERATORS = false;

var returnThis = function () {
  return this;
}; // `%IteratorPrototype%` object
// https://tc39.es/ecma262/#sec-%iteratorprototype%-object


var IteratorPrototype, PrototypeOfArrayIteratorPrototype, arrayIterator;
/* eslint-disable es/no-array-prototype-keys -- safe */

if ([].keys) {
  arrayIterator = [].keys(); // Safari 8 has buggy iterators w/o `next`

  if (!('next' in arrayIterator)) BUGGY_SAFARI_ITERATORS = true;else {
    PrototypeOfArrayIteratorPrototype = getPrototypeOf(getPrototypeOf(arrayIterator));
    if (PrototypeOfArrayIteratorPrototype !== Object.prototype) IteratorPrototype = PrototypeOfArrayIteratorPrototype;
  }
}

var NEW_ITERATOR_PROTOTYPE = IteratorPrototype == undefined || fails(function () {
  var test = {}; // FF44- legacy iterators case

  return IteratorPrototype[ITERATOR].call(test) !== test;
});
if (NEW_ITERATOR_PROTOTYPE) IteratorPrototype = {}; // 25.1.2.1.1 %IteratorPrototype%[@@iterator]()

if ((!IS_PURE || NEW_ITERATOR_PROTOTYPE) && !has(IteratorPrototype, ITERATOR)) {
  createNonEnumerableProperty(IteratorPrototype, ITERATOR, returnThis);
}

module.exports = {
  IteratorPrototype: IteratorPrototype,
  BUGGY_SAFARI_ITERATORS: BUGGY_SAFARI_ITERATORS
};

/***/ }),
/* 134 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var has = __webpack_require__(20);

var toObject = __webpack_require__(21);

var sharedKey = __webpack_require__(87);

var CORRECT_PROTOTYPE_GETTER = __webpack_require__(135);

var IE_PROTO = sharedKey('IE_PROTO');
var ObjectPrototype = Object.prototype; // `Object.getPrototypeOf` method
// https://tc39.es/ecma262/#sec-object.getprototypeof
// eslint-disable-next-line es/no-object-getprototypeof -- safe

module.exports = CORRECT_PROTOTYPE_GETTER ? Object.getPrototypeOf : function (O) {
  O = toObject(O);
  if (has(O, IE_PROTO)) return O[IE_PROTO];

  if (typeof O.constructor == 'function' && O instanceof O.constructor) {
    return O.constructor.prototype;
  }

  return O instanceof Object ? ObjectPrototype : null;
};

/***/ }),
/* 135 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var fails = __webpack_require__(11);

module.exports = !fails(function () {
  function F() {
    /* empty */
  }

  F.prototype.constructor = null; // eslint-disable-next-line es/no-object-getprototypeof -- required for testing

  return Object.getPrototypeOf(new F()) !== F.prototype;
});

/***/ }),
/* 136 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

/* eslint-disable no-proto -- safe */
var anObject = __webpack_require__(30);

var aPossiblePrototype = __webpack_require__(137); // `Object.setPrototypeOf` method
// https://tc39.es/ecma262/#sec-object.setprototypeof
// Works with __proto__ only. Old v8 can't work with null proto objects.
// eslint-disable-next-line es/no-object-setprototypeof -- safe


module.exports = Object.setPrototypeOf || ('__proto__' in {} ? function () {
  var CORRECT_SETTER = false;
  var test = {};
  var setter;

  try {
    // eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe
    setter = Object.getOwnPropertyDescriptor(Object.prototype, '__proto__').set;
    setter.call(test, []);
    CORRECT_SETTER = test instanceof Array;
  } catch (error) {
    /* empty */
  }

  return function setPrototypeOf(O, proto) {
    anObject(O);
    aPossiblePrototype(proto);
    if (CORRECT_SETTER) setter.call(O, proto);else O.__proto__ = proto;
    return O;
  };
}() : undefined);

/***/ }),
/* 137 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var isObject = __webpack_require__(19);

module.exports = function (it) {
  if (!isObject(it) && it !== null) {
    throw TypeError("Can't set " + String(it) + ' as a prototype');
  }

  return it;
};

/***/ }),
/* 138 */
/***/ ((module) => {

// iterable DOM collections
// flag - `iterable` interface - 'entries', 'keys', 'values', 'forEach' methods
module.exports = {
  CSSRuleList: 0,
  CSSStyleDeclaration: 0,
  CSSValueList: 0,
  ClientRectList: 0,
  DOMRectList: 0,
  DOMStringList: 0,
  DOMTokenList: 1,
  DataTransferItemList: 0,
  FileList: 0,
  HTMLAllCollection: 0,
  HTMLCollection: 0,
  HTMLFormElement: 0,
  HTMLSelectElement: 0,
  MediaList: 0,
  MimeTypeArray: 0,
  NamedNodeMap: 0,
  NodeList: 1,
  PaintRequestList: 0,
  Plugin: 0,
  PluginArray: 0,
  SVGLengthList: 0,
  SVGNumberList: 0,
  SVGPathSegList: 0,
  SVGPointList: 0,
  SVGStringList: 0,
  SVGTransformList: 0,
  SourceBufferList: 0,
  StyleSheetList: 0,
  TextTrackCueList: 0,
  TextTrackList: 0,
  TouchList: 0
};

/***/ }),
/* 139 */
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var charAt = __webpack_require__(140).charAt;

var InternalStateModule = __webpack_require__(98);

var defineIterator = __webpack_require__(131);

var STRING_ITERATOR = 'String Iterator';
var setInternalState = InternalStateModule.set;
var getInternalState = InternalStateModule.getterFor(STRING_ITERATOR); // `String.prototype[@@iterator]` method
// https://tc39.es/ecma262/#sec-string.prototype-@@iterator

defineIterator(String, 'String', function (iterated) {
  setInternalState(this, {
    type: STRING_ITERATOR,
    string: String(iterated),
    index: 0
  }); // `%StringIteratorPrototype%.next` method
  // https://tc39.es/ecma262/#sec-%stringiteratorprototype%.next
}, function next() {
  var state = getInternalState(this);
  var string = state.string;
  var index = state.index;
  var point;
  if (index >= string.length) return {
    value: undefined,
    done: true
  };
  point = charAt(string, index);
  state.index += point.length;
  return {
    value: point,
    done: false
  };
});

/***/ }),
/* 140 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var toInteger = __webpack_require__(32);

var requireObjectCoercible = __webpack_require__(17); // `String.prototype.{ codePointAt, at }` methods implementation


var createMethod = function (CONVERT_TO_STRING) {
  return function ($this, pos) {
    var S = String(requireObjectCoercible($this));
    var position = toInteger(pos);
    var size = S.length;
    var first, second;
    if (position < 0 || position >= size) return CONVERT_TO_STRING ? '' : undefined;
    first = S.charCodeAt(position);
    return first < 0xD800 || first > 0xDBFF || position + 1 === size || (second = S.charCodeAt(position + 1)) < 0xDC00 || second > 0xDFFF ? CONVERT_TO_STRING ? S.charAt(position) : first : CONVERT_TO_STRING ? S.slice(position, position + 2) : (first - 0xD800 << 10) + (second - 0xDC00) + 0x10000;
  };
};

module.exports = {
  // `String.prototype.codePointAt` method
  // https://tc39.es/ecma262/#sec-string.prototype.codepointat
  codeAt: createMethod(false),
  // `String.prototype.at` method
  // https://github.com/mathiasbynens/String.prototype.at
  charAt: createMethod(true)
};

/***/ }),
/* 141 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var classof = __webpack_require__(97);

var Iterators = __webpack_require__(130);

var wellKnownSymbol = __webpack_require__(35);

var ITERATOR = wellKnownSymbol('iterator');

module.exports = function (it) {
  if (it != undefined) return it[ITERATOR] || it['@@iterator'] || Iterators[classof(it)];
};

/***/ }),
/* 142 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ _unsupportedIterableToArray)
/* harmony export */ });
/* harmony import */ var _babel_runtime_corejs3_core_js_instance_slice__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(143);
/* harmony import */ var _babel_runtime_corejs3_core_js_array_from__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(148);
/* harmony import */ var _arrayLikeToArray_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(157);



function _unsupportedIterableToArray(o, minLen) {
  var _context;

  if (!o) return;
  if (typeof o === "string") return (0,_arrayLikeToArray_js__WEBPACK_IMPORTED_MODULE_2__.default)(o, minLen);

  var n = _babel_runtime_corejs3_core_js_instance_slice__WEBPACK_IMPORTED_MODULE_0__(_context = Object.prototype.toString.call(o)).call(_context, 8, -1);

  if (n === "Object" && o.constructor) n = o.constructor.name;
  if (n === "Map" || n === "Set") return _babel_runtime_corejs3_core_js_array_from__WEBPACK_IMPORTED_MODULE_1__(o);
  if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return (0,_arrayLikeToArray_js__WEBPACK_IMPORTED_MODULE_2__.default)(o, minLen);
}

/***/ }),
/* 143 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

module.exports = __webpack_require__(144);

/***/ }),
/* 144 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var parent = __webpack_require__(145);

module.exports = parent;

/***/ }),
/* 145 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var slice = __webpack_require__(146);

var ArrayPrototype = Array.prototype;

module.exports = function (it) {
  var own = it.slice;
  return it === ArrayPrototype || it instanceof Array && own === ArrayPrototype.slice ? slice : own;
};

/***/ }),
/* 146 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

__webpack_require__(147);

var entryVirtual = __webpack_require__(47);

module.exports = entryVirtual('Array').slice;

/***/ }),
/* 147 */
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var $ = __webpack_require__(7);

var isObject = __webpack_require__(19);

var isArray = __webpack_require__(62);

var toAbsoluteIndex = __webpack_require__(83);

var toLength = __webpack_require__(31);

var toIndexedObject = __webpack_require__(14);

var createProperty = __webpack_require__(75);

var wellKnownSymbol = __webpack_require__(35);

var arrayMethodHasSpeciesSupport = __webpack_require__(63);

var HAS_SPECIES_SUPPORT = arrayMethodHasSpeciesSupport('slice');
var SPECIES = wellKnownSymbol('species');
var nativeSlice = [].slice;
var max = Math.max; // `Array.prototype.slice` method
// https://tc39.es/ecma262/#sec-array.prototype.slice
// fallback for not array-like ES3 strings and DOM objects

$({
  target: 'Array',
  proto: true,
  forced: !HAS_SPECIES_SUPPORT
}, {
  slice: function slice(start, end) {
    var O = toIndexedObject(this);
    var length = toLength(O.length);
    var k = toAbsoluteIndex(start, length);
    var fin = toAbsoluteIndex(end === undefined ? length : end, length); // inline `ArraySpeciesCreate` for usage native `Array#slice` where it's possible

    var Constructor, result, n;

    if (isArray(O)) {
      Constructor = O.constructor; // cross-realm fallback

      if (typeof Constructor == 'function' && (Constructor === Array || isArray(Constructor.prototype))) {
        Constructor = undefined;
      } else if (isObject(Constructor)) {
        Constructor = Constructor[SPECIES];
        if (Constructor === null) Constructor = undefined;
      }

      if (Constructor === Array || Constructor === undefined) {
        return nativeSlice.call(O, k, fin);
      }
    }

    result = new (Constructor === undefined ? Array : Constructor)(max(fin - k, 0));

    for (n = 0; k < fin; k++, n++) if (k in O) createProperty(result, n, O[k]);

    result.length = n;
    return result;
  }
});

/***/ }),
/* 148 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

module.exports = __webpack_require__(149);

/***/ }),
/* 149 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var parent = __webpack_require__(150);

module.exports = parent;

/***/ }),
/* 150 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

__webpack_require__(139);

__webpack_require__(151);

var path = __webpack_require__(25);

module.exports = path.Array.from;

/***/ }),
/* 151 */
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

var $ = __webpack_require__(7);

var from = __webpack_require__(152);

var checkCorrectnessOfIteration = __webpack_require__(156);

var INCORRECT_ITERATION = !checkCorrectnessOfIteration(function (iterable) {
  // eslint-disable-next-line es/no-array-from -- required for testing
  Array.from(iterable);
}); // `Array.from` method
// https://tc39.es/ecma262/#sec-array.from

$({
  target: 'Array',
  stat: true,
  forced: INCORRECT_ITERATION
}, {
  from: from
});

/***/ }),
/* 152 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var bind = __webpack_require__(26);

var toObject = __webpack_require__(21);

var callWithSafeIterationClosing = __webpack_require__(153);

var isArrayIteratorMethod = __webpack_require__(155);

var toLength = __webpack_require__(31);

var createProperty = __webpack_require__(75);

var getIteratorMethod = __webpack_require__(141); // `Array.from` method implementation
// https://tc39.es/ecma262/#sec-array.from


module.exports = function from(arrayLike
/* , mapfn = undefined, thisArg = undefined */
) {
  var O = toObject(arrayLike);
  var C = typeof this == 'function' ? this : Array;
  var argumentsLength = arguments.length;
  var mapfn = argumentsLength > 1 ? arguments[1] : undefined;
  var mapping = mapfn !== undefined;
  var iteratorMethod = getIteratorMethod(O);
  var index = 0;
  var length, result, step, iterator, next, value;
  if (mapping) mapfn = bind(mapfn, argumentsLength > 2 ? arguments[2] : undefined, 2); // if the target is not iterable or it's an array with the default iterator - use a simple case

  if (iteratorMethod != undefined && !(C == Array && isArrayIteratorMethod(iteratorMethod))) {
    iterator = iteratorMethod.call(O);
    next = iterator.next;
    result = new C();

    for (; !(step = next.call(iterator)).done; index++) {
      value = mapping ? callWithSafeIterationClosing(iterator, mapfn, [step.value, index], true) : step.value;
      createProperty(result, index, value);
    }
  } else {
    length = toLength(O.length);
    result = new C(length);

    for (; length > index; index++) {
      value = mapping ? mapfn(O[index], index) : O[index];
      createProperty(result, index, value);
    }
  }

  result.length = index;
  return result;
};

/***/ }),
/* 153 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var anObject = __webpack_require__(30);

var iteratorClose = __webpack_require__(154); // call something on iterator step with safe closing on error


module.exports = function (iterator, fn, value, ENTRIES) {
  try {
    return ENTRIES ? fn(anObject(value)[0], value[1]) : fn(value); // 7.4.6 IteratorClose(iterator, completion)
  } catch (error) {
    iteratorClose(iterator);
    throw error;
  }
};

/***/ }),
/* 154 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var anObject = __webpack_require__(30);

module.exports = function (iterator) {
  var returnMethod = iterator['return'];

  if (returnMethod !== undefined) {
    return anObject(returnMethod.call(iterator)).value;
  }
};

/***/ }),
/* 155 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var wellKnownSymbol = __webpack_require__(35);

var Iterators = __webpack_require__(130);

var ITERATOR = wellKnownSymbol('iterator');
var ArrayPrototype = Array.prototype; // check on default Array iterator

module.exports = function (it) {
  return it !== undefined && (Iterators.Array === it || ArrayPrototype[ITERATOR] === it);
};

/***/ }),
/* 156 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var wellKnownSymbol = __webpack_require__(35);

var ITERATOR = wellKnownSymbol('iterator');
var SAFE_CLOSING = false;

try {
  var called = 0;
  var iteratorWithReturn = {
    next: function () {
      return {
        done: !!called++
      };
    },
    'return': function () {
      SAFE_CLOSING = true;
    }
  };

  iteratorWithReturn[ITERATOR] = function () {
    return this;
  }; // eslint-disable-next-line es/no-array-from, no-throw-literal -- required for testing


  Array.from(iteratorWithReturn, function () {
    throw 2;
  });
} catch (error) {
  /* empty */
}

module.exports = function (exec, SKIP_CLOSING) {
  if (!SKIP_CLOSING && !SAFE_CLOSING) return false;
  var ITERATION_SUPPORT = false;

  try {
    var object = {};

    object[ITERATOR] = function () {
      return {
        next: function () {
          return {
            done: ITERATION_SUPPORT = true
          };
        }
      };
    };

    exec(object);
  } catch (error) {
    /* empty */
  }

  return ITERATION_SUPPORT;
};

/***/ }),
/* 157 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ _arrayLikeToArray)
/* harmony export */ });
function _arrayLikeToArray(arr, len) {
  if (len == null || len > arr.length) len = arr.length;

  for (var i = 0, arr2 = new Array(len); i < len; i++) {
    arr2[i] = arr[i];
  }

  return arr2;
}

/***/ }),
/* 158 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ _nonIterableRest)
/* harmony export */ });
function _nonIterableRest() {
  throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}

/***/ }),
/* 159 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

module.exports = __webpack_require__(160);

/***/ }),
/* 160 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var parent = __webpack_require__(161);

module.exports = parent;

/***/ }),
/* 161 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

__webpack_require__(162);

var path = __webpack_require__(25);

var Object = path.Object;

var defineProperty = module.exports = function defineProperty(it, key, desc) {
  return Object.defineProperty(it, key, desc);
};

if (Object.defineProperty.sham) defineProperty.sham = true;

/***/ }),
/* 162 */
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

var $ = __webpack_require__(7);

var DESCRIPTORS = __webpack_require__(10);

var objectDefinePropertyModile = __webpack_require__(29); // `Object.defineProperty` method
// https://tc39.es/ecma262/#sec-object.defineproperty


$({
  target: 'Object',
  stat: true,
  forced: !DESCRIPTORS,
  sham: !DESCRIPTORS
}, {
  defineProperty: objectDefinePropertyModile.f
});

/***/ }),
/* 163 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

module.exports = __webpack_require__(164);

/***/ }),
/* 164 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var parent = __webpack_require__(165);

module.exports = parent;

/***/ }),
/* 165 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

__webpack_require__(166);

var path = __webpack_require__(25);

var Object = path.Object;

var defineProperties = module.exports = function defineProperties(T, D) {
  return Object.defineProperties(T, D);
};

if (Object.defineProperties.sham) defineProperties.sham = true;

/***/ }),
/* 166 */
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

var $ = __webpack_require__(7);

var DESCRIPTORS = __webpack_require__(10);

var defineProperties = __webpack_require__(79); // `Object.defineProperties` method
// https://tc39.es/ecma262/#sec-object.defineproperties


$({
  target: 'Object',
  stat: true,
  forced: !DESCRIPTORS,
  sham: !DESCRIPTORS
}, {
  defineProperties: defineProperties
});

/***/ }),
/* 167 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

module.exports = __webpack_require__(168);

/***/ }),
/* 168 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var parent = __webpack_require__(169);

module.exports = parent;

/***/ }),
/* 169 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

__webpack_require__(170);

var path = __webpack_require__(25);

module.exports = path.Object.getOwnPropertyDescriptors;

/***/ }),
/* 170 */
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

var $ = __webpack_require__(7);

var DESCRIPTORS = __webpack_require__(10);

var ownKeys = __webpack_require__(171);

var toIndexedObject = __webpack_require__(14);

var getOwnPropertyDescriptorModule = __webpack_require__(9);

var createProperty = __webpack_require__(75); // `Object.getOwnPropertyDescriptors` method
// https://tc39.es/ecma262/#sec-object.getownpropertydescriptors


$({
  target: 'Object',
  stat: true,
  sham: !DESCRIPTORS
}, {
  getOwnPropertyDescriptors: function getOwnPropertyDescriptors(object) {
    var O = toIndexedObject(object);
    var getOwnPropertyDescriptor = getOwnPropertyDescriptorModule.f;
    var keys = ownKeys(O);
    var result = {};
    var index = 0;
    var key, descriptor;

    while (keys.length > index) {
      descriptor = getOwnPropertyDescriptor(O, key = keys[index++]);
      if (descriptor !== undefined) createProperty(result, key, descriptor);
    }

    return result;
  }
});

/***/ }),
/* 171 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var getBuiltIn = __webpack_require__(44);

var getOwnPropertyNamesModule = __webpack_require__(88);

var getOwnPropertySymbolsModule = __webpack_require__(90);

var anObject = __webpack_require__(30); // all object keys, includes non-enumerable and symbols


module.exports = getBuiltIn('Reflect', 'ownKeys') || function ownKeys(it) {
  var keys = getOwnPropertyNamesModule.f(anObject(it));
  var getOwnPropertySymbols = getOwnPropertySymbolsModule.f;
  return getOwnPropertySymbols ? keys.concat(getOwnPropertySymbols(it)) : keys;
};

/***/ }),
/* 172 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

module.exports = __webpack_require__(173);

/***/ }),
/* 173 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

__webpack_require__(127);

var forEach = __webpack_require__(174);

var classof = __webpack_require__(97);

var ArrayPrototype = Array.prototype;
var DOMIterables = {
  DOMTokenList: true,
  NodeList: true
};

module.exports = function (it) {
  var own = it.forEach;
  return it === ArrayPrototype || it instanceof Array && own === ArrayPrototype.forEach // eslint-disable-next-line no-prototype-builtins -- safe
  || DOMIterables.hasOwnProperty(classof(it)) ? forEach : own;
};

/***/ }),
/* 174 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var parent = __webpack_require__(175);

module.exports = parent;

/***/ }),
/* 175 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

__webpack_require__(176);

var entryVirtual = __webpack_require__(47);

module.exports = entryVirtual('Array').forEach;

/***/ }),
/* 176 */
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var $ = __webpack_require__(7);

var forEach = __webpack_require__(177); // `Array.prototype.forEach` method
// https://tc39.es/ecma262/#sec-array.prototype.foreach
// eslint-disable-next-line es/no-array-prototype-foreach -- safe


$({
  target: 'Array',
  proto: true,
  forced: [].forEach != forEach
}, {
  forEach: forEach
});

/***/ }),
/* 177 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var $forEach = __webpack_require__(60).forEach;

var arrayMethodIsStrict = __webpack_require__(178);

var STRICT_METHOD = arrayMethodIsStrict('forEach'); // `Array.prototype.forEach` method implementation
// https://tc39.es/ecma262/#sec-array.prototype.foreach

module.exports = !STRICT_METHOD ? function forEach(callbackfn
/* , thisArg */
) {
  return $forEach(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined); // eslint-disable-next-line es/no-array-prototype-foreach -- safe
} : [].forEach;

/***/ }),
/* 178 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var fails = __webpack_require__(11);

module.exports = function (METHOD_NAME, argument) {
  var method = [][METHOD_NAME];
  return !!method && fails(function () {
    // eslint-disable-next-line no-useless-call,no-throw-literal -- required for testing
    method.call(null, argument || function () {
      throw 1;
    }, 1);
  });
};

/***/ }),
/* 179 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

module.exports = __webpack_require__(180);

/***/ }),
/* 180 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var parent = __webpack_require__(181);

module.exports = parent;

/***/ }),
/* 181 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

__webpack_require__(182);

var path = __webpack_require__(25);

var Object = path.Object;

var getOwnPropertyDescriptor = module.exports = function getOwnPropertyDescriptor(it, key) {
  return Object.getOwnPropertyDescriptor(it, key);
};

if (Object.getOwnPropertyDescriptor.sham) getOwnPropertyDescriptor.sham = true;

/***/ }),
/* 182 */
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

var $ = __webpack_require__(7);

var fails = __webpack_require__(11);

var toIndexedObject = __webpack_require__(14);

var nativeGetOwnPropertyDescriptor = __webpack_require__(9).f;

var DESCRIPTORS = __webpack_require__(10);

var FAILS_ON_PRIMITIVES = fails(function () {
  nativeGetOwnPropertyDescriptor(1);
});
var FORCED = !DESCRIPTORS || FAILS_ON_PRIMITIVES; // `Object.getOwnPropertyDescriptor` method
// https://tc39.es/ecma262/#sec-object.getownpropertydescriptor

$({
  target: 'Object',
  stat: true,
  forced: FORCED,
  sham: !DESCRIPTORS
}, {
  getOwnPropertyDescriptor: function getOwnPropertyDescriptor(it, key) {
    return nativeGetOwnPropertyDescriptor(toIndexedObject(it), key);
  }
});

/***/ }),
/* 183 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

module.exports = __webpack_require__(184);

/***/ }),
/* 184 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var parent = __webpack_require__(185);

module.exports = parent;

/***/ }),
/* 185 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var filter = __webpack_require__(186);

var ArrayPrototype = Array.prototype;

module.exports = function (it) {
  var own = it.filter;
  return it === ArrayPrototype || it instanceof Array && own === ArrayPrototype.filter ? filter : own;
};

/***/ }),
/* 186 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

__webpack_require__(187);

var entryVirtual = __webpack_require__(47);

module.exports = entryVirtual('Array').filter;

/***/ }),
/* 187 */
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var $ = __webpack_require__(7);

var $filter = __webpack_require__(60).filter;

var arrayMethodHasSpeciesSupport = __webpack_require__(63);

var HAS_SPECIES_SUPPORT = arrayMethodHasSpeciesSupport('filter'); // `Array.prototype.filter` method
// https://tc39.es/ecma262/#sec-array.prototype.filter
// with adding support of @@species

$({
  target: 'Array',
  proto: true,
  forced: !HAS_SPECIES_SUPPORT
}, {
  filter: function filter(callbackfn
  /* , thisArg */
  ) {
    return $filter(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);
  }
});

/***/ }),
/* 188 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

module.exports = __webpack_require__(189);

/***/ }),
/* 189 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var parent = __webpack_require__(190);

module.exports = parent;

/***/ }),
/* 190 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

__webpack_require__(77);

var path = __webpack_require__(25);

module.exports = path.Object.getOwnPropertySymbols;

/***/ }),
/* 191 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

module.exports = __webpack_require__(192);

/***/ }),
/* 192 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var parent = __webpack_require__(193);

module.exports = parent;

/***/ }),
/* 193 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

__webpack_require__(194);

var path = __webpack_require__(25);

module.exports = path.Object.keys;

/***/ }),
/* 194 */
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

var $ = __webpack_require__(7);

var toObject = __webpack_require__(21);

var nativeKeys = __webpack_require__(80);

var fails = __webpack_require__(11);

var FAILS_ON_PRIMITIVES = fails(function () {
  nativeKeys(1);
}); // `Object.keys` method
// https://tc39.es/ecma262/#sec-object.keys

$({
  target: 'Object',
  stat: true,
  forced: FAILS_ON_PRIMITIVES
}, {
  keys: function keys(it) {
    return nativeKeys(toObject(it));
  }
});

/***/ }),
/* 195 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

module.exports = __webpack_require__(196);

/***/ }),
/* 196 */
/***/ ((module) => {

/**
 * Copyright (c) 2014-present, Facebook, Inc.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */
var runtime = function (exports) {
  "use strict";

  var Op = Object.prototype;
  var hasOwn = Op.hasOwnProperty;
  var undefined; // More compressible than void 0.

  var $Symbol = typeof Symbol === "function" ? Symbol : {};
  var iteratorSymbol = $Symbol.iterator || "@@iterator";
  var asyncIteratorSymbol = $Symbol.asyncIterator || "@@asyncIterator";
  var toStringTagSymbol = $Symbol.toStringTag || "@@toStringTag";

  function define(obj, key, value) {
    Object.defineProperty(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
    return obj[key];
  }

  try {
    // IE 8 has a broken Object.defineProperty that only works on DOM objects.
    define({}, "");
  } catch (err) {
    define = function (obj, key, value) {
      return obj[key] = value;
    };
  }

  function wrap(innerFn, outerFn, self, tryLocsList) {
    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.
    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;
    var generator = Object.create(protoGenerator.prototype);
    var context = new Context(tryLocsList || []); // The ._invoke method unifies the implementations of the .next,
    // .throw, and .return methods.

    generator._invoke = makeInvokeMethod(innerFn, self, context);
    return generator;
  }

  exports.wrap = wrap; // Try/catch helper to minimize deoptimizations. Returns a completion
  // record like context.tryEntries[i].completion. This interface could
  // have been (and was previously) designed to take a closure to be
  // invoked without arguments, but in all the cases we care about we
  // already have an existing method we want to call, so there's no need
  // to create a new function object. We can even get away with assuming
  // the method takes exactly one argument, since that happens to be true
  // in every case, so we don't have to touch the arguments object. The
  // only additional allocation required is the completion record, which
  // has a stable shape and so hopefully should be cheap to allocate.

  function tryCatch(fn, obj, arg) {
    try {
      return {
        type: "normal",
        arg: fn.call(obj, arg)
      };
    } catch (err) {
      return {
        type: "throw",
        arg: err
      };
    }
  }

  var GenStateSuspendedStart = "suspendedStart";
  var GenStateSuspendedYield = "suspendedYield";
  var GenStateExecuting = "executing";
  var GenStateCompleted = "completed"; // Returning this object from the innerFn has the same effect as
  // breaking out of the dispatch switch statement.

  var ContinueSentinel = {}; // Dummy constructor functions that we use as the .constructor and
  // .constructor.prototype properties for functions that return Generator
  // objects. For full spec compliance, you may wish to configure your
  // minifier not to mangle the names of these two functions.

  function Generator() {}

  function GeneratorFunction() {}

  function GeneratorFunctionPrototype() {} // This is a polyfill for %IteratorPrototype% for environments that
  // don't natively support it.


  var IteratorPrototype = {};

  IteratorPrototype[iteratorSymbol] = function () {
    return this;
  };

  var getProto = Object.getPrototypeOf;
  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));

  if (NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {
    // This environment has a native %IteratorPrototype%; use it instead
    // of the polyfill.
    IteratorPrototype = NativeIteratorPrototype;
  }

  var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype);
  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;
  GeneratorFunctionPrototype.constructor = GeneratorFunction;
  GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, "GeneratorFunction"); // Helper for defining the .next, .throw, and .return methods of the
  // Iterator interface in terms of a single ._invoke method.

  function defineIteratorMethods(prototype) {
    ["next", "throw", "return"].forEach(function (method) {
      define(prototype, method, function (arg) {
        return this._invoke(method, arg);
      });
    });
  }

  exports.isGeneratorFunction = function (genFun) {
    var ctor = typeof genFun === "function" && genFun.constructor;
    return ctor ? ctor === GeneratorFunction || // For the native GeneratorFunction constructor, the best we can
    // do is to check its .name property.
    (ctor.displayName || ctor.name) === "GeneratorFunction" : false;
  };

  exports.mark = function (genFun) {
    if (Object.setPrototypeOf) {
      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);
    } else {
      genFun.__proto__ = GeneratorFunctionPrototype;
      define(genFun, toStringTagSymbol, "GeneratorFunction");
    }

    genFun.prototype = Object.create(Gp);
    return genFun;
  }; // Within the body of any async function, `await x` is transformed to
  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test
  // `hasOwn.call(value, "__await")` to determine if the yielded value is
  // meant to be awaited.


  exports.awrap = function (arg) {
    return {
      __await: arg
    };
  };

  function AsyncIterator(generator, PromiseImpl) {
    function invoke(method, arg, resolve, reject) {
      var record = tryCatch(generator[method], generator, arg);

      if (record.type === "throw") {
        reject(record.arg);
      } else {
        var result = record.arg;
        var value = result.value;

        if (value && typeof value === "object" && hasOwn.call(value, "__await")) {
          return PromiseImpl.resolve(value.__await).then(function (value) {
            invoke("next", value, resolve, reject);
          }, function (err) {
            invoke("throw", err, resolve, reject);
          });
        }

        return PromiseImpl.resolve(value).then(function (unwrapped) {
          // When a yielded Promise is resolved, its final value becomes
          // the .value of the Promise<{value,done}> result for the
          // current iteration.
          result.value = unwrapped;
          resolve(result);
        }, function (error) {
          // If a rejected Promise was yielded, throw the rejection back
          // into the async generator function so it can be handled there.
          return invoke("throw", error, resolve, reject);
        });
      }
    }

    var previousPromise;

    function enqueue(method, arg) {
      function callInvokeWithMethodAndArg() {
        return new PromiseImpl(function (resolve, reject) {
          invoke(method, arg, resolve, reject);
        });
      }

      return previousPromise = // If enqueue has been called before, then we want to wait until
      // all previous Promises have been resolved before calling invoke,
      // so that results are always delivered in the correct order. If
      // enqueue has not been called before, then it is important to
      // call invoke immediately, without waiting on a callback to fire,
      // so that the async generator function has the opportunity to do
      // any necessary setup in a predictable way. This predictability
      // is why the Promise constructor synchronously invokes its
      // executor callback, and why async functions synchronously
      // execute code before the first await. Since we implement simple
      // async functions in terms of async generators, it is especially
      // important to get this right, even though it requires care.
      previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, // Avoid propagating failures to Promises returned by later
      // invocations of the iterator.
      callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();
    } // Define the unified helper method that is used to implement .next,
    // .throw, and .return (see defineIteratorMethods).


    this._invoke = enqueue;
  }

  defineIteratorMethods(AsyncIterator.prototype);

  AsyncIterator.prototype[asyncIteratorSymbol] = function () {
    return this;
  };

  exports.AsyncIterator = AsyncIterator; // Note that simple async functions are implemented on top of
  // AsyncIterator objects; they just return a Promise for the value of
  // the final result produced by the iterator.

  exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) {
    if (PromiseImpl === void 0) PromiseImpl = Promise;
    var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl);
    return exports.isGeneratorFunction(outerFn) ? iter // If outerFn is a generator, return the full iterator.
    : iter.next().then(function (result) {
      return result.done ? result.value : iter.next();
    });
  };

  function makeInvokeMethod(innerFn, self, context) {
    var state = GenStateSuspendedStart;
    return function invoke(method, arg) {
      if (state === GenStateExecuting) {
        throw new Error("Generator is already running");
      }

      if (state === GenStateCompleted) {
        if (method === "throw") {
          throw arg;
        } // Be forgiving, per 25.3.3.3.3 of the spec:
        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume


        return doneResult();
      }

      context.method = method;
      context.arg = arg;

      while (true) {
        var delegate = context.delegate;

        if (delegate) {
          var delegateResult = maybeInvokeDelegate(delegate, context);

          if (delegateResult) {
            if (delegateResult === ContinueSentinel) continue;
            return delegateResult;
          }
        }

        if (context.method === "next") {
          // Setting context._sent for legacy support of Babel's
          // function.sent implementation.
          context.sent = context._sent = context.arg;
        } else if (context.method === "throw") {
          if (state === GenStateSuspendedStart) {
            state = GenStateCompleted;
            throw context.arg;
          }

          context.dispatchException(context.arg);
        } else if (context.method === "return") {
          context.abrupt("return", context.arg);
        }

        state = GenStateExecuting;
        var record = tryCatch(innerFn, self, context);

        if (record.type === "normal") {
          // If an exception is thrown from innerFn, we leave state ===
          // GenStateExecuting and loop back for another invocation.
          state = context.done ? GenStateCompleted : GenStateSuspendedYield;

          if (record.arg === ContinueSentinel) {
            continue;
          }

          return {
            value: record.arg,
            done: context.done
          };
        } else if (record.type === "throw") {
          state = GenStateCompleted; // Dispatch the exception by looping back around to the
          // context.dispatchException(context.arg) call above.

          context.method = "throw";
          context.arg = record.arg;
        }
      }
    };
  } // Call delegate.iterator[context.method](context.arg) and handle the
  // result, either by returning a { value, done } result from the
  // delegate iterator, or by modifying context.method and context.arg,
  // setting context.delegate to null, and returning the ContinueSentinel.


  function maybeInvokeDelegate(delegate, context) {
    var method = delegate.iterator[context.method];

    if (method === undefined) {
      // A .throw or .return when the delegate iterator has no .throw
      // method always terminates the yield* loop.
      context.delegate = null;

      if (context.method === "throw") {
        // Note: ["return"] must be used for ES3 parsing compatibility.
        if (delegate.iterator["return"]) {
          // If the delegate iterator has a return method, give it a
          // chance to clean up.
          context.method = "return";
          context.arg = undefined;
          maybeInvokeDelegate(delegate, context);

          if (context.method === "throw") {
            // If maybeInvokeDelegate(context) changed context.method from
            // "return" to "throw", let that override the TypeError below.
            return ContinueSentinel;
          }
        }

        context.method = "throw";
        context.arg = new TypeError("The iterator does not provide a 'throw' method");
      }

      return ContinueSentinel;
    }

    var record = tryCatch(method, delegate.iterator, context.arg);

    if (record.type === "throw") {
      context.method = "throw";
      context.arg = record.arg;
      context.delegate = null;
      return ContinueSentinel;
    }

    var info = record.arg;

    if (!info) {
      context.method = "throw";
      context.arg = new TypeError("iterator result is not an object");
      context.delegate = null;
      return ContinueSentinel;
    }

    if (info.done) {
      // Assign the result of the finished delegate to the temporary
      // variable specified by delegate.resultName (see delegateYield).
      context[delegate.resultName] = info.value; // Resume execution at the desired location (see delegateYield).

      context.next = delegate.nextLoc; // If context.method was "throw" but the delegate handled the
      // exception, let the outer generator proceed normally. If
      // context.method was "next", forget context.arg since it has been
      // "consumed" by the delegate iterator. If context.method was
      // "return", allow the original .return call to continue in the
      // outer generator.

      if (context.method !== "return") {
        context.method = "next";
        context.arg = undefined;
      }
    } else {
      // Re-yield the result returned by the delegate method.
      return info;
    } // The delegate iterator is finished, so forget it and continue with
    // the outer generator.


    context.delegate = null;
    return ContinueSentinel;
  } // Define Generator.prototype.{next,throw,return} in terms of the
  // unified ._invoke helper method.


  defineIteratorMethods(Gp);
  define(Gp, toStringTagSymbol, "Generator"); // A Generator should always return itself as the iterator object when the
  // @@iterator function is called on it. Some browsers' implementations of the
  // iterator prototype chain incorrectly implement this, causing the Generator
  // object to not be returned from this call. This ensures that doesn't happen.
  // See https://github.com/facebook/regenerator/issues/274 for more details.

  Gp[iteratorSymbol] = function () {
    return this;
  };

  Gp.toString = function () {
    return "[object Generator]";
  };

  function pushTryEntry(locs) {
    var entry = {
      tryLoc: locs[0]
    };

    if (1 in locs) {
      entry.catchLoc = locs[1];
    }

    if (2 in locs) {
      entry.finallyLoc = locs[2];
      entry.afterLoc = locs[3];
    }

    this.tryEntries.push(entry);
  }

  function resetTryEntry(entry) {
    var record = entry.completion || {};
    record.type = "normal";
    delete record.arg;
    entry.completion = record;
  }

  function Context(tryLocsList) {
    // The root entry object (effectively a try statement without a catch
    // or a finally block) gives us a place to store values thrown from
    // locations where there is no enclosing try statement.
    this.tryEntries = [{
      tryLoc: "root"
    }];
    tryLocsList.forEach(pushTryEntry, this);
    this.reset(true);
  }

  exports.keys = function (object) {
    var keys = [];

    for (var key in object) {
      keys.push(key);
    }

    keys.reverse(); // Rather than returning an object with a next method, we keep
    // things simple and return the next function itself.

    return function next() {
      while (keys.length) {
        var key = keys.pop();

        if (key in object) {
          next.value = key;
          next.done = false;
          return next;
        }
      } // To avoid creating an additional object, we just hang the .value
      // and .done properties off the next function object itself. This
      // also ensures that the minifier will not anonymize the function.


      next.done = true;
      return next;
    };
  };

  function values(iterable) {
    if (iterable) {
      var iteratorMethod = iterable[iteratorSymbol];

      if (iteratorMethod) {
        return iteratorMethod.call(iterable);
      }

      if (typeof iterable.next === "function") {
        return iterable;
      }

      if (!isNaN(iterable.length)) {
        var i = -1,
            next = function next() {
          while (++i < iterable.length) {
            if (hasOwn.call(iterable, i)) {
              next.value = iterable[i];
              next.done = false;
              return next;
            }
          }

          next.value = undefined;
          next.done = true;
          return next;
        };

        return next.next = next;
      }
    } // Return an iterator with no values.


    return {
      next: doneResult
    };
  }

  exports.values = values;

  function doneResult() {
    return {
      value: undefined,
      done: true
    };
  }

  Context.prototype = {
    constructor: Context,
    reset: function (skipTempReset) {
      this.prev = 0;
      this.next = 0; // Resetting context._sent for legacy support of Babel's
      // function.sent implementation.

      this.sent = this._sent = undefined;
      this.done = false;
      this.delegate = null;
      this.method = "next";
      this.arg = undefined;
      this.tryEntries.forEach(resetTryEntry);

      if (!skipTempReset) {
        for (var name in this) {
          // Not sure about the optimal order of these conditions:
          if (name.charAt(0) === "t" && hasOwn.call(this, name) && !isNaN(+name.slice(1))) {
            this[name] = undefined;
          }
        }
      }
    },
    stop: function () {
      this.done = true;
      var rootEntry = this.tryEntries[0];
      var rootRecord = rootEntry.completion;

      if (rootRecord.type === "throw") {
        throw rootRecord.arg;
      }

      return this.rval;
    },
    dispatchException: function (exception) {
      if (this.done) {
        throw exception;
      }

      var context = this;

      function handle(loc, caught) {
        record.type = "throw";
        record.arg = exception;
        context.next = loc;

        if (caught) {
          // If the dispatched exception was caught by a catch block,
          // then let that catch block handle the exception normally.
          context.method = "next";
          context.arg = undefined;
        }

        return !!caught;
      }

      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];
        var record = entry.completion;

        if (entry.tryLoc === "root") {
          // Exception thrown outside of any try block that could handle
          // it, so set the completion value of the entire function to
          // throw the exception.
          return handle("end");
        }

        if (entry.tryLoc <= this.prev) {
          var hasCatch = hasOwn.call(entry, "catchLoc");
          var hasFinally = hasOwn.call(entry, "finallyLoc");

          if (hasCatch && hasFinally) {
            if (this.prev < entry.catchLoc) {
              return handle(entry.catchLoc, true);
            } else if (this.prev < entry.finallyLoc) {
              return handle(entry.finallyLoc);
            }
          } else if (hasCatch) {
            if (this.prev < entry.catchLoc) {
              return handle(entry.catchLoc, true);
            }
          } else if (hasFinally) {
            if (this.prev < entry.finallyLoc) {
              return handle(entry.finallyLoc);
            }
          } else {
            throw new Error("try statement without catch or finally");
          }
        }
      }
    },
    abrupt: function (type, arg) {
      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];

        if (entry.tryLoc <= this.prev && hasOwn.call(entry, "finallyLoc") && this.prev < entry.finallyLoc) {
          var finallyEntry = entry;
          break;
        }
      }

      if (finallyEntry && (type === "break" || type === "continue") && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc) {
        // Ignore the finally entry if control is not jumping to a
        // location outside the try/catch block.
        finallyEntry = null;
      }

      var record = finallyEntry ? finallyEntry.completion : {};
      record.type = type;
      record.arg = arg;

      if (finallyEntry) {
        this.method = "next";
        this.next = finallyEntry.finallyLoc;
        return ContinueSentinel;
      }

      return this.complete(record);
    },
    complete: function (record, afterLoc) {
      if (record.type === "throw") {
        throw record.arg;
      }

      if (record.type === "break" || record.type === "continue") {
        this.next = record.arg;
      } else if (record.type === "return") {
        this.rval = this.arg = record.arg;
        this.method = "return";
        this.next = "end";
      } else if (record.type === "normal" && afterLoc) {
        this.next = afterLoc;
      }

      return ContinueSentinel;
    },
    finish: function (finallyLoc) {
      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];

        if (entry.finallyLoc === finallyLoc) {
          this.complete(entry.completion, entry.afterLoc);
          resetTryEntry(entry);
          return ContinueSentinel;
        }
      }
    },
    "catch": function (tryLoc) {
      for (var i = this.tryEntries.length - 1; i >= 0; --i) {
        var entry = this.tryEntries[i];

        if (entry.tryLoc === tryLoc) {
          var record = entry.completion;

          if (record.type === "throw") {
            var thrown = record.arg;
            resetTryEntry(entry);
          }

          return thrown;
        }
      } // The context.catch method must only be called with a location
      // argument that corresponds to a known catch block.


      throw new Error("illegal catch attempt");
    },
    delegateYield: function (iterable, resultName, nextLoc) {
      this.delegate = {
        iterator: values(iterable),
        resultName: resultName,
        nextLoc: nextLoc
      };

      if (this.method === "next") {
        // Deliberately forget the last sent value so that we don't
        // accidentally pass it on to the delegate.
        this.arg = undefined;
      }

      return ContinueSentinel;
    }
  }; // Regardless of whether this script is executing as a CommonJS module
  // or not, return the runtime object so that we can declare the variable
  // regeneratorRuntime in the outer scope, which allows this module to be
  // injected easily by `bin/regenerator --include-runtime script.js`.

  return exports;
}( // If this script is executing as a CommonJS module, use module.exports
// as the regeneratorRuntime namespace. Otherwise create a new empty
// object. Either way, the resulting object will be used to initialize
// the regeneratorRuntime variable at the top of this file.
 true ? module.exports : 0);

try {
  regeneratorRuntime = runtime;
} catch (accidentalStrictMode) {
  // This module should not be running in strict mode, so the above
  // assignment should always work unless something is misconfigured. Just
  // in case runtime.js accidentally runs in strict mode, we can escape
  // strict mode using a global Function call. This could conceivably fail
  // if a Content Security Policy forbids using Function, but in that case
  // the proper solution is to fix the accidental strict mode problem. If
  // you've misconfigured your bundler to force strict mode and applied a
  // CSP to forbid Function, and you're not willing to fix either of those
  // problems, please detail your unique predicament in a GitHub issue.
  Function("r", "regeneratorRuntime = r")(runtime);
}

/***/ }),
/* 197 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ _asyncToGenerator)
/* harmony export */ });
/* harmony import */ var _babel_runtime_corejs3_core_js_promise__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(198);


function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {
  try {
    var info = gen[key](arg);
    var value = info.value;
  } catch (error) {
    reject(error);
    return;
  }

  if (info.done) {
    resolve(value);
  } else {
    _babel_runtime_corejs3_core_js_promise__WEBPACK_IMPORTED_MODULE_0__.resolve(value).then(_next, _throw);
  }
}

function _asyncToGenerator(fn) {
  return function () {
    var self = this,
        args = arguments;
    return new _babel_runtime_corejs3_core_js_promise__WEBPACK_IMPORTED_MODULE_0__(function (resolve, reject) {
      var gen = fn.apply(self, args);

      function _next(value) {
        asyncGeneratorStep(gen, resolve, reject, _next, _throw, "next", value);
      }

      function _throw(err) {
        asyncGeneratorStep(gen, resolve, reject, _next, _throw, "throw", err);
      }

      _next(undefined);
    });
  };
}

/***/ }),
/* 198 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

module.exports = __webpack_require__(199);

/***/ }),
/* 199 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var parent = __webpack_require__(200);

__webpack_require__(222); // TODO: Remove from `core-js@4`


__webpack_require__(223);

__webpack_require__(224);

__webpack_require__(225);

module.exports = parent;

/***/ }),
/* 200 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

__webpack_require__(201);

__webpack_require__(76);

__webpack_require__(203);

__webpack_require__(219);

__webpack_require__(220);

__webpack_require__(221);

__webpack_require__(139);

__webpack_require__(127);

var path = __webpack_require__(25);

module.exports = path.Promise;

/***/ }),
/* 201 */
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var $ = __webpack_require__(7);

var getPrototypeOf = __webpack_require__(134);

var setPrototypeOf = __webpack_require__(136);

var create = __webpack_require__(78);

var createNonEnumerableProperty = __webpack_require__(28);

var createPropertyDescriptor = __webpack_require__(13);

var iterate = __webpack_require__(202);

var $AggregateError = function AggregateError(errors, message) {
  var that = this;
  if (!(that instanceof $AggregateError)) return new $AggregateError(errors, message);

  if (setPrototypeOf) {
    // eslint-disable-next-line unicorn/error-message -- expected
    that = setPrototypeOf(new Error(undefined), getPrototypeOf(that));
  }

  if (message !== undefined) createNonEnumerableProperty(that, 'message', String(message));
  var errorsArray = [];
  iterate(errors, errorsArray.push, {
    that: errorsArray
  });
  createNonEnumerableProperty(that, 'errors', errorsArray);
  return that;
};

$AggregateError.prototype = create(Error.prototype, {
  constructor: createPropertyDescriptor(5, $AggregateError),
  message: createPropertyDescriptor(5, ''),
  name: createPropertyDescriptor(5, 'AggregateError')
}); // `AggregateError` constructor
// https://tc39.es/ecma262/#sec-aggregate-error-constructor

$({
  global: true
}, {
  AggregateError: $AggregateError
});

/***/ }),
/* 202 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var anObject = __webpack_require__(30);

var isArrayIteratorMethod = __webpack_require__(155);

var toLength = __webpack_require__(31);

var bind = __webpack_require__(26);

var getIteratorMethod = __webpack_require__(141);

var iteratorClose = __webpack_require__(154);

var Result = function (stopped, result) {
  this.stopped = stopped;
  this.result = result;
};

module.exports = function (iterable, unboundFunction, options) {
  var that = options && options.that;
  var AS_ENTRIES = !!(options && options.AS_ENTRIES);
  var IS_ITERATOR = !!(options && options.IS_ITERATOR);
  var INTERRUPTED = !!(options && options.INTERRUPTED);
  var fn = bind(unboundFunction, that, 1 + AS_ENTRIES + INTERRUPTED);
  var iterator, iterFn, index, length, result, next, step;

  var stop = function (condition) {
    if (iterator) iteratorClose(iterator);
    return new Result(true, condition);
  };

  var callFn = function (value) {
    if (AS_ENTRIES) {
      anObject(value);
      return INTERRUPTED ? fn(value[0], value[1], stop) : fn(value[0], value[1]);
    }

    return INTERRUPTED ? fn(value, stop) : fn(value);
  };

  if (IS_ITERATOR) {
    iterator = iterable;
  } else {
    iterFn = getIteratorMethod(iterable);
    if (typeof iterFn != 'function') throw TypeError('Target is not iterable'); // optimisation for array iterators

    if (isArrayIteratorMethod(iterFn)) {
      for (index = 0, length = toLength(iterable.length); length > index; index++) {
        result = callFn(iterable[index]);
        if (result && result instanceof Result) return result;
      }

      return new Result(false);
    }

    iterator = iterFn.call(iterable);
  }

  next = iterator.next;

  while (!(step = next.call(iterator)).done) {
    try {
      result = callFn(step.value);
    } catch (error) {
      iteratorClose(iterator);
      throw error;
    }

    if (typeof result == 'object' && result && result instanceof Result) return result;
  }

  return new Result(false);
};

/***/ }),
/* 203 */
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var $ = __webpack_require__(7);

var IS_PURE = __webpack_require__(37);

var global = __webpack_require__(8);

var getBuiltIn = __webpack_require__(44);

var NativePromise = __webpack_require__(204);

var redefine = __webpack_require__(91);

var redefineAll = __webpack_require__(205);

var setPrototypeOf = __webpack_require__(136);

var setToStringTag = __webpack_require__(94);

var setSpecies = __webpack_require__(206);

var isObject = __webpack_require__(19);

var aFunction = __webpack_require__(27);

var anInstance = __webpack_require__(207);

var inspectSource = __webpack_require__(100);

var iterate = __webpack_require__(202);

var checkCorrectnessOfIteration = __webpack_require__(156);

var speciesConstructor = __webpack_require__(208);

var task = __webpack_require__(209).set;

var microtask = __webpack_require__(212);

var promiseResolve = __webpack_require__(214);

var hostReportErrors = __webpack_require__(216);

var newPromiseCapabilityModule = __webpack_require__(215);

var perform = __webpack_require__(217);

var InternalStateModule = __webpack_require__(98);

var isForced = __webpack_require__(24);

var wellKnownSymbol = __webpack_require__(35);

var IS_BROWSER = __webpack_require__(218);

var IS_NODE = __webpack_require__(211);

var V8_VERSION = __webpack_require__(42);

var SPECIES = wellKnownSymbol('species');
var PROMISE = 'Promise';
var getInternalState = InternalStateModule.get;
var setInternalState = InternalStateModule.set;
var getInternalPromiseState = InternalStateModule.getterFor(PROMISE);
var NativePromisePrototype = NativePromise && NativePromise.prototype;
var PromiseConstructor = NativePromise;
var PromiseConstructorPrototype = NativePromisePrototype;
var TypeError = global.TypeError;
var document = global.document;
var process = global.process;
var newPromiseCapability = newPromiseCapabilityModule.f;
var newGenericPromiseCapability = newPromiseCapability;
var DISPATCH_EVENT = !!(document && document.createEvent && global.dispatchEvent);
var NATIVE_REJECTION_EVENT = typeof PromiseRejectionEvent == 'function';
var UNHANDLED_REJECTION = 'unhandledrejection';
var REJECTION_HANDLED = 'rejectionhandled';
var PENDING = 0;
var FULFILLED = 1;
var REJECTED = 2;
var HANDLED = 1;
var UNHANDLED = 2;
var SUBCLASSING = false;
var Internal, OwnPromiseCapability, PromiseWrapper, nativeThen;
var FORCED = isForced(PROMISE, function () {
  var GLOBAL_CORE_JS_PROMISE = inspectSource(PromiseConstructor) !== String(PromiseConstructor); // V8 6.6 (Node 10 and Chrome 66) have a bug with resolving custom thenables
  // https://bugs.chromium.org/p/chromium/issues/detail?id=830565
  // We can't detect it synchronously, so just check versions

  if (!GLOBAL_CORE_JS_PROMISE && V8_VERSION === 66) return true; // We need Promise#finally in the pure version for preventing prototype pollution

  if (IS_PURE && !PromiseConstructorPrototype['finally']) return true; // We can't use @@species feature detection in V8 since it causes
  // deoptimization and performance degradation
  // https://github.com/zloirock/core-js/issues/679

  if (V8_VERSION >= 51 && /native code/.test(PromiseConstructor)) return false; // Detect correctness of subclassing with @@species support

  var promise = new PromiseConstructor(function (resolve) {
    resolve(1);
  });

  var FakePromise = function (exec) {
    exec(function () {
      /* empty */
    }, function () {
      /* empty */
    });
  };

  var constructor = promise.constructor = {};
  constructor[SPECIES] = FakePromise;
  SUBCLASSING = promise.then(function () {
    /* empty */
  }) instanceof FakePromise;
  if (!SUBCLASSING) return true; // Unhandled rejections tracking support, NodeJS Promise without it fails @@species test

  return !GLOBAL_CORE_JS_PROMISE && IS_BROWSER && !NATIVE_REJECTION_EVENT;
});
var INCORRECT_ITERATION = FORCED || !checkCorrectnessOfIteration(function (iterable) {
  PromiseConstructor.all(iterable)['catch'](function () {
    /* empty */
  });
}); // helpers

var isThenable = function (it) {
  var then;
  return isObject(it) && typeof (then = it.then) == 'function' ? then : false;
};

var notify = function (state, isReject) {
  if (state.notified) return;
  state.notified = true;
  var chain = state.reactions;
  microtask(function () {
    var value = state.value;
    var ok = state.state == FULFILLED;
    var index = 0; // variable length - can't use forEach

    while (chain.length > index) {
      var reaction = chain[index++];
      var handler = ok ? reaction.ok : reaction.fail;
      var resolve = reaction.resolve;
      var reject = reaction.reject;
      var domain = reaction.domain;
      var result, then, exited;

      try {
        if (handler) {
          if (!ok) {
            if (state.rejection === UNHANDLED) onHandleUnhandled(state);
            state.rejection = HANDLED;
          }

          if (handler === true) result = value;else {
            if (domain) domain.enter();
            result = handler(value); // can throw

            if (domain) {
              domain.exit();
              exited = true;
            }
          }

          if (result === reaction.promise) {
            reject(TypeError('Promise-chain cycle'));
          } else if (then = isThenable(result)) {
            then.call(result, resolve, reject);
          } else resolve(result);
        } else reject(value);
      } catch (error) {
        if (domain && !exited) domain.exit();
        reject(error);
      }
    }

    state.reactions = [];
    state.notified = false;
    if (isReject && !state.rejection) onUnhandled(state);
  });
};

var dispatchEvent = function (name, promise, reason) {
  var event, handler;

  if (DISPATCH_EVENT) {
    event = document.createEvent('Event');
    event.promise = promise;
    event.reason = reason;
    event.initEvent(name, false, true);
    global.dispatchEvent(event);
  } else event = {
    promise: promise,
    reason: reason
  };

  if (!NATIVE_REJECTION_EVENT && (handler = global['on' + name])) handler(event);else if (name === UNHANDLED_REJECTION) hostReportErrors('Unhandled promise rejection', reason);
};

var onUnhandled = function (state) {
  task.call(global, function () {
    var promise = state.facade;
    var value = state.value;
    var IS_UNHANDLED = isUnhandled(state);
    var result;

    if (IS_UNHANDLED) {
      result = perform(function () {
        if (IS_NODE) {
          process.emit('unhandledRejection', value, promise);
        } else dispatchEvent(UNHANDLED_REJECTION, promise, value);
      }); // Browsers should not trigger `rejectionHandled` event if it was handled here, NodeJS - should

      state.rejection = IS_NODE || isUnhandled(state) ? UNHANDLED : HANDLED;
      if (result.error) throw result.value;
    }
  });
};

var isUnhandled = function (state) {
  return state.rejection !== HANDLED && !state.parent;
};

var onHandleUnhandled = function (state) {
  task.call(global, function () {
    var promise = state.facade;

    if (IS_NODE) {
      process.emit('rejectionHandled', promise);
    } else dispatchEvent(REJECTION_HANDLED, promise, state.value);
  });
};

var bind = function (fn, state, unwrap) {
  return function (value) {
    fn(state, value, unwrap);
  };
};

var internalReject = function (state, value, unwrap) {
  if (state.done) return;
  state.done = true;
  if (unwrap) state = unwrap;
  state.value = value;
  state.state = REJECTED;
  notify(state, true);
};

var internalResolve = function (state, value, unwrap) {
  if (state.done) return;
  state.done = true;
  if (unwrap) state = unwrap;

  try {
    if (state.facade === value) throw TypeError("Promise can't be resolved itself");
    var then = isThenable(value);

    if (then) {
      microtask(function () {
        var wrapper = {
          done: false
        };

        try {
          then.call(value, bind(internalResolve, wrapper, state), bind(internalReject, wrapper, state));
        } catch (error) {
          internalReject(wrapper, error, state);
        }
      });
    } else {
      state.value = value;
      state.state = FULFILLED;
      notify(state, false);
    }
  } catch (error) {
    internalReject({
      done: false
    }, error, state);
  }
}; // constructor polyfill


if (FORCED) {
  // 25.4.3.1 Promise(executor)
  PromiseConstructor = function Promise(executor) {
    anInstance(this, PromiseConstructor, PROMISE);
    aFunction(executor);
    Internal.call(this);
    var state = getInternalState(this);

    try {
      executor(bind(internalResolve, state), bind(internalReject, state));
    } catch (error) {
      internalReject(state, error);
    }
  };

  PromiseConstructorPrototype = PromiseConstructor.prototype; // eslint-disable-next-line no-unused-vars -- required for `.length`

  Internal = function Promise(executor) {
    setInternalState(this, {
      type: PROMISE,
      done: false,
      notified: false,
      parent: false,
      reactions: [],
      rejection: false,
      state: PENDING,
      value: undefined
    });
  };

  Internal.prototype = redefineAll(PromiseConstructorPrototype, {
    // `Promise.prototype.then` method
    // https://tc39.es/ecma262/#sec-promise.prototype.then
    then: function then(onFulfilled, onRejected) {
      var state = getInternalPromiseState(this);
      var reaction = newPromiseCapability(speciesConstructor(this, PromiseConstructor));
      reaction.ok = typeof onFulfilled == 'function' ? onFulfilled : true;
      reaction.fail = typeof onRejected == 'function' && onRejected;
      reaction.domain = IS_NODE ? process.domain : undefined;
      state.parent = true;
      state.reactions.push(reaction);
      if (state.state != PENDING) notify(state, false);
      return reaction.promise;
    },
    // `Promise.prototype.catch` method
    // https://tc39.es/ecma262/#sec-promise.prototype.catch
    'catch': function (onRejected) {
      return this.then(undefined, onRejected);
    }
  });

  OwnPromiseCapability = function () {
    var promise = new Internal();
    var state = getInternalState(promise);
    this.promise = promise;
    this.resolve = bind(internalResolve, state);
    this.reject = bind(internalReject, state);
  };

  newPromiseCapabilityModule.f = newPromiseCapability = function (C) {
    return C === PromiseConstructor || C === PromiseWrapper ? new OwnPromiseCapability(C) : newGenericPromiseCapability(C);
  };

  if (!IS_PURE && typeof NativePromise == 'function' && NativePromisePrototype !== Object.prototype) {
    nativeThen = NativePromisePrototype.then;

    if (!SUBCLASSING) {
      // make `Promise#then` return a polyfilled `Promise` for native promise-based APIs
      redefine(NativePromisePrototype, 'then', function then(onFulfilled, onRejected) {
        var that = this;
        return new PromiseConstructor(function (resolve, reject) {
          nativeThen.call(that, resolve, reject);
        }).then(onFulfilled, onRejected); // https://github.com/zloirock/core-js/issues/640
      }, {
        unsafe: true
      }); // makes sure that native promise-based APIs `Promise#catch` properly works with patched `Promise#then`

      redefine(NativePromisePrototype, 'catch', PromiseConstructorPrototype['catch'], {
        unsafe: true
      });
    } // make `.constructor === Promise` work for native promise-based APIs


    try {
      delete NativePromisePrototype.constructor;
    } catch (error) {
      /* empty */
    } // make `instanceof Promise` work for native promise-based APIs


    if (setPrototypeOf) {
      setPrototypeOf(NativePromisePrototype, PromiseConstructorPrototype);
    }
  }
}

$({
  global: true,
  wrap: true,
  forced: FORCED
}, {
  Promise: PromiseConstructor
});
setToStringTag(PromiseConstructor, PROMISE, false, true);
setSpecies(PROMISE);
PromiseWrapper = getBuiltIn(PROMISE); // statics

$({
  target: PROMISE,
  stat: true,
  forced: FORCED
}, {
  // `Promise.reject` method
  // https://tc39.es/ecma262/#sec-promise.reject
  reject: function reject(r) {
    var capability = newPromiseCapability(this);
    capability.reject.call(undefined, r);
    return capability.promise;
  }
});
$({
  target: PROMISE,
  stat: true,
  forced: IS_PURE || FORCED
}, {
  // `Promise.resolve` method
  // https://tc39.es/ecma262/#sec-promise.resolve
  resolve: function resolve(x) {
    return promiseResolve(IS_PURE && this === PromiseWrapper ? PromiseConstructor : this, x);
  }
});
$({
  target: PROMISE,
  stat: true,
  forced: INCORRECT_ITERATION
}, {
  // `Promise.all` method
  // https://tc39.es/ecma262/#sec-promise.all
  all: function all(iterable) {
    var C = this;
    var capability = newPromiseCapability(C);
    var resolve = capability.resolve;
    var reject = capability.reject;
    var result = perform(function () {
      var $promiseResolve = aFunction(C.resolve);
      var values = [];
      var counter = 0;
      var remaining = 1;
      iterate(iterable, function (promise) {
        var index = counter++;
        var alreadyCalled = false;
        values.push(undefined);
        remaining++;
        $promiseResolve.call(C, promise).then(function (value) {
          if (alreadyCalled) return;
          alreadyCalled = true;
          values[index] = value;
          --remaining || resolve(values);
        }, reject);
      });
      --remaining || resolve(values);
    });
    if (result.error) reject(result.value);
    return capability.promise;
  },
  // `Promise.race` method
  // https://tc39.es/ecma262/#sec-promise.race
  race: function race(iterable) {
    var C = this;
    var capability = newPromiseCapability(C);
    var reject = capability.reject;
    var result = perform(function () {
      var $promiseResolve = aFunction(C.resolve);
      iterate(iterable, function (promise) {
        $promiseResolve.call(C, promise).then(capability.resolve, reject);
      });
    });
    if (result.error) reject(result.value);
    return capability.promise;
  }
});

/***/ }),
/* 204 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var global = __webpack_require__(8);

module.exports = global.Promise;

/***/ }),
/* 205 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var redefine = __webpack_require__(91);

module.exports = function (target, src, options) {
  for (var key in src) {
    if (options && options.unsafe && target[key]) target[key] = src[key];else redefine(target, key, src[key], options);
  }

  return target;
};

/***/ }),
/* 206 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var getBuiltIn = __webpack_require__(44);

var definePropertyModule = __webpack_require__(29);

var wellKnownSymbol = __webpack_require__(35);

var DESCRIPTORS = __webpack_require__(10);

var SPECIES = wellKnownSymbol('species');

module.exports = function (CONSTRUCTOR_NAME) {
  var Constructor = getBuiltIn(CONSTRUCTOR_NAME);
  var defineProperty = definePropertyModule.f;

  if (DESCRIPTORS && Constructor && !Constructor[SPECIES]) {
    defineProperty(Constructor, SPECIES, {
      configurable: true,
      get: function () {
        return this;
      }
    });
  }
};

/***/ }),
/* 207 */
/***/ ((module) => {

module.exports = function (it, Constructor, name) {
  if (!(it instanceof Constructor)) {
    throw TypeError('Incorrect ' + (name ? name + ' ' : '') + 'invocation');
  }

  return it;
};

/***/ }),
/* 208 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var anObject = __webpack_require__(30);

var aFunction = __webpack_require__(27);

var wellKnownSymbol = __webpack_require__(35);

var SPECIES = wellKnownSymbol('species'); // `SpeciesConstructor` abstract operation
// https://tc39.es/ecma262/#sec-speciesconstructor

module.exports = function (O, defaultConstructor) {
  var C = anObject(O).constructor;
  var S;
  return C === undefined || (S = anObject(C)[SPECIES]) == undefined ? defaultConstructor : aFunction(S);
};

/***/ }),
/* 209 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var global = __webpack_require__(8);

var fails = __webpack_require__(11);

var bind = __webpack_require__(26);

var html = __webpack_require__(86);

var createElement = __webpack_require__(23);

var IS_IOS = __webpack_require__(210);

var IS_NODE = __webpack_require__(211);

var location = global.location;
var set = global.setImmediate;
var clear = global.clearImmediate;
var process = global.process;
var MessageChannel = global.MessageChannel;
var Dispatch = global.Dispatch;
var counter = 0;
var queue = {};
var ONREADYSTATECHANGE = 'onreadystatechange';
var defer, channel, port;

var run = function (id) {
  // eslint-disable-next-line no-prototype-builtins -- safe
  if (queue.hasOwnProperty(id)) {
    var fn = queue[id];
    delete queue[id];
    fn();
  }
};

var runner = function (id) {
  return function () {
    run(id);
  };
};

var listener = function (event) {
  run(event.data);
};

var post = function (id) {
  // old engines have not location.origin
  global.postMessage(id + '', location.protocol + '//' + location.host);
}; // Node.js 0.9+ & IE10+ has setImmediate, otherwise:


if (!set || !clear) {
  set = function setImmediate(fn) {
    var args = [];
    var i = 1;

    while (arguments.length > i) args.push(arguments[i++]);

    queue[++counter] = function () {
      // eslint-disable-next-line no-new-func -- spec requirement
      (typeof fn == 'function' ? fn : Function(fn)).apply(undefined, args);
    };

    defer(counter);
    return counter;
  };

  clear = function clearImmediate(id) {
    delete queue[id];
  }; // Node.js 0.8-


  if (IS_NODE) {
    defer = function (id) {
      process.nextTick(runner(id));
    }; // Sphere (JS game engine) Dispatch API

  } else if (Dispatch && Dispatch.now) {
    defer = function (id) {
      Dispatch.now(runner(id));
    }; // Browsers with MessageChannel, includes WebWorkers
    // except iOS - https://github.com/zloirock/core-js/issues/624

  } else if (MessageChannel && !IS_IOS) {
    channel = new MessageChannel();
    port = channel.port2;
    channel.port1.onmessage = listener;
    defer = bind(port.postMessage, port, 1); // Browsers with postMessage, skip WebWorkers
    // IE8 has postMessage, but it's sync & typeof its postMessage is 'object'
  } else if (global.addEventListener && typeof postMessage == 'function' && !global.importScripts && location && location.protocol !== 'file:' && !fails(post)) {
    defer = post;
    global.addEventListener('message', listener, false); // IE8-
  } else if (ONREADYSTATECHANGE in createElement('script')) {
    defer = function (id) {
      html.appendChild(createElement('script'))[ONREADYSTATECHANGE] = function () {
        html.removeChild(this);
        run(id);
      };
    }; // Rest old browsers

  } else {
    defer = function (id) {
      setTimeout(runner(id), 0);
    };
  }
}

module.exports = {
  set: set,
  clear: clear
};

/***/ }),
/* 210 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var userAgent = __webpack_require__(43);

module.exports = /(?:iphone|ipod|ipad).*applewebkit/i.test(userAgent);

/***/ }),
/* 211 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var classof = __webpack_require__(16);

var global = __webpack_require__(8);

module.exports = classof(global.process) == 'process';

/***/ }),
/* 212 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var global = __webpack_require__(8);

var getOwnPropertyDescriptor = __webpack_require__(9).f;

var macrotask = __webpack_require__(209).set;

var IS_IOS = __webpack_require__(210);

var IS_WEBOS_WEBKIT = __webpack_require__(213);

var IS_NODE = __webpack_require__(211);

var MutationObserver = global.MutationObserver || global.WebKitMutationObserver;
var document = global.document;
var process = global.process;
var Promise = global.Promise; // Node.js 11 shows ExperimentalWarning on getting `queueMicrotask`

var queueMicrotaskDescriptor = getOwnPropertyDescriptor(global, 'queueMicrotask');
var queueMicrotask = queueMicrotaskDescriptor && queueMicrotaskDescriptor.value;
var flush, head, last, notify, toggle, node, promise, then; // modern engines have queueMicrotask method

if (!queueMicrotask) {
  flush = function () {
    var parent, fn;
    if (IS_NODE && (parent = process.domain)) parent.exit();

    while (head) {
      fn = head.fn;
      head = head.next;

      try {
        fn();
      } catch (error) {
        if (head) notify();else last = undefined;
        throw error;
      }
    }

    last = undefined;
    if (parent) parent.enter();
  }; // browsers with MutationObserver, except iOS - https://github.com/zloirock/core-js/issues/339
  // also except WebOS Webkit https://github.com/zloirock/core-js/issues/898


  if (!IS_IOS && !IS_NODE && !IS_WEBOS_WEBKIT && MutationObserver && document) {
    toggle = true;
    node = document.createTextNode('');
    new MutationObserver(flush).observe(node, {
      characterData: true
    });

    notify = function () {
      node.data = toggle = !toggle;
    }; // environments with maybe non-completely correct, but existent Promise

  } else if (Promise && Promise.resolve) {
    // Promise.resolve without an argument throws an error in LG WebOS 2
    promise = Promise.resolve(undefined); // workaround of WebKit ~ iOS Safari 10.1 bug

    promise.constructor = Promise;
    then = promise.then;

    notify = function () {
      then.call(promise, flush);
    }; // Node.js without promises

  } else if (IS_NODE) {
    notify = function () {
      process.nextTick(flush);
    }; // for other environments - macrotask based on:
    // - setImmediate
    // - MessageChannel
    // - window.postMessag
    // - onreadystatechange
    // - setTimeout

  } else {
    notify = function () {
      // strange IE + webpack dev server bug - use .call(global)
      macrotask.call(global, flush);
    };
  }
}

module.exports = queueMicrotask || function (fn) {
  var task = {
    fn: fn,
    next: undefined
  };
  if (last) last.next = task;

  if (!head) {
    head = task;
    notify();
  }

  last = task;
};

/***/ }),
/* 213 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var userAgent = __webpack_require__(43);

module.exports = /web0s(?!.*chrome)/i.test(userAgent);

/***/ }),
/* 214 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var anObject = __webpack_require__(30);

var isObject = __webpack_require__(19);

var newPromiseCapability = __webpack_require__(215);

module.exports = function (C, x) {
  anObject(C);
  if (isObject(x) && x.constructor === C) return x;
  var promiseCapability = newPromiseCapability.f(C);
  var resolve = promiseCapability.resolve;
  resolve(x);
  return promiseCapability.promise;
};

/***/ }),
/* 215 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var aFunction = __webpack_require__(27);

var PromiseCapability = function (C) {
  var resolve, reject;
  this.promise = new C(function ($$resolve, $$reject) {
    if (resolve !== undefined || reject !== undefined) throw TypeError('Bad Promise constructor');
    resolve = $$resolve;
    reject = $$reject;
  });
  this.resolve = aFunction(resolve);
  this.reject = aFunction(reject);
}; // 25.4.1.5 NewPromiseCapability(C)


module.exports.f = function (C) {
  return new PromiseCapability(C);
};

/***/ }),
/* 216 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var global = __webpack_require__(8);

module.exports = function (a, b) {
  var console = global.console;

  if (console && console.error) {
    arguments.length === 1 ? console.error(a) : console.error(a, b);
  }
};

/***/ }),
/* 217 */
/***/ ((module) => {

module.exports = function (exec) {
  try {
    return {
      error: false,
      value: exec()
    };
  } catch (error) {
    return {
      error: true,
      value: error
    };
  }
};

/***/ }),
/* 218 */
/***/ ((module) => {

module.exports = typeof window == 'object';

/***/ }),
/* 219 */
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var $ = __webpack_require__(7);

var aFunction = __webpack_require__(27);

var newPromiseCapabilityModule = __webpack_require__(215);

var perform = __webpack_require__(217);

var iterate = __webpack_require__(202); // `Promise.allSettled` method
// https://tc39.es/ecma262/#sec-promise.allsettled


$({
  target: 'Promise',
  stat: true
}, {
  allSettled: function allSettled(iterable) {
    var C = this;
    var capability = newPromiseCapabilityModule.f(C);
    var resolve = capability.resolve;
    var reject = capability.reject;
    var result = perform(function () {
      var promiseResolve = aFunction(C.resolve);
      var values = [];
      var counter = 0;
      var remaining = 1;
      iterate(iterable, function (promise) {
        var index = counter++;
        var alreadyCalled = false;
        values.push(undefined);
        remaining++;
        promiseResolve.call(C, promise).then(function (value) {
          if (alreadyCalled) return;
          alreadyCalled = true;
          values[index] = {
            status: 'fulfilled',
            value: value
          };
          --remaining || resolve(values);
        }, function (error) {
          if (alreadyCalled) return;
          alreadyCalled = true;
          values[index] = {
            status: 'rejected',
            reason: error
          };
          --remaining || resolve(values);
        });
      });
      --remaining || resolve(values);
    });
    if (result.error) reject(result.value);
    return capability.promise;
  }
});

/***/ }),
/* 220 */
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var $ = __webpack_require__(7);

var aFunction = __webpack_require__(27);

var getBuiltIn = __webpack_require__(44);

var newPromiseCapabilityModule = __webpack_require__(215);

var perform = __webpack_require__(217);

var iterate = __webpack_require__(202);

var PROMISE_ANY_ERROR = 'No one promise resolved'; // `Promise.any` method
// https://tc39.es/ecma262/#sec-promise.any

$({
  target: 'Promise',
  stat: true
}, {
  any: function any(iterable) {
    var C = this;
    var capability = newPromiseCapabilityModule.f(C);
    var resolve = capability.resolve;
    var reject = capability.reject;
    var result = perform(function () {
      var promiseResolve = aFunction(C.resolve);
      var errors = [];
      var counter = 0;
      var remaining = 1;
      var alreadyResolved = false;
      iterate(iterable, function (promise) {
        var index = counter++;
        var alreadyRejected = false;
        errors.push(undefined);
        remaining++;
        promiseResolve.call(C, promise).then(function (value) {
          if (alreadyRejected || alreadyResolved) return;
          alreadyResolved = true;
          resolve(value);
        }, function (error) {
          if (alreadyRejected || alreadyResolved) return;
          alreadyRejected = true;
          errors[index] = error;
          --remaining || reject(new (getBuiltIn('AggregateError'))(errors, PROMISE_ANY_ERROR));
        });
      });
      --remaining || reject(new (getBuiltIn('AggregateError'))(errors, PROMISE_ANY_ERROR));
    });
    if (result.error) reject(result.value);
    return capability.promise;
  }
});

/***/ }),
/* 221 */
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var $ = __webpack_require__(7);

var IS_PURE = __webpack_require__(37);

var NativePromise = __webpack_require__(204);

var fails = __webpack_require__(11);

var getBuiltIn = __webpack_require__(44);

var speciesConstructor = __webpack_require__(208);

var promiseResolve = __webpack_require__(214);

var redefine = __webpack_require__(91); // Safari bug https://bugs.webkit.org/show_bug.cgi?id=200829


var NON_GENERIC = !!NativePromise && fails(function () {
  NativePromise.prototype['finally'].call({
    then: function () {
      /* empty */
    }
  }, function () {
    /* empty */
  });
}); // `Promise.prototype.finally` method
// https://tc39.es/ecma262/#sec-promise.prototype.finally

$({
  target: 'Promise',
  proto: true,
  real: true,
  forced: NON_GENERIC
}, {
  'finally': function (onFinally) {
    var C = speciesConstructor(this, getBuiltIn('Promise'));
    var isFunction = typeof onFinally == 'function';
    return this.then(isFunction ? function (x) {
      return promiseResolve(C, onFinally()).then(function () {
        return x;
      });
    } : onFinally, isFunction ? function (e) {
      return promiseResolve(C, onFinally()).then(function () {
        throw e;
      });
    } : onFinally);
  }
}); // makes sure that native promise-based APIs `Promise#finally` properly works with patched `Promise#then`

if (!IS_PURE && typeof NativePromise == 'function') {
  var method = getBuiltIn('Promise').prototype['finally'];

  if (NativePromise.prototype['finally'] !== method) {
    redefine(NativePromise.prototype, 'finally', method, {
      unsafe: true
    });
  }
}

/***/ }),
/* 222 */
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

// TODO: Remove from `core-js@4`
__webpack_require__(201);

/***/ }),
/* 223 */
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

// TODO: Remove from `core-js@4`
__webpack_require__(219);

/***/ }),
/* 224 */
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var $ = __webpack_require__(7);

var newPromiseCapabilityModule = __webpack_require__(215);

var perform = __webpack_require__(217); // `Promise.try` method
// https://github.com/tc39/proposal-promise-try


$({
  target: 'Promise',
  stat: true
}, {
  'try': function (callbackfn) {
    var promiseCapability = newPromiseCapabilityModule.f(this);
    var result = perform(callbackfn);
    (result.error ? promiseCapability.reject : promiseCapability.resolve)(result.value);
    return promiseCapability.promise;
  }
});

/***/ }),
/* 225 */
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

// TODO: Remove from `core-js@4`
__webpack_require__(220);

/***/ }),
/* 226 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ _defineProperty)
/* harmony export */ });
/* harmony import */ var _babel_runtime_corejs3_core_js_object_define_property__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(227);

function _defineProperty(obj, key, value) {
  if (key in obj) {
    _babel_runtime_corejs3_core_js_object_define_property__WEBPACK_IMPORTED_MODULE_0__(obj, key, {
      value: value,
      enumerable: true,
      configurable: true,
      writable: true
    });
  } else {
    obj[key] = value;
  }

  return obj;
}

/***/ }),
/* 227 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

module.exports = __webpack_require__(228);

/***/ }),
/* 228 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var parent = __webpack_require__(161);

module.exports = parent;

/***/ }),
/* 229 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ _classCallCheck)
/* harmony export */ });
function _classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}

/***/ }),
/* 230 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ _createClass)
/* harmony export */ });
/* harmony import */ var _babel_runtime_corejs3_core_js_object_define_property__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(227);


function _defineProperties(target, props) {
  for (var i = 0; i < props.length; i++) {
    var descriptor = props[i];
    descriptor.enumerable = descriptor.enumerable || false;
    descriptor.configurable = true;
    if ("value" in descriptor) descriptor.writable = true;

    _babel_runtime_corejs3_core_js_object_define_property__WEBPACK_IMPORTED_MODULE_0__(target, descriptor.key, descriptor);
  }
}

function _createClass(Constructor, protoProps, staticProps) {
  if (protoProps) _defineProperties(Constructor.prototype, protoProps);
  if (staticProps) _defineProperties(Constructor, staticProps);
  return Constructor;
}

/***/ }),
/* 231 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

module.exports = __webpack_require__(232);

/***/ }),
/* 232 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var parent = __webpack_require__(233);

module.exports = parent;

/***/ }),
/* 233 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var concat = __webpack_require__(234);

var ArrayPrototype = Array.prototype;

module.exports = function (it) {
  var own = it.concat;
  return it === ArrayPrototype || it instanceof Array && own === ArrayPrototype.concat ? concat : own;
};

/***/ }),
/* 234 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

__webpack_require__(74);

var entryVirtual = __webpack_require__(47);

module.exports = entryVirtual('Array').concat;

/***/ }),
/* 235 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

module.exports = __webpack_require__(236);

/***/ }),
/* 236 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var parent = __webpack_require__(237);

module.exports = parent;

/***/ }),
/* 237 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var reduce = __webpack_require__(238);

var ArrayPrototype = Array.prototype;

module.exports = function (it) {
  var own = it.reduce;
  return it === ArrayPrototype || it instanceof Array && own === ArrayPrototype.reduce ? reduce : own;
};

/***/ }),
/* 238 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

__webpack_require__(239);

var entryVirtual = __webpack_require__(47);

module.exports = entryVirtual('Array').reduce;

/***/ }),
/* 239 */
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var $ = __webpack_require__(7);

var $reduce = __webpack_require__(240).left;

var arrayMethodIsStrict = __webpack_require__(178);

var CHROME_VERSION = __webpack_require__(42);

var IS_NODE = __webpack_require__(211);

var STRICT_METHOD = arrayMethodIsStrict('reduce'); // Chrome 80-82 has a critical bug
// https://bugs.chromium.org/p/chromium/issues/detail?id=1049982

var CHROME_BUG = !IS_NODE && CHROME_VERSION > 79 && CHROME_VERSION < 83; // `Array.prototype.reduce` method
// https://tc39.es/ecma262/#sec-array.prototype.reduce

$({
  target: 'Array',
  proto: true,
  forced: !STRICT_METHOD || CHROME_BUG
}, {
  reduce: function reduce(callbackfn
  /* , initialValue */
  ) {
    return $reduce(this, callbackfn, arguments.length, arguments.length > 1 ? arguments[1] : undefined);
  }
});

/***/ }),
/* 240 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var aFunction = __webpack_require__(27);

var toObject = __webpack_require__(21);

var IndexedObject = __webpack_require__(15);

var toLength = __webpack_require__(31); // `Array.prototype.{ reduce, reduceRight }` methods implementation


var createMethod = function (IS_RIGHT) {
  return function (that, callbackfn, argumentsLength, memo) {
    aFunction(callbackfn);
    var O = toObject(that);
    var self = IndexedObject(O);
    var length = toLength(O.length);
    var index = IS_RIGHT ? length - 1 : 0;
    var i = IS_RIGHT ? -1 : 1;
    if (argumentsLength < 2) while (true) {
      if (index in self) {
        memo = self[index];
        index += i;
        break;
      }

      index += i;

      if (IS_RIGHT ? index < 0 : length <= index) {
        throw TypeError('Reduce of empty array with no initial value');
      }
    }

    for (; IS_RIGHT ? index >= 0 : length > index; index += i) if (index in self) {
      memo = callbackfn(memo, self[index], index, O);
    }

    return memo;
  };
};

module.exports = {
  // `Array.prototype.reduce` method
  // https://tc39.es/ecma262/#sec-array.prototype.reduce
  left: createMethod(false),
  // `Array.prototype.reduceRight` method
  // https://tc39.es/ecma262/#sec-array.prototype.reduceright
  right: createMethod(true)
};

/***/ }),
/* 241 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

module.exports = __webpack_require__(242);

/***/ }),
/* 242 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var parent = __webpack_require__(243);

module.exports = parent;

/***/ }),
/* 243 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

__webpack_require__(244);

var path = __webpack_require__(25);

module.exports = path.Date.now;

/***/ }),
/* 244 */
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

var $ = __webpack_require__(7); // `Date.now` method
// https://tc39.es/ecma262/#sec-date.now


$({
  target: 'Date',
  stat: true
}, {
  now: function now() {
    return new Date().getTime();
  }
});

/***/ }),
/* 245 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

module.exports = __webpack_require__(246);

/***/ }),
/* 246 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var parent = __webpack_require__(247);

module.exports = parent;

/***/ }),
/* 247 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var every = __webpack_require__(248);

var ArrayPrototype = Array.prototype;

module.exports = function (it) {
  var own = it.every;
  return it === ArrayPrototype || it instanceof Array && own === ArrayPrototype.every ? every : own;
};

/***/ }),
/* 248 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

__webpack_require__(249);

var entryVirtual = __webpack_require__(47);

module.exports = entryVirtual('Array').every;

/***/ }),
/* 249 */
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var $ = __webpack_require__(7);

var $every = __webpack_require__(60).every;

var arrayMethodIsStrict = __webpack_require__(178);

var STRICT_METHOD = arrayMethodIsStrict('every'); // `Array.prototype.every` method
// https://tc39.es/ecma262/#sec-array.prototype.every

$({
  target: 'Array',
  proto: true,
  forced: !STRICT_METHOD
}, {
  every: function every(callbackfn
  /* , thisArg */
  ) {
    return $every(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);
  }
});

/***/ }),
/* 250 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

module.exports = __webpack_require__(251);

/***/ }),
/* 251 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var parent = __webpack_require__(200);

module.exports = parent;

/***/ }),
/* 252 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

module.exports = __webpack_require__(253);

/***/ }),
/* 253 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var parent = __webpack_require__(254);

module.exports = parent;

/***/ }),
/* 254 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var bind = __webpack_require__(255);

var FunctionPrototype = Function.prototype;

module.exports = function (it) {
  var own = it.bind;
  return it === FunctionPrototype || it instanceof Function && own === FunctionPrototype.bind ? bind : own;
};

/***/ }),
/* 255 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

__webpack_require__(256);

var entryVirtual = __webpack_require__(47);

module.exports = entryVirtual('Function').bind;

/***/ }),
/* 256 */
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

var $ = __webpack_require__(7);

var bind = __webpack_require__(257); // `Function.prototype.bind` method
// https://tc39.es/ecma262/#sec-function.prototype.bind


$({
  target: 'Function',
  proto: true
}, {
  bind: bind
});

/***/ }),
/* 257 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var aFunction = __webpack_require__(27);

var isObject = __webpack_require__(19);

var slice = [].slice;
var factories = {};

var construct = function (C, argsLength, args) {
  if (!(argsLength in factories)) {
    for (var list = [], i = 0; i < argsLength; i++) list[i] = 'a[' + i + ']'; // eslint-disable-next-line no-new-func -- we have no proper alternatives, IE8- only


    factories[argsLength] = Function('C,a', 'return new C(' + list.join(',') + ')');
  }

  return factories[argsLength](C, args);
}; // `Function.prototype.bind` method implementation
// https://tc39.es/ecma262/#sec-function.prototype.bind


module.exports = Function.bind || function bind(that
/* , ...args */
) {
  var fn = aFunction(this);
  var partArgs = slice.call(arguments, 1);

  var boundFunction = function bound()
  /* args... */
  {
    var args = partArgs.concat(slice.call(arguments));
    return this instanceof boundFunction ? construct(fn, args.length, args) : fn.apply(that, args);
  };

  if (isObject(fn.prototype)) boundFunction.prototype = fn.prototype;
  return boundFunction;
};

/***/ }),
/* 258 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var now = __webpack_require__(259),
    root = typeof window === 'undefined' ? __webpack_require__.g : window,
    vendors = ['moz', 'webkit'],
    suffix = 'AnimationFrame',
    raf = root['request' + suffix],
    caf = root['cancel' + suffix] || root['cancelRequest' + suffix];

for (var i = 0; !raf && i < vendors.length; i++) {
  raf = root[vendors[i] + 'Request' + suffix];
  caf = root[vendors[i] + 'Cancel' + suffix] || root[vendors[i] + 'CancelRequest' + suffix];
} // Some versions of FF have rAF but not cAF


if (!raf || !caf) {
  var last = 0,
      id = 0,
      queue = [],
      frameDuration = 1000 / 60;

  raf = function (callback) {
    if (queue.length === 0) {
      var _now = now(),
          next = Math.max(0, frameDuration - (_now - last));

      last = next + _now;
      setTimeout(function () {
        var cp = queue.slice(0); // Clear queue here to prevent
        // callbacks from appending listeners
        // to the current frame's queue

        queue.length = 0;

        for (var i = 0; i < cp.length; i++) {
          if (!cp[i].cancelled) {
            try {
              cp[i].callback(last);
            } catch (e) {
              setTimeout(function () {
                throw e;
              }, 0);
            }
          }
        }
      }, Math.round(next));
    }

    queue.push({
      handle: ++id,
      callback: callback,
      cancelled: false
    });
    return id;
  };

  caf = function (handle) {
    for (var i = 0; i < queue.length; i++) {
      if (queue[i].handle === handle) {
        queue[i].cancelled = true;
      }
    }
  };
}

module.exports = function (fn) {
  // Wrap in a new function to prevent
  // `cancel` potentially being assigned
  // to the native rAF function
  return raf.call(root, fn);
};

module.exports.cancel = function () {
  caf.apply(root, arguments);
};

module.exports.polyfill = function (object) {
  if (!object) {
    object = root;
  }

  object.requestAnimationFrame = raf;
  object.cancelAnimationFrame = caf;
};

/***/ }),
/* 259 */
/***/ (function(module) {

// Generated by CoffeeScript 1.12.2
(function () {
  var getNanoSeconds, hrtime, loadTime, moduleLoadTime, nodeLoadTime, upTime;

  if (typeof performance !== "undefined" && performance !== null && performance.now) {
    module.exports = function () {
      return performance.now();
    };
  } else if (typeof process !== "undefined" && process !== null && process.hrtime) {
    module.exports = function () {
      return (getNanoSeconds() - nodeLoadTime) / 1e6;
    };

    hrtime = process.hrtime;

    getNanoSeconds = function () {
      var hr;
      hr = hrtime();
      return hr[0] * 1e9 + hr[1];
    };

    moduleLoadTime = getNanoSeconds();
    upTime = process.uptime() * 1e9;
    nodeLoadTime = moduleLoadTime - upTime;
  } else if (Date.now) {
    module.exports = function () {
      return Date.now() - loadTime;
    };

    loadTime = Date.now();
  } else {
    module.exports = function () {
      return new Date().getTime() - loadTime;
    };

    loadTime = new Date().getTime();
  }
}).call(this);

/***/ }),
/* 260 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

module.exports = __webpack_require__(261);

/***/ }),
/* 261 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var parent = __webpack_require__(262);

module.exports = parent;

/***/ }),
/* 262 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var trim = __webpack_require__(263);

var StringPrototype = String.prototype;

module.exports = function (it) {
  var own = it.trim;
  return typeof it === 'string' || it === StringPrototype || it instanceof String && own === StringPrototype.trim ? trim : own;
};

/***/ }),
/* 263 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

__webpack_require__(264);

var entryVirtual = __webpack_require__(47);

module.exports = entryVirtual('String').trim;

/***/ }),
/* 264 */
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var $ = __webpack_require__(7);

var $trim = __webpack_require__(53).trim;

var forcedStringTrimMethod = __webpack_require__(265); // `String.prototype.trim` method
// https://tc39.es/ecma262/#sec-string.prototype.trim


$({
  target: 'String',
  proto: true,
  forced: forcedStringTrimMethod('trim')
}, {
  trim: function trim() {
    return $trim(this);
  }
});

/***/ }),
/* 265 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var fails = __webpack_require__(11);

var whitespaces = __webpack_require__(54);

var non = '\u200B\u0085\u180E'; // check that a method works with the correct list
// of whitespaces and has a correct name

module.exports = function (METHOD_NAME) {
  return fails(function () {
    return !!whitespaces[METHOD_NAME]() || non[METHOD_NAME]() != non || whitespaces[METHOD_NAME].name !== METHOD_NAME;
  });
};

/***/ }),
/* 266 */
/***/ ((module) => {

/*
	Based on rgbcolor.js by Stoyan Stefanov <sstoo@gmail.com>
	http://www.phpied.com/rgb-color-parser-in-javascript/
*/
module.exports = function (color_string) {
  this.ok = false;
  this.alpha = 1.0; // strip any leading #

  if (color_string.charAt(0) == '#') {
    // remove # if any
    color_string = color_string.substr(1, 6);
  }

  color_string = color_string.replace(/ /g, '');
  color_string = color_string.toLowerCase(); // before getting into regexps, try simple matches
  // and overwrite the input

  var simple_colors = {
    aliceblue: 'f0f8ff',
    antiquewhite: 'faebd7',
    aqua: '00ffff',
    aquamarine: '7fffd4',
    azure: 'f0ffff',
    beige: 'f5f5dc',
    bisque: 'ffe4c4',
    black: '000000',
    blanchedalmond: 'ffebcd',
    blue: '0000ff',
    blueviolet: '8a2be2',
    brown: 'a52a2a',
    burlywood: 'deb887',
    cadetblue: '5f9ea0',
    chartreuse: '7fff00',
    chocolate: 'd2691e',
    coral: 'ff7f50',
    cornflowerblue: '6495ed',
    cornsilk: 'fff8dc',
    crimson: 'dc143c',
    cyan: '00ffff',
    darkblue: '00008b',
    darkcyan: '008b8b',
    darkgoldenrod: 'b8860b',
    darkgray: 'a9a9a9',
    darkgreen: '006400',
    darkkhaki: 'bdb76b',
    darkmagenta: '8b008b',
    darkolivegreen: '556b2f',
    darkorange: 'ff8c00',
    darkorchid: '9932cc',
    darkred: '8b0000',
    darksalmon: 'e9967a',
    darkseagreen: '8fbc8f',
    darkslateblue: '483d8b',
    darkslategray: '2f4f4f',
    darkturquoise: '00ced1',
    darkviolet: '9400d3',
    deeppink: 'ff1493',
    deepskyblue: '00bfff',
    dimgray: '696969',
    dodgerblue: '1e90ff',
    feldspar: 'd19275',
    firebrick: 'b22222',
    floralwhite: 'fffaf0',
    forestgreen: '228b22',
    fuchsia: 'ff00ff',
    gainsboro: 'dcdcdc',
    ghostwhite: 'f8f8ff',
    gold: 'ffd700',
    goldenrod: 'daa520',
    gray: '808080',
    green: '008000',
    greenyellow: 'adff2f',
    honeydew: 'f0fff0',
    hotpink: 'ff69b4',
    indianred: 'cd5c5c',
    indigo: '4b0082',
    ivory: 'fffff0',
    khaki: 'f0e68c',
    lavender: 'e6e6fa',
    lavenderblush: 'fff0f5',
    lawngreen: '7cfc00',
    lemonchiffon: 'fffacd',
    lightblue: 'add8e6',
    lightcoral: 'f08080',
    lightcyan: 'e0ffff',
    lightgoldenrodyellow: 'fafad2',
    lightgrey: 'd3d3d3',
    lightgreen: '90ee90',
    lightpink: 'ffb6c1',
    lightsalmon: 'ffa07a',
    lightseagreen: '20b2aa',
    lightskyblue: '87cefa',
    lightslateblue: '8470ff',
    lightslategray: '778899',
    lightsteelblue: 'b0c4de',
    lightyellow: 'ffffe0',
    lime: '00ff00',
    limegreen: '32cd32',
    linen: 'faf0e6',
    magenta: 'ff00ff',
    maroon: '800000',
    mediumaquamarine: '66cdaa',
    mediumblue: '0000cd',
    mediumorchid: 'ba55d3',
    mediumpurple: '9370d8',
    mediumseagreen: '3cb371',
    mediumslateblue: '7b68ee',
    mediumspringgreen: '00fa9a',
    mediumturquoise: '48d1cc',
    mediumvioletred: 'c71585',
    midnightblue: '191970',
    mintcream: 'f5fffa',
    mistyrose: 'ffe4e1',
    moccasin: 'ffe4b5',
    navajowhite: 'ffdead',
    navy: '000080',
    oldlace: 'fdf5e6',
    olive: '808000',
    olivedrab: '6b8e23',
    orange: 'ffa500',
    orangered: 'ff4500',
    orchid: 'da70d6',
    palegoldenrod: 'eee8aa',
    palegreen: '98fb98',
    paleturquoise: 'afeeee',
    palevioletred: 'd87093',
    papayawhip: 'ffefd5',
    peachpuff: 'ffdab9',
    peru: 'cd853f',
    pink: 'ffc0cb',
    plum: 'dda0dd',
    powderblue: 'b0e0e6',
    purple: '800080',
    rebeccapurple: '663399',
    red: 'ff0000',
    rosybrown: 'bc8f8f',
    royalblue: '4169e1',
    saddlebrown: '8b4513',
    salmon: 'fa8072',
    sandybrown: 'f4a460',
    seagreen: '2e8b57',
    seashell: 'fff5ee',
    sienna: 'a0522d',
    silver: 'c0c0c0',
    skyblue: '87ceeb',
    slateblue: '6a5acd',
    slategray: '708090',
    snow: 'fffafa',
    springgreen: '00ff7f',
    steelblue: '4682b4',
    tan: 'd2b48c',
    teal: '008080',
    thistle: 'd8bfd8',
    tomato: 'ff6347',
    turquoise: '40e0d0',
    violet: 'ee82ee',
    violetred: 'd02090',
    wheat: 'f5deb3',
    white: 'ffffff',
    whitesmoke: 'f5f5f5',
    yellow: 'ffff00',
    yellowgreen: '9acd32'
  };
  color_string = simple_colors[color_string] || color_string; // emd of simple type-in colors
  // array of color definition objects

  var color_defs = [{
    re: /^rgba\((\d{1,3}),\s*(\d{1,3}),\s*(\d{1,3}),\s*((?:\d?\.)?\d)\)$/,
    example: ['rgba(123, 234, 45, 0.8)', 'rgba(255,234,245,1.0)'],
    process: function (bits) {
      return [parseInt(bits[1]), parseInt(bits[2]), parseInt(bits[3]), parseFloat(bits[4])];
    }
  }, {
    re: /^rgb\((\d{1,3}),\s*(\d{1,3}),\s*(\d{1,3})\)$/,
    example: ['rgb(123, 234, 45)', 'rgb(255,234,245)'],
    process: function (bits) {
      return [parseInt(bits[1]), parseInt(bits[2]), parseInt(bits[3])];
    }
  }, {
    re: /^([0-9a-fA-F]{2})([0-9a-fA-F]{2})([0-9a-fA-F]{2})$/,
    example: ['#00ff00', '336699'],
    process: function (bits) {
      return [parseInt(bits[1], 16), parseInt(bits[2], 16), parseInt(bits[3], 16)];
    }
  }, {
    re: /^([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,
    example: ['#fb0', 'f0f'],
    process: function (bits) {
      return [parseInt(bits[1] + bits[1], 16), parseInt(bits[2] + bits[2], 16), parseInt(bits[3] + bits[3], 16)];
    }
  }]; // search through the definitions to find a match

  for (var i = 0; i < color_defs.length; i++) {
    var re = color_defs[i].re;
    var processor = color_defs[i].process;
    var bits = re.exec(color_string);

    if (bits) {
      var channels = processor(bits);
      this.r = channels[0];
      this.g = channels[1];
      this.b = channels[2];

      if (channels.length > 3) {
        this.alpha = channels[3];
      }

      this.ok = true;
    }
  } // validate/cleanup values


  this.r = this.r < 0 || isNaN(this.r) ? 0 : this.r > 255 ? 255 : this.r;
  this.g = this.g < 0 || isNaN(this.g) ? 0 : this.g > 255 ? 255 : this.g;
  this.b = this.b < 0 || isNaN(this.b) ? 0 : this.b > 255 ? 255 : this.b;
  this.alpha = this.alpha < 0 ? 0 : this.alpha > 1.0 || isNaN(this.alpha) ? 1.0 : this.alpha; // some getters

  this.toRGB = function () {
    return 'rgb(' + this.r + ', ' + this.g + ', ' + this.b + ')';
  };

  this.toRGBA = function () {
    return 'rgba(' + this.r + ', ' + this.g + ', ' + this.b + ', ' + this.alpha + ')';
  };

  this.toHex = function () {
    var r = this.r.toString(16);
    var g = this.g.toString(16);
    var b = this.b.toString(16);
    if (r.length == 1) r = '0' + r;
    if (g.length == 1) g = '0' + g;
    if (b.length == 1) b = '0' + b;
    return '#' + r + g + b;
  }; // help


  this.getHelpXML = function () {
    var examples = new Array(); // add regexps

    for (var i = 0; i < color_defs.length; i++) {
      var example = color_defs[i].example;

      for (var j = 0; j < example.length; j++) {
        examples[examples.length] = example[j];
      }
    } // add type-in colors


    for (var sc in simple_colors) {
      examples[examples.length] = sc;
    }

    var xml = document.createElement('ul');
    xml.setAttribute('id', 'rgbcolor-examples');

    for (var i = 0; i < examples.length; i++) {
      try {
        var list_item = document.createElement('li');
        var list_color = new RGBColor(examples[i]);
        var example_div = document.createElement('div');
        example_div.style.cssText = 'margin: 3px; ' + 'border: 1px solid black; ' + 'background:' + list_color.toHex() + '; ' + 'color:' + list_color.toHex();
        example_div.appendChild(document.createTextNode('test'));
        var list_item_value = document.createTextNode(' ' + examples[i] + ' -> ' + list_color.toRGB() + ' -> ' + list_color.toHex());
        list_item.appendChild(example_div);
        list_item.appendChild(list_item_value);
        xml.appendChild(list_item);
      } catch (e) {}
    }

    return xml;
  };
};

/***/ }),
/* 267 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

module.exports = __webpack_require__(268);

/***/ }),
/* 268 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var parent = __webpack_require__(269);

module.exports = parent;

/***/ }),
/* 269 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

__webpack_require__(270);

var path = __webpack_require__(25);

module.exports = path.Reflect.construct;

/***/ }),
/* 270 */
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

var $ = __webpack_require__(7);

var getBuiltIn = __webpack_require__(44);

var aFunction = __webpack_require__(27);

var anObject = __webpack_require__(30);

var isObject = __webpack_require__(19);

var create = __webpack_require__(78);

var bind = __webpack_require__(257);

var fails = __webpack_require__(11);

var nativeConstruct = getBuiltIn('Reflect', 'construct'); // `Reflect.construct` method
// https://tc39.es/ecma262/#sec-reflect.construct
// MS Edge supports only 2 arguments and argumentsList argument is optional
// FF Nightly sets third argument as `new.target`, but does not create `this` from it

var NEW_TARGET_BUG = fails(function () {
  function F() {
    /* empty */
  }

  return !(nativeConstruct(function () {
    /* empty */
  }, [], F) instanceof F);
});
var ARGS_BUG = !fails(function () {
  nativeConstruct(function () {
    /* empty */
  });
});
var FORCED = NEW_TARGET_BUG || ARGS_BUG;
$({
  target: 'Reflect',
  stat: true,
  forced: FORCED,
  sham: FORCED
}, {
  construct: function construct(Target, args
  /* , newTarget */
  ) {
    aFunction(Target);
    anObject(args);
    var newTarget = arguments.length < 3 ? Target : aFunction(arguments[2]);
    if (ARGS_BUG && !NEW_TARGET_BUG) return nativeConstruct(Target, args, newTarget);

    if (Target == newTarget) {
      // w/o altered newTarget, optimization for 0-4 arguments
      switch (args.length) {
        case 0:
          return new Target();

        case 1:
          return new Target(args[0]);

        case 2:
          return new Target(args[0], args[1]);

        case 3:
          return new Target(args[0], args[1], args[2]);

        case 4:
          return new Target(args[0], args[1], args[2], args[3]);
      } // w/o altered newTarget, lot of arguments case


      var $args = [null];
      $args.push.apply($args, args);
      return new (bind.apply(Target, $args))();
    } // with altered newTarget, not support built-in constructors


    var proto = newTarget.prototype;
    var instance = create(isObject(proto) ? proto : Object.prototype);
    var result = Function.apply.call(Target, instance, args);
    return isObject(result) ? result : instance;
  }
});

/***/ }),
/* 271 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ _inherits)
/* harmony export */ });
/* harmony import */ var _babel_runtime_corejs3_core_js_object_create__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(272);
/* harmony import */ var _setPrototypeOf_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(276);


function _inherits(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function");
  }

  subClass.prototype = _babel_runtime_corejs3_core_js_object_create__WEBPACK_IMPORTED_MODULE_0__(superClass && superClass.prototype, {
    constructor: {
      value: subClass,
      writable: true,
      configurable: true
    }
  });
  if (superClass) (0,_setPrototypeOf_js__WEBPACK_IMPORTED_MODULE_1__.default)(subClass, superClass);
}

/***/ }),
/* 272 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

module.exports = __webpack_require__(273);

/***/ }),
/* 273 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var parent = __webpack_require__(274);

module.exports = parent;

/***/ }),
/* 274 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

__webpack_require__(275);

var path = __webpack_require__(25);

var Object = path.Object;

module.exports = function create(P, D) {
  return Object.create(P, D);
};

/***/ }),
/* 275 */
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

var $ = __webpack_require__(7);

var DESCRIPTORS = __webpack_require__(10);

var create = __webpack_require__(78); // `Object.create` method
// https://tc39.es/ecma262/#sec-object.create


$({
  target: 'Object',
  stat: true,
  sham: !DESCRIPTORS
}, {
  create: create
});

/***/ }),
/* 276 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ _setPrototypeOf)
/* harmony export */ });
/* harmony import */ var _babel_runtime_corejs3_core_js_object_set_prototype_of__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(277);

function _setPrototypeOf(o, p) {
  _setPrototypeOf = _babel_runtime_corejs3_core_js_object_set_prototype_of__WEBPACK_IMPORTED_MODULE_0__ || function _setPrototypeOf(o, p) {
    o.__proto__ = p;
    return o;
  };

  return _setPrototypeOf(o, p);
}

/***/ }),
/* 277 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

module.exports = __webpack_require__(278);

/***/ }),
/* 278 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var parent = __webpack_require__(279);

module.exports = parent;

/***/ }),
/* 279 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

__webpack_require__(280);

var path = __webpack_require__(25);

module.exports = path.Object.setPrototypeOf;

/***/ }),
/* 280 */
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

var $ = __webpack_require__(7);

var setPrototypeOf = __webpack_require__(136); // `Object.setPrototypeOf` method
// https://tc39.es/ecma262/#sec-object.setprototypeof


$({
  target: 'Object',
  stat: true
}, {
  setPrototypeOf: setPrototypeOf
});

/***/ }),
/* 281 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ _possibleConstructorReturn)
/* harmony export */ });
/* harmony import */ var _babel_runtime_corejs3_helpers_typeof__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(282);
/* harmony import */ var _assertThisInitialized_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(286);


function _possibleConstructorReturn(self, call) {
  if (call && ((0,_babel_runtime_corejs3_helpers_typeof__WEBPACK_IMPORTED_MODULE_0__.default)(call) === "object" || typeof call === "function")) {
    return call;
  }

  return (0,_assertThisInitialized_js__WEBPACK_IMPORTED_MODULE_1__.default)(self);
}

/***/ }),
/* 282 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ _typeof)
/* harmony export */ });
/* harmony import */ var _babel_runtime_corejs3_core_js_symbol__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(71);
/* harmony import */ var _babel_runtime_corejs3_core_js_symbol_iterator__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(283);


function _typeof(obj) {
  "@babel/helpers - typeof";

  if (typeof _babel_runtime_corejs3_core_js_symbol__WEBPACK_IMPORTED_MODULE_0__ === "function" && typeof _babel_runtime_corejs3_core_js_symbol_iterator__WEBPACK_IMPORTED_MODULE_1__ === "symbol") {
    _typeof = function _typeof(obj) {
      return typeof obj;
    };
  } else {
    _typeof = function _typeof(obj) {
      return obj && typeof _babel_runtime_corejs3_core_js_symbol__WEBPACK_IMPORTED_MODULE_0__ === "function" && obj.constructor === _babel_runtime_corejs3_core_js_symbol__WEBPACK_IMPORTED_MODULE_0__ && obj !== _babel_runtime_corejs3_core_js_symbol__WEBPACK_IMPORTED_MODULE_0__.prototype ? "symbol" : typeof obj;
    };
  }

  return _typeof(obj);
}

/***/ }),
/* 283 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

module.exports = __webpack_require__(284);

/***/ }),
/* 284 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var parent = __webpack_require__(285);

module.exports = parent;

/***/ }),
/* 285 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

__webpack_require__(105);

__webpack_require__(139);

__webpack_require__(127);

var WrappedWellKnownSymbolModule = __webpack_require__(92);

module.exports = WrappedWellKnownSymbolModule.f('iterator');

/***/ }),
/* 286 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ _assertThisInitialized)
/* harmony export */ });
function _assertThisInitialized(self) {
  if (self === void 0) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }

  return self;
}

/***/ }),
/* 287 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ _getPrototypeOf)
/* harmony export */ });
/* harmony import */ var _babel_runtime_corejs3_core_js_object_set_prototype_of__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(277);
/* harmony import */ var _babel_runtime_corejs3_core_js_object_get_prototype_of__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(288);


function _getPrototypeOf(o) {
  _getPrototypeOf = _babel_runtime_corejs3_core_js_object_set_prototype_of__WEBPACK_IMPORTED_MODULE_0__ ? _babel_runtime_corejs3_core_js_object_get_prototype_of__WEBPACK_IMPORTED_MODULE_1__ : function _getPrototypeOf(o) {
    return o.__proto__ || _babel_runtime_corejs3_core_js_object_get_prototype_of__WEBPACK_IMPORTED_MODULE_1__(o);
  };
  return _getPrototypeOf(o);
}

/***/ }),
/* 288 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

module.exports = __webpack_require__(289);

/***/ }),
/* 289 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var parent = __webpack_require__(290);

module.exports = parent;

/***/ }),
/* 290 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

__webpack_require__(291);

var path = __webpack_require__(25);

module.exports = path.Object.getPrototypeOf;

/***/ }),
/* 291 */
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

var $ = __webpack_require__(7);

var fails = __webpack_require__(11);

var toObject = __webpack_require__(21);

var nativeGetPrototypeOf = __webpack_require__(134);

var CORRECT_PROTOTYPE_GETTER = __webpack_require__(135);

var FAILS_ON_PRIMITIVES = fails(function () {
  nativeGetPrototypeOf(1);
}); // `Object.getPrototypeOf` method
// https://tc39.es/ecma262/#sec-object.getprototypeof

$({
  target: 'Object',
  stat: true,
  forced: FAILS_ON_PRIMITIVES,
  sham: !CORRECT_PROTOTYPE_GETTER
}, {
  getPrototypeOf: function getPrototypeOf(it) {
    return nativeGetPrototypeOf(toObject(it));
  }
});

/***/ }),
/* 292 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ _toConsumableArray)
/* harmony export */ });
/* harmony import */ var _arrayWithoutHoles_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(293);
/* harmony import */ var _iterableToArray_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(294);
/* harmony import */ var _unsupportedIterableToArray_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(142);
/* harmony import */ var _nonIterableSpread_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(295);




function _toConsumableArray(arr) {
  return (0,_arrayWithoutHoles_js__WEBPACK_IMPORTED_MODULE_0__.default)(arr) || (0,_iterableToArray_js__WEBPACK_IMPORTED_MODULE_1__.default)(arr) || (0,_unsupportedIterableToArray_js__WEBPACK_IMPORTED_MODULE_2__.default)(arr) || (0,_nonIterableSpread_js__WEBPACK_IMPORTED_MODULE_3__.default)();
}

/***/ }),
/* 293 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ _arrayWithoutHoles)
/* harmony export */ });
/* harmony import */ var _babel_runtime_corejs3_core_js_array_is_array__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(66);
/* harmony import */ var _arrayLikeToArray_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(157);


function _arrayWithoutHoles(arr) {
  if (_babel_runtime_corejs3_core_js_array_is_array__WEBPACK_IMPORTED_MODULE_0__(arr)) return (0,_arrayLikeToArray_js__WEBPACK_IMPORTED_MODULE_1__.default)(arr);
}

/***/ }),
/* 294 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ _iterableToArray)
/* harmony export */ });
/* harmony import */ var _babel_runtime_corejs3_core_js_symbol__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(71);
/* harmony import */ var _babel_runtime_corejs3_core_js_get_iterator_method__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(125);
/* harmony import */ var _babel_runtime_corejs3_core_js_array_from__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(148);



function _iterableToArray(iter) {
  if (typeof _babel_runtime_corejs3_core_js_symbol__WEBPACK_IMPORTED_MODULE_0__ !== "undefined" && _babel_runtime_corejs3_core_js_get_iterator_method__WEBPACK_IMPORTED_MODULE_1__(iter) != null || iter["@@iterator"] != null) return _babel_runtime_corejs3_core_js_array_from__WEBPACK_IMPORTED_MODULE_2__(iter);
}

/***/ }),
/* 295 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ _nonIterableSpread)
/* harmony export */ });
function _nonIterableSpread() {
  throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}

/***/ }),
/* 296 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

module.exports = __webpack_require__(297);

/***/ }),
/* 297 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var parent = __webpack_require__(298);

module.exports = parent;

/***/ }),
/* 298 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var some = __webpack_require__(299);

var ArrayPrototype = Array.prototype;

module.exports = function (it) {
  var own = it.some;
  return it === ArrayPrototype || it instanceof Array && own === ArrayPrototype.some ? some : own;
};

/***/ }),
/* 299 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

__webpack_require__(300);

var entryVirtual = __webpack_require__(47);

module.exports = entryVirtual('Array').some;

/***/ }),
/* 300 */
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var $ = __webpack_require__(7);

var $some = __webpack_require__(60).some;

var arrayMethodIsStrict = __webpack_require__(178);

var STRICT_METHOD = arrayMethodIsStrict('some'); // `Array.prototype.some` method
// https://tc39.es/ecma262/#sec-array.prototype.some

$({
  target: 'Array',
  proto: true,
  forced: !STRICT_METHOD
}, {
  some: function some(callbackfn
  /* , thisArg */
  ) {
    return $some(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);
  }
});

/***/ }),
/* 301 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

module.exports = __webpack_require__(302);

/***/ }),
/* 302 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var parent = __webpack_require__(303);

module.exports = parent;

/***/ }),
/* 303 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var arrayIncludes = __webpack_require__(304);

var stringIncludes = __webpack_require__(306);

var ArrayPrototype = Array.prototype;
var StringPrototype = String.prototype;

module.exports = function (it) {
  var own = it.includes;
  if (it === ArrayPrototype || it instanceof Array && own === ArrayPrototype.includes) return arrayIncludes;

  if (typeof it === 'string' || it === StringPrototype || it instanceof String && own === StringPrototype.includes) {
    return stringIncludes;
  }

  return own;
};

/***/ }),
/* 304 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

__webpack_require__(305);

var entryVirtual = __webpack_require__(47);

module.exports = entryVirtual('Array').includes;

/***/ }),
/* 305 */
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var $ = __webpack_require__(7);

var $includes = __webpack_require__(82).includes;

var addToUnscopables = __webpack_require__(129); // `Array.prototype.includes` method
// https://tc39.es/ecma262/#sec-array.prototype.includes


$({
  target: 'Array',
  proto: true
}, {
  includes: function includes(el
  /* , fromIndex = 0 */
  ) {
    return $includes(this, el, arguments.length > 1 ? arguments[1] : undefined);
  }
}); // https://tc39.es/ecma262/#sec-array.prototype-@@unscopables

addToUnscopables('includes');

/***/ }),
/* 306 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

__webpack_require__(307);

var entryVirtual = __webpack_require__(47);

module.exports = entryVirtual('String').includes;

/***/ }),
/* 307 */
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var $ = __webpack_require__(7);

var notARegExp = __webpack_require__(33);

var requireObjectCoercible = __webpack_require__(17);

var correctIsRegExpLogic = __webpack_require__(46); // `String.prototype.includes` method
// https://tc39.es/ecma262/#sec-string.prototype.includes


$({
  target: 'String',
  proto: true,
  forced: !correctIsRegExpLogic('includes')
}, {
  includes: function includes(searchString
  /* , position = 0 */
  ) {
    return !!~String(requireObjectCoercible(this)).indexOf(notARegExp(searchString), arguments.length > 1 ? arguments[1] : undefined);
  }
});

/***/ }),
/* 308 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

module.exports = __webpack_require__(309);

/***/ }),
/* 309 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var parent = __webpack_require__(150);

module.exports = parent;

/***/ }),
/* 310 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

module.exports = __webpack_require__(311);

/***/ }),
/* 311 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var parent = __webpack_require__(312);

module.exports = parent;

/***/ }),
/* 312 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var reverse = __webpack_require__(313);

var ArrayPrototype = Array.prototype;

module.exports = function (it) {
  var own = it.reverse;
  return it === ArrayPrototype || it instanceof Array && own === ArrayPrototype.reverse ? reverse : own;
};

/***/ }),
/* 313 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

__webpack_require__(314);

var entryVirtual = __webpack_require__(47);

module.exports = entryVirtual('Array').reverse;

/***/ }),
/* 314 */
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var $ = __webpack_require__(7);

var isArray = __webpack_require__(62);

var nativeReverse = [].reverse;
var test = [1, 2]; // `Array.prototype.reverse` method
// https://tc39.es/ecma262/#sec-array.prototype.reverse
// fix for Safari 12.0 bug
// https://bugs.webkit.org/show_bug.cgi?id=188794

$({
  target: 'Array',
  proto: true,
  forced: String(test) === String(test.reverse())
}, {
  reverse: function reverse() {
    // eslint-disable-next-line no-self-assign -- dirty hack
    if (isArray(this)) this.length = this.length;
    return nativeReverse.call(this);
  }
});

/***/ }),
/* 315 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

module.exports = __webpack_require__(316);

/***/ }),
/* 316 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var parent = __webpack_require__(317);

module.exports = parent;

/***/ }),
/* 317 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var indexOf = __webpack_require__(318);

var ArrayPrototype = Array.prototype;

module.exports = function (it) {
  var own = it.indexOf;
  return it === ArrayPrototype || it instanceof Array && own === ArrayPrototype.indexOf ? indexOf : own;
};

/***/ }),
/* 318 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

__webpack_require__(319);

var entryVirtual = __webpack_require__(47);

module.exports = entryVirtual('Array').indexOf;

/***/ }),
/* 319 */
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

"use strict";

/* eslint-disable es/no-array-prototype-indexof -- required for testing */

var $ = __webpack_require__(7);

var $indexOf = __webpack_require__(82).indexOf;

var arrayMethodIsStrict = __webpack_require__(178);

var nativeIndexOf = [].indexOf;
var NEGATIVE_ZERO = !!nativeIndexOf && 1 / [1].indexOf(1, -0) < 0;
var STRICT_METHOD = arrayMethodIsStrict('indexOf'); // `Array.prototype.indexOf` method
// https://tc39.es/ecma262/#sec-array.prototype.indexof

$({
  target: 'Array',
  proto: true,
  forced: NEGATIVE_ZERO || !STRICT_METHOD
}, {
  indexOf: function indexOf(searchElement
  /* , fromIndex = 0 */
  ) {
    return NEGATIVE_ZERO // convert -0 to +0
    ? nativeIndexOf.apply(this, arguments) || 0 : $indexOf(this, searchElement, arguments.length > 1 ? arguments[1] : undefined);
  }
});

/***/ }),
/* 320 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ _get)
/* harmony export */ });
/* harmony import */ var _babel_runtime_corejs3_core_js_reflect_get__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(321);
/* harmony import */ var _babel_runtime_corejs3_core_js_object_get_own_property_descriptor__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(325);
/* harmony import */ var _superPropBase_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(327);



function _get(target, property, receiver) {
  if (typeof Reflect !== "undefined" && _babel_runtime_corejs3_core_js_reflect_get__WEBPACK_IMPORTED_MODULE_0__) {
    _get = _babel_runtime_corejs3_core_js_reflect_get__WEBPACK_IMPORTED_MODULE_0__;
  } else {
    _get = function _get(target, property, receiver) {
      var base = (0,_superPropBase_js__WEBPACK_IMPORTED_MODULE_2__.default)(target, property);
      if (!base) return;

      var desc = _babel_runtime_corejs3_core_js_object_get_own_property_descriptor__WEBPACK_IMPORTED_MODULE_1__(base, property);

      if (desc.get) {
        return desc.get.call(receiver);
      }

      return desc.value;
    };
  }

  return _get(target, property, receiver || target);
}

/***/ }),
/* 321 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

module.exports = __webpack_require__(322);

/***/ }),
/* 322 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var parent = __webpack_require__(323);

module.exports = parent;

/***/ }),
/* 323 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

__webpack_require__(324);

var path = __webpack_require__(25);

module.exports = path.Reflect.get;

/***/ }),
/* 324 */
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

var $ = __webpack_require__(7);

var isObject = __webpack_require__(19);

var anObject = __webpack_require__(30);

var has = __webpack_require__(20);

var getOwnPropertyDescriptorModule = __webpack_require__(9);

var getPrototypeOf = __webpack_require__(134); // `Reflect.get` method
// https://tc39.es/ecma262/#sec-reflect.get


function get(target, propertyKey
/* , receiver */
) {
  var receiver = arguments.length < 3 ? target : arguments[2];
  var descriptor, prototype;
  if (anObject(target) === receiver) return target[propertyKey];
  if (descriptor = getOwnPropertyDescriptorModule.f(target, propertyKey)) return has(descriptor, 'value') ? descriptor.value : descriptor.get === undefined ? undefined : descriptor.get.call(receiver);
  if (isObject(prototype = getPrototypeOf(target))) return get(prototype, propertyKey, receiver);
}

$({
  target: 'Reflect',
  stat: true
}, {
  get: get
});

/***/ }),
/* 325 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

module.exports = __webpack_require__(326);

/***/ }),
/* 326 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var parent = __webpack_require__(181);

module.exports = parent;

/***/ }),
/* 327 */
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ _superPropBase)
/* harmony export */ });
/* harmony import */ var _getPrototypeOf_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(287);

function _superPropBase(object, property) {
  while (!Object.prototype.hasOwnProperty.call(object, property)) {
    object = (0,_getPrototypeOf_js__WEBPACK_IMPORTED_MODULE_0__.default)(object);
    if (object === null) break;
  }

  return object;
}

/***/ }),
/* 328 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

module.exports = __webpack_require__(329);

/***/ }),
/* 329 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var parent = __webpack_require__(330);

module.exports = parent;

/***/ }),
/* 330 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var fill = __webpack_require__(331);

var ArrayPrototype = Array.prototype;

module.exports = function (it) {
  var own = it.fill;
  return it === ArrayPrototype || it instanceof Array && own === ArrayPrototype.fill ? fill : own;
};

/***/ }),
/* 331 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

__webpack_require__(332);

var entryVirtual = __webpack_require__(47);

module.exports = entryVirtual('Array').fill;

/***/ }),
/* 332 */
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

var $ = __webpack_require__(7);

var fill = __webpack_require__(333);

var addToUnscopables = __webpack_require__(129); // `Array.prototype.fill` method
// https://tc39.es/ecma262/#sec-array.prototype.fill


$({
  target: 'Array',
  proto: true
}, {
  fill: fill
}); // https://tc39.es/ecma262/#sec-array.prototype-@@unscopables

addToUnscopables('fill');

/***/ }),
/* 333 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var toObject = __webpack_require__(21);

var toAbsoluteIndex = __webpack_require__(83);

var toLength = __webpack_require__(31); // `Array.prototype.fill` method implementation
// https://tc39.es/ecma262/#sec-array.prototype.fill


module.exports = function fill(value
/* , start = 0, end = @length */
) {
  var O = toObject(this);
  var length = toLength(O.length);
  var argumentsLength = arguments.length;
  var index = toAbsoluteIndex(argumentsLength > 1 ? arguments[1] : undefined, length);
  var end = argumentsLength > 2 ? arguments[2] : undefined;
  var endPos = end === undefined ? length : toAbsoluteIndex(end, length);

  while (endPos > index) O[index++] = value;

  return O;
};

/***/ }),
/* 334 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "COMMAND_ARG_COUNTS": () => (/* binding */ N),
/* harmony export */   "SVGPathData": () => (/* binding */ f),
/* harmony export */   "SVGPathDataParser": () => (/* binding */ _),
/* harmony export */   "SVGPathDataTransformer": () => (/* binding */ u),
/* harmony export */   "encodeSVGPath": () => (/* binding */ e)
/* harmony export */ });
/*! *****************************************************************************
Copyright (c) Microsoft Corporation. All rights reserved.
Licensed under the Apache License, Version 2.0 (the "License"); you may not use
this file except in compliance with the License. You may obtain a copy of the
License at http://www.apache.org/licenses/LICENSE-2.0

THIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
KIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED
WARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,
MERCHANTABLITY OR NON-INFRINGEMENT.

See the Apache Version 2.0 License for specific language governing permissions
and limitations under the License.
***************************************************************************** */
var t = function (r, e) {
  return (t = Object.setPrototypeOf || {
    __proto__: []
  } instanceof Array && function (t, r) {
    t.__proto__ = r;
  } || function (t, r) {
    for (var e in r) r.hasOwnProperty(e) && (t[e] = r[e]);
  })(r, e);
};

function r(r, e) {
  function i() {
    this.constructor = r;
  }

  t(r, e), r.prototype = null === e ? Object.create(e) : (i.prototype = e.prototype, new i());
}

function e(t) {
  var r = "";
  Array.isArray(t) || (t = [t]);

  for (var e = 0; e < t.length; e++) {
    var i = t[e];
    if (i.type === f.CLOSE_PATH) r += "z";else if (i.type === f.HORIZ_LINE_TO) r += (i.relative ? "h" : "H") + i.x;else if (i.type === f.VERT_LINE_TO) r += (i.relative ? "v" : "V") + i.y;else if (i.type === f.MOVE_TO) r += (i.relative ? "m" : "M") + i.x + " " + i.y;else if (i.type === f.LINE_TO) r += (i.relative ? "l" : "L") + i.x + " " + i.y;else if (i.type === f.CURVE_TO) r += (i.relative ? "c" : "C") + i.x1 + " " + i.y1 + " " + i.x2 + " " + i.y2 + " " + i.x + " " + i.y;else if (i.type === f.SMOOTH_CURVE_TO) r += (i.relative ? "s" : "S") + i.x2 + " " + i.y2 + " " + i.x + " " + i.y;else if (i.type === f.QUAD_TO) r += (i.relative ? "q" : "Q") + i.x1 + " " + i.y1 + " " + i.x + " " + i.y;else if (i.type === f.SMOOTH_QUAD_TO) r += (i.relative ? "t" : "T") + i.x + " " + i.y;else {
      if (i.type !== f.ARC) throw new Error('Unexpected command type "' + i.type + '" at index ' + e + ".");
      r += (i.relative ? "a" : "A") + i.rX + " " + i.rY + " " + i.xRot + " " + +i.lArcFlag + " " + +i.sweepFlag + " " + i.x + " " + i.y;
    }
  }

  return r;
}

function i(t, r) {
  var e = t[0],
      i = t[1];
  return [e * Math.cos(r) - i * Math.sin(r), e * Math.sin(r) + i * Math.cos(r)];
}

function a() {
  for (var t = [], r = 0; r < arguments.length; r++) t[r] = arguments[r];

  for (var e = 0; e < t.length; e++) if ("number" != typeof t[e]) throw new Error("assertNumbers arguments[" + e + "] is not a number. " + typeof t[e] + " == typeof " + t[e]);

  return !0;
}

var n = Math.PI;

function o(t, r, e) {
  t.lArcFlag = 0 === t.lArcFlag ? 0 : 1, t.sweepFlag = 0 === t.sweepFlag ? 0 : 1;
  var a = t.rX,
      o = t.rY,
      s = t.x,
      u = t.y;
  a = Math.abs(t.rX), o = Math.abs(t.rY);
  var h = i([(r - s) / 2, (e - u) / 2], -t.xRot / 180 * n),
      c = h[0],
      y = h[1],
      p = Math.pow(c, 2) / Math.pow(a, 2) + Math.pow(y, 2) / Math.pow(o, 2);
  1 < p && (a *= Math.sqrt(p), o *= Math.sqrt(p)), t.rX = a, t.rY = o;
  var m = Math.pow(a, 2) * Math.pow(y, 2) + Math.pow(o, 2) * Math.pow(c, 2),
      O = (t.lArcFlag !== t.sweepFlag ? 1 : -1) * Math.sqrt(Math.max(0, (Math.pow(a, 2) * Math.pow(o, 2) - m) / m)),
      T = a * y / o * O,
      v = -o * c / a * O,
      l = i([T, v], t.xRot / 180 * n);
  t.cX = l[0] + (r + s) / 2, t.cY = l[1] + (e + u) / 2, t.phi1 = Math.atan2((y - v) / o, (c - T) / a), t.phi2 = Math.atan2((-y - v) / o, (-c - T) / a), 0 === t.sweepFlag && t.phi2 > t.phi1 && (t.phi2 -= 2 * n), 1 === t.sweepFlag && t.phi2 < t.phi1 && (t.phi2 += 2 * n), t.phi1 *= 180 / n, t.phi2 *= 180 / n;
}

function s(t, r, e) {
  a(t, r, e);
  var i = t * t + r * r - e * e;
  if (0 > i) return [];
  if (0 === i) return [[t * e / (t * t + r * r), r * e / (t * t + r * r)]];
  var n = Math.sqrt(i);
  return [[(t * e + r * n) / (t * t + r * r), (r * e - t * n) / (t * t + r * r)], [(t * e - r * n) / (t * t + r * r), (r * e + t * n) / (t * t + r * r)]];
}

var u,
    h = Math.PI / 180;

function c(t, r, e) {
  return (1 - e) * t + e * r;
}

function y(t, r, e, i) {
  return t + Math.cos(i / 180 * n) * r + Math.sin(i / 180 * n) * e;
}

function p(t, r, e, i) {
  var a = r - t,
      n = e - r,
      o = 3 * a + 3 * (i - e) - 6 * n,
      s = 6 * (n - a),
      u = 3 * a;
  return Math.abs(o) < 1e-6 ? [-u / s] : function (t, r, e) {
    void 0 === e && (e = 1e-6);
    var i = t * t / 4 - r;
    if (i < -e) return [];
    if (i <= e) return [-t / 2];
    var a = Math.sqrt(i);
    return [-t / 2 - a, -t / 2 + a];
  }(s / o, u / o, 1e-6);
}

function m(t, r, e, i, a) {
  var n = 1 - a;
  return t * (n * n * n) + r * (3 * n * n * a) + e * (3 * n * a * a) + i * (a * a * a);
}

!function (t) {
  function r() {
    return u(function (t, r, e) {
      return t.relative && (void 0 !== t.x1 && (t.x1 += r), void 0 !== t.y1 && (t.y1 += e), void 0 !== t.x2 && (t.x2 += r), void 0 !== t.y2 && (t.y2 += e), void 0 !== t.x && (t.x += r), void 0 !== t.y && (t.y += e), t.relative = !1), t;
    });
  }

  function e() {
    var t = NaN,
        r = NaN,
        e = NaN,
        i = NaN;
    return u(function (a, n, o) {
      return a.type & f.SMOOTH_CURVE_TO && (a.type = f.CURVE_TO, t = isNaN(t) ? n : t, r = isNaN(r) ? o : r, a.x1 = a.relative ? n - t : 2 * n - t, a.y1 = a.relative ? o - r : 2 * o - r), a.type & f.CURVE_TO ? (t = a.relative ? n + a.x2 : a.x2, r = a.relative ? o + a.y2 : a.y2) : (t = NaN, r = NaN), a.type & f.SMOOTH_QUAD_TO && (a.type = f.QUAD_TO, e = isNaN(e) ? n : e, i = isNaN(i) ? o : i, a.x1 = a.relative ? n - e : 2 * n - e, a.y1 = a.relative ? o - i : 2 * o - i), a.type & f.QUAD_TO ? (e = a.relative ? n + a.x1 : a.x1, i = a.relative ? o + a.y1 : a.y1) : (e = NaN, i = NaN), a;
    });
  }

  function n() {
    var t = NaN,
        r = NaN;
    return u(function (e, i, a) {
      if (e.type & f.SMOOTH_QUAD_TO && (e.type = f.QUAD_TO, t = isNaN(t) ? i : t, r = isNaN(r) ? a : r, e.x1 = e.relative ? i - t : 2 * i - t, e.y1 = e.relative ? a - r : 2 * a - r), e.type & f.QUAD_TO) {
        t = e.relative ? i + e.x1 : e.x1, r = e.relative ? a + e.y1 : e.y1;
        var n = e.x1,
            o = e.y1;
        e.type = f.CURVE_TO, e.x1 = ((e.relative ? 0 : i) + 2 * n) / 3, e.y1 = ((e.relative ? 0 : a) + 2 * o) / 3, e.x2 = (e.x + 2 * n) / 3, e.y2 = (e.y + 2 * o) / 3;
      } else t = NaN, r = NaN;

      return e;
    });
  }

  function u(t) {
    var r = 0,
        e = 0,
        i = NaN,
        a = NaN;
    return function (n) {
      if (isNaN(i) && !(n.type & f.MOVE_TO)) throw new Error("path must start with moveto");
      var o = t(n, r, e, i, a);
      return n.type & f.CLOSE_PATH && (r = i, e = a), void 0 !== n.x && (r = n.relative ? r + n.x : n.x), void 0 !== n.y && (e = n.relative ? e + n.y : n.y), n.type & f.MOVE_TO && (i = r, a = e), o;
    };
  }

  function O(t, r, e, i, n, o) {
    return a(t, r, e, i, n, o), u(function (a, s, u, h) {
      var c = a.x1,
          y = a.x2,
          p = a.relative && !isNaN(h),
          m = void 0 !== a.x ? a.x : p ? 0 : s,
          O = void 0 !== a.y ? a.y : p ? 0 : u;

      function T(t) {
        return t * t;
      }

      a.type & f.HORIZ_LINE_TO && 0 !== r && (a.type = f.LINE_TO, a.y = a.relative ? 0 : u), a.type & f.VERT_LINE_TO && 0 !== e && (a.type = f.LINE_TO, a.x = a.relative ? 0 : s), void 0 !== a.x && (a.x = a.x * t + O * e + (p ? 0 : n)), void 0 !== a.y && (a.y = m * r + a.y * i + (p ? 0 : o)), void 0 !== a.x1 && (a.x1 = a.x1 * t + a.y1 * e + (p ? 0 : n)), void 0 !== a.y1 && (a.y1 = c * r + a.y1 * i + (p ? 0 : o)), void 0 !== a.x2 && (a.x2 = a.x2 * t + a.y2 * e + (p ? 0 : n)), void 0 !== a.y2 && (a.y2 = y * r + a.y2 * i + (p ? 0 : o));
      var v = t * i - r * e;
      if (void 0 !== a.xRot && (1 !== t || 0 !== r || 0 !== e || 1 !== i)) if (0 === v) delete a.rX, delete a.rY, delete a.xRot, delete a.lArcFlag, delete a.sweepFlag, a.type = f.LINE_TO;else {
        var l = a.xRot * Math.PI / 180,
            _ = Math.sin(l),
            N = Math.cos(l),
            x = 1 / T(a.rX),
            d = 1 / T(a.rY),
            A = T(N) * x + T(_) * d,
            E = 2 * _ * N * (x - d),
            C = T(_) * x + T(N) * d,
            M = A * i * i - E * r * i + C * r * r,
            R = E * (t * i + r * e) - 2 * (A * e * i + C * t * r),
            g = A * e * e - E * t * e + C * t * t,
            I = (Math.atan2(R, M - g) + Math.PI) % Math.PI / 2,
            S = Math.sin(I),
            L = Math.cos(I);

        a.rX = Math.abs(v) / Math.sqrt(M * T(L) + R * S * L + g * T(S)), a.rY = Math.abs(v) / Math.sqrt(M * T(S) - R * S * L + g * T(L)), a.xRot = 180 * I / Math.PI;
      }
      return void 0 !== a.sweepFlag && 0 > v && (a.sweepFlag = +!a.sweepFlag), a;
    });
  }

  function T() {
    return function (t) {
      var r = {};

      for (var e in t) r[e] = t[e];

      return r;
    };
  }

  t.ROUND = function (t) {
    function r(r) {
      return Math.round(r * t) / t;
    }

    return void 0 === t && (t = 1e13), a(t), function (t) {
      return void 0 !== t.x1 && (t.x1 = r(t.x1)), void 0 !== t.y1 && (t.y1 = r(t.y1)), void 0 !== t.x2 && (t.x2 = r(t.x2)), void 0 !== t.y2 && (t.y2 = r(t.y2)), void 0 !== t.x && (t.x = r(t.x)), void 0 !== t.y && (t.y = r(t.y)), void 0 !== t.rX && (t.rX = r(t.rX)), void 0 !== t.rY && (t.rY = r(t.rY)), t;
    };
  }, t.TO_ABS = r, t.TO_REL = function () {
    return u(function (t, r, e) {
      return t.relative || (void 0 !== t.x1 && (t.x1 -= r), void 0 !== t.y1 && (t.y1 -= e), void 0 !== t.x2 && (t.x2 -= r), void 0 !== t.y2 && (t.y2 -= e), void 0 !== t.x && (t.x -= r), void 0 !== t.y && (t.y -= e), t.relative = !0), t;
    });
  }, t.NORMALIZE_HVZ = function (t, r, e) {
    return void 0 === t && (t = !0), void 0 === r && (r = !0), void 0 === e && (e = !0), u(function (i, a, n, o, s) {
      if (isNaN(o) && !(i.type & f.MOVE_TO)) throw new Error("path must start with moveto");
      return r && i.type & f.HORIZ_LINE_TO && (i.type = f.LINE_TO, i.y = i.relative ? 0 : n), e && i.type & f.VERT_LINE_TO && (i.type = f.LINE_TO, i.x = i.relative ? 0 : a), t && i.type & f.CLOSE_PATH && (i.type = f.LINE_TO, i.x = i.relative ? o - a : o, i.y = i.relative ? s - n : s), i.type & f.ARC && (0 === i.rX || 0 === i.rY) && (i.type = f.LINE_TO, delete i.rX, delete i.rY, delete i.xRot, delete i.lArcFlag, delete i.sweepFlag), i;
    });
  }, t.NORMALIZE_ST = e, t.QT_TO_C = n, t.INFO = u, t.SANITIZE = function (t) {
    void 0 === t && (t = 0), a(t);
    var r = NaN,
        e = NaN,
        i = NaN,
        n = NaN;
    return u(function (a, o, s, u, h) {
      var c = Math.abs,
          y = !1,
          p = 0,
          m = 0;

      if (a.type & f.SMOOTH_CURVE_TO && (p = isNaN(r) ? 0 : o - r, m = isNaN(e) ? 0 : s - e), a.type & (f.CURVE_TO | f.SMOOTH_CURVE_TO) ? (r = a.relative ? o + a.x2 : a.x2, e = a.relative ? s + a.y2 : a.y2) : (r = NaN, e = NaN), a.type & f.SMOOTH_QUAD_TO ? (i = isNaN(i) ? o : 2 * o - i, n = isNaN(n) ? s : 2 * s - n) : a.type & f.QUAD_TO ? (i = a.relative ? o + a.x1 : a.x1, n = a.relative ? s + a.y1 : a.y2) : (i = NaN, n = NaN), a.type & f.LINE_COMMANDS || a.type & f.ARC && (0 === a.rX || 0 === a.rY || !a.lArcFlag) || a.type & f.CURVE_TO || a.type & f.SMOOTH_CURVE_TO || a.type & f.QUAD_TO || a.type & f.SMOOTH_QUAD_TO) {
        var O = void 0 === a.x ? 0 : a.relative ? a.x : a.x - o,
            T = void 0 === a.y ? 0 : a.relative ? a.y : a.y - s;
        p = isNaN(i) ? void 0 === a.x1 ? p : a.relative ? a.x : a.x1 - o : i - o, m = isNaN(n) ? void 0 === a.y1 ? m : a.relative ? a.y : a.y1 - s : n - s;
        var v = void 0 === a.x2 ? 0 : a.relative ? a.x : a.x2 - o,
            l = void 0 === a.y2 ? 0 : a.relative ? a.y : a.y2 - s;
        c(O) <= t && c(T) <= t && c(p) <= t && c(m) <= t && c(v) <= t && c(l) <= t && (y = !0);
      }

      return a.type & f.CLOSE_PATH && c(o - u) <= t && c(s - h) <= t && (y = !0), y ? [] : a;
    });
  }, t.MATRIX = O, t.ROTATE = function (t, r, e) {
    void 0 === r && (r = 0), void 0 === e && (e = 0), a(t, r, e);
    var i = Math.sin(t),
        n = Math.cos(t);
    return O(n, i, -i, n, r - r * n + e * i, e - r * i - e * n);
  }, t.TRANSLATE = function (t, r) {
    return void 0 === r && (r = 0), a(t, r), O(1, 0, 0, 1, t, r);
  }, t.SCALE = function (t, r) {
    return void 0 === r && (r = t), a(t, r), O(t, 0, 0, r, 0, 0);
  }, t.SKEW_X = function (t) {
    return a(t), O(1, 0, Math.atan(t), 1, 0, 0);
  }, t.SKEW_Y = function (t) {
    return a(t), O(1, Math.atan(t), 0, 1, 0, 0);
  }, t.X_AXIS_SYMMETRY = function (t) {
    return void 0 === t && (t = 0), a(t), O(-1, 0, 0, 1, t, 0);
  }, t.Y_AXIS_SYMMETRY = function (t) {
    return void 0 === t && (t = 0), a(t), O(1, 0, 0, -1, 0, t);
  }, t.A_TO_C = function () {
    return u(function (t, r, e) {
      return f.ARC === t.type ? function (t, r, e) {
        var a, n, s, u;
        t.cX || o(t, r, e);

        for (var y = Math.min(t.phi1, t.phi2), p = Math.max(t.phi1, t.phi2) - y, m = Math.ceil(p / 90), O = new Array(m), T = r, v = e, l = 0; l < m; l++) {
          var _ = c(t.phi1, t.phi2, l / m),
              N = c(t.phi1, t.phi2, (l + 1) / m),
              x = N - _,
              d = 4 / 3 * Math.tan(x * h / 4),
              A = [Math.cos(_ * h) - d * Math.sin(_ * h), Math.sin(_ * h) + d * Math.cos(_ * h)],
              E = A[0],
              C = A[1],
              M = [Math.cos(N * h), Math.sin(N * h)],
              R = M[0],
              g = M[1],
              I = [R + d * Math.sin(N * h), g - d * Math.cos(N * h)],
              S = I[0],
              L = I[1];

          O[l] = {
            relative: t.relative,
            type: f.CURVE_TO
          };

          var H = function (r, e) {
            var a = i([r * t.rX, e * t.rY], t.xRot),
                n = a[0],
                o = a[1];
            return [t.cX + n, t.cY + o];
          };

          a = H(E, C), O[l].x1 = a[0], O[l].y1 = a[1], n = H(S, L), O[l].x2 = n[0], O[l].y2 = n[1], s = H(R, g), O[l].x = s[0], O[l].y = s[1], t.relative && (O[l].x1 -= T, O[l].y1 -= v, O[l].x2 -= T, O[l].y2 -= v, O[l].x -= T, O[l].y -= v), T = (u = [O[l].x, O[l].y])[0], v = u[1];
        }

        return O;
      }(t, t.relative ? 0 : r, t.relative ? 0 : e) : t;
    });
  }, t.ANNOTATE_ARCS = function () {
    return u(function (t, r, e) {
      return t.relative && (r = 0, e = 0), f.ARC === t.type && o(t, r, e), t;
    });
  }, t.CLONE = T, t.CALCULATE_BOUNDS = function () {
    var t = function (t) {
      var r = {};

      for (var e in t) r[e] = t[e];

      return r;
    },
        i = r(),
        a = n(),
        h = e(),
        c = u(function (r, e, n) {
      var u = h(a(i(t(r))));

      function O(t) {
        t > c.maxX && (c.maxX = t), t < c.minX && (c.minX = t);
      }

      function T(t) {
        t > c.maxY && (c.maxY = t), t < c.minY && (c.minY = t);
      }

      if (u.type & f.DRAWING_COMMANDS && (O(e), T(n)), u.type & f.HORIZ_LINE_TO && O(u.x), u.type & f.VERT_LINE_TO && T(u.y), u.type & f.LINE_TO && (O(u.x), T(u.y)), u.type & f.CURVE_TO) {
        O(u.x), T(u.y);

        for (var v = 0, l = p(e, u.x1, u.x2, u.x); v < l.length; v++) {
          0 < (w = l[v]) && 1 > w && O(m(e, u.x1, u.x2, u.x, w));
        }

        for (var _ = 0, N = p(n, u.y1, u.y2, u.y); _ < N.length; _++) {
          0 < (w = N[_]) && 1 > w && T(m(n, u.y1, u.y2, u.y, w));
        }
      }

      if (u.type & f.ARC) {
        O(u.x), T(u.y), o(u, e, n);

        for (var x = u.xRot / 180 * Math.PI, d = Math.cos(x) * u.rX, A = Math.sin(x) * u.rX, E = -Math.sin(x) * u.rY, C = Math.cos(x) * u.rY, M = u.phi1 < u.phi2 ? [u.phi1, u.phi2] : -180 > u.phi2 ? [u.phi2 + 360, u.phi1 + 360] : [u.phi2, u.phi1], R = M[0], g = M[1], I = function (t) {
          var r = t[0],
              e = t[1],
              i = 180 * Math.atan2(e, r) / Math.PI;
          return i < R ? i + 360 : i;
        }, S = 0, L = s(E, -d, 0).map(I); S < L.length; S++) {
          (w = L[S]) > R && w < g && O(y(u.cX, d, E, w));
        }

        for (var H = 0, U = s(C, -A, 0).map(I); H < U.length; H++) {
          var w;
          (w = U[H]) > R && w < g && T(y(u.cY, A, C, w));
        }
      }

      return r;
    });

    return c.minX = 1 / 0, c.maxX = -1 / 0, c.minY = 1 / 0, c.maxY = -1 / 0, c;
  };
}(u || (u = {}));

var O,
    T = function () {
  function t() {}

  return t.prototype.round = function (t) {
    return this.transform(u.ROUND(t));
  }, t.prototype.toAbs = function () {
    return this.transform(u.TO_ABS());
  }, t.prototype.toRel = function () {
    return this.transform(u.TO_REL());
  }, t.prototype.normalizeHVZ = function (t, r, e) {
    return this.transform(u.NORMALIZE_HVZ(t, r, e));
  }, t.prototype.normalizeST = function () {
    return this.transform(u.NORMALIZE_ST());
  }, t.prototype.qtToC = function () {
    return this.transform(u.QT_TO_C());
  }, t.prototype.aToC = function () {
    return this.transform(u.A_TO_C());
  }, t.prototype.sanitize = function (t) {
    return this.transform(u.SANITIZE(t));
  }, t.prototype.translate = function (t, r) {
    return this.transform(u.TRANSLATE(t, r));
  }, t.prototype.scale = function (t, r) {
    return this.transform(u.SCALE(t, r));
  }, t.prototype.rotate = function (t, r, e) {
    return this.transform(u.ROTATE(t, r, e));
  }, t.prototype.matrix = function (t, r, e, i, a, n) {
    return this.transform(u.MATRIX(t, r, e, i, a, n));
  }, t.prototype.skewX = function (t) {
    return this.transform(u.SKEW_X(t));
  }, t.prototype.skewY = function (t) {
    return this.transform(u.SKEW_Y(t));
  }, t.prototype.xSymmetry = function (t) {
    return this.transform(u.X_AXIS_SYMMETRY(t));
  }, t.prototype.ySymmetry = function (t) {
    return this.transform(u.Y_AXIS_SYMMETRY(t));
  }, t.prototype.annotateArcs = function () {
    return this.transform(u.ANNOTATE_ARCS());
  }, t;
}(),
    v = function (t) {
  return " " === t || "\t" === t || "\r" === t || "\n" === t;
},
    l = function (t) {
  return "0".charCodeAt(0) <= t.charCodeAt(0) && t.charCodeAt(0) <= "9".charCodeAt(0);
},
    _ = function (t) {
  function e() {
    var r = t.call(this) || this;
    return r.curNumber = "", r.curCommandType = -1, r.curCommandRelative = !1, r.canParseCommandOrComma = !0, r.curNumberHasExp = !1, r.curNumberHasExpDigits = !1, r.curNumberHasDecimal = !1, r.curArgs = [], r;
  }

  return r(e, t), e.prototype.finish = function (t) {
    if (void 0 === t && (t = []), this.parse(" ", t), 0 !== this.curArgs.length || !this.canParseCommandOrComma) throw new SyntaxError("Unterminated command at the path end.");
    return t;
  }, e.prototype.parse = function (t, r) {
    var e = this;
    void 0 === r && (r = []);

    for (var i = function (t) {
      r.push(t), e.curArgs.length = 0, e.canParseCommandOrComma = !0;
    }, a = 0; a < t.length; a++) {
      var n = t[a],
          o = !(this.curCommandType !== f.ARC || 3 !== this.curArgs.length && 4 !== this.curArgs.length || 1 !== this.curNumber.length || "0" !== this.curNumber && "1" !== this.curNumber),
          s = l(n) && ("0" === this.curNumber && "0" === n || o);
      if (!l(n) || s) {
        if ("e" !== n && "E" !== n) {
          if ("-" !== n && "+" !== n || !this.curNumberHasExp || this.curNumberHasExpDigits) {
            if ("." !== n || this.curNumberHasExp || this.curNumberHasDecimal || o) {
              if (this.curNumber && -1 !== this.curCommandType) {
                var u = Number(this.curNumber);
                if (isNaN(u)) throw new SyntaxError("Invalid number ending at " + a);
                if (this.curCommandType === f.ARC) if (0 === this.curArgs.length || 1 === this.curArgs.length) {
                  if (0 > u) throw new SyntaxError('Expected positive number, got "' + u + '" at index "' + a + '"');
                } else if ((3 === this.curArgs.length || 4 === this.curArgs.length) && "0" !== this.curNumber && "1" !== this.curNumber) throw new SyntaxError('Expected a flag, got "' + this.curNumber + '" at index "' + a + '"');
                this.curArgs.push(u), this.curArgs.length === N[this.curCommandType] && (f.HORIZ_LINE_TO === this.curCommandType ? i({
                  type: f.HORIZ_LINE_TO,
                  relative: this.curCommandRelative,
                  x: u
                }) : f.VERT_LINE_TO === this.curCommandType ? i({
                  type: f.VERT_LINE_TO,
                  relative: this.curCommandRelative,
                  y: u
                }) : this.curCommandType === f.MOVE_TO || this.curCommandType === f.LINE_TO || this.curCommandType === f.SMOOTH_QUAD_TO ? (i({
                  type: this.curCommandType,
                  relative: this.curCommandRelative,
                  x: this.curArgs[0],
                  y: this.curArgs[1]
                }), f.MOVE_TO === this.curCommandType && (this.curCommandType = f.LINE_TO)) : this.curCommandType === f.CURVE_TO ? i({
                  type: f.CURVE_TO,
                  relative: this.curCommandRelative,
                  x1: this.curArgs[0],
                  y1: this.curArgs[1],
                  x2: this.curArgs[2],
                  y2: this.curArgs[3],
                  x: this.curArgs[4],
                  y: this.curArgs[5]
                }) : this.curCommandType === f.SMOOTH_CURVE_TO ? i({
                  type: f.SMOOTH_CURVE_TO,
                  relative: this.curCommandRelative,
                  x2: this.curArgs[0],
                  y2: this.curArgs[1],
                  x: this.curArgs[2],
                  y: this.curArgs[3]
                }) : this.curCommandType === f.QUAD_TO ? i({
                  type: f.QUAD_TO,
                  relative: this.curCommandRelative,
                  x1: this.curArgs[0],
                  y1: this.curArgs[1],
                  x: this.curArgs[2],
                  y: this.curArgs[3]
                }) : this.curCommandType === f.ARC && i({
                  type: f.ARC,
                  relative: this.curCommandRelative,
                  rX: this.curArgs[0],
                  rY: this.curArgs[1],
                  xRot: this.curArgs[2],
                  lArcFlag: this.curArgs[3],
                  sweepFlag: this.curArgs[4],
                  x: this.curArgs[5],
                  y: this.curArgs[6]
                })), this.curNumber = "", this.curNumberHasExpDigits = !1, this.curNumberHasExp = !1, this.curNumberHasDecimal = !1, this.canParseCommandOrComma = !0;
              }

              if (!v(n)) if ("," === n && this.canParseCommandOrComma) this.canParseCommandOrComma = !1;else if ("+" !== n && "-" !== n && "." !== n) {
                if (s) this.curNumber = n, this.curNumberHasDecimal = !1;else {
                  if (0 !== this.curArgs.length) throw new SyntaxError("Unterminated command at index " + a + ".");
                  if (!this.canParseCommandOrComma) throw new SyntaxError('Unexpected character "' + n + '" at index ' + a + ". Command cannot follow comma");
                  if (this.canParseCommandOrComma = !1, "z" !== n && "Z" !== n) {
                    if ("h" === n || "H" === n) this.curCommandType = f.HORIZ_LINE_TO, this.curCommandRelative = "h" === n;else if ("v" === n || "V" === n) this.curCommandType = f.VERT_LINE_TO, this.curCommandRelative = "v" === n;else if ("m" === n || "M" === n) this.curCommandType = f.MOVE_TO, this.curCommandRelative = "m" === n;else if ("l" === n || "L" === n) this.curCommandType = f.LINE_TO, this.curCommandRelative = "l" === n;else if ("c" === n || "C" === n) this.curCommandType = f.CURVE_TO, this.curCommandRelative = "c" === n;else if ("s" === n || "S" === n) this.curCommandType = f.SMOOTH_CURVE_TO, this.curCommandRelative = "s" === n;else if ("q" === n || "Q" === n) this.curCommandType = f.QUAD_TO, this.curCommandRelative = "q" === n;else if ("t" === n || "T" === n) this.curCommandType = f.SMOOTH_QUAD_TO, this.curCommandRelative = "t" === n;else {
                      if ("a" !== n && "A" !== n) throw new SyntaxError('Unexpected character "' + n + '" at index ' + a + ".");
                      this.curCommandType = f.ARC, this.curCommandRelative = "a" === n;
                    }
                  } else r.push({
                    type: f.CLOSE_PATH
                  }), this.canParseCommandOrComma = !0, this.curCommandType = -1;
                }
              } else this.curNumber = n, this.curNumberHasDecimal = "." === n;
            } else this.curNumber += n, this.curNumberHasDecimal = !0;
          } else this.curNumber += n;
        } else this.curNumber += n, this.curNumberHasExp = !0;
      } else this.curNumber += n, this.curNumberHasExpDigits = this.curNumberHasExp;
    }

    return r;
  }, e.prototype.transform = function (t) {
    return Object.create(this, {
      parse: {
        value: function (r, e) {
          void 0 === e && (e = []);

          for (var i = 0, a = Object.getPrototypeOf(this).parse.call(this, r); i < a.length; i++) {
            var n = a[i],
                o = t(n);
            Array.isArray(o) ? e.push.apply(e, o) : e.push(o);
          }

          return e;
        }
      }
    });
  }, e;
}(T),
    f = function (t) {
  function i(r) {
    var e = t.call(this) || this;
    return e.commands = "string" == typeof r ? i.parse(r) : r, e;
  }

  return r(i, t), i.prototype.encode = function () {
    return i.encode(this.commands);
  }, i.prototype.getBounds = function () {
    var t = u.CALCULATE_BOUNDS();
    return this.transform(t), t;
  }, i.prototype.transform = function (t) {
    for (var r = [], e = 0, i = this.commands; e < i.length; e++) {
      var a = t(i[e]);
      Array.isArray(a) ? r.push.apply(r, a) : r.push(a);
    }

    return this.commands = r, this;
  }, i.encode = function (t) {
    return e(t);
  }, i.parse = function (t) {
    var r = new _(),
        e = [];
    return r.parse(t, e), r.finish(e), e;
  }, i.CLOSE_PATH = 1, i.MOVE_TO = 2, i.HORIZ_LINE_TO = 4, i.VERT_LINE_TO = 8, i.LINE_TO = 16, i.CURVE_TO = 32, i.SMOOTH_CURVE_TO = 64, i.QUAD_TO = 128, i.SMOOTH_QUAD_TO = 256, i.ARC = 512, i.LINE_COMMANDS = i.LINE_TO | i.HORIZ_LINE_TO | i.VERT_LINE_TO, i.DRAWING_COMMANDS = i.HORIZ_LINE_TO | i.VERT_LINE_TO | i.LINE_TO | i.CURVE_TO | i.SMOOTH_CURVE_TO | i.QUAD_TO | i.SMOOTH_QUAD_TO | i.ARC, i;
}(T),
    N = ((O = {})[f.MOVE_TO] = 2, O[f.LINE_TO] = 2, O[f.HORIZ_LINE_TO] = 1, O[f.VERT_LINE_TO] = 1, O[f.CLOSE_PATH] = 0, O[f.QUAD_TO] = 4, O[f.SMOOTH_QUAD_TO] = 2, O[f.CURVE_TO] = 6, O[f.SMOOTH_CURVE_TO] = 4, O[f.ARC] = 7, O);



/***/ }),
/* 335 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

module.exports = __webpack_require__(336);

/***/ }),
/* 336 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var parent = __webpack_require__(337);

module.exports = parent;

/***/ }),
/* 337 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

__webpack_require__(338);

var path = __webpack_require__(25);

module.exports = path.Reflect.deleteProperty;

/***/ }),
/* 338 */
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

var $ = __webpack_require__(7);

var anObject = __webpack_require__(30);

var getOwnPropertyDescriptor = __webpack_require__(9).f; // `Reflect.deleteProperty` method
// https://tc39.es/ecma262/#sec-reflect.deleteproperty


$({
  target: 'Reflect',
  stat: true
}, {
  deleteProperty: function deleteProperty(target, propertyKey) {
    var descriptor = getOwnPropertyDescriptor(anObject(target), propertyKey);
    return descriptor && !descriptor.configurable ? false : delete target[propertyKey];
  }
});

/***/ }),
/* 339 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

module.exports = __webpack_require__(340);

/***/ }),
/* 340 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

__webpack_require__(127);

var values = __webpack_require__(341);

var classof = __webpack_require__(97);

var ArrayPrototype = Array.prototype;
var DOMIterables = {
  DOMTokenList: true,
  NodeList: true
};

module.exports = function (it) {
  var own = it.values;
  return it === ArrayPrototype || it instanceof Array && own === ArrayPrototype.values // eslint-disable-next-line no-prototype-builtins -- safe
  || DOMIterables.hasOwnProperty(classof(it)) ? values : own;
};

/***/ }),
/* 341 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var parent = __webpack_require__(342);

module.exports = parent;

/***/ }),
/* 342 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

__webpack_require__(128);

var entryVirtual = __webpack_require__(47);

module.exports = entryVirtual('Array').values;

/***/ }),
/* 343 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

module.exports = __webpack_require__(344);

/***/ }),
/* 344 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var parent = __webpack_require__(345);

module.exports = parent;

/***/ }),
/* 345 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

__webpack_require__(346);

var path = __webpack_require__(25);

module.exports = path.parseInt;

/***/ }),
/* 346 */
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

var $ = __webpack_require__(7);

var parseIntImplementation = __webpack_require__(347); // `parseInt` method
// https://tc39.es/ecma262/#sec-parseint-string-radix


$({
  global: true,
  forced: parseInt != parseIntImplementation
}, {
  parseInt: parseIntImplementation
});

/***/ }),
/* 347 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var global = __webpack_require__(8);

var trim = __webpack_require__(53).trim;

var whitespaces = __webpack_require__(54);

var $parseInt = global.parseInt;
var hex = /^[+-]?0[Xx]/;
var FORCED = $parseInt(whitespaces + '08') !== 8 || $parseInt(whitespaces + '0x16') !== 22; // `parseInt` method
// https://tc39.es/ecma262/#sec-parseint-string-radix

module.exports = FORCED ? function parseInt(string, radix) {
  var S = trim(String(string));
  return $parseInt(S, radix >>> 0 || (hex.test(S) ? 16 : 10));
} : $parseInt;

/***/ }),
/* 348 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

module.exports = __webpack_require__(349);

/***/ }),
/* 349 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

__webpack_require__(127);

__webpack_require__(139);

var getIterator = __webpack_require__(350);

module.exports = getIterator;

/***/ }),
/* 350 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var anObject = __webpack_require__(30);

var getIteratorMethod = __webpack_require__(141);

module.exports = function (it) {
  var iteratorMethod = getIteratorMethod(it);

  if (typeof iteratorMethod != 'function') {
    throw TypeError(String(it) + ' is not iterable');
  }

  return anObject(iteratorMethod.call(it));
};

/***/ }),
/* 351 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

module.exports = __webpack_require__(352);

/***/ }),
/* 352 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var parent = __webpack_require__(68);

module.exports = parent;

/***/ }),
/* 353 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

module.exports = __webpack_require__(354);

/***/ }),
/* 354 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var parent = __webpack_require__(73);

module.exports = parent;

/***/ }),
/* 355 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

module.exports = __webpack_require__(356);

/***/ }),
/* 356 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var parent = __webpack_require__(145);

module.exports = parent;

/***/ }),
/* 357 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

module.exports = __webpack_require__(358);

/***/ }),
/* 358 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var parent = __webpack_require__(359);

module.exports = parent;

/***/ }),
/* 359 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

__webpack_require__(360);

__webpack_require__(76);

__webpack_require__(139);

__webpack_require__(127);

var path = __webpack_require__(25);

module.exports = path.Map;

/***/ }),
/* 360 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var collection = __webpack_require__(361);

var collectionStrong = __webpack_require__(364); // `Map` constructor
// https://tc39.es/ecma262/#sec-map-objects


module.exports = collection('Map', function (init) {
  return function Map() {
    return init(this, arguments.length ? arguments[0] : undefined);
  };
}, collectionStrong);

/***/ }),
/* 361 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var $ = __webpack_require__(7);

var global = __webpack_require__(8);

var InternalMetadataModule = __webpack_require__(362);

var fails = __webpack_require__(11);

var createNonEnumerableProperty = __webpack_require__(28);

var iterate = __webpack_require__(202);

var anInstance = __webpack_require__(207);

var isObject = __webpack_require__(19);

var setToStringTag = __webpack_require__(94);

var defineProperty = __webpack_require__(29).f;

var forEach = __webpack_require__(60).forEach;

var DESCRIPTORS = __webpack_require__(10);

var InternalStateModule = __webpack_require__(98);

var setInternalState = InternalStateModule.set;
var internalStateGetterFor = InternalStateModule.getterFor;

module.exports = function (CONSTRUCTOR_NAME, wrapper, common) {
  var IS_MAP = CONSTRUCTOR_NAME.indexOf('Map') !== -1;
  var IS_WEAK = CONSTRUCTOR_NAME.indexOf('Weak') !== -1;
  var ADDER = IS_MAP ? 'set' : 'add';
  var NativeConstructor = global[CONSTRUCTOR_NAME];
  var NativePrototype = NativeConstructor && NativeConstructor.prototype;
  var exported = {};
  var Constructor;

  if (!DESCRIPTORS || typeof NativeConstructor != 'function' || !(IS_WEAK || NativePrototype.forEach && !fails(function () {
    new NativeConstructor().entries().next();
  }))) {
    // create collection constructor
    Constructor = common.getConstructor(wrapper, CONSTRUCTOR_NAME, IS_MAP, ADDER);
    InternalMetadataModule.REQUIRED = true;
  } else {
    Constructor = wrapper(function (target, iterable) {
      setInternalState(anInstance(target, Constructor, CONSTRUCTOR_NAME), {
        type: CONSTRUCTOR_NAME,
        collection: new NativeConstructor()
      });
      if (iterable != undefined) iterate(iterable, target[ADDER], {
        that: target,
        AS_ENTRIES: IS_MAP
      });
    });
    var getInternalState = internalStateGetterFor(CONSTRUCTOR_NAME);
    forEach(['add', 'clear', 'delete', 'forEach', 'get', 'has', 'set', 'keys', 'values', 'entries'], function (KEY) {
      var IS_ADDER = KEY == 'add' || KEY == 'set';

      if (KEY in NativePrototype && !(IS_WEAK && KEY == 'clear')) {
        createNonEnumerableProperty(Constructor.prototype, KEY, function (a, b) {
          var collection = getInternalState(this).collection;
          if (!IS_ADDER && IS_WEAK && !isObject(a)) return KEY == 'get' ? undefined : false;
          var result = collection[KEY](a === 0 ? 0 : a, b);
          return IS_ADDER ? this : result;
        });
      }
    });
    IS_WEAK || defineProperty(Constructor.prototype, 'size', {
      configurable: true,
      get: function () {
        return getInternalState(this).collection.size;
      }
    });
  }

  setToStringTag(Constructor, CONSTRUCTOR_NAME, false, true);
  exported[CONSTRUCTOR_NAME] = Constructor;
  $({
    global: true,
    forced: true
  }, exported);
  if (!IS_WEAK) common.setStrong(Constructor, CONSTRUCTOR_NAME, IS_MAP);
  return Constructor;
};

/***/ }),
/* 362 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var hiddenKeys = __webpack_require__(84);

var isObject = __webpack_require__(19);

var has = __webpack_require__(20);

var defineProperty = __webpack_require__(29).f;

var uid = __webpack_require__(40);

var FREEZING = __webpack_require__(363);

var METADATA = uid('meta');
var id = 0; // eslint-disable-next-line es/no-object-isextensible -- safe

var isExtensible = Object.isExtensible || function () {
  return true;
};

var setMetadata = function (it) {
  defineProperty(it, METADATA, {
    value: {
      objectID: 'O' + ++id,
      // object ID
      weakData: {} // weak collections IDs

    }
  });
};

var fastKey = function (it, create) {
  // return a primitive with prefix
  if (!isObject(it)) return typeof it == 'symbol' ? it : (typeof it == 'string' ? 'S' : 'P') + it;

  if (!has(it, METADATA)) {
    // can't set metadata to uncaught frozen object
    if (!isExtensible(it)) return 'F'; // not necessary to add metadata

    if (!create) return 'E'; // add missing metadata

    setMetadata(it); // return object ID
  }

  return it[METADATA].objectID;
};

var getWeakData = function (it, create) {
  if (!has(it, METADATA)) {
    // can't set metadata to uncaught frozen object
    if (!isExtensible(it)) return true; // not necessary to add metadata

    if (!create) return false; // add missing metadata

    setMetadata(it); // return the store of weak collections IDs
  }

  return it[METADATA].weakData;
}; // add metadata on freeze-family methods calling


var onFreeze = function (it) {
  if (FREEZING && meta.REQUIRED && isExtensible(it) && !has(it, METADATA)) setMetadata(it);
  return it;
};

var meta = module.exports = {
  REQUIRED: false,
  fastKey: fastKey,
  getWeakData: getWeakData,
  onFreeze: onFreeze
};
hiddenKeys[METADATA] = true;

/***/ }),
/* 363 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var fails = __webpack_require__(11);

module.exports = !fails(function () {
  // eslint-disable-next-line es/no-object-isextensible, es/no-object-preventextensions -- required for testing
  return Object.isExtensible(Object.preventExtensions({}));
});

/***/ }),
/* 364 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

"use strict";


var defineProperty = __webpack_require__(29).f;

var create = __webpack_require__(78);

var redefineAll = __webpack_require__(205);

var bind = __webpack_require__(26);

var anInstance = __webpack_require__(207);

var iterate = __webpack_require__(202);

var defineIterator = __webpack_require__(131);

var setSpecies = __webpack_require__(206);

var DESCRIPTORS = __webpack_require__(10);

var fastKey = __webpack_require__(362).fastKey;

var InternalStateModule = __webpack_require__(98);

var setInternalState = InternalStateModule.set;
var internalStateGetterFor = InternalStateModule.getterFor;
module.exports = {
  getConstructor: function (wrapper, CONSTRUCTOR_NAME, IS_MAP, ADDER) {
    var C = wrapper(function (that, iterable) {
      anInstance(that, C, CONSTRUCTOR_NAME);
      setInternalState(that, {
        type: CONSTRUCTOR_NAME,
        index: create(null),
        first: undefined,
        last: undefined,
        size: 0
      });
      if (!DESCRIPTORS) that.size = 0;
      if (iterable != undefined) iterate(iterable, that[ADDER], {
        that: that,
        AS_ENTRIES: IS_MAP
      });
    });
    var getInternalState = internalStateGetterFor(CONSTRUCTOR_NAME);

    var define = function (that, key, value) {
      var state = getInternalState(that);
      var entry = getEntry(that, key);
      var previous, index; // change existing entry

      if (entry) {
        entry.value = value; // create new entry
      } else {
        state.last = entry = {
          index: index = fastKey(key, true),
          key: key,
          value: value,
          previous: previous = state.last,
          next: undefined,
          removed: false
        };
        if (!state.first) state.first = entry;
        if (previous) previous.next = entry;
        if (DESCRIPTORS) state.size++;else that.size++; // add to index

        if (index !== 'F') state.index[index] = entry;
      }

      return that;
    };

    var getEntry = function (that, key) {
      var state = getInternalState(that); // fast case

      var index = fastKey(key);
      var entry;
      if (index !== 'F') return state.index[index]; // frozen object case

      for (entry = state.first; entry; entry = entry.next) {
        if (entry.key == key) return entry;
      }
    };

    redefineAll(C.prototype, {
      // 23.1.3.1 Map.prototype.clear()
      // 23.2.3.2 Set.prototype.clear()
      clear: function clear() {
        var that = this;
        var state = getInternalState(that);
        var data = state.index;
        var entry = state.first;

        while (entry) {
          entry.removed = true;
          if (entry.previous) entry.previous = entry.previous.next = undefined;
          delete data[entry.index];
          entry = entry.next;
        }

        state.first = state.last = undefined;
        if (DESCRIPTORS) state.size = 0;else that.size = 0;
      },
      // 23.1.3.3 Map.prototype.delete(key)
      // 23.2.3.4 Set.prototype.delete(value)
      'delete': function (key) {
        var that = this;
        var state = getInternalState(that);
        var entry = getEntry(that, key);

        if (entry) {
          var next = entry.next;
          var prev = entry.previous;
          delete state.index[entry.index];
          entry.removed = true;
          if (prev) prev.next = next;
          if (next) next.previous = prev;
          if (state.first == entry) state.first = next;
          if (state.last == entry) state.last = prev;
          if (DESCRIPTORS) state.size--;else that.size--;
        }

        return !!entry;
      },
      // 23.2.3.6 Set.prototype.forEach(callbackfn, thisArg = undefined)
      // 23.1.3.5 Map.prototype.forEach(callbackfn, thisArg = undefined)
      forEach: function forEach(callbackfn
      /* , that = undefined */
      ) {
        var state = getInternalState(this);
        var boundFunction = bind(callbackfn, arguments.length > 1 ? arguments[1] : undefined, 3);
        var entry;

        while (entry = entry ? entry.next : state.first) {
          boundFunction(entry.value, entry.key, this); // revert to the last existing entry

          while (entry && entry.removed) entry = entry.previous;
        }
      },
      // 23.1.3.7 Map.prototype.has(key)
      // 23.2.3.7 Set.prototype.has(value)
      has: function has(key) {
        return !!getEntry(this, key);
      }
    });
    redefineAll(C.prototype, IS_MAP ? {
      // 23.1.3.6 Map.prototype.get(key)
      get: function get(key) {
        var entry = getEntry(this, key);
        return entry && entry.value;
      },
      // 23.1.3.9 Map.prototype.set(key, value)
      set: function set(key, value) {
        return define(this, key === 0 ? 0 : key, value);
      }
    } : {
      // 23.2.3.1 Set.prototype.add(value)
      add: function add(value) {
        return define(this, value = value === 0 ? 0 : value, value);
      }
    });
    if (DESCRIPTORS) defineProperty(C.prototype, 'size', {
      get: function () {
        return getInternalState(this).size;
      }
    });
    return C;
  },
  setStrong: function (C, CONSTRUCTOR_NAME, IS_MAP) {
    var ITERATOR_NAME = CONSTRUCTOR_NAME + ' Iterator';
    var getInternalCollectionState = internalStateGetterFor(CONSTRUCTOR_NAME);
    var getInternalIteratorState = internalStateGetterFor(ITERATOR_NAME); // add .keys, .values, .entries, [@@iterator]
    // 23.1.3.4, 23.1.3.8, 23.1.3.11, 23.1.3.12, 23.2.3.5, 23.2.3.8, 23.2.3.10, 23.2.3.11

    defineIterator(C, CONSTRUCTOR_NAME, function (iterated, kind) {
      setInternalState(this, {
        type: ITERATOR_NAME,
        target: iterated,
        state: getInternalCollectionState(iterated),
        kind: kind,
        last: undefined
      });
    }, function () {
      var state = getInternalIteratorState(this);
      var kind = state.kind;
      var entry = state.last; // revert to the last existing entry

      while (entry && entry.removed) entry = entry.previous; // get next entry


      if (!state.target || !(state.last = entry = entry ? entry.next : state.state.first)) {
        // or finish the iteration
        state.target = undefined;
        return {
          value: undefined,
          done: true
        };
      } // return step by kind


      if (kind == 'keys') return {
        value: entry.key,
        done: false
      };
      if (kind == 'values') return {
        value: entry.value,
        done: false
      };
      return {
        value: [entry.key, entry.value],
        done: false
      };
    }, IS_MAP ? 'entries' : 'values', !IS_MAP, true); // add [@@species], 23.1.2.2, 23.2.2.2

    setSpecies(CONSTRUCTOR_NAME);
  }
};

/***/ }),
/* 365 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

module.exports = __webpack_require__(366);

/***/ }),
/* 366 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var parent = __webpack_require__(367);

module.exports = parent;

/***/ }),
/* 367 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

__webpack_require__(368);

var path = __webpack_require__(25);

module.exports = path.Reflect.apply;

/***/ }),
/* 368 */
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

var $ = __webpack_require__(7);

var getBuiltIn = __webpack_require__(44);

var aFunction = __webpack_require__(27);

var anObject = __webpack_require__(30);

var fails = __webpack_require__(11);

var nativeApply = getBuiltIn('Reflect', 'apply');
var functionApply = Function.apply; // MS Edge argumentsList argument is optional

var OPTIONAL_ARGUMENTS_LIST = !fails(function () {
  nativeApply(function () {
    /* empty */
  });
}); // `Reflect.apply` method
// https://tc39.es/ecma262/#sec-reflect.apply

$({
  target: 'Reflect',
  stat: true,
  forced: OPTIONAL_ARGUMENTS_LIST
}, {
  apply: function apply(target, thisArgument, argumentsList) {
    aFunction(target);
    anObject(argumentsList);
    return nativeApply ? nativeApply(target, thisArgument, argumentsList) : functionApply.call(target, thisArgument, argumentsList);
  }
});

/***/ }),
/* 369 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

module.exports = __webpack_require__(370);

/***/ }),
/* 370 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var parent = __webpack_require__(371);

module.exports = parent;

/***/ }),
/* 371 */
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

__webpack_require__(372);

var path = __webpack_require__(25);

module.exports = path.Reflect.getPrototypeOf;

/***/ }),
/* 372 */
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

var $ = __webpack_require__(7);

var anObject = __webpack_require__(30);

var objectGetPrototypeOf = __webpack_require__(134);

var CORRECT_PROTOTYPE_GETTER = __webpack_require__(135); // `Reflect.getPrototypeOf` method
// https://tc39.es/ecma262/#sec-reflect.getprototypeof


$({
  target: 'Reflect',
  stat: true,
  sham: !CORRECT_PROTOTYPE_GETTER
}, {
  getPrototypeOf: function getPrototypeOf(target) {
    return objectGetPrototypeOf(anObject(target));
  }
});

/***/ }),
/* 373 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "BlurStack": () => (/* binding */ BlurStack),
/* harmony export */   "canvasRGB": () => (/* binding */ processCanvasRGB),
/* harmony export */   "canvasRGBA": () => (/* binding */ processCanvasRGBA),
/* harmony export */   "image": () => (/* binding */ processImage),
/* harmony export */   "imageDataRGB": () => (/* binding */ processImageDataRGB),
/* harmony export */   "imageDataRGBA": () => (/* binding */ processImageDataRGBA)
/* harmony export */ });
function _typeof(obj) {
  "@babel/helpers - typeof";

  if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") {
    _typeof = function (obj) {
      return typeof obj;
    };
  } else {
    _typeof = function (obj) {
      return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj;
    };
  }

  return _typeof(obj);
}

function _classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
/* eslint-disable no-bitwise -- used for calculations */

/* eslint-disable unicorn/prefer-query-selector -- aiming at
  backward-compatibility */

/**
* StackBlur - a fast almost Gaussian Blur For Canvas
*
* In case you find this class useful - especially in commercial projects -
* I am not totally unhappy for a small donation to my PayPal account
* mario@quasimondo.de
*
* Or support me on flattr:
* {@link https://flattr.com/thing/72791/StackBlur-a-fast-almost-Gaussian-Blur-Effect-for-CanvasJavascript}.
*
* @module StackBlur
* @author Mario Klingemann
* Contact: mario@quasimondo.com
* Website: {@link http://www.quasimondo.com/StackBlurForCanvas/StackBlurDemo.html}
* Twitter: @quasimondo
*
* @copyright (c) 2010 Mario Klingemann
*
* Permission is hereby granted, free of charge, to any person
* obtaining a copy of this software and associated documentation
* files (the "Software"), to deal in the Software without
* restriction, including without limitation the rights to use,
* copy, modify, merge, publish, distribute, sublicense, and/or sell
* copies of the Software, and to permit persons to whom the
* Software is furnished to do so, subject to the following
* conditions:
*
* The above copyright notice and this permission notice shall be
* included in all copies or substantial portions of the Software.
*
* THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
* EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
* OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
* NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
* HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
* WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
* FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
* OTHER DEALINGS IN THE SOFTWARE.
*/


var mulTable = [512, 512, 456, 512, 328, 456, 335, 512, 405, 328, 271, 456, 388, 335, 292, 512, 454, 405, 364, 328, 298, 271, 496, 456, 420, 388, 360, 335, 312, 292, 273, 512, 482, 454, 428, 405, 383, 364, 345, 328, 312, 298, 284, 271, 259, 496, 475, 456, 437, 420, 404, 388, 374, 360, 347, 335, 323, 312, 302, 292, 282, 273, 265, 512, 497, 482, 468, 454, 441, 428, 417, 405, 394, 383, 373, 364, 354, 345, 337, 328, 320, 312, 305, 298, 291, 284, 278, 271, 265, 259, 507, 496, 485, 475, 465, 456, 446, 437, 428, 420, 412, 404, 396, 388, 381, 374, 367, 360, 354, 347, 341, 335, 329, 323, 318, 312, 307, 302, 297, 292, 287, 282, 278, 273, 269, 265, 261, 512, 505, 497, 489, 482, 475, 468, 461, 454, 447, 441, 435, 428, 422, 417, 411, 405, 399, 394, 389, 383, 378, 373, 368, 364, 359, 354, 350, 345, 341, 337, 332, 328, 324, 320, 316, 312, 309, 305, 301, 298, 294, 291, 287, 284, 281, 278, 274, 271, 268, 265, 262, 259, 257, 507, 501, 496, 491, 485, 480, 475, 470, 465, 460, 456, 451, 446, 442, 437, 433, 428, 424, 420, 416, 412, 408, 404, 400, 396, 392, 388, 385, 381, 377, 374, 370, 367, 363, 360, 357, 354, 350, 347, 344, 341, 338, 335, 332, 329, 326, 323, 320, 318, 315, 312, 310, 307, 304, 302, 299, 297, 294, 292, 289, 287, 285, 282, 280, 278, 275, 273, 271, 269, 267, 265, 263, 261, 259];
var shgTable = [9, 11, 12, 13, 13, 14, 14, 15, 15, 15, 15, 16, 16, 16, 16, 17, 17, 17, 17, 17, 17, 17, 18, 18, 18, 18, 18, 18, 18, 18, 18, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 19, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 21, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 22, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 23, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24, 24];
/**
 * @param {string|HTMLImageElement} img
 * @param {string|HTMLCanvasElement} canvas
 * @param {Float} radius
 * @param {boolean} blurAlphaChannel
 * @param {boolean} useOffset
 * @param {boolean} skipStyles
 * @returns {undefined}
 */

function processImage(img, canvas, radius, blurAlphaChannel, useOffset, skipStyles) {
  if (typeof img === 'string') {
    img = document.getElementById(img);
  }

  if (!img || !('naturalWidth' in img)) {
    return;
  }

  var dimensionType = useOffset ? 'offset' : 'natural';
  var w = img[dimensionType + 'Width'];
  var h = img[dimensionType + 'Height'];

  if (typeof canvas === 'string') {
    canvas = document.getElementById(canvas);
  }

  if (!canvas || !('getContext' in canvas)) {
    return;
  }

  if (!skipStyles) {
    canvas.style.width = w + 'px';
    canvas.style.height = h + 'px';
  }

  canvas.width = w;
  canvas.height = h;
  var context = canvas.getContext('2d');
  context.clearRect(0, 0, w, h);
  context.drawImage(img, 0, 0, img.naturalWidth, img.naturalHeight, 0, 0, w, h);

  if (isNaN(radius) || radius < 1) {
    return;
  }

  if (blurAlphaChannel) {
    processCanvasRGBA(canvas, 0, 0, w, h, radius);
  } else {
    processCanvasRGB(canvas, 0, 0, w, h, radius);
  }
}
/**
 * @param {string|HTMLCanvasElement} canvas
 * @param {Integer} topX
 * @param {Integer} topY
 * @param {Integer} width
 * @param {Integer} height
 * @throws {Error|TypeError}
 * @returns {ImageData} See {@link https://html.spec.whatwg.org/multipage/canvas.html#imagedata}
 */


function getImageDataFromCanvas(canvas, topX, topY, width, height) {
  if (typeof canvas === 'string') {
    canvas = document.getElementById(canvas);
  }

  if (!canvas || _typeof(canvas) !== 'object' || !('getContext' in canvas)) {
    throw new TypeError('Expecting canvas with `getContext` method ' + 'in processCanvasRGB(A) calls!');
  }

  var context = canvas.getContext('2d');

  try {
    return context.getImageData(topX, topY, width, height);
  } catch (e) {
    throw new Error('unable to access image data: ' + e);
  }
}
/**
 * @param {HTMLCanvasElement} canvas
 * @param {Integer} topX
 * @param {Integer} topY
 * @param {Integer} width
 * @param {Integer} height
 * @param {Float} radius
 * @returns {undefined}
 */


function processCanvasRGBA(canvas, topX, topY, width, height, radius) {
  if (isNaN(radius) || radius < 1) {
    return;
  }

  radius |= 0;
  var imageData = getImageDataFromCanvas(canvas, topX, topY, width, height);
  imageData = processImageDataRGBA(imageData, topX, topY, width, height, radius);
  canvas.getContext('2d').putImageData(imageData, topX, topY);
}
/**
 * @param {ImageData} imageData
 * @param {Integer} topX
 * @param {Integer} topY
 * @param {Integer} width
 * @param {Integer} height
 * @param {Float} radius
 * @returns {ImageData}
 */


function processImageDataRGBA(imageData, topX, topY, width, height, radius) {
  var pixels = imageData.data;
  var div = 2 * radius + 1; // const w4 = width << 2;

  var widthMinus1 = width - 1;
  var heightMinus1 = height - 1;
  var radiusPlus1 = radius + 1;
  var sumFactor = radiusPlus1 * (radiusPlus1 + 1) / 2;
  var stackStart = new BlurStack();
  var stack = stackStart;
  var stackEnd;

  for (var i = 1; i < div; i++) {
    stack = stack.next = new BlurStack();

    if (i === radiusPlus1) {
      stackEnd = stack;
    }
  }

  stack.next = stackStart;
  var stackIn = null,
      stackOut = null,
      yw = 0,
      yi = 0;
  var mulSum = mulTable[radius];
  var shgSum = shgTable[radius];

  for (var y = 0; y < height; y++) {
    stack = stackStart;
    var pr = pixels[yi],
        pg = pixels[yi + 1],
        pb = pixels[yi + 2],
        pa = pixels[yi + 3];

    for (var _i = 0; _i < radiusPlus1; _i++) {
      stack.r = pr;
      stack.g = pg;
      stack.b = pb;
      stack.a = pa;
      stack = stack.next;
    }

    var rInSum = 0,
        gInSum = 0,
        bInSum = 0,
        aInSum = 0,
        rOutSum = radiusPlus1 * pr,
        gOutSum = radiusPlus1 * pg,
        bOutSum = radiusPlus1 * pb,
        aOutSum = radiusPlus1 * pa,
        rSum = sumFactor * pr,
        gSum = sumFactor * pg,
        bSum = sumFactor * pb,
        aSum = sumFactor * pa;

    for (var _i2 = 1; _i2 < radiusPlus1; _i2++) {
      var p = yi + ((widthMinus1 < _i2 ? widthMinus1 : _i2) << 2);
      var r = pixels[p],
          g = pixels[p + 1],
          b = pixels[p + 2],
          a = pixels[p + 3];
      var rbs = radiusPlus1 - _i2;
      rSum += (stack.r = r) * rbs;
      gSum += (stack.g = g) * rbs;
      bSum += (stack.b = b) * rbs;
      aSum += (stack.a = a) * rbs;
      rInSum += r;
      gInSum += g;
      bInSum += b;
      aInSum += a;
      stack = stack.next;
    }

    stackIn = stackStart;
    stackOut = stackEnd;

    for (var x = 0; x < width; x++) {
      var paInitial = aSum * mulSum >> shgSum;
      pixels[yi + 3] = paInitial;

      if (paInitial !== 0) {
        var _a2 = 255 / paInitial;

        pixels[yi] = (rSum * mulSum >> shgSum) * _a2;
        pixels[yi + 1] = (gSum * mulSum >> shgSum) * _a2;
        pixels[yi + 2] = (bSum * mulSum >> shgSum) * _a2;
      } else {
        pixels[yi] = pixels[yi + 1] = pixels[yi + 2] = 0;
      }

      rSum -= rOutSum;
      gSum -= gOutSum;
      bSum -= bOutSum;
      aSum -= aOutSum;
      rOutSum -= stackIn.r;
      gOutSum -= stackIn.g;
      bOutSum -= stackIn.b;
      aOutSum -= stackIn.a;

      var _p = x + radius + 1;

      _p = yw + (_p < widthMinus1 ? _p : widthMinus1) << 2;
      rInSum += stackIn.r = pixels[_p];
      gInSum += stackIn.g = pixels[_p + 1];
      bInSum += stackIn.b = pixels[_p + 2];
      aInSum += stackIn.a = pixels[_p + 3];
      rSum += rInSum;
      gSum += gInSum;
      bSum += bInSum;
      aSum += aInSum;
      stackIn = stackIn.next;
      var _stackOut = stackOut,
          _r = _stackOut.r,
          _g = _stackOut.g,
          _b = _stackOut.b,
          _a = _stackOut.a;
      rOutSum += _r;
      gOutSum += _g;
      bOutSum += _b;
      aOutSum += _a;
      rInSum -= _r;
      gInSum -= _g;
      bInSum -= _b;
      aInSum -= _a;
      stackOut = stackOut.next;
      yi += 4;
    }

    yw += width;
  }

  for (var _x = 0; _x < width; _x++) {
    yi = _x << 2;

    var _pr = pixels[yi],
        _pg = pixels[yi + 1],
        _pb = pixels[yi + 2],
        _pa = pixels[yi + 3],
        _rOutSum = radiusPlus1 * _pr,
        _gOutSum = radiusPlus1 * _pg,
        _bOutSum = radiusPlus1 * _pb,
        _aOutSum = radiusPlus1 * _pa,
        _rSum = sumFactor * _pr,
        _gSum = sumFactor * _pg,
        _bSum = sumFactor * _pb,
        _aSum = sumFactor * _pa;

    stack = stackStart;

    for (var _i3 = 0; _i3 < radiusPlus1; _i3++) {
      stack.r = _pr;
      stack.g = _pg;
      stack.b = _pb;
      stack.a = _pa;
      stack = stack.next;
    }

    var yp = width;
    var _gInSum = 0,
        _bInSum = 0,
        _aInSum = 0,
        _rInSum = 0;

    for (var _i4 = 1; _i4 <= radius; _i4++) {
      yi = yp + _x << 2;

      var _rbs = radiusPlus1 - _i4;

      _rSum += (stack.r = _pr = pixels[yi]) * _rbs;
      _gSum += (stack.g = _pg = pixels[yi + 1]) * _rbs;
      _bSum += (stack.b = _pb = pixels[yi + 2]) * _rbs;
      _aSum += (stack.a = _pa = pixels[yi + 3]) * _rbs;
      _rInSum += _pr;
      _gInSum += _pg;
      _bInSum += _pb;
      _aInSum += _pa;
      stack = stack.next;

      if (_i4 < heightMinus1) {
        yp += width;
      }
    }

    yi = _x;
    stackIn = stackStart;
    stackOut = stackEnd;

    for (var _y = 0; _y < height; _y++) {
      var _p2 = yi << 2;

      pixels[_p2 + 3] = _pa = _aSum * mulSum >> shgSum;

      if (_pa > 0) {
        _pa = 255 / _pa;
        pixels[_p2] = (_rSum * mulSum >> shgSum) * _pa;
        pixels[_p2 + 1] = (_gSum * mulSum >> shgSum) * _pa;
        pixels[_p2 + 2] = (_bSum * mulSum >> shgSum) * _pa;
      } else {
        pixels[_p2] = pixels[_p2 + 1] = pixels[_p2 + 2] = 0;
      }

      _rSum -= _rOutSum;
      _gSum -= _gOutSum;
      _bSum -= _bOutSum;
      _aSum -= _aOutSum;
      _rOutSum -= stackIn.r;
      _gOutSum -= stackIn.g;
      _bOutSum -= stackIn.b;
      _aOutSum -= stackIn.a;
      _p2 = _x + ((_p2 = _y + radiusPlus1) < heightMinus1 ? _p2 : heightMinus1) * width << 2;
      _rSum += _rInSum += stackIn.r = pixels[_p2];
      _gSum += _gInSum += stackIn.g = pixels[_p2 + 1];
      _bSum += _bInSum += stackIn.b = pixels[_p2 + 2];
      _aSum += _aInSum += stackIn.a = pixels[_p2 + 3];
      stackIn = stackIn.next;
      _rOutSum += _pr = stackOut.r;
      _gOutSum += _pg = stackOut.g;
      _bOutSum += _pb = stackOut.b;
      _aOutSum += _pa = stackOut.a;
      _rInSum -= _pr;
      _gInSum -= _pg;
      _bInSum -= _pb;
      _aInSum -= _pa;
      stackOut = stackOut.next;
      yi += width;
    }
  }

  return imageData;
}
/**
 * @param {HTMLCanvasElement} canvas
 * @param {Integer} topX
 * @param {Integer} topY
 * @param {Integer} width
 * @param {Integer} height
 * @param {Float} radius
 * @returns {undefined}
 */


function processCanvasRGB(canvas, topX, topY, width, height, radius) {
  if (isNaN(radius) || radius < 1) {
    return;
  }

  radius |= 0;
  var imageData = getImageDataFromCanvas(canvas, topX, topY, width, height);
  imageData = processImageDataRGB(imageData, topX, topY, width, height, radius);
  canvas.getContext('2d').putImageData(imageData, topX, topY);
}
/**
 * @param {ImageData} imageData
 * @param {Integer} topX
 * @param {Integer} topY
 * @param {Integer} width
 * @param {Integer} height
 * @param {Float} radius
 * @returns {ImageData}
 */


function processImageDataRGB(imageData, topX, topY, width, height, radius) {
  var pixels = imageData.data;
  var div = 2 * radius + 1; // const w4 = width << 2;

  var widthMinus1 = width - 1;
  var heightMinus1 = height - 1;
  var radiusPlus1 = radius + 1;
  var sumFactor = radiusPlus1 * (radiusPlus1 + 1) / 2;
  var stackStart = new BlurStack();
  var stack = stackStart;
  var stackEnd;

  for (var i = 1; i < div; i++) {
    stack = stack.next = new BlurStack();

    if (i === radiusPlus1) {
      stackEnd = stack;
    }
  }

  stack.next = stackStart;
  var stackIn = null;
  var stackOut = null;
  var mulSum = mulTable[radius];
  var shgSum = shgTable[radius];
  var p, rbs;
  var yw = 0,
      yi = 0;

  for (var y = 0; y < height; y++) {
    var pr = pixels[yi],
        pg = pixels[yi + 1],
        pb = pixels[yi + 2],
        rOutSum = radiusPlus1 * pr,
        gOutSum = radiusPlus1 * pg,
        bOutSum = radiusPlus1 * pb,
        rSum = sumFactor * pr,
        gSum = sumFactor * pg,
        bSum = sumFactor * pb;
    stack = stackStart;

    for (var _i5 = 0; _i5 < radiusPlus1; _i5++) {
      stack.r = pr;
      stack.g = pg;
      stack.b = pb;
      stack = stack.next;
    }

    var rInSum = 0,
        gInSum = 0,
        bInSum = 0;

    for (var _i6 = 1; _i6 < radiusPlus1; _i6++) {
      p = yi + ((widthMinus1 < _i6 ? widthMinus1 : _i6) << 2);
      rSum += (stack.r = pr = pixels[p]) * (rbs = radiusPlus1 - _i6);
      gSum += (stack.g = pg = pixels[p + 1]) * rbs;
      bSum += (stack.b = pb = pixels[p + 2]) * rbs;
      rInSum += pr;
      gInSum += pg;
      bInSum += pb;
      stack = stack.next;
    }

    stackIn = stackStart;
    stackOut = stackEnd;

    for (var x = 0; x < width; x++) {
      pixels[yi] = rSum * mulSum >> shgSum;
      pixels[yi + 1] = gSum * mulSum >> shgSum;
      pixels[yi + 2] = bSum * mulSum >> shgSum;
      rSum -= rOutSum;
      gSum -= gOutSum;
      bSum -= bOutSum;
      rOutSum -= stackIn.r;
      gOutSum -= stackIn.g;
      bOutSum -= stackIn.b;
      p = yw + ((p = x + radius + 1) < widthMinus1 ? p : widthMinus1) << 2;
      rInSum += stackIn.r = pixels[p];
      gInSum += stackIn.g = pixels[p + 1];
      bInSum += stackIn.b = pixels[p + 2];
      rSum += rInSum;
      gSum += gInSum;
      bSum += bInSum;
      stackIn = stackIn.next;
      rOutSum += pr = stackOut.r;
      gOutSum += pg = stackOut.g;
      bOutSum += pb = stackOut.b;
      rInSum -= pr;
      gInSum -= pg;
      bInSum -= pb;
      stackOut = stackOut.next;
      yi += 4;
    }

    yw += width;
  }

  for (var _x2 = 0; _x2 < width; _x2++) {
    yi = _x2 << 2;

    var _pr2 = pixels[yi],
        _pg2 = pixels[yi + 1],
        _pb2 = pixels[yi + 2],
        _rOutSum2 = radiusPlus1 * _pr2,
        _gOutSum2 = radiusPlus1 * _pg2,
        _bOutSum2 = radiusPlus1 * _pb2,
        _rSum2 = sumFactor * _pr2,
        _gSum2 = sumFactor * _pg2,
        _bSum2 = sumFactor * _pb2;

    stack = stackStart;

    for (var _i7 = 0; _i7 < radiusPlus1; _i7++) {
      stack.r = _pr2;
      stack.g = _pg2;
      stack.b = _pb2;
      stack = stack.next;
    }

    var _rInSum2 = 0,
        _gInSum2 = 0,
        _bInSum2 = 0;

    for (var _i8 = 1, yp = width; _i8 <= radius; _i8++) {
      yi = yp + _x2 << 2;
      _rSum2 += (stack.r = _pr2 = pixels[yi]) * (rbs = radiusPlus1 - _i8);
      _gSum2 += (stack.g = _pg2 = pixels[yi + 1]) * rbs;
      _bSum2 += (stack.b = _pb2 = pixels[yi + 2]) * rbs;
      _rInSum2 += _pr2;
      _gInSum2 += _pg2;
      _bInSum2 += _pb2;
      stack = stack.next;

      if (_i8 < heightMinus1) {
        yp += width;
      }
    }

    yi = _x2;
    stackIn = stackStart;
    stackOut = stackEnd;

    for (var _y2 = 0; _y2 < height; _y2++) {
      p = yi << 2;
      pixels[p] = _rSum2 * mulSum >> shgSum;
      pixels[p + 1] = _gSum2 * mulSum >> shgSum;
      pixels[p + 2] = _bSum2 * mulSum >> shgSum;
      _rSum2 -= _rOutSum2;
      _gSum2 -= _gOutSum2;
      _bSum2 -= _bOutSum2;
      _rOutSum2 -= stackIn.r;
      _gOutSum2 -= stackIn.g;
      _bOutSum2 -= stackIn.b;
      p = _x2 + ((p = _y2 + radiusPlus1) < heightMinus1 ? p : heightMinus1) * width << 2;
      _rSum2 += _rInSum2 += stackIn.r = pixels[p];
      _gSum2 += _gInSum2 += stackIn.g = pixels[p + 1];
      _bSum2 += _bInSum2 += stackIn.b = pixels[p + 2];
      stackIn = stackIn.next;
      _rOutSum2 += _pr2 = stackOut.r;
      _gOutSum2 += _pg2 = stackOut.g;
      _bOutSum2 += _pb2 = stackOut.b;
      _rInSum2 -= _pr2;
      _gInSum2 -= _pg2;
      _bInSum2 -= _pb2;
      stackOut = stackOut.next;
      yi += width;
    }
  }

  return imageData;
}
/**
 *
 */


var BlurStack =
/**
 * Set properties.
 */
function BlurStack() {
  _classCallCheck(this, BlurStack);

  this.r = 0;
  this.g = 0;
  this.b = 0;
  this.a = 0;
  this.next = null;
};



/***/ }),
/* 374 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

(function (global, factory) {
   true ? factory(exports, __webpack_require__(375), __webpack_require__(428), __webpack_require__(430), __webpack_require__(474), __webpack_require__(476), __webpack_require__(495), __webpack_require__(503), __webpack_require__(504), __webpack_require__(520)) : 0;
})(this, function (exports, d3, d3Dispatch, d3Transition, d3Timer, d3Interpolate, d3Zoom, wasm, d3Format, d3Path) {
  'use strict';

  function _interopNamespace(e) {
    if (e && e.__esModule) return e;
    var n = Object.create(null);

    if (e) {
      Object.keys(e).forEach(function (k) {
        if (k !== 'default') {
          var d = Object.getOwnPropertyDescriptor(e, k);
          Object.defineProperty(n, k, d.get ? d : {
            enumerable: true,
            get: function () {
              return e[k];
            }
          });
        }
      });
    }

    n['default'] = e;
    return Object.freeze(n);
  }

  var d3__namespace = /*#__PURE__*/_interopNamespace(d3);

  function _defineProperty(obj, key, value) {
    if (key in obj) {
      Object.defineProperty(obj, key, {
        value: value,
        enumerable: true,
        configurable: true,
        writable: true
      });
    } else {
      obj[key] = value;
    }

    return obj;
  }

  function _toConsumableArray(arr) {
    return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();
  }

  function _arrayWithoutHoles(arr) {
    if (Array.isArray(arr)) return _arrayLikeToArray(arr);
  }

  function _iterableToArray(iter) {
    if (typeof Symbol !== "undefined" && Symbol.iterator in Object(iter)) return Array.from(iter);
  }

  function _unsupportedIterableToArray(o, minLen) {
    if (!o) return;
    if (typeof o === "string") return _arrayLikeToArray(o, minLen);
    var n = Object.prototype.toString.call(o).slice(8, -1);
    if (n === "Object" && o.constructor) n = o.constructor.name;
    if (n === "Map" || n === "Set") return Array.from(o);
    if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);
  }

  function _arrayLikeToArray(arr, len) {
    if (len == null || len > arr.length) len = arr.length;

    for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];

    return arr2;
  }

  function _nonIterableSpread() {
    throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
  }

  function extractElementData(element) {
    var datum = {};
    var tag = element.node().nodeName;
    datum.tag = tag;

    if (tag == '#text') {
      datum.text = element.text();
    } else if (tag == '#comment') {
      datum.comment = element.text();
    }

    datum.attributes = {};
    var attributes = element.node().attributes;

    if (attributes) {
      for (var i = 0; i < attributes.length; i++) {
        var attribute = attributes[i];
        var name = attribute.name;
        var value = attribute.value;
        datum.attributes[name] = value;
      }
    }

    var transform = element.node().transform;

    if (transform && transform.baseVal.numberOfItems != 0) {
      var matrix = transform.baseVal.consolidate().matrix;
      datum.translation = {
        x: matrix.e,
        y: matrix.f
      };
      datum.scale = matrix.a;
    }

    if (tag == 'ellipse') {
      datum.center = {
        x: datum.attributes.cx,
        y: datum.attributes.cy
      };
    }

    if (tag == 'polygon') {
      var points = element.attr('points').split(' ');
      var x = points.map(function (p) {
        return p.split(',')[0];
      });
      var y = points.map(function (p) {
        return p.split(',')[1];
      });
      var xmin = Math.min.apply(null, x);
      var xmax = Math.max.apply(null, x);
      var ymin = Math.min.apply(null, y);
      var ymax = Math.max.apply(null, y);
      var bbox = {
        x: xmin,
        y: ymin,
        width: xmax - xmin,
        height: ymax - ymin
      };
      datum.bbox = bbox;
      datum.center = {
        x: (xmin + xmax) / 2,
        y: (ymin + ymax) / 2
      };
    }

    if (tag == 'path') {
      var d = element.attr('d');
      var points = d.split(/[A-Z ]/);
      points.shift();
      var x = points.map(function (p) {
        return +p.split(',')[0];
      });
      var y = points.map(function (p) {
        return +p.split(',')[1];
      });
      var xmin = Math.min.apply(null, x);
      var xmax = Math.max.apply(null, x);
      var ymin = Math.min.apply(null, y);
      var ymax = Math.max.apply(null, y);
      var bbox = {
        x: xmin,
        y: ymin,
        width: xmax - xmin,
        height: ymax - ymin
      };
      datum.bbox = bbox;
      datum.center = {
        x: (xmin + xmax) / 2,
        y: (ymin + ymax) / 2
      };
      datum.totalLength = element.node().getTotalLength();
    }

    if (tag == 'text') {
      datum.center = {
        x: element.attr('x'),
        y: element.attr('y')
      };
    }

    if (tag == '#text') {
      datum.text = element.text();
    } else if (tag == '#comment') {
      datum.comment = element.text();
    }

    return datum;
  }

  function extractAllElementsData(element) {
    var datum = extractElementData(element);
    datum.children = [];
    var children = d3__namespace.selectAll(element.node().childNodes);
    children.each(function () {
      var childData = extractAllElementsData(d3__namespace.select(this));
      childData.parent = datum;
      datum.children.push(childData);
    });
    return datum;
  }

  function createElement(data) {
    if (data.tag == '#text') {
      return document.createTextNode("");
    } else if (data.tag == '#comment') {
      return document.createComment(data.comment);
    } else {
      return document.createElementNS('http://www.w3.org/2000/svg', data.tag);
    }
  }

  function createElementWithAttributes(data) {
    var elementNode = createElement(data);
    var element = d3__namespace.select(elementNode);
    var attributes = data.attributes;

    for (var _i = 0, _Object$keys = Object.keys(attributes); _i < _Object$keys.length; _i++) {
      var attributeName = _Object$keys[_i];
      var attributeValue = attributes[attributeName];
      element.attr(attributeName, attributeValue);
    }

    return elementNode;
  }

  function replaceElement(element, data) {
    var parent = d3__namespace.select(element.node().parentNode);
    var newElementNode = createElementWithAttributes(data);
    var newElement = parent.insert(function () {
      return newElementNode;
    }, function () {
      return element.node();
    });
    element.remove();
    return newElement;
  }

  function insertElementData(element, datum) {
    element.datum(datum);
    element.data([datum], function (d) {
      return d.key;
    });
  }

  function insertAllElementsData(element, datum) {
    insertElementData(element, datum);
    var children = d3__namespace.selectAll(element.node().childNodes);
    children.each(function (d, i) {
      insertAllElementsData(d3__namespace.select(this), datum.children[i]);
    });
  }

  function insertChildren(element, index) {
    var children = element.selectAll(function () {
      return element.node().childNodes;
    });
    children = children.data(function (d) {
      return d.children;
    }, function (d) {
      return d.tag + '-' + index;
    });
    var childrenEnter = children.enter().append(function (d) {
      return createElement(d);
    });
    var childrenExit = children.exit();
    childrenExit = childrenExit.remove();
    children = childrenEnter.merge(children);
    var childTagIndexes = {};
    children.each(function (childData) {
      var childTag = childData.tag;

      if (childTagIndexes[childTag] == null) {
        childTagIndexes[childTag] = 0;
      }

      var childIndex = childTagIndexes[childTag]++;
      attributeElement.call(this, childData, childIndex);
    });
  }

  function attributeElement(data) {
    var index = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;
    var element = d3__namespace.select(this);
    data.tag;
    var attributes = data.attributes;
    var currentAttributes = element.node().attributes;

    if (currentAttributes) {
      for (var i = 0; i < currentAttributes.length; i++) {
        var currentAttribute = currentAttributes[i];
        var name = currentAttribute.name;

        if (name.split(':')[0] != 'xmlns' && currentAttribute.namespaceURI) {
          var namespaceURIParts = currentAttribute.namespaceURI.split('/');
          var namespace = namespaceURIParts[namespaceURIParts.length - 1];
          name = namespace + ':' + name;
        }

        if (!(name in attributes)) {
          attributes[name] = null;
        }
      }
    }

    for (var _i2 = 0, _Object$keys2 = Object.keys(attributes); _i2 < _Object$keys2.length; _i2++) {
      var attributeName = _Object$keys2[_i2];
      element.attr(attributeName, attributes[attributeName]);
    }

    if (data.text) {
      element.text(data.text);
    }

    insertChildren(element, index);
  }

  function shallowCopyObject(obj) {
    return Object.assign({}, obj);
  }

  function roundTo2Decimals(x) {
    return Math.round(x * 100.0) / 100.0;
  }

  function zoom(enable) {
    this._options.zoom = enable;

    if (this._options.zoom && !this._zoomBehavior) {
      createZoomBehavior.call(this);
    } else if (!this._options.zoom && this._zoomBehavior) {
      this._zoomSelection.on(".zoom", null);

      this._zoomBehavior = null;
    }

    return this;
  }

  function createZoomBehavior() {
    function zoomed(event) {
      var g = d3__namespace.select(svg.node().querySelector("g"));
      g.attr('transform', event.transform);
    }

    var root = this._selection;
    var svg = d3__namespace.select(root.node().querySelector("svg"));

    if (svg.size() == 0) {
      return this;
    }

    this._zoomSelection = svg;
    var zoomBehavior = d3Zoom.zoom().scaleExtent(this._options.zoomScaleExtent).translateExtent(this._options.zoomTranslateExtent).interpolate(d3Interpolate.interpolate).on("zoom", zoomed);
    this._zoomBehavior = zoomBehavior;
    var g = d3__namespace.select(svg.node().querySelector("g"));
    svg.call(zoomBehavior);

    if (!this._active) {
      translateZoomBehaviorTransform.call(this, g);
    }

    this._originalTransform = d3Zoom.zoomTransform(svg.node());
    return this;
  }

  function getTranslatedZoomTransform(selection) {
    // Get the current zoom transform for the top level svg and
    // translate it uniformly with the given selection, using the
    // difference between the translation specified in the selection's
    // data and it's saved previous translation. The selection is
    // normally the top level g element of the graph.
    var oldTranslation = this._translation;
    var oldScale = this._scale;
    var newTranslation = selection.datum().translation;
    var newScale = selection.datum().scale;
    var t = d3Zoom.zoomTransform(this._zoomSelection.node());

    if (oldTranslation) {
      t = t.scale(1 / oldScale);
      t = t.translate(-oldTranslation.x, -oldTranslation.y);
    }

    t = t.translate(newTranslation.x, newTranslation.y);
    t = t.scale(newScale);
    return t;
  }

  function translateZoomBehaviorTransform(selection) {
    // Translate the current zoom transform for the top level svg
    // uniformly with the given selection, using the difference
    // between the translation specified in the selection's data and
    // it's saved previous translation. The selection is normally the
    // top level g element of the graph.
    this._zoomBehavior.transform(this._zoomSelection, getTranslatedZoomTransform.call(this, selection)); // Save the selections's new translation and scale.


    this._translation = selection.datum().translation;
    this._scale = selection.datum().scale; // Set the original zoom transform to the translation and scale specified in
    // the selection's data.

    this._originalTransform = d3Zoom.zoomIdentity.translate(selection.datum().translation.x, selection.datum().translation.y).scale(selection.datum().scale);
  }

  function resetZoom(transition) {
    // Reset the zoom transform to the original zoom transform.
    var selection = this._zoomSelection;

    if (transition) {
      selection = selection.transition(transition);
    }

    selection.call(this._zoomBehavior.transform, this._originalTransform);
    return this;
  }

  function zoomScaleExtent(extent) {
    this._options.zoomScaleExtent = extent;
    return this;
  }

  function zoomTranslateExtent(extent) {
    this._options.zoomTranslateExtent = extent;
    return this;
  }

  function zoomBehavior() {
    return this._zoomBehavior || null;
  }

  function zoomSelection() {
    return this._zoomSelection || null;
  }

  function pathTween(points, d1) {
    return function () {
      var pointInterpolators = points.map(function (p) {
        return d3Interpolate.interpolate([p[0][0], p[0][1]], [p[1][0], p[1][1]]);
      });
      return function (t) {
        return t < 1 ? "M" + pointInterpolators.map(function (p) {
          return p(t);
        }).join("L") : d1;
      };
    };
  }

  function pathTweenPoints(node, d1, precision, precisionIsRelative) {
    var path0 = node;
    var path1 = path0.cloneNode();
    var n0 = path0.getTotalLength();
    var n1 = (path1.setAttribute("d", d1), path1).getTotalLength(); // Uniform sampling of distance based on specified precision.

    var distances = [0];
    var i = 0;
    var dt = precisionIsRelative ? precision : precision / Math.max(n0, n1);

    while ((i += dt) < 1) {
      distances.push(i);
    }

    distances.push(1); // Compute point-interpolators at each distance.

    var points = distances.map(function (t) {
      var p0 = path0.getPointAtLength(t * n0);
      var p1 = path1.getPointAtLength(t * n1);
      return [[p0.x, p0.y], [p1.x, p1.y]];
    });
    return points;
  }

  function data() {
    return this._data || null;
  }

  function isEdgeElementParent(datum) {
    return datum.attributes["class"] == 'edge' || datum.tag == 'a' && datum.parent.tag == 'g' && datum.parent.parent.attributes["class"] == 'edge';
  }

  function isEdgeElement(datum) {
    return datum.parent && isEdgeElementParent(datum.parent);
  }

  function getEdgeGroup(datum) {
    if (datum.parent.attributes["class"] == 'edge') {
      return datum.parent;
    } else {
      // datum.parent.tag == 'g' && datum.parent.parent.tag == 'g' && datum.parent.parent.parent.attributes.class == 'edge'
      return datum.parent.parent.parent;
    }
  }

  function getEdgeTitle(datum) {
    return getEdgeGroup(datum).children.find(function (e) {
      return e.tag == 'title';
    });
  }

  function render(callback) {
    if (this._busy) {
      this._queue.push(this.render.bind(this, callback));

      return this;
    }

    this._dispatch.call('renderStart', this);

    if (this._transitionFactory) {
      d3Timer.timeout(function () {
        // Decouple from time spent. See https://github.com/d3/d3-timer/issues/27
        this._transition = d3Transition.transition(this._transitionFactory());

        _render.call(this, callback);
      }.bind(this), 0);
    } else {
      _render.call(this, callback);
    }

    return this;
  }

  function _render(callback) {
    var transitionInstance = this._transition;
    var fade = this._options.fade && transitionInstance != null;
    var tweenPaths = this._options.tweenPaths;
    var tweenShapes = this._options.tweenShapes;
    var convertEqualSidedPolygons = this._options.convertEqualSidedPolygons;
    var growEnteringEdges = this._options.growEnteringEdges && transitionInstance != null;
    var attributer = this._attributer;
    var graphvizInstance = this;

    function insertChildren(element) {
      var children = element.selectAll(function () {
        return element.node().childNodes;
      });
      children = children.data(function (d) {
        return d.children;
      }, function (d) {
        return d.key;
      });
      var childrenEnter = children.enter().append(function (d) {
        var element = createElement(d);

        if (d.tag == '#text' && fade) {
          element.nodeValue = d.text;
        }

        return element;
      });

      if (fade || growEnteringEdges && isEdgeElementParent(element.datum())) {
        var childElementsEnter = childrenEnter.filter(function (d) {
          return d.tag[0] == '#' ? null : this;
        }).each(function (d) {
          var childEnter = d3__namespace.select(this);

          for (var _i = 0, _Object$keys = Object.keys(d.attributes); _i < _Object$keys.length; _i++) {
            var attributeName = _Object$keys[_i];
            var attributeValue = d.attributes[attributeName];
            childEnter.attr(attributeName, attributeValue);
          }
        });
        childElementsEnter.filter(function (d) {
          return d.tag == 'svg' || d.tag == 'g' ? null : this;
        }).style("opacity", 0.0);
      }

      var childrenExit = children.exit();

      if (attributer) {
        childrenExit.each(attributer);
      }

      if (transitionInstance) {
        childrenExit = childrenExit.transition(transitionInstance);

        if (fade) {
          childrenExit.filter(function (d) {
            return d.tag[0] == '#' ? null : this;
          }).style("opacity", 0.0);
        }
      }

      childrenExit = childrenExit.remove();
      children = childrenEnter.merge(children);
      children.each(attributeElement);
    }

    function attributeElement(data) {
      var element = d3__namespace.select(this);

      if (data.tag == "svg") {
        var options = graphvizInstance._options;

        if (options.width != null || options.height != null) {
          var width = options.width;
          var height = options.height;

          if (width == null) {
            width = data.attributes.width.replace('pt', '') * 4 / 3;
          } else {
            element.attr("width", width);
            data.attributes.width = width;
          }

          if (height == null) {
            height = data.attributes.height.replace('pt', '') * 4 / 3;
          } else {
            element.attr("height", height);
            data.attributes.height = height;
          }

          if (!options.fit) {
            element.attr("viewBox", "0 0 ".concat(width * 3 / 4 / options.scale, " ").concat(height * 3 / 4 / options.scale));
            data.attributes.viewBox = "0 0 ".concat(width * 3 / 4 / options.scale, " ").concat(height * 3 / 4 / options.scale);
          }
        }

        if (options.scale != 1 && (options.fit || options.width == null && options.height == null)) {
          width = data.attributes.viewBox.split(' ')[2];
          height = data.attributes.viewBox.split(' ')[3];
          element.attr("viewBox", "0 0 ".concat(width / options.scale, " ").concat(height / options.scale));
          data.attributes.viewBox = "0 0 ".concat(width / options.scale, " ").concat(height / options.scale);
        }
      }

      if (attributer) {
        element.each(attributer);
      }

      var tag = data.tag;
      var attributes = data.attributes;
      var currentAttributes = element.node().attributes;

      if (currentAttributes) {
        for (var i = 0; i < currentAttributes.length; i++) {
          var currentAttribute = currentAttributes[i];
          var name = currentAttribute.name;

          if (name.split(':')[0] != 'xmlns' && currentAttribute.namespaceURI) {
            var namespaceURIParts = currentAttribute.namespaceURI.split('/');
            var namespace = namespaceURIParts[namespaceURIParts.length - 1];
            name = namespace + ':' + name;
          }

          if (!(name in attributes)) {
            attributes[name] = null;
          }
        }
      }

      var convertShape = false;
      var convertPrevShape = false;

      if (tweenShapes && transitionInstance) {
        if ((this.nodeName == 'polygon' || this.nodeName == 'ellipse') && data.alternativeOld) {
          convertPrevShape = true;
        }

        if ((tag == 'polygon' || tag == 'ellipse') && data.alternativeNew) {
          convertShape = true;
        }

        if (this.nodeName == 'polygon' && tag == 'polygon' && data.alternativeOld) {
          var prevData = extractElementData(element);
          var prevPoints = prevData.attributes.points;

          if (!convertEqualSidedPolygons) {
            var nPrevPoints = prevPoints.split(' ').length;
            var points = data.attributes.points;
            var nPoints = points.split(' ').length;

            if (nPoints == nPrevPoints) {
              convertShape = false;
              convertPrevShape = false;
            }
          }
        }

        if (convertPrevShape) {
          var prevPathData = data.alternativeOld;
          var pathElement = replaceElement(element, prevPathData);
          pathElement.data([data], function () {
            return data.key;
          });
          element = pathElement;
        }

        if (convertShape) {
          var newPathData = data.alternativeNew;
          tag = 'path';
          attributes = newPathData.attributes;
        }
      }

      var elementTransition = element;

      if (transitionInstance) {
        elementTransition = elementTransition.transition(transitionInstance);

        if (fade) {
          elementTransition.filter(function (d) {
            return d.tag[0] == '#' ? null : this;
          }).style("opacity", 1.0);
        }

        elementTransition.filter(function (d) {
          return d.tag[0] == '#' ? null : this;
        }).on("end", function (d) {
          d3__namespace.select(this).attr('style', d && d.attributes && d.attributes.style || null);
        });
      }

      var growThisPath = growEnteringEdges && tag == 'path' && data.offset;

      if (growThisPath) {
        var totalLength = data.totalLength;
        element.attr("stroke-dasharray", totalLength + " " + totalLength).attr("stroke-dashoffset", totalLength).attr('transform', 'translate(' + data.offset.x + ',' + data.offset.y + ')');
        attributes["stroke-dashoffset"] = 0;
        attributes['transform'] = 'translate(0,0)';
        elementTransition.attr("stroke-dashoffset", attributes["stroke-dashoffset"]).attr('transform', attributes['transform']).on("start", function () {
          d3__namespace.select(this).style('opacity', null);
        }).on("end", function () {
          d3__namespace.select(this).attr('stroke-dashoffset', null).attr('stroke-dasharray', null).attr('transform', null);
        });
      }

      var moveThisPolygon = growEnteringEdges && tag == 'polygon' && isEdgeElement(data) && data.offset && data.parent.children[3].tag == 'path';

      if (moveThisPolygon) {
        var edgePath = d3__namespace.select(element.node().parentNode.querySelector("path"));
        var p0 = edgePath.node().getPointAtLength(0);
        var p1 = edgePath.node().getPointAtLength(data.totalLength);
        var p2 = edgePath.node().getPointAtLength(data.totalLength - 1);
        var angle1 = Math.atan2(p1.y - p2.y, p1.x - p2.x) * 180 / Math.PI;
        var x = p0.x - p1.x + data.offset.x;
        var y = p0.y - p1.y + data.offset.y;
        element.attr('transform', 'translate(' + x + ',' + y + ')');
        elementTransition.attrTween("transform", function () {
          return function (t) {
            var p = edgePath.node().getPointAtLength(data.totalLength * t);
            var p2 = edgePath.node().getPointAtLength(data.totalLength * t + 1);
            var angle = Math.atan2(p2.y - p.y, p2.x - p.x) * 180 / Math.PI - angle1;
            x = p.x - p1.x + data.offset.x * (1 - t);
            y = p.y - p1.y + data.offset.y * (1 - t);
            return 'translate(' + x + ',' + y + ') rotate(' + angle + ' ' + p1.x + ' ' + p1.y + ')';
          };
        }).on("start", function () {
          d3__namespace.select(this).style('opacity', null);
        }).on("end", function () {
          d3__namespace.select(this).attr('transform', null);
        });
      }

      var tweenThisPath = tweenPaths && transitionInstance && tag == 'path' && element.attr('d') != null;

      for (var _i2 = 0, _Object$keys2 = Object.keys(attributes); _i2 < _Object$keys2.length; _i2++) {
        var attributeName = _Object$keys2[_i2];
        var attributeValue = attributes[attributeName];

        if (tweenThisPath && attributeName == 'd') {
          var points = (data.alternativeOld || data).points;

          if (points) {
            elementTransition.attrTween("d", pathTween(points, attributeValue));
          }
        } else {
          if (attributeName == 'transform' && data.translation) {
            if (transitionInstance) {
              var onEnd = elementTransition.on("end");
              elementTransition.on("start", function () {
                if (graphvizInstance._zoomBehavior) {
                  // Update the transform to transition to, just before the transition starts
                  // in order to catch changes between the transition scheduling to its start.
                  elementTransition.tween("attr.transform", function () {
                    var node = this;
                    return function (t) {
                      node.setAttribute("transform", d3Interpolate.interpolateTransformSvg(d3Zoom.zoomTransform(graphvizInstance._zoomSelection.node()).toString(), getTranslatedZoomTransform.call(graphvizInstance, element).toString())(t));
                    };
                  });
                }
              }).on("end", function () {
                onEnd.call(this); // Update the zoom transform to the new translated transform

                if (graphvizInstance._zoomBehavior) {
                  translateZoomBehaviorTransform.call(graphvizInstance, element);
                }
              });
            } else {
              if (graphvizInstance._zoomBehavior) {
                // Update the transform attribute to set with the current pan translation
                translateZoomBehaviorTransform.call(graphvizInstance, element);
                attributeValue = getTranslatedZoomTransform.call(graphvizInstance, element).toString();
              }
            }
          }

          elementTransition.attr(attributeName, attributeValue);
        }
      }

      if (convertShape) {
        elementTransition.on("end", function (d, i, nodes) {
          pathElement = d3__namespace.select(this);
          var newElement = replaceElement(pathElement, d);
          newElement.data([d], function () {
            return d.key;
          });
        });
      }

      if (data.text) {
        elementTransition.text(data.text);
      }

      insertChildren(element);
    }

    var root = this._selection;

    if (transitionInstance != null) {
      // Ensure original SVG shape elements are restored after transition before rendering new graph
      var jobs = this._jobs;

      if (graphvizInstance._active) {
        jobs.push(null);
        return this;
      } else {
        root.transition(transitionInstance).transition().duration(0).on("end", function () {
          graphvizInstance._active = false;

          if (jobs.length != 0) {
            jobs.shift();
            graphvizInstance.render();
          }
        });
        this._active = true;
      }
    }

    if (transitionInstance != null) {
      root.transition(transitionInstance).on("start", function () {
        graphvizInstance._dispatch.call('transitionStart', graphvizInstance);
      }).on("end", function () {
        graphvizInstance._dispatch.call('transitionEnd', graphvizInstance);
      }).transition().duration(0).on("start", function () {
        graphvizInstance._dispatch.call('restoreEnd', graphvizInstance);

        graphvizInstance._dispatch.call('end', graphvizInstance);

        if (callback) {
          callback.call(graphvizInstance);
        }
      });
    }

    var data = this._data;
    var svg = root.selectAll("svg").data([data], function (d) {
      return d.key;
    });
    svg = svg.enter().append("svg").merge(svg);
    attributeElement.call(svg.node(), data);

    if (this._options.zoom && !this._zoomBehavior) {
      createZoomBehavior.call(this);
    }

    graphvizInstance._dispatch.call('renderEnd', graphvizInstance);

    if (transitionInstance == null) {
      this._dispatch.call('end', this);

      if (callback) {
        callback.call(this);
      }
    }

    return this;
  }

  function convertToPathData(originalData, guideData) {
    if (originalData.tag == 'polygon') {
      var newData = shallowCopyObject(originalData);
      newData.tag = 'path';
      var originalAttributes = originalData.attributes;
      var newAttributes = shallowCopyObject(originalAttributes);
      var newPointsString = originalAttributes.points;

      if (guideData.tag == 'polygon') {
        var bbox = originalData.bbox;
        bbox.cx = bbox.x + bbox.width / 2;
        bbox.cy = bbox.y + bbox.height / 2;
        var pointsString = originalAttributes.points;
        var pointStrings = pointsString.split(' ');
        var normPoints = pointStrings.map(function (p) {
          var xy = p.split(',');
          return [xy[0] - bbox.cx, xy[1] - bbox.cy];
        });
        var x0 = normPoints[normPoints.length - 1][0];
        var y0 = normPoints[normPoints.length - 1][1];

        for (var i = 0; i < normPoints.length; i++, x0 = x1, y0 = y1) {
          var x1 = normPoints[i][0];
          var y1 = normPoints[i][1];
          var dx = x1 - x0;
          var dy = y1 - y0;

          if (dy == 0) {
            continue;
          } else {
            var x2 = x0 - y0 * dx / dy;
          }

          if (0 <= x2 && x2 < Infinity && (x0 <= x2 && x2 <= x1 || x1 <= x2 && x2 <= x0)) {
            break;
          }
        }

        var newPointStrings = [[bbox.cx + x2, bbox.cy + 0].join(',')];
        newPointStrings = newPointStrings.concat(pointStrings.slice(i));
        newPointStrings = newPointStrings.concat(pointStrings.slice(0, i));
        newPointsString = newPointStrings.join(' ');
      }

      newAttributes['d'] = 'M' + newPointsString + 'z';
      delete newAttributes.points;
      newData.attributes = newAttributes;
    } else
      /* if (originalData.tag == 'ellipse') */
      {
        var newData = shallowCopyObject(originalData);
        newData.tag = 'path';
        var originalAttributes = originalData.attributes;
        var newAttributes = shallowCopyObject(originalAttributes);
        var cx = originalAttributes.cx;
        var cy = originalAttributes.cy;
        var rx = originalAttributes.rx;
        var ry = originalAttributes.ry;

        if (guideData.tag == 'polygon') {
          var bbox = guideData.bbox;
          bbox.cx = bbox.x + bbox.width / 2;
          bbox.cy = bbox.y + bbox.height / 2;
          var p = guideData.attributes.points.split(' ')[0].split(',');
          var sx = p[0];
          var sy = p[1];
          var dx = sx - bbox.cx;
          var dy = sy - bbox.cy;
          var l = Math.sqrt(Math.pow(dx, 2) + Math.pow(dy, 2));
          var cosA = dx / l;
          var sinA = -dy / l;
        } else {
          // if (guideData.tag == 'path') {
          // FIXME: add support for getting start position from path
          var cosA = 1;
          var sinA = 0;
        }

        var x1 = rx * cosA;
        var y1 = -ry * sinA;
        var x2 = rx * -cosA;
        var y2 = -ry * -sinA;
        var dx = x2 - x1;
        var dy = y2 - y1;
        newAttributes['d'] = 'M ' + cx + ' ' + cy + ' m ' + x1 + ',' + y1 + ' a ' + rx + ',' + ry + ' 0 1,0 ' + dx + ',' + dy + ' a ' + rx + ',' + ry + ' 0 1,0 ' + -dx + ',' + -dy + 'z';
        delete newAttributes.cx;
        delete newAttributes.cy;
        delete newAttributes.rx;
        delete newAttributes.ry;
        newData.attributes = newAttributes;
      }

    return newData;
  }

  function translatePointsAttribute(pointsString, x, y) {
    var pointStrings = pointsString.split(' ');
    var points = pointStrings.map(function (p) {
      return p.split(',');
    });
    var points = pointStrings.map(function (p) {
      return [roundTo2Decimals(+x + +p.split(',')[0]), roundTo2Decimals(+y + +p.split(',')[1])];
    });
    var pointStrings = points.map(function (p) {
      return p.join(',');
    });
    var pointsString = pointStrings.join(' ');
    return pointsString;
  }

  function translateDAttribute(d, x, y) {
    var pointStrings = d.split(/[A-Z ]/);
    pointStrings.shift();
    var commands = d.split(/[^[A-Z ]+/);
    var points = pointStrings.map(function (p) {
      return p.split(',');
    });
    var points = pointStrings.map(function (p) {
      return [roundTo2Decimals(+x + +p.split(',')[0]), roundTo2Decimals(+y + +p.split(',')[1])];
    });
    var pointStrings = points.map(function (p) {
      return p.join(',');
    });
    d = commands.reduce(function (arr, v, i) {
      return arr.concat(v, pointStrings[i]);
    }, []).join('');
    return d;
  }

  function initViz() {
    var _this = this; // force JIT compilation of Viz.js


    try {
      wasm.graphviz.layout("", "svg", "dot").then(function () {
        wasm.graphvizSync().then(function (graphviz1) {
          _this.layoutSync = graphviz1.layout.bind(graphviz1);

          if (_this._worker == null) {
            _this._dispatch.call("initEnd", _this);
          }

          if (_this._afterInit) {
            _this._afterInit();
          }
        });
      });
    } catch (error) {}

    if (this._worker != null) {
      var vizURL = this._vizURL;
      var graphvizInstance = this;

      this._workerPort.onmessage = function (event) {
        var callback = graphvizInstance._workerCallbacks.shift();

        callback.call(graphvizInstance, event);
      };

      if (!vizURL.match(/^https?:\/\/|^\/\//i)) {
        // Local URL. Prepend with local domain to be usable in web worker
        vizURL = new window.URL(vizURL, document.location.href).href;
      }

      postMessage.call(this, {
        dot: "",
        engine: 'dot',
        vizURL: vizURL
      }, function (event) {
        switch (event.data.type) {
          case "init":
            graphvizInstance._dispatch.call("initEnd", this);

            break;
        }
      });
    }
  }

  function postMessage(message, callback) {
    this._workerCallbacks.push(callback);

    this._workerPort.postMessage(message);
  }

  function layout(src, engine, vizOptions, callback) {
    this._worker;

    if (this._worker) {
      postMessage.call(this, {
        dot: src,
        engine: engine,
        options: vizOptions
      }, function (event) {
        callback.call(this, event.data);
      });
    } else {
      try {
        var svgDoc = this.layoutSync(src, "svg", engine, vizOptions);
        callback.call(this, {
          type: 'done',
          svg: svgDoc
        });
      } catch (error) {
        callback.call(this, {
          type: 'error',
          error: error.message
        });
      }
    }
  }

  function dot(src, callback) {
    var graphvizInstance = this;
    this._worker;
    var engine = this._options.engine;
    var images = this._images;

    this._dispatch.call("start", this);

    this._busy = true;

    this._dispatch.call("layoutStart", this);

    var vizOptions = {
      images: images
    };

    if (!this._worker && this.layoutSync == null) {
      this._afterInit = this.dot.bind(this, src, callback);
      return this;
    }

    this.layout(src, engine, vizOptions, function (data) {
      switch (data.type) {
        case "error":
          if (graphvizInstance._onerror) {
            graphvizInstance._onerror(data.error);
          } else {
            throw data.error.message;
          }

          break;

        case "done":
          var svgDoc = data.svg;
          layoutDone.call(this, svgDoc, callback);
          break;
      }
    });
    return this;
  }

  function layoutDone(svgDoc, callback) {
    var keyMode = this._options.keyMode;
    var tweenPaths = this._options.tweenPaths;
    var tweenShapes = this._options.tweenShapes;

    if (typeof this._options.tweenPrecision == 'string' && this._options.tweenPrecision.includes('%')) {
      var tweenPrecision = +this._options.tweenPrecision.split('%')[0] / 100;

      var tweenPrecisionIsRelative = this._options.tweenPrecision.includes('%');
    } else {
      var tweenPrecision = this._options.tweenPrecision;
      var tweenPrecisionIsRelative = false;
    }

    var growEnteringEdges = this._options.growEnteringEdges;
    var dictionary = {};
    var prevDictionary = this._dictionary || {};
    var nodeDictionary = {};
    var prevNodeDictionary = this._nodeDictionary || {};

    function setKey(datum, index) {
      var tag = datum.tag;

      if (keyMode == 'index') {
        datum.key = index;
      } else if (tag[0] != '#') {
        if (keyMode == 'id') {
          datum.key = datum.attributes.id;
        } else if (keyMode == 'title') {
          var title = datum.children.find(function (childData) {
            return childData.tag == 'title';
          });

          if (title) {
            if (title.children.length > 0) {
              datum.key = title.children[0].text;
            } else {
              datum.key = '';
            }
          }
        }
      }

      if (datum.key == null) {
        if (tweenShapes) {
          if (tag == 'ellipse' || tag == 'polygon') {
            tag = 'path';
          }
        }

        datum.key = tag + '-' + index;
      }
    }

    function setId(datum, parentData) {
      var id = (parentData ? parentData.id + '.' : '') + datum.key;
      datum.id = id;
    }

    function addToDictionary(datum) {
      dictionary[datum.id] = datum;
    }

    function calculateAlternativeShapeData(datum, prevDatum) {
      if (tweenShapes && datum.id in prevDictionary) {
        if ((prevDatum.tag == 'polygon' || prevDatum.tag == 'ellipse' || prevDatum.tag == 'path') && (prevDatum.tag != datum.tag || datum.tag == 'polygon')) {
          if (prevDatum.tag != 'path') {
            datum.alternativeOld = convertToPathData(prevDatum, datum);
          }

          if (datum.tag != 'path') {
            datum.alternativeNew = convertToPathData(datum, prevDatum);
          }
        }
      }
    }

    function calculatePathTweenPoints(datum, prevDatum) {
      if (tweenPaths && prevDatum && (prevDatum.tag == 'path' || datum.alternativeOld && datum.alternativeOld.tag == 'path')) {
        var attribute_d = (datum.alternativeNew || datum).attributes.d;

        if (datum.alternativeOld) {
          var oldNode = createElementWithAttributes(datum.alternativeOld);
        } else {
          var oldNode = createElementWithAttributes(prevDatum);
        }

        (datum.alternativeOld || (datum.alternativeOld = {})).points = pathTweenPoints(oldNode, attribute_d, tweenPrecision, tweenPrecisionIsRelative);
      }
    }

    function postProcessDataPass1Local(datum) {
      var index = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;
      var parentData = arguments.length > 2 ? arguments[2] : undefined;
      setKey(datum, index);
      setId(datum, parentData);
      var id = datum.id;
      var prevDatum = prevDictionary[id];
      addToDictionary(datum);
      calculateAlternativeShapeData(datum, prevDatum);
      calculatePathTweenPoints(datum, prevDatum);
      var childTagIndexes = {};
      datum.children.forEach(function (childData) {
        var childTag = childData.tag;

        if (childTag == 'ellipse' || childTag == 'polygon') {
          childTag = 'path';
        }

        if (childTagIndexes[childTag] == null) {
          childTagIndexes[childTag] = 0;
        }

        var childIndex = childTagIndexes[childTag]++;
        postProcessDataPass1Local(childData, childIndex, datum);
      });
    }

    function addToNodeDictionary(datum) {
      var tag = datum.tag;

      if (growEnteringEdges && datum.parent) {
        if (datum.parent.attributes["class"] == 'node') {
          if (tag == 'title') {
            if (datum.children.length > 0) {
              var child = datum.children[0];
              var nodeId = child.text;
            } else {
              var nodeId = '';
            }

            nodeDictionary[nodeId] = datum.parent;
          }
        }
      }
    }

    function extractGrowingEdgesData(datum) {
      var id = datum.id;
      var tag = datum.tag;
      var prevDatum = prevDictionary[id];

      if (growEnteringEdges && !prevDatum && datum.parent) {
        if (isEdgeElement(datum)) {
          if (tag == 'path' || tag == 'polygon') {
            if (tag == 'polygon') {
              var path = datum.parent.children.find(function (e) {
                return e.tag == 'path';
              });

              if (path) {
                datum.totalLength = path.totalLength;
              }
            }

            var title = getEdgeTitle(datum);
            var child = title.children[0];
            var nodeIds = child.text.split('->');

            if (nodeIds.length != 2) {
              nodeIds = child.text.split('--');
            }

            var startNodeId = nodeIds[0];
            var startNode = nodeDictionary[startNodeId];
            var prevStartNode = prevNodeDictionary[startNodeId];

            if (prevStartNode) {
              var i = startNode.children.findIndex(function (element, index) {
                return element.tag == 'g';
              });

              if (i >= 0) {
                var j = startNode.children[i].children.findIndex(function (element, index) {
                  return element.tag == 'a';
                });
                startNode = startNode.children[i].children[j];
              }

              var i = prevStartNode.children.findIndex(function (element, index) {
                return element.tag == 'g';
              });

              if (i >= 0) {
                var j = prevStartNode.children[i].children.findIndex(function (element, index) {
                  return element.tag == 'a';
                });
                prevStartNode = prevStartNode.children[i].children[j];
              }

              var startShapes = startNode.children;

              for (var i = 0; i < startShapes.length; i++) {
                if (startShapes[i].tag == 'polygon' || startShapes[i].tag == 'ellipse' || startShapes[i].tag == 'path' || startShapes[i].tag == 'text') {
                  var startShape = startShapes[i];
                  break;
                }
              }

              var prevStartShapes = prevStartNode.children;

              for (var i = 0; i < prevStartShapes.length; i++) {
                if (prevStartShapes[i].tag == 'polygon' || prevStartShapes[i].tag == 'ellipse' || prevStartShapes[i].tag == 'path' || prevStartShapes[i].tag == 'text') {
                  var prevStartShape = prevStartShapes[i];
                  break;
                }
              }

              if (prevStartShape && startShape) {
                datum.offset = {
                  x: prevStartShape.center.x - startShape.center.x,
                  y: prevStartShape.center.y - startShape.center.y
                };
              } else {
                datum.offset = {
                  x: 0,
                  y: 0
                };
              }
            }
          }
        }
      }
    }

    function postProcessDataPass2Global(datum) {
      addToNodeDictionary(datum);
      extractGrowingEdgesData(datum);
      datum.children.forEach(function (childData) {
        postProcessDataPass2Global(childData);
      });
    }

    this._dispatch.call("layoutEnd", this);

    var newDoc = d3__namespace.select(document.createDocumentFragment()).append('div');
    var parser = new window.DOMParser();
    var doc = parser.parseFromString(svgDoc, "image/svg+xml");
    newDoc.append(function () {
      return doc.documentElement;
    });
    var newSvg = newDoc.select('svg');
    var data = extractAllElementsData(newSvg);

    this._dispatch.call('dataExtractEnd', this);

    postProcessDataPass1Local(data);

    this._dispatch.call('dataProcessPass1End', this);

    postProcessDataPass2Global(data);

    this._dispatch.call('dataProcessPass2End', this);

    this._data = data;
    this._dictionary = dictionary;
    this._nodeDictionary = nodeDictionary;

    this._extractData = function (element, childIndex, parentData) {
      var data = extractAllElementsData(element);
      postProcessDataPass1Local(data, childIndex, parentData);
      postProcessDataPass2Global(data);
      return data;
    };

    this._busy = false;

    this._dispatch.call('dataProcessEnd', this);

    if (callback) {
      callback.call(this);
    }

    if (this._queue.length > 0) {
      var job = this._queue.shift();

      job.call(this);
    }
  }

  function renderDot(src, callback) {
    var graphvizInstance = this;
    this.dot(src, render);

    function render() {
      graphvizInstance.render(callback);
    }

    return this;
  }

  function transition(name) {
    if (name instanceof Function) {
      this._transitionFactory = name;
    } else {
      this._transition = d3Transition.transition(name);
    }

    return this;
  }

  function active(name) {
    var root = this._selection;
    var svg = root.selectWithoutDataPropagation("svg");

    if (svg.size() != 0) {
      return d3Transition.active(svg.node(), name);
    } else {
      return null;
    }
  }

  function options(options) {
    if (typeof options == 'undefined') {
      return Object.assign({}, this._options);
    } else {
      for (var _i = 0, _Object$keys = Object.keys(options); _i < _Object$keys.length; _i++) {
        var option = _Object$keys[_i];
        this._options[option] = options[option];
      }

      return this;
    }
  }

  function width(width) {
    this._options.width = width;
    return this;
  }

  function height(height) {
    this._options.height = height;
    return this;
  }

  function scale(scale) {
    this._options.scale = scale;
    return this;
  }

  function fit(fit) {
    this._options.fit = fit;
    return this;
  }

  function attributer(callback) {
    this._attributer = callback;
    return this;
  }

  function engine(engine) {
    this._options.engine = engine;
    return this;
  }

  function images(path, width, height) {
    this._images.push({
      path: path,
      width: width,
      height: height
    });

    return this;
  }

  function keyMode(keyMode) {
    if (!this._keyModes.has(keyMode)) {
      throw Error('Illegal keyMode: ' + keyMode);
    }

    if (keyMode != this._options.keyMode && this._data != null) {
      throw Error('Too late to change keyMode');
    }

    this._options.keyMode = keyMode;
    return this;
  }

  function fade(enable) {
    this._options.fade = enable;
    return this;
  }

  function tweenPaths(enable) {
    this._options.tweenPaths = enable;
    return this;
  }

  function tweenShapes(enable) {
    this._options.tweenShapes = enable;

    if (enable) {
      this._options.tweenPaths = true;
    }

    return this;
  }

  function convertEqualSidedPolygons(enable) {
    this._options.convertEqualSidedPolygons = enable;
    return this;
  }

  function tweenPrecision(precision) {
    this._options.tweenPrecision = precision;
    return this;
  }

  function growEnteringEdges(enable) {
    this._options.growEnteringEdges = enable;
    return this;
  }

  function on(typenames, callback) {
    this._dispatch.on(typenames, callback);

    return this;
  }

  function onerror(callback) {
    this._onerror = callback;
    return this;
  }

  function logEvents(enable) {
    var _this = this;

    var t0 = Date.now();
    var times = {};
    var eventTypes = this._eventTypes;
    var maxEventTypeLength = Math.max.apply(Math, _toConsumableArray(eventTypes.map(function (eventType) {
      return eventType.length;
    })));

    var _loop = function _loop(i) {
      var eventType = eventTypes[i];
      times[eventType] = [];
      graphvizInstance = _this;

      _this.on(eventType + '.log', enable ? function () {
        var t = Date.now();
        var seqNo = times[eventType].length;
        times[eventType].push(t);
        var string = '';
        string += 'Event ';
        string += d3Format.format(' >2')(i) + ' ';
        string += eventType + ' '.repeat(maxEventTypeLength - eventType.length);
        string += d3Format.format(' >5')(t - t0) + ' ';

        if (eventType != 'initEnd') {
          string += d3Format.format(' >5')(t - times['start'][seqNo]);
        }

        if (eventType == 'dataProcessEnd') {
          string += ' prepare                 ' + d3Format.format(' >5')(t - times['layoutEnd'][seqNo]);
        }

        if (eventType == 'renderEnd' && graphvizInstance._transition) {
          string += ' transition start margin ' + d3Format.format(' >5')(graphvizInstance._transition.delay() - (t - times['renderStart'][seqNo]));
          expectedDelay = graphvizInstance._transition.delay();
          expectedDuration = graphvizInstance._transition.duration();
        }

        if (eventType == 'transitionStart') {
          var actualDelay = t - times['renderStart'][seqNo];
          string += ' transition delay        ' + d3Format.format(' >5')(t - times['renderStart'][seqNo]);
          string += ' expected ' + d3Format.format(' >5')(expectedDelay);
          string += ' diff ' + d3Format.format(' >5')(actualDelay - expectedDelay);
        }

        if (eventType == 'transitionEnd') {
          var actualDuration = t - times['transitionStart'][seqNo];
          string += ' transition duration     ' + d3Format.format(' >5')(actualDuration);
          string += ' expected ' + d3Format.format(' >5')(expectedDuration);
          string += ' diff ' + d3Format.format(' >5')(actualDuration - expectedDuration);
        }

        console.log(string);
        t0 = t;
      } : null);
    };

    for (var i = 0; i < eventTypes.length; i++) {
      var graphvizInstance;
      var expectedDelay;
      var expectedDuration;

      _loop(i);
    }

    return this;
  }

  function destroy() {
    delete this._selection.node().__graphviz__;

    if (this._worker) {
      this._workerPortClose();
    }

    return this;
  }

  function rotate(x, y, cosA, sinA) {
    // (x + j * y) * (cosA + j * sinA) = x * cosA - y * sinA + j * (x * sinA + y * cosA)
    y = -y;
    sinA = -sinA;
    var _ref = [x * cosA - y * sinA, x * sinA + y * cosA];
    x = _ref[0];
    y = _ref[1];
    y = -y;
    return [x, y];
  }

  function drawEdge(x1, y1, x2, y2, attributes) {
    var options = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : {};
    attributes = Object.assign({}, attributes);

    if (attributes.style && attributes.style.includes('invis')) {
      var newEdge = d3__namespace.select(null);
    } else {
      var root = this._selection;
      var svg = root.selectWithoutDataPropagation("svg");
      var graph0 = svg.selectWithoutDataPropagation("g");
      var newEdge0 = createEdge.call(this, attributes);
      var edgeData = extractAllElementsData(newEdge0);
      var newEdge = graph0.append('g').data([edgeData]);
      attributeElement.call(newEdge.node(), edgeData);

      _updateEdge.call(this, newEdge, x1, y1, x2, y2, attributes, options);
    }

    this._drawnEdge = {
      g: newEdge,
      x1: x1,
      y1: y1,
      x2: x2,
      y2: y2,
      attributes: attributes
    };
    return this;
  }

  function updateDrawnEdge(x1, y1, x2, y2) {
    var attributes = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {};
    var options = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : {};

    if (!this._drawnEdge) {
      throw Error('No edge has been drawn');
    }

    var edge = this._drawnEdge.g;
    attributes = Object.assign(this._drawnEdge.attributes, attributes);
    this._drawnEdge.x1 = x1;
    this._drawnEdge.y1 = y1;
    this._drawnEdge.x2 = x2;
    this._drawnEdge.y2 = y2;

    if (edge.empty() && !(attributes.style && attributes.style.includes('invis'))) {
      var root = this._selection;
      var svg = root.selectWithoutDataPropagation("svg");
      var graph0 = svg.selectWithoutDataPropagation("g");
      var edge = graph0.append('g');
      this._drawnEdge.g = edge;
    }

    if (!edge.empty()) {
      _updateEdge.call(this, edge, x1, y1, x2, y2, attributes, options);
    }

    return this;
  }

  function _updateEdge(edge, x1, y1, x2, y2, attributes, options) {
    var newEdge = createEdge.call(this, attributes);
    var edgeData = extractAllElementsData(newEdge);
    edge.data([edgeData]);
    attributeElement.call(edge.node(), edgeData);

    _moveEdge(edge, x1, y1, x2, y2, attributes, options);
  }

  function _moveEdge(edge, x1, y1, x2, y2, attributes, options) {
    var shortening = options.shortening || 0;
    var arrowHeadLength = 10;
    var arrowHeadWidth = 7;
    var margin = 0.1;
    var arrowHeadPoints = [[0, -arrowHeadWidth / 2], [arrowHeadLength, 0], [0, arrowHeadWidth / 2], [0, -arrowHeadWidth / 2]];
    var dx = x2 - x1;
    var dy = y2 - y1;
    var length = Math.sqrt(dx * dx + dy * dy);

    if (length == 0) {
      var cosA = 1;
      var sinA = 0;
    } else {
      var cosA = dx / length;
      var sinA = dy / length;
    }

    x2 = x1 + (length - shortening - arrowHeadLength - margin) * cosA;
    y2 = y1 + (length - shortening - arrowHeadLength - margin) * sinA;

    if (attributes.URL || attributes.tooltip) {
      var a = edge.selectWithoutDataPropagation("g").selectWithoutDataPropagation("a");
      var line = a.selectWithoutDataPropagation("path");
      var arrowHead = a.selectWithoutDataPropagation("polygon");
    } else {
      var line = edge.selectWithoutDataPropagation("path");
      var arrowHead = edge.selectWithoutDataPropagation("polygon");
    }

    var path1 = d3Path.path();
    path1.moveTo(x1, y1);
    path1.lineTo(x2, y2);
    line.attr("d", path1);
    x2 = x1 + (length - shortening - arrowHeadLength) * cosA;
    y2 = y1 + (length - shortening - arrowHeadLength) * sinA;

    for (var i = 0; i < arrowHeadPoints.length; i++) {
      var point = arrowHeadPoints[i];
      arrowHeadPoints[i] = rotate(point[0], point[1], cosA, sinA);
    }

    for (var i = 0; i < arrowHeadPoints.length; i++) {
      var point = arrowHeadPoints[i];
      arrowHeadPoints[i] = [x2 + point[0], y2 + point[1]];
    }

    var allPoints = [];

    for (var i = 0; i < arrowHeadPoints.length; i++) {
      var point = arrowHeadPoints[i];
      allPoints.push(point.join(','));
    }

    var pointsAttr = allPoints.join(' ');
    arrowHead.attr("points", pointsAttr);
    return this;
  }

  function moveDrawnEdgeEndPoint(x2, y2) {
    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};

    if (!this._drawnEdge) {
      throw Error('No edge has been drawn');
    }

    var edge = this._drawnEdge.g;
    var x1 = this._drawnEdge.x1;
    var y1 = this._drawnEdge.y1;
    var attributes = this._drawnEdge.attributes;
    this._drawnEdge.x2 = x2;
    this._drawnEdge.y2 = y2;

    _moveEdge(edge, x1, y1, x2, y2, attributes, options);

    return this;
  }

  function removeDrawnEdge() {
    if (!this._drawnEdge) {
      return this;
    }

    var edge = this._drawnEdge.g;
    edge.remove();
    this._drawnEdge = null;
    return this;
  }

  function insertDrawnEdge(name) {
    if (!this._drawnEdge) {
      throw Error('No edge has been drawn');
    }

    var edge = this._drawnEdge.g;

    if (edge.empty()) {
      return this;
    }

    this._drawnEdge.attributes;
    var title = edge.selectWithoutDataPropagation("title");
    title.text(name);
    var root = this._selection;
    var svg = root.selectWithoutDataPropagation("svg");
    var graph0 = svg.selectWithoutDataPropagation("g");
    var graph0Datum = graph0.datum();

    var edgeData = this._extractData(edge, graph0Datum.children.length, graph0.datum());

    graph0Datum.children.push(edgeData);
    insertAllElementsData(edge, edgeData);
    this._drawnEdge = null;
    return this;
  }

  function drawnEdgeSelection() {
    if (this._drawnEdge) {
      return this._drawnEdge.g;
    } else {
      return d3__namespace.select(null);
    }
  }

  function createEdge(attributes) {
    var attributesString = '';

    for (var _i = 0, _Object$keys = Object.keys(attributes); _i < _Object$keys.length; _i++) {
      var name = _Object$keys[_i];

      if (attributes[name] != null) {
        attributesString += ' "' + name + '"="' + attributes[name] + '"';
      }
    }

    var dotSrc = 'digraph {a -> b [' + attributesString + ']}';
    var svgDoc = this.layoutSync(dotSrc, 'svg', 'dot');
    var parser = new window.DOMParser();
    var doc = parser.parseFromString(svgDoc, "image/svg+xml");
    var newDoc = d3__namespace.select(document.createDocumentFragment()).append(function () {
      return doc.documentElement;
    });
    var edge = newDoc.select('.edge');
    return edge;
  }

  function drawNode(x, y, nodeId) {
    var attributes = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};
    var options = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {};
    attributes = Object.assign({}, attributes);

    if (attributes.style && attributes.style.includes('invis')) {
      var newNode = d3__namespace.select(null);
    } else {
      var root = this._selection;
      var svg = root.selectWithoutDataPropagation("svg");
      var graph0 = svg.selectWithoutDataPropagation("g");
      var newNode0 = createNode.call(this, nodeId, attributes);
      var nodeData = extractAllElementsData(newNode0);
      var newNode = graph0.append('g').data([nodeData]);
      attributeElement.call(newNode.node(), nodeData);

      _updateNode.call(this, newNode, x, y, nodeId, attributes, options);
    }

    this._drawnNode = {
      g: newNode,
      nodeId: nodeId,
      x: x,
      y: y,
      attributes: attributes
    };
    return this;
  }

  function updateDrawnNode(x, y, nodeId) {
    var attributes = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};
    var options = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {};

    if (!this._drawnNode) {
      throw Error('No node has been drawn');
    }

    var node = this._drawnNode.g;

    if (nodeId == null) {
      nodeId = this._drawnNode.nodeId;
    }

    attributes = Object.assign(this._drawnNode.attributes, attributes);
    this._drawnNode.nodeId = nodeId;
    this._drawnNode.x = x;
    this._drawnNode.y = y;

    if (node.empty() && !(attributes.style && attributes.style.includes('invis'))) {
      var root = this._selection;
      var svg = root.selectWithoutDataPropagation("svg");
      var graph0 = svg.selectWithoutDataPropagation("g");
      var node = graph0.append('g');
      this._drawnNode.g = node;
    }

    if (!node.empty()) {
      _updateNode.call(this, node, x, y, nodeId, attributes, options);
    }

    return this;
  }

  function _updateNode(node, x, y, nodeId, attributes, options) {
    var newNode = createNode.call(this, nodeId, attributes);
    var nodeData = extractAllElementsData(newNode);
    node.data([nodeData]);
    attributeElement.call(node.node(), nodeData);

    _moveNode(node, x, y, attributes);

    return this;
  }

  function _moveNode(node, x, y, attributes, options) {
    if (attributes.URL || attributes.tooltip) {
      var subParent = node.selectWithoutDataPropagation("g").selectWithoutDataPropagation("a");
    } else {
      var subParent = node;
    }

    var svgElements = subParent.selectAll('ellipse,polygon,path,polyline');
    var text = node.selectWithoutDataPropagation("text");

    if (svgElements.size() != 0) {
      var bbox = svgElements.node().getBBox();
      bbox.cx = bbox.x + bbox.width / 2;
      bbox.cy = bbox.y + bbox.height / 2;
    } else if (text.size() != 0) {
      bbox = {
        x: +text.attr('x'),
        y: +text.attr('y'),
        width: 0,
        height: 0,
        cx: +text.attr('x'),
        cy: +text.attr('y')
      };
    }

    svgElements.each(function (data, index) {
      var svgElement = d3__namespace.select(this);

      if (svgElement.attr("cx")) {
        svgElement.attr("cx", roundTo2Decimals(x)).attr("cy", roundTo2Decimals(y));
      } else if (svgElement.attr("points")) {
        var pointsString = svgElement.attr('points').trim();
        svgElement.attr("points", translatePointsAttribute(pointsString, x - bbox.cx, y - bbox.cy));
      } else {
        var d = svgElement.attr('d');
        svgElement.attr("d", translateDAttribute(d, x - bbox.cx, y - bbox.cy));
      }
    });

    if (text.size() != 0) {
      text.attr("x", roundTo2Decimals(+text.attr("x") + x - bbox.cx)).attr("y", roundTo2Decimals(+text.attr("y") + y - bbox.cy));
    }

    return this;
  }

  function moveDrawnNode(x, y) {
    if (!this._drawnNode) {
      throw Error('No node has been drawn');
    }

    var node = this._drawnNode.g;
    var attributes = this._drawnNode.attributes;
    this._drawnNode.x = x;
    this._drawnNode.y = y;

    if (!node.empty()) {
      _moveNode(node, x, y, attributes);
    }

    return this;
  }

  function removeDrawnNode() {
    if (!this._drawnNode) {
      return this;
    }

    var node = this._drawnNode.g;

    if (!node.empty()) {
      node.remove();
    }

    this._drawnNode = null;
    return this;
  }

  function insertDrawnNode(nodeId) {
    if (!this._drawnNode) {
      throw Error('No node has been drawn');
    }

    if (nodeId == null) {
      nodeId = this._drawnNode.nodeId;
    }

    var node = this._drawnNode.g;

    if (node.empty()) {
      return this;
    }

    var attributes = this._drawnNode.attributes;
    var title = node.selectWithoutDataPropagation("title");
    title.text(nodeId);

    if (attributes.URL || attributes.tooltip) {
      var ga = node.selectWithoutDataPropagation("g");
      var a = ga.selectWithoutDataPropagation("a");
      a.selectWithoutDataPropagation('ellipse,polygon,path,polyline');
      var text = a.selectWithoutDataPropagation('text');
    } else {
      node.selectWithoutDataPropagation('ellipse,polygon,path,polyline');
      var text = node.selectWithoutDataPropagation('text');
    }

    text.text(attributes.label || nodeId);
    var root = this._selection;
    var svg = root.selectWithoutDataPropagation("svg");
    var graph0 = svg.selectWithoutDataPropagation("g");
    var graph0Datum = graph0.datum();

    var nodeData = this._extractData(node, graph0Datum.children.length, graph0.datum());

    graph0Datum.children.push(nodeData);
    insertAllElementsData(node, nodeData);
    this._drawnNode = null;
    return this;
  }

  function drawnNodeSelection() {
    if (this._drawnNode) {
      return this._drawnNode.g;
    } else {
      return d3__namespace.select(null);
    }
  }

  function createNode(nodeId, attributes) {
    var attributesString = '';

    for (var _i = 0, _Object$keys = Object.keys(attributes); _i < _Object$keys.length; _i++) {
      var name = _Object$keys[_i];

      if (attributes[name] != null) {
        attributesString += ' "' + name + '"="' + attributes[name] + '"';
      }
    }

    var dotSrc = 'graph {"' + nodeId + '" [' + attributesString + ']}';
    var svgDoc = this.layoutSync(dotSrc, 'svg', 'dot');
    var parser = new window.DOMParser();
    var doc = parser.parseFromString(svgDoc, "image/svg+xml");
    var newDoc = d3__namespace.select(document.createDocumentFragment()).append(function () {
      return doc.documentElement;
    });
    var node = newDoc.select('.node');
    return node;
  }
  /* This file is excluded from coverage because the intrumented code
   * translates "self" which gives a reference error.
   */

  /* istanbul ignore next */


  function workerCodeBody(port) {
    self.document = {}; // Workaround for "ReferenceError: document is not defined" in hpccWasm

    port.addEventListener('message', function (event) {
      var hpccWasm = self["@hpcc-js/wasm"];

      if (hpccWasm == undefined && event.data.vizURL) {
        importScripts(event.data.vizURL);
        hpccWasm = self["@hpcc-js/wasm"];
        hpccWasm.wasmFolder(event.data.vizURL.match(/.*\//)[0]); // This is an alternative workaround where wasmFolder() is not needed
        //                                    document = {currentScript: {src: event.data.vizURL}};
      }

      hpccWasm.graphviz.layout(event.data.dot, "svg", event.data.engine, event.data.options).then(function (svg) {
        if (svg) {
          port.postMessage({
            type: "done",
            svg: svg
          });
        } else if (event.data.vizURL) {
          port.postMessage({
            type: "init"
          });
        } else {
          port.postMessage({
            type: "skip"
          });
        }
      })["catch"](function (error) {
        port.postMessage({
          type: "error",
          error: error.message
        });
      });
    });
  }
  /* istanbul ignore next */


  function workerCode() {
    var port = self;
    workerCodeBody(port);
  }
  /* istanbul ignore next */


  function sharedWorkerCode() {
    self.onconnect = function (e) {
      var port = e.ports[0];
      workerCodeBody(port);
      port.start();
    };
  }

  var _graphviz$prototype;

  function Graphviz(selection, options) {
    this._options = {
      useWorker: true,
      useSharedWorker: false,
      engine: 'dot',
      keyMode: 'title',
      fade: true,
      tweenPaths: true,
      tweenShapes: true,
      convertEqualSidedPolygons: true,
      tweenPrecision: 1,
      growEnteringEdges: true,
      zoom: true,
      zoomScaleExtent: [0.1, 10],
      zoomTranslateExtent: [[-Infinity, -Infinity], [+Infinity, +Infinity]],
      width: null,
      height: null,
      scale: 1,
      fit: false
    };

    if (options instanceof Object) {
      for (var _i = 0, _Object$keys = Object.keys(options); _i < _Object$keys.length; _i++) {
        var option = _Object$keys[_i];
        this._options[option] = options[option];
      }
    } else if (typeof options == 'boolean') {
      this._options.useWorker = options;
    }

    var useWorker = this._options.useWorker;
    var useSharedWorker = this._options.useSharedWorker;

    if (typeof Worker == 'undefined') {
      useWorker = false;
    }

    if (typeof SharedWorker == 'undefined') {
      useSharedWorker = false;
    }

    if (useWorker || useSharedWorker) {
      var scripts = d3__namespace.selectAll('script');
      var vizScript = scripts.filter(function () {
        return d3__namespace.select(this).attr('type') == 'javascript/worker' || d3__namespace.select(this).attr('src') && d3__namespace.select(this).attr('src').match(/.*\/@hpcc-js\/wasm/);
      });

      if (vizScript.size() == 0) {
        console.warn('No script tag of type "javascript/worker" was found and "useWorker" is true. Not using web worker.');
        useWorker = false;
        useSharedWorker = false;
      } else {
        this._vizURL = vizScript.attr('src');

        if (!this._vizURL) {
          console.warn('No "src" attribute of was found on the "javascript/worker" script tag and "useWorker" is true. Not using web worker.');
          useWorker = false;
          useSharedWorker = false;
        }
      }
    }

    if (useSharedWorker) {
      var url = 'data:application/javascript;base64,' + btoa(workerCodeBody.toString() + '(' + sharedWorkerCode.toString() + ')()');
      this._worker = this._worker = new SharedWorker(url);
      this._workerPort = this._worker.port;
      this._workerPortClose = this._worker.port.close.bind(this._workerPort);

      this._worker.port.start();

      this._workerCallbacks = [];
    } else if (useWorker) {
      var blob = new Blob([workerCodeBody.toString() + '(' + workerCode.toString() + ')()']);
      var blobURL = window.URL.createObjectURL(blob);
      this._worker = new Worker(blobURL);
      this._workerPort = this._worker;
      this._workerPortClose = this._worker.terminate.bind(this._worker);
      this._workerCallbacks = [];
    }

    this._selection = selection;
    this._active = false;
    this._busy = false;
    this._jobs = [];
    this._queue = [];
    this._keyModes = new Set(['title', 'id', 'tag-index', 'index']);
    this._images = [];
    this._translation = undefined;
    this._scale = undefined;
    this._eventTypes = ['initEnd', 'start', 'layoutStart', 'layoutEnd', 'dataExtractEnd', 'dataProcessPass1End', 'dataProcessPass2End', 'dataProcessEnd', 'renderStart', 'renderEnd', 'transitionStart', 'transitionEnd', 'restoreEnd', 'end'];
    this._dispatch = d3Dispatch.dispatch.apply(void 0, _toConsumableArray(this._eventTypes));
    initViz.call(this);
    selection.node().__graphviz__ = this;
  }

  function graphviz(selector, options) {
    var g = d3__namespace.select(selector).graphviz(options);
    return g;
  }

  Graphviz.prototype = graphviz.prototype = (_graphviz$prototype = {
    constructor: Graphviz,
    engine: engine,
    addImage: images,
    keyMode: keyMode,
    fade: fade,
    tweenPaths: tweenPaths,
    tweenShapes: tweenShapes,
    convertEqualSidedPolygons: convertEqualSidedPolygons,
    tweenPrecision: tweenPrecision,
    growEnteringEdges: growEnteringEdges,
    zoom: zoom,
    resetZoom: resetZoom,
    zoomBehavior: zoomBehavior,
    zoomSelection: zoomSelection,
    zoomScaleExtent: zoomScaleExtent,
    zoomTranslateExtent: zoomTranslateExtent,
    render: render,
    layout: layout,
    dot: dot,
    data: data,
    renderDot: renderDot,
    transition: transition,
    active: active,
    options: options,
    width: width,
    height: height,
    scale: scale,
    fit: fit,
    attributer: attributer,
    on: on,
    onerror: onerror,
    logEvents: logEvents,
    destroy: destroy,
    drawEdge: drawEdge,
    updateDrawnEdge: updateDrawnEdge,
    moveDrawnEdgeEndPoint: moveDrawnEdgeEndPoint,
    insertDrawnEdge: insertDrawnEdge,
    removeDrawnEdge: removeDrawnEdge
  }, _defineProperty(_graphviz$prototype, "removeDrawnEdge", removeDrawnEdge), _defineProperty(_graphviz$prototype, "drawnEdgeSelection", drawnEdgeSelection), _defineProperty(_graphviz$prototype, "drawnEdgeSelection", drawnEdgeSelection), _defineProperty(_graphviz$prototype, "drawNode", drawNode), _defineProperty(_graphviz$prototype, "updateDrawnNode", updateDrawnNode), _defineProperty(_graphviz$prototype, "moveDrawnNode", moveDrawnNode), _defineProperty(_graphviz$prototype, "insertDrawnNode", insertDrawnNode), _defineProperty(_graphviz$prototype, "removeDrawnNode", removeDrawnNode), _defineProperty(_graphviz$prototype, "removeDrawnNode", removeDrawnNode), _defineProperty(_graphviz$prototype, "drawnNodeSelection", drawnNodeSelection), _defineProperty(_graphviz$prototype, "drawnNodeSelection", drawnNodeSelection), _graphviz$prototype);

  function selection_graphviz(options) {
    var g = this.node().__graphviz__;

    if (g) {
      g.options(options); // Ensure a possible new initEnd event handler is attached before calling it

      d3Timer.timeout(function () {
        g._dispatch.call("initEnd", this);
      }.bind(this), 0);
    } else {
      g = new Graphviz(this, options);
    }

    return g;
  }

  function selection_selectWithoutDataPropagation(name) {
    return d3__namespace.select(this.size() > 0 ? this.node().querySelector(name) : null);
  }

  d3.selection.prototype.graphviz = selection_graphviz;
  d3.selection.prototype.selectWithoutDataPropagation = selection_selectWithoutDataPropagation;
  exports.graphviz = graphviz;
  Object.defineProperty(exports, '__esModule', {
    value: true
  });
});

/***/ }),
/* 375 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "create": () => (/* reexport safe */ _create_js__WEBPACK_IMPORTED_MODULE_0__.default),
/* harmony export */   "creator": () => (/* reexport safe */ _creator_js__WEBPACK_IMPORTED_MODULE_1__.default),
/* harmony export */   "local": () => (/* reexport safe */ _local_js__WEBPACK_IMPORTED_MODULE_2__.default),
/* harmony export */   "matcher": () => (/* reexport safe */ _matcher_js__WEBPACK_IMPORTED_MODULE_3__.default),
/* harmony export */   "namespace": () => (/* reexport safe */ _namespace_js__WEBPACK_IMPORTED_MODULE_4__.default),
/* harmony export */   "namespaces": () => (/* reexport safe */ _namespaces_js__WEBPACK_IMPORTED_MODULE_5__.default),
/* harmony export */   "pointer": () => (/* reexport safe */ _pointer_js__WEBPACK_IMPORTED_MODULE_6__.default),
/* harmony export */   "pointers": () => (/* reexport safe */ _pointers_js__WEBPACK_IMPORTED_MODULE_7__.default),
/* harmony export */   "select": () => (/* reexport safe */ _select_js__WEBPACK_IMPORTED_MODULE_8__.default),
/* harmony export */   "selectAll": () => (/* reexport safe */ _selectAll_js__WEBPACK_IMPORTED_MODULE_9__.default),
/* harmony export */   "selection": () => (/* reexport safe */ _selection_index_js__WEBPACK_IMPORTED_MODULE_10__.default),
/* harmony export */   "selector": () => (/* reexport safe */ _selector_js__WEBPACK_IMPORTED_MODULE_11__.default),
/* harmony export */   "selectorAll": () => (/* reexport safe */ _selectorAll_js__WEBPACK_IMPORTED_MODULE_12__.default),
/* harmony export */   "style": () => (/* reexport safe */ _selection_style_js__WEBPACK_IMPORTED_MODULE_13__.styleValue),
/* harmony export */   "window": () => (/* reexport safe */ _window_js__WEBPACK_IMPORTED_MODULE_14__.default)
/* harmony export */ });
/* harmony import */ var _create_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(376);
/* harmony import */ var _creator_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(415);
/* harmony import */ var _local_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(423);
/* harmony import */ var _matcher_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(385);
/* harmony import */ var _namespace_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(404);
/* harmony import */ var _namespaces_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(405);
/* harmony import */ var _pointer_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(424);
/* harmony import */ var _pointers_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(426);
/* harmony import */ var _select_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(377);
/* harmony import */ var _selectAll_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(427);
/* harmony import */ var _selection_index_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(378);
/* harmony import */ var _selector_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(380);
/* harmony import */ var _selectorAll_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(383);
/* harmony import */ var _selection_style_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(406);
/* harmony import */ var _window_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(407);
















/***/ }),
/* 376 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* export default binding */ __WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _creator_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(415);
/* harmony import */ var _select_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(377);


/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(name) {
  return (0,_select_js__WEBPACK_IMPORTED_MODULE_0__.default)((0,_creator_js__WEBPACK_IMPORTED_MODULE_1__.default)(name).call(document.documentElement));
}

/***/ }),
/* 377 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* export default binding */ __WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _selection_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(378);

/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(selector) {
  return typeof selector === "string" ? new _selection_index_js__WEBPACK_IMPORTED_MODULE_0__.Selection([[document.querySelector(selector)]], [document.documentElement]) : new _selection_index_js__WEBPACK_IMPORTED_MODULE_0__.Selection([[selector]], _selection_index_js__WEBPACK_IMPORTED_MODULE_0__.root);
}

/***/ }),
/* 378 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "root": () => (/* binding */ root),
/* harmony export */   "Selection": () => (/* binding */ Selection),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _select_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(379);
/* harmony import */ var _selectAll_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(381);
/* harmony import */ var _selectChild_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(384);
/* harmony import */ var _selectChildren_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(386);
/* harmony import */ var _filter_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(387);
/* harmony import */ var _data_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(388);
/* harmony import */ var _enter_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(389);
/* harmony import */ var _exit_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(392);
/* harmony import */ var _join_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(393);
/* harmony import */ var _merge_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(394);
/* harmony import */ var _order_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(395);
/* harmony import */ var _sort_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(396);
/* harmony import */ var _call_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(397);
/* harmony import */ var _nodes_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(398);
/* harmony import */ var _node_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(399);
/* harmony import */ var _size_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(400);
/* harmony import */ var _empty_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(401);
/* harmony import */ var _each_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(402);
/* harmony import */ var _attr_js__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(403);
/* harmony import */ var _style_js__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(406);
/* harmony import */ var _property_js__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(408);
/* harmony import */ var _classed_js__WEBPACK_IMPORTED_MODULE_21__ = __webpack_require__(409);
/* harmony import */ var _text_js__WEBPACK_IMPORTED_MODULE_22__ = __webpack_require__(410);
/* harmony import */ var _html_js__WEBPACK_IMPORTED_MODULE_23__ = __webpack_require__(411);
/* harmony import */ var _raise_js__WEBPACK_IMPORTED_MODULE_24__ = __webpack_require__(412);
/* harmony import */ var _lower_js__WEBPACK_IMPORTED_MODULE_25__ = __webpack_require__(413);
/* harmony import */ var _append_js__WEBPACK_IMPORTED_MODULE_26__ = __webpack_require__(414);
/* harmony import */ var _insert_js__WEBPACK_IMPORTED_MODULE_27__ = __webpack_require__(416);
/* harmony import */ var _remove_js__WEBPACK_IMPORTED_MODULE_28__ = __webpack_require__(417);
/* harmony import */ var _clone_js__WEBPACK_IMPORTED_MODULE_29__ = __webpack_require__(418);
/* harmony import */ var _datum_js__WEBPACK_IMPORTED_MODULE_30__ = __webpack_require__(419);
/* harmony import */ var _on_js__WEBPACK_IMPORTED_MODULE_31__ = __webpack_require__(420);
/* harmony import */ var _dispatch_js__WEBPACK_IMPORTED_MODULE_32__ = __webpack_require__(421);
/* harmony import */ var _iterator_js__WEBPACK_IMPORTED_MODULE_33__ = __webpack_require__(422);


































var root = [null];
function Selection(groups, parents) {
  this._groups = groups;
  this._parents = parents;
}

function selection() {
  return new Selection([[document.documentElement]], root);
}

function selection_selection() {
  return this;
}

Selection.prototype = selection.prototype = {
  constructor: Selection,
  select: _select_js__WEBPACK_IMPORTED_MODULE_0__.default,
  selectAll: _selectAll_js__WEBPACK_IMPORTED_MODULE_1__.default,
  selectChild: _selectChild_js__WEBPACK_IMPORTED_MODULE_2__.default,
  selectChildren: _selectChildren_js__WEBPACK_IMPORTED_MODULE_3__.default,
  filter: _filter_js__WEBPACK_IMPORTED_MODULE_4__.default,
  data: _data_js__WEBPACK_IMPORTED_MODULE_5__.default,
  enter: _enter_js__WEBPACK_IMPORTED_MODULE_6__.default,
  exit: _exit_js__WEBPACK_IMPORTED_MODULE_7__.default,
  join: _join_js__WEBPACK_IMPORTED_MODULE_8__.default,
  merge: _merge_js__WEBPACK_IMPORTED_MODULE_9__.default,
  selection: selection_selection,
  order: _order_js__WEBPACK_IMPORTED_MODULE_10__.default,
  sort: _sort_js__WEBPACK_IMPORTED_MODULE_11__.default,
  call: _call_js__WEBPACK_IMPORTED_MODULE_12__.default,
  nodes: _nodes_js__WEBPACK_IMPORTED_MODULE_13__.default,
  node: _node_js__WEBPACK_IMPORTED_MODULE_14__.default,
  size: _size_js__WEBPACK_IMPORTED_MODULE_15__.default,
  empty: _empty_js__WEBPACK_IMPORTED_MODULE_16__.default,
  each: _each_js__WEBPACK_IMPORTED_MODULE_17__.default,
  attr: _attr_js__WEBPACK_IMPORTED_MODULE_18__.default,
  style: _style_js__WEBPACK_IMPORTED_MODULE_19__.default,
  property: _property_js__WEBPACK_IMPORTED_MODULE_20__.default,
  classed: _classed_js__WEBPACK_IMPORTED_MODULE_21__.default,
  text: _text_js__WEBPACK_IMPORTED_MODULE_22__.default,
  html: _html_js__WEBPACK_IMPORTED_MODULE_23__.default,
  raise: _raise_js__WEBPACK_IMPORTED_MODULE_24__.default,
  lower: _lower_js__WEBPACK_IMPORTED_MODULE_25__.default,
  append: _append_js__WEBPACK_IMPORTED_MODULE_26__.default,
  insert: _insert_js__WEBPACK_IMPORTED_MODULE_27__.default,
  remove: _remove_js__WEBPACK_IMPORTED_MODULE_28__.default,
  clone: _clone_js__WEBPACK_IMPORTED_MODULE_29__.default,
  datum: _datum_js__WEBPACK_IMPORTED_MODULE_30__.default,
  on: _on_js__WEBPACK_IMPORTED_MODULE_31__.default,
  dispatch: _dispatch_js__WEBPACK_IMPORTED_MODULE_32__.default,
  [Symbol.iterator]: _iterator_js__WEBPACK_IMPORTED_MODULE_33__.default
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (selection);

/***/ }),
/* 379 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* export default binding */ __WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(378);
/* harmony import */ var _selector_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(380);


/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(select) {
  if (typeof select !== "function") select = (0,_selector_js__WEBPACK_IMPORTED_MODULE_0__.default)(select);

  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {
    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {
      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {
        if ("__data__" in node) subnode.__data__ = node.__data__;
        subgroup[i] = subnode;
      }
    }
  }

  return new _index_js__WEBPACK_IMPORTED_MODULE_1__.Selection(subgroups, this._parents);
}

/***/ }),
/* 380 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* export default binding */ __WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
function none() {}

/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(selector) {
  return selector == null ? none : function () {
    return this.querySelector(selector);
  };
}

/***/ }),
/* 381 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* export default binding */ __WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(378);
/* harmony import */ var _array_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(382);
/* harmony import */ var _selectorAll_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(383);




function arrayAll(select) {
  return function () {
    var group = select.apply(this, arguments);
    return group == null ? [] : (0,_array_js__WEBPACK_IMPORTED_MODULE_0__.default)(group);
  };
}

/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(select) {
  if (typeof select === "function") select = arrayAll(select);else select = (0,_selectorAll_js__WEBPACK_IMPORTED_MODULE_1__.default)(select);

  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {
    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {
      if (node = group[i]) {
        subgroups.push(select.call(node, node.__data__, i, group));
        parents.push(node);
      }
    }
  }

  return new _index_js__WEBPACK_IMPORTED_MODULE_2__.Selection(subgroups, parents);
}

/***/ }),
/* 382 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* export default binding */ __WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(x) {
  return typeof x === "object" && "length" in x ? x // Array, TypedArray, NodeList, array-like
  : Array.from(x); // Map, Set, iterable, string, or anything else
}

/***/ }),
/* 383 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* export default binding */ __WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
function empty() {
  return [];
}

/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(selector) {
  return selector == null ? empty : function () {
    return this.querySelectorAll(selector);
  };
}

/***/ }),
/* 384 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* export default binding */ __WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _matcher_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(385);

var find = Array.prototype.find;

function childFind(match) {
  return function () {
    return find.call(this.children, match);
  };
}

function childFirst() {
  return this.firstElementChild;
}

/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(match) {
  return this.select(match == null ? childFirst : childFind(typeof match === "function" ? match : (0,_matcher_js__WEBPACK_IMPORTED_MODULE_0__.childMatcher)(match)));
}

/***/ }),
/* 385 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* export default binding */ __WEBPACK_DEFAULT_EXPORT__),
/* harmony export */   "childMatcher": () => (/* binding */ childMatcher)
/* harmony export */ });
/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(selector) {
  return function () {
    return this.matches(selector);
  };
}
function childMatcher(selector) {
  return function (node) {
    return node.matches(selector);
  };
}

/***/ }),
/* 386 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* export default binding */ __WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _matcher_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(385);

var filter = Array.prototype.filter;

function children() {
  return this.children;
}

function childrenFilter(match) {
  return function () {
    return filter.call(this.children, match);
  };
}

/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(match) {
  return this.selectAll(match == null ? children : childrenFilter(typeof match === "function" ? match : (0,_matcher_js__WEBPACK_IMPORTED_MODULE_0__.childMatcher)(match)));
}

/***/ }),
/* 387 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* export default binding */ __WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(378);
/* harmony import */ var _matcher_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(385);


/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(match) {
  if (typeof match !== "function") match = (0,_matcher_js__WEBPACK_IMPORTED_MODULE_0__.default)(match);

  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {
    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {
      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {
        subgroup.push(node);
      }
    }
  }

  return new _index_js__WEBPACK_IMPORTED_MODULE_1__.Selection(subgroups, this._parents);
}

/***/ }),
/* 388 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* export default binding */ __WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(378);
/* harmony import */ var _enter_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(389);
/* harmony import */ var _array_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(382);
/* harmony import */ var _constant_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(391);





function bindIndex(parent, group, enter, update, exit, data) {
  var i = 0,
      node,
      groupLength = group.length,
      dataLength = data.length; // Put any non-null nodes that fit into update.
  // Put any null nodes into enter.
  // Put any remaining data into enter.

  for (; i < dataLength; ++i) {
    if (node = group[i]) {
      node.__data__ = data[i];
      update[i] = node;
    } else {
      enter[i] = new _enter_js__WEBPACK_IMPORTED_MODULE_0__.EnterNode(parent, data[i]);
    }
  } // Put any non-null nodes that don’t fit into exit.


  for (; i < groupLength; ++i) {
    if (node = group[i]) {
      exit[i] = node;
    }
  }
}

function bindKey(parent, group, enter, update, exit, data, key) {
  var i,
      node,
      nodeByKeyValue = new Map(),
      groupLength = group.length,
      dataLength = data.length,
      keyValues = new Array(groupLength),
      keyValue; // Compute the key for each node.
  // If multiple nodes have the same key, the duplicates are added to exit.

  for (i = 0; i < groupLength; ++i) {
    if (node = group[i]) {
      keyValues[i] = keyValue = key.call(node, node.__data__, i, group) + "";

      if (nodeByKeyValue.has(keyValue)) {
        exit[i] = node;
      } else {
        nodeByKeyValue.set(keyValue, node);
      }
    }
  } // Compute the key for each datum.
  // If there a node associated with this key, join and add it to update.
  // If there is not (or the key is a duplicate), add it to enter.


  for (i = 0; i < dataLength; ++i) {
    keyValue = key.call(parent, data[i], i, data) + "";

    if (node = nodeByKeyValue.get(keyValue)) {
      update[i] = node;
      node.__data__ = data[i];
      nodeByKeyValue.delete(keyValue);
    } else {
      enter[i] = new _enter_js__WEBPACK_IMPORTED_MODULE_0__.EnterNode(parent, data[i]);
    }
  } // Add any remaining nodes that were not bound to data to exit.


  for (i = 0; i < groupLength; ++i) {
    if ((node = group[i]) && nodeByKeyValue.get(keyValues[i]) === node) {
      exit[i] = node;
    }
  }
}

function datum(node) {
  return node.__data__;
}

/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(value, key) {
  if (!arguments.length) return Array.from(this, datum);
  var bind = key ? bindKey : bindIndex,
      parents = this._parents,
      groups = this._groups;
  if (typeof value !== "function") value = (0,_constant_js__WEBPACK_IMPORTED_MODULE_1__.default)(value);

  for (var m = groups.length, update = new Array(m), enter = new Array(m), exit = new Array(m), j = 0; j < m; ++j) {
    var parent = parents[j],
        group = groups[j],
        groupLength = group.length,
        data = (0,_array_js__WEBPACK_IMPORTED_MODULE_2__.default)(value.call(parent, parent && parent.__data__, j, parents)),
        dataLength = data.length,
        enterGroup = enter[j] = new Array(dataLength),
        updateGroup = update[j] = new Array(dataLength),
        exitGroup = exit[j] = new Array(groupLength);
    bind(parent, group, enterGroup, updateGroup, exitGroup, data, key); // Now connect the enter nodes to their following update node, such that
    // appendChild can insert the materialized enter node before this node,
    // rather than at the end of the parent node.

    for (var i0 = 0, i1 = 0, previous, next; i0 < dataLength; ++i0) {
      if (previous = enterGroup[i0]) {
        if (i0 >= i1) i1 = i0 + 1;

        while (!(next = updateGroup[i1]) && ++i1 < dataLength);

        previous._next = next || null;
      }
    }
  }

  update = new _index_js__WEBPACK_IMPORTED_MODULE_3__.Selection(update, parents);
  update._enter = enter;
  update._exit = exit;
  return update;
}

/***/ }),
/* 389 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* export default binding */ __WEBPACK_DEFAULT_EXPORT__),
/* harmony export */   "EnterNode": () => (/* binding */ EnterNode)
/* harmony export */ });
/* harmony import */ var _sparse_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(390);
/* harmony import */ var _index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(378);


/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__() {
  return new _index_js__WEBPACK_IMPORTED_MODULE_0__.Selection(this._enter || this._groups.map(_sparse_js__WEBPACK_IMPORTED_MODULE_1__.default), this._parents);
}
function EnterNode(parent, datum) {
  this.ownerDocument = parent.ownerDocument;
  this.namespaceURI = parent.namespaceURI;
  this._next = null;
  this._parent = parent;
  this.__data__ = datum;
}
EnterNode.prototype = {
  constructor: EnterNode,
  appendChild: function (child) {
    return this._parent.insertBefore(child, this._next);
  },
  insertBefore: function (child, next) {
    return this._parent.insertBefore(child, next);
  },
  querySelector: function (selector) {
    return this._parent.querySelector(selector);
  },
  querySelectorAll: function (selector) {
    return this._parent.querySelectorAll(selector);
  }
};

/***/ }),
/* 390 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* export default binding */ __WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(update) {
  return new Array(update.length);
}

/***/ }),
/* 391 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* export default binding */ __WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(x) {
  return function () {
    return x;
  };
}

/***/ }),
/* 392 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* export default binding */ __WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _sparse_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(390);
/* harmony import */ var _index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(378);


/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__() {
  return new _index_js__WEBPACK_IMPORTED_MODULE_0__.Selection(this._exit || this._groups.map(_sparse_js__WEBPACK_IMPORTED_MODULE_1__.default), this._parents);
}

/***/ }),
/* 393 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* export default binding */ __WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(onenter, onupdate, onexit) {
  var enter = this.enter(),
      update = this,
      exit = this.exit();
  enter = typeof onenter === "function" ? onenter(enter) : enter.append(onenter + "");
  if (onupdate != null) update = onupdate(update);
  if (onexit == null) exit.remove();else onexit(exit);
  return enter && update ? enter.merge(update).order() : update;
}

/***/ }),
/* 394 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* export default binding */ __WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(378);

/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(selection) {
  if (!(selection instanceof _index_js__WEBPACK_IMPORTED_MODULE_0__.Selection)) throw new Error("invalid merge");

  for (var groups0 = this._groups, groups1 = selection._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {
    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {
      if (node = group0[i] || group1[i]) {
        merge[i] = node;
      }
    }
  }

  for (; j < m0; ++j) {
    merges[j] = groups0[j];
  }

  return new _index_js__WEBPACK_IMPORTED_MODULE_0__.Selection(merges, this._parents);
}

/***/ }),
/* 395 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* export default binding */ __WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__() {
  for (var groups = this._groups, j = -1, m = groups.length; ++j < m;) {
    for (var group = groups[j], i = group.length - 1, next = group[i], node; --i >= 0;) {
      if (node = group[i]) {
        if (next && node.compareDocumentPosition(next) ^ 4) next.parentNode.insertBefore(node, next);
        next = node;
      }
    }
  }

  return this;
}

/***/ }),
/* 396 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* export default binding */ __WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(378);

/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(compare) {
  if (!compare) compare = ascending;

  function compareNode(a, b) {
    return a && b ? compare(a.__data__, b.__data__) : !a - !b;
  }

  for (var groups = this._groups, m = groups.length, sortgroups = new Array(m), j = 0; j < m; ++j) {
    for (var group = groups[j], n = group.length, sortgroup = sortgroups[j] = new Array(n), node, i = 0; i < n; ++i) {
      if (node = group[i]) {
        sortgroup[i] = node;
      }
    }

    sortgroup.sort(compareNode);
  }

  return new _index_js__WEBPACK_IMPORTED_MODULE_0__.Selection(sortgroups, this._parents).order();
}

function ascending(a, b) {
  return a < b ? -1 : a > b ? 1 : a >= b ? 0 : NaN;
}

/***/ }),
/* 397 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* export default binding */ __WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__() {
  var callback = arguments[0];
  arguments[0] = this;
  callback.apply(null, arguments);
  return this;
}

/***/ }),
/* 398 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* export default binding */ __WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__() {
  return Array.from(this);
}

/***/ }),
/* 399 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* export default binding */ __WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__() {
  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {
    for (var group = groups[j], i = 0, n = group.length; i < n; ++i) {
      var node = group[i];
      if (node) return node;
    }
  }

  return null;
}

/***/ }),
/* 400 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* export default binding */ __WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__() {
  let size = 0;

  for (const node of this) ++size; // eslint-disable-line no-unused-vars


  return size;
}

/***/ }),
/* 401 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* export default binding */ __WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__() {
  return !this.node();
}

/***/ }),
/* 402 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* export default binding */ __WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(callback) {
  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {
    for (var group = groups[j], i = 0, n = group.length, node; i < n; ++i) {
      if (node = group[i]) callback.call(node, node.__data__, i, group);
    }
  }

  return this;
}

/***/ }),
/* 403 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* export default binding */ __WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _namespace_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(404);


function attrRemove(name) {
  return function () {
    this.removeAttribute(name);
  };
}

function attrRemoveNS(fullname) {
  return function () {
    this.removeAttributeNS(fullname.space, fullname.local);
  };
}

function attrConstant(name, value) {
  return function () {
    this.setAttribute(name, value);
  };
}

function attrConstantNS(fullname, value) {
  return function () {
    this.setAttributeNS(fullname.space, fullname.local, value);
  };
}

function attrFunction(name, value) {
  return function () {
    var v = value.apply(this, arguments);
    if (v == null) this.removeAttribute(name);else this.setAttribute(name, v);
  };
}

function attrFunctionNS(fullname, value) {
  return function () {
    var v = value.apply(this, arguments);
    if (v == null) this.removeAttributeNS(fullname.space, fullname.local);else this.setAttributeNS(fullname.space, fullname.local, v);
  };
}

/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(name, value) {
  var fullname = (0,_namespace_js__WEBPACK_IMPORTED_MODULE_0__.default)(name);

  if (arguments.length < 2) {
    var node = this.node();
    return fullname.local ? node.getAttributeNS(fullname.space, fullname.local) : node.getAttribute(fullname);
  }

  return this.each((value == null ? fullname.local ? attrRemoveNS : attrRemove : typeof value === "function" ? fullname.local ? attrFunctionNS : attrFunction : fullname.local ? attrConstantNS : attrConstant)(fullname, value));
}

/***/ }),
/* 404 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* export default binding */ __WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _namespaces_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(405);

/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(name) {
  var prefix = name += "",
      i = prefix.indexOf(":");
  if (i >= 0 && (prefix = name.slice(0, i)) !== "xmlns") name = name.slice(i + 1);
  return _namespaces_js__WEBPACK_IMPORTED_MODULE_0__.default.hasOwnProperty(prefix) ? {
    space: _namespaces_js__WEBPACK_IMPORTED_MODULE_0__.default[prefix],
    local: name
  } : name; // eslint-disable-line no-prototype-builtins
}

/***/ }),
/* 405 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "xhtml": () => (/* binding */ xhtml),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
var xhtml = "http://www.w3.org/1999/xhtml";
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
  svg: "http://www.w3.org/2000/svg",
  xhtml: xhtml,
  xlink: "http://www.w3.org/1999/xlink",
  xml: "http://www.w3.org/XML/1998/namespace",
  xmlns: "http://www.w3.org/2000/xmlns/"
});

/***/ }),
/* 406 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* export default binding */ __WEBPACK_DEFAULT_EXPORT__),
/* harmony export */   "styleValue": () => (/* binding */ styleValue)
/* harmony export */ });
/* harmony import */ var _window_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(407);


function styleRemove(name) {
  return function () {
    this.style.removeProperty(name);
  };
}

function styleConstant(name, value, priority) {
  return function () {
    this.style.setProperty(name, value, priority);
  };
}

function styleFunction(name, value, priority) {
  return function () {
    var v = value.apply(this, arguments);
    if (v == null) this.style.removeProperty(name);else this.style.setProperty(name, v, priority);
  };
}

/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(name, value, priority) {
  return arguments.length > 1 ? this.each((value == null ? styleRemove : typeof value === "function" ? styleFunction : styleConstant)(name, value, priority == null ? "" : priority)) : styleValue(this.node(), name);
}
function styleValue(node, name) {
  return node.style.getPropertyValue(name) || (0,_window_js__WEBPACK_IMPORTED_MODULE_0__.default)(node).getComputedStyle(node, null).getPropertyValue(name);
}

/***/ }),
/* 407 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* export default binding */ __WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(node) {
  return node.ownerDocument && node.ownerDocument.defaultView || // node is a Node
  node.document && node // node is a Window
  || node.defaultView; // node is a Document
}

/***/ }),
/* 408 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* export default binding */ __WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
function propertyRemove(name) {
  return function () {
    delete this[name];
  };
}

function propertyConstant(name, value) {
  return function () {
    this[name] = value;
  };
}

function propertyFunction(name, value) {
  return function () {
    var v = value.apply(this, arguments);
    if (v == null) delete this[name];else this[name] = v;
  };
}

/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(name, value) {
  return arguments.length > 1 ? this.each((value == null ? propertyRemove : typeof value === "function" ? propertyFunction : propertyConstant)(name, value)) : this.node()[name];
}

/***/ }),
/* 409 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* export default binding */ __WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
function classArray(string) {
  return string.trim().split(/^|\s+/);
}

function classList(node) {
  return node.classList || new ClassList(node);
}

function ClassList(node) {
  this._node = node;
  this._names = classArray(node.getAttribute("class") || "");
}

ClassList.prototype = {
  add: function (name) {
    var i = this._names.indexOf(name);

    if (i < 0) {
      this._names.push(name);

      this._node.setAttribute("class", this._names.join(" "));
    }
  },
  remove: function (name) {
    var i = this._names.indexOf(name);

    if (i >= 0) {
      this._names.splice(i, 1);

      this._node.setAttribute("class", this._names.join(" "));
    }
  },
  contains: function (name) {
    return this._names.indexOf(name) >= 0;
  }
};

function classedAdd(node, names) {
  var list = classList(node),
      i = -1,
      n = names.length;

  while (++i < n) list.add(names[i]);
}

function classedRemove(node, names) {
  var list = classList(node),
      i = -1,
      n = names.length;

  while (++i < n) list.remove(names[i]);
}

function classedTrue(names) {
  return function () {
    classedAdd(this, names);
  };
}

function classedFalse(names) {
  return function () {
    classedRemove(this, names);
  };
}

function classedFunction(names, value) {
  return function () {
    (value.apply(this, arguments) ? classedAdd : classedRemove)(this, names);
  };
}

/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(name, value) {
  var names = classArray(name + "");

  if (arguments.length < 2) {
    var list = classList(this.node()),
        i = -1,
        n = names.length;

    while (++i < n) if (!list.contains(names[i])) return false;

    return true;
  }

  return this.each((typeof value === "function" ? classedFunction : value ? classedTrue : classedFalse)(names, value));
}

/***/ }),
/* 410 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* export default binding */ __WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
function textRemove() {
  this.textContent = "";
}

function textConstant(value) {
  return function () {
    this.textContent = value;
  };
}

function textFunction(value) {
  return function () {
    var v = value.apply(this, arguments);
    this.textContent = v == null ? "" : v;
  };
}

/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(value) {
  return arguments.length ? this.each(value == null ? textRemove : (typeof value === "function" ? textFunction : textConstant)(value)) : this.node().textContent;
}

/***/ }),
/* 411 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* export default binding */ __WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
function htmlRemove() {
  this.innerHTML = "";
}

function htmlConstant(value) {
  return function () {
    this.innerHTML = value;
  };
}

function htmlFunction(value) {
  return function () {
    var v = value.apply(this, arguments);
    this.innerHTML = v == null ? "" : v;
  };
}

/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(value) {
  return arguments.length ? this.each(value == null ? htmlRemove : (typeof value === "function" ? htmlFunction : htmlConstant)(value)) : this.node().innerHTML;
}

/***/ }),
/* 412 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* export default binding */ __WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
function raise() {
  if (this.nextSibling) this.parentNode.appendChild(this);
}

/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__() {
  return this.each(raise);
}

/***/ }),
/* 413 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* export default binding */ __WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
function lower() {
  if (this.previousSibling) this.parentNode.insertBefore(this, this.parentNode.firstChild);
}

/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__() {
  return this.each(lower);
}

/***/ }),
/* 414 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* export default binding */ __WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _creator_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(415);

/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(name) {
  var create = typeof name === "function" ? name : (0,_creator_js__WEBPACK_IMPORTED_MODULE_0__.default)(name);
  return this.select(function () {
    return this.appendChild(create.apply(this, arguments));
  });
}

/***/ }),
/* 415 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* export default binding */ __WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _namespace_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(404);
/* harmony import */ var _namespaces_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(405);



function creatorInherit(name) {
  return function () {
    var document = this.ownerDocument,
        uri = this.namespaceURI;
    return uri === _namespaces_js__WEBPACK_IMPORTED_MODULE_0__.xhtml && document.documentElement.namespaceURI === _namespaces_js__WEBPACK_IMPORTED_MODULE_0__.xhtml ? document.createElement(name) : document.createElementNS(uri, name);
  };
}

function creatorFixed(fullname) {
  return function () {
    return this.ownerDocument.createElementNS(fullname.space, fullname.local);
  };
}

/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(name) {
  var fullname = (0,_namespace_js__WEBPACK_IMPORTED_MODULE_1__.default)(name);
  return (fullname.local ? creatorFixed : creatorInherit)(fullname);
}

/***/ }),
/* 416 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* export default binding */ __WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _creator_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(415);
/* harmony import */ var _selector_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(380);



function constantNull() {
  return null;
}

/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(name, before) {
  var create = typeof name === "function" ? name : (0,_creator_js__WEBPACK_IMPORTED_MODULE_0__.default)(name),
      select = before == null ? constantNull : typeof before === "function" ? before : (0,_selector_js__WEBPACK_IMPORTED_MODULE_1__.default)(before);
  return this.select(function () {
    return this.insertBefore(create.apply(this, arguments), select.apply(this, arguments) || null);
  });
}

/***/ }),
/* 417 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* export default binding */ __WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
function remove() {
  var parent = this.parentNode;
  if (parent) parent.removeChild(this);
}

/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__() {
  return this.each(remove);
}

/***/ }),
/* 418 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* export default binding */ __WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
function selection_cloneShallow() {
  var clone = this.cloneNode(false),
      parent = this.parentNode;
  return parent ? parent.insertBefore(clone, this.nextSibling) : clone;
}

function selection_cloneDeep() {
  var clone = this.cloneNode(true),
      parent = this.parentNode;
  return parent ? parent.insertBefore(clone, this.nextSibling) : clone;
}

/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(deep) {
  return this.select(deep ? selection_cloneDeep : selection_cloneShallow);
}

/***/ }),
/* 419 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* export default binding */ __WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(value) {
  return arguments.length ? this.property("__data__", value) : this.node().__data__;
}

/***/ }),
/* 420 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* export default binding */ __WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
function contextListener(listener) {
  return function (event) {
    listener.call(this, event, this.__data__);
  };
}

function parseTypenames(typenames) {
  return typenames.trim().split(/^|\s+/).map(function (t) {
    var name = "",
        i = t.indexOf(".");
    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);
    return {
      type: t,
      name: name
    };
  });
}

function onRemove(typename) {
  return function () {
    var on = this.__on;
    if (!on) return;

    for (var j = 0, i = -1, m = on.length, o; j < m; ++j) {
      if (o = on[j], (!typename.type || o.type === typename.type) && o.name === typename.name) {
        this.removeEventListener(o.type, o.listener, o.options);
      } else {
        on[++i] = o;
      }
    }

    if (++i) on.length = i;else delete this.__on;
  };
}

function onAdd(typename, value, options) {
  return function () {
    var on = this.__on,
        o,
        listener = contextListener(value);
    if (on) for (var j = 0, m = on.length; j < m; ++j) {
      if ((o = on[j]).type === typename.type && o.name === typename.name) {
        this.removeEventListener(o.type, o.listener, o.options);
        this.addEventListener(o.type, o.listener = listener, o.options = options);
        o.value = value;
        return;
      }
    }
    this.addEventListener(typename.type, listener, options);
    o = {
      type: typename.type,
      name: typename.name,
      value: value,
      listener: listener,
      options: options
    };
    if (!on) this.__on = [o];else on.push(o);
  };
}

/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(typename, value, options) {
  var typenames = parseTypenames(typename + ""),
      i,
      n = typenames.length,
      t;

  if (arguments.length < 2) {
    var on = this.node().__on;

    if (on) for (var j = 0, m = on.length, o; j < m; ++j) {
      for (i = 0, o = on[j]; i < n; ++i) {
        if ((t = typenames[i]).type === o.type && t.name === o.name) {
          return o.value;
        }
      }
    }
    return;
  }

  on = value ? onAdd : onRemove;

  for (i = 0; i < n; ++i) this.each(on(typenames[i], value, options));

  return this;
}

/***/ }),
/* 421 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* export default binding */ __WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _window_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(407);


function dispatchEvent(node, type, params) {
  var window = (0,_window_js__WEBPACK_IMPORTED_MODULE_0__.default)(node),
      event = window.CustomEvent;

  if (typeof event === "function") {
    event = new event(type, params);
  } else {
    event = window.document.createEvent("Event");
    if (params) event.initEvent(type, params.bubbles, params.cancelable), event.detail = params.detail;else event.initEvent(type, false, false);
  }

  node.dispatchEvent(event);
}

function dispatchConstant(type, params) {
  return function () {
    return dispatchEvent(this, type, params);
  };
}

function dispatchFunction(type, params) {
  return function () {
    return dispatchEvent(this, type, params.apply(this, arguments));
  };
}

/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(type, params) {
  return this.each((typeof params === "function" ? dispatchFunction : dispatchConstant)(type, params));
}

/***/ }),
/* 422 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* export default binding */ __WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony default export */ function* __WEBPACK_DEFAULT_EXPORT__() {
  for (var groups = this._groups, j = 0, m = groups.length; j < m; ++j) {
    for (var group = groups[j], i = 0, n = group.length, node; i < n; ++i) {
      if (node = group[i]) yield node;
    }
  }
}

/***/ }),
/* 423 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ local)
/* harmony export */ });
var nextId = 0;
function local() {
  return new Local();
}

function Local() {
  this._ = "@" + (++nextId).toString(36);
}

Local.prototype = local.prototype = {
  constructor: Local,
  get: function (node) {
    var id = this._;

    while (!(id in node)) if (!(node = node.parentNode)) return;

    return node[id];
  },
  set: function (node, value) {
    return node[this._] = value;
  },
  remove: function (node) {
    return this._ in node && delete node[this._];
  },
  toString: function () {
    return this._;
  }
};

/***/ }),
/* 424 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* export default binding */ __WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _sourceEvent_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(425);

/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(event, node) {
  event = (0,_sourceEvent_js__WEBPACK_IMPORTED_MODULE_0__.default)(event);
  if (node === undefined) node = event.currentTarget;

  if (node) {
    var svg = node.ownerSVGElement || node;

    if (svg.createSVGPoint) {
      var point = svg.createSVGPoint();
      point.x = event.clientX, point.y = event.clientY;
      point = point.matrixTransform(node.getScreenCTM().inverse());
      return [point.x, point.y];
    }

    if (node.getBoundingClientRect) {
      var rect = node.getBoundingClientRect();
      return [event.clientX - rect.left - node.clientLeft, event.clientY - rect.top - node.clientTop];
    }
  }

  return [event.pageX, event.pageY];
}

/***/ }),
/* 425 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* export default binding */ __WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(event) {
  let sourceEvent;

  while (sourceEvent = event.sourceEvent) event = sourceEvent;

  return event;
}

/***/ }),
/* 426 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* export default binding */ __WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _pointer_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(424);
/* harmony import */ var _sourceEvent_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(425);


/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(events, node) {
  if (events.target) {
    // i.e., instanceof Event, not TouchList or iterable
    events = (0,_sourceEvent_js__WEBPACK_IMPORTED_MODULE_0__.default)(events);
    if (node === undefined) node = events.currentTarget;
    events = events.touches || [events];
  }

  return Array.from(events, event => (0,_pointer_js__WEBPACK_IMPORTED_MODULE_1__.default)(event, node));
}

/***/ }),
/* 427 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* export default binding */ __WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _array_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(382);
/* harmony import */ var _selection_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(378);


/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(selector) {
  return typeof selector === "string" ? new _selection_index_js__WEBPACK_IMPORTED_MODULE_0__.Selection([document.querySelectorAll(selector)], [document.documentElement]) : new _selection_index_js__WEBPACK_IMPORTED_MODULE_0__.Selection([selector == null ? [] : (0,_array_js__WEBPACK_IMPORTED_MODULE_1__.default)(selector)], _selection_index_js__WEBPACK_IMPORTED_MODULE_0__.root);
}

/***/ }),
/* 428 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "dispatch": () => (/* reexport safe */ _dispatch_js__WEBPACK_IMPORTED_MODULE_0__.default)
/* harmony export */ });
/* harmony import */ var _dispatch_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(429);


/***/ }),
/* 429 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
var noop = {
  value: () => {}
};

function dispatch() {
  for (var i = 0, n = arguments.length, _ = {}, t; i < n; ++i) {
    if (!(t = arguments[i] + "") || t in _ || /[\s.]/.test(t)) throw new Error("illegal type: " + t);
    _[t] = [];
  }

  return new Dispatch(_);
}

function Dispatch(_) {
  this._ = _;
}

function parseTypenames(typenames, types) {
  return typenames.trim().split(/^|\s+/).map(function (t) {
    var name = "",
        i = t.indexOf(".");
    if (i >= 0) name = t.slice(i + 1), t = t.slice(0, i);
    if (t && !types.hasOwnProperty(t)) throw new Error("unknown type: " + t);
    return {
      type: t,
      name: name
    };
  });
}

Dispatch.prototype = dispatch.prototype = {
  constructor: Dispatch,
  on: function (typename, callback) {
    var _ = this._,
        T = parseTypenames(typename + "", _),
        t,
        i = -1,
        n = T.length; // If no callback was specified, return the callback of the given type and name.

    if (arguments.length < 2) {
      while (++i < n) if ((t = (typename = T[i]).type) && (t = get(_[t], typename.name))) return t;

      return;
    } // If a type was specified, set the callback for the given type and name.
    // Otherwise, if a null callback was specified, remove callbacks of the given name.


    if (callback != null && typeof callback !== "function") throw new Error("invalid callback: " + callback);

    while (++i < n) {
      if (t = (typename = T[i]).type) _[t] = set(_[t], typename.name, callback);else if (callback == null) for (t in _) _[t] = set(_[t], typename.name, null);
    }

    return this;
  },
  copy: function () {
    var copy = {},
        _ = this._;

    for (var t in _) copy[t] = _[t].slice();

    return new Dispatch(copy);
  },
  call: function (type, that) {
    if ((n = arguments.length - 2) > 0) for (var args = new Array(n), i = 0, n, t; i < n; ++i) args[i] = arguments[i + 2];
    if (!this._.hasOwnProperty(type)) throw new Error("unknown type: " + type);

    for (t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);
  },
  apply: function (type, that, args) {
    if (!this._.hasOwnProperty(type)) throw new Error("unknown type: " + type);

    for (var t = this._[type], i = 0, n = t.length; i < n; ++i) t[i].value.apply(that, args);
  }
};

function get(type, name) {
  for (var i = 0, n = type.length, c; i < n; ++i) {
    if ((c = type[i]).name === name) {
      return c.value;
    }
  }
}

function set(type, name, callback) {
  for (var i = 0, n = type.length; i < n; ++i) {
    if (type[i].name === name) {
      type[i] = noop, type = type.slice(0, i).concat(type.slice(i + 1));
      break;
    }
  }

  if (callback != null) type.push({
    name: name,
    value: callback
  });
  return type;
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (dispatch);

/***/ }),
/* 430 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "transition": () => (/* reexport safe */ _transition_index_js__WEBPACK_IMPORTED_MODULE_1__.default),
/* harmony export */   "active": () => (/* reexport safe */ _active_js__WEBPACK_IMPORTED_MODULE_2__.default),
/* harmony export */   "interrupt": () => (/* reexport safe */ _interrupt_js__WEBPACK_IMPORTED_MODULE_3__.default)
/* harmony export */ });
/* harmony import */ var _selection_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(431);
/* harmony import */ var _transition_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(438);
/* harmony import */ var _active_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(473);
/* harmony import */ var _interrupt_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(433);





/***/ }),
/* 431 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var d3_selection__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(378);
/* harmony import */ var _interrupt_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(432);
/* harmony import */ var _transition_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(437);



d3_selection__WEBPACK_IMPORTED_MODULE_2__.default.prototype.interrupt = _interrupt_js__WEBPACK_IMPORTED_MODULE_0__.default;
d3_selection__WEBPACK_IMPORTED_MODULE_2__.default.prototype.transition = _transition_js__WEBPACK_IMPORTED_MODULE_1__.default;

/***/ }),
/* 432 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* export default binding */ __WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _interrupt_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(433);

/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(name) {
  return this.each(function () {
    (0,_interrupt_js__WEBPACK_IMPORTED_MODULE_0__.default)(this, name);
  });
}

/***/ }),
/* 433 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* export default binding */ __WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _transition_schedule_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(434);

/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(node, name) {
  var schedules = node.__transition,
      schedule,
      active,
      empty = true,
      i;
  if (!schedules) return;
  name = name == null ? null : name + "";

  for (i in schedules) {
    if ((schedule = schedules[i]).name !== name) {
      empty = false;
      continue;
    }

    active = schedule.state > _transition_schedule_js__WEBPACK_IMPORTED_MODULE_0__.STARTING && schedule.state < _transition_schedule_js__WEBPACK_IMPORTED_MODULE_0__.ENDING;
    schedule.state = _transition_schedule_js__WEBPACK_IMPORTED_MODULE_0__.ENDED;
    schedule.timer.stop();
    schedule.on.call(active ? "interrupt" : "cancel", node, node.__data__, schedule.index, schedule.group);
    delete schedules[i];
  }

  if (empty) delete node.__transition;
}

/***/ }),
/* 434 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "CREATED": () => (/* binding */ CREATED),
/* harmony export */   "SCHEDULED": () => (/* binding */ SCHEDULED),
/* harmony export */   "STARTING": () => (/* binding */ STARTING),
/* harmony export */   "STARTED": () => (/* binding */ STARTED),
/* harmony export */   "RUNNING": () => (/* binding */ RUNNING),
/* harmony export */   "ENDING": () => (/* binding */ ENDING),
/* harmony export */   "ENDED": () => (/* binding */ ENDED),
/* harmony export */   "default": () => (/* export default binding */ __WEBPACK_DEFAULT_EXPORT__),
/* harmony export */   "init": () => (/* binding */ init),
/* harmony export */   "set": () => (/* binding */ set),
/* harmony export */   "get": () => (/* binding */ get)
/* harmony export */ });
/* harmony import */ var d3_dispatch__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(429);
/* harmony import */ var d3_timer__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(435);
/* harmony import */ var d3_timer__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(436);


var emptyOn = (0,d3_dispatch__WEBPACK_IMPORTED_MODULE_0__.default)("start", "end", "cancel", "interrupt");
var emptyTween = [];
var CREATED = 0;
var SCHEDULED = 1;
var STARTING = 2;
var STARTED = 3;
var RUNNING = 4;
var ENDING = 5;
var ENDED = 6;
/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(node, name, id, index, group, timing) {
  var schedules = node.__transition;
  if (!schedules) node.__transition = {};else if (id in schedules) return;
  create(node, id, {
    name: name,
    index: index,
    // For context during callback.
    group: group,
    // For context during callback.
    on: emptyOn,
    tween: emptyTween,
    time: timing.time,
    delay: timing.delay,
    duration: timing.duration,
    ease: timing.ease,
    timer: null,
    state: CREATED
  });
}
function init(node, id) {
  var schedule = get(node, id);
  if (schedule.state > CREATED) throw new Error("too late; already scheduled");
  return schedule;
}
function set(node, id) {
  var schedule = get(node, id);
  if (schedule.state > STARTED) throw new Error("too late; already running");
  return schedule;
}
function get(node, id) {
  var schedule = node.__transition;
  if (!schedule || !(schedule = schedule[id])) throw new Error("transition not found");
  return schedule;
}

function create(node, id, self) {
  var schedules = node.__transition,
      tween; // Initialize the self timer when the transition is created.
  // Note the actual delay is not known until the first callback!

  schedules[id] = self;
  self.timer = (0,d3_timer__WEBPACK_IMPORTED_MODULE_1__.timer)(schedule, 0, self.time);

  function schedule(elapsed) {
    self.state = SCHEDULED;
    self.timer.restart(start, self.delay, self.time); // If the elapsed delay is less than our first sleep, start immediately.

    if (self.delay <= elapsed) start(elapsed - self.delay);
  }

  function start(elapsed) {
    var i, j, n, o; // If the state is not SCHEDULED, then we previously errored on start.

    if (self.state !== SCHEDULED) return stop();

    for (i in schedules) {
      o = schedules[i];
      if (o.name !== self.name) continue; // While this element already has a starting transition during this frame,
      // defer starting an interrupting transition until that transition has a
      // chance to tick (and possibly end); see d3/d3-transition#54!

      if (o.state === STARTED) return (0,d3_timer__WEBPACK_IMPORTED_MODULE_2__.default)(start); // Interrupt the active transition, if any.

      if (o.state === RUNNING) {
        o.state = ENDED;
        o.timer.stop();
        o.on.call("interrupt", node, node.__data__, o.index, o.group);
        delete schedules[i];
      } // Cancel any pre-empted transitions.
      else if (+i < id) {
          o.state = ENDED;
          o.timer.stop();
          o.on.call("cancel", node, node.__data__, o.index, o.group);
          delete schedules[i];
        }
    } // Defer the first tick to end of the current frame; see d3/d3#1576.
    // Note the transition may be canceled after start and before the first tick!
    // Note this must be scheduled before the start event; see d3/d3-transition#16!
    // Assuming this is successful, subsequent callbacks go straight to tick.


    (0,d3_timer__WEBPACK_IMPORTED_MODULE_2__.default)(function () {
      if (self.state === STARTED) {
        self.state = RUNNING;
        self.timer.restart(tick, self.delay, self.time);
        tick(elapsed);
      }
    }); // Dispatch the start event.
    // Note this must be done before the tween are initialized.

    self.state = STARTING;
    self.on.call("start", node, node.__data__, self.index, self.group);
    if (self.state !== STARTING) return; // interrupted

    self.state = STARTED; // Initialize the tween, deleting null tween.

    tween = new Array(n = self.tween.length);

    for (i = 0, j = -1; i < n; ++i) {
      if (o = self.tween[i].value.call(node, node.__data__, self.index, self.group)) {
        tween[++j] = o;
      }
    }

    tween.length = j + 1;
  }

  function tick(elapsed) {
    var t = elapsed < self.duration ? self.ease.call(null, elapsed / self.duration) : (self.timer.restart(stop), self.state = ENDING, 1),
        i = -1,
        n = tween.length;

    while (++i < n) {
      tween[i].call(node, t);
    } // Dispatch the end event.


    if (self.state === ENDING) {
      self.on.call("end", node, node.__data__, self.index, self.group);
      stop();
    }
  }

  function stop() {
    self.state = ENDED;
    self.timer.stop();
    delete schedules[id];

    for (var i in schedules) return; // eslint-disable-line no-unused-vars


    delete node.__transition;
  }
}

/***/ }),
/* 435 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "now": () => (/* binding */ now),
/* harmony export */   "Timer": () => (/* binding */ Timer),
/* harmony export */   "timer": () => (/* binding */ timer),
/* harmony export */   "timerFlush": () => (/* binding */ timerFlush)
/* harmony export */ });
var frame = 0,
    // is an animation frame pending?
timeout = 0,
    // is a timeout pending?
interval = 0,
    // are any timers active?
pokeDelay = 1000,
    // how frequently we check for clock skew
taskHead,
    taskTail,
    clockLast = 0,
    clockNow = 0,
    clockSkew = 0,
    clock = typeof performance === "object" && performance.now ? performance : Date,
    setFrame = typeof window === "object" && window.requestAnimationFrame ? window.requestAnimationFrame.bind(window) : function (f) {
  setTimeout(f, 17);
};
function now() {
  return clockNow || (setFrame(clearNow), clockNow = clock.now() + clockSkew);
}

function clearNow() {
  clockNow = 0;
}

function Timer() {
  this._call = this._time = this._next = null;
}
Timer.prototype = timer.prototype = {
  constructor: Timer,
  restart: function (callback, delay, time) {
    if (typeof callback !== "function") throw new TypeError("callback is not a function");
    time = (time == null ? now() : +time) + (delay == null ? 0 : +delay);

    if (!this._next && taskTail !== this) {
      if (taskTail) taskTail._next = this;else taskHead = this;
      taskTail = this;
    }

    this._call = callback;
    this._time = time;
    sleep();
  },
  stop: function () {
    if (this._call) {
      this._call = null;
      this._time = Infinity;
      sleep();
    }
  }
};
function timer(callback, delay, time) {
  var t = new Timer();
  t.restart(callback, delay, time);
  return t;
}
function timerFlush() {
  now(); // Get the current time, if not already set.

  ++frame; // Pretend we’ve set an alarm, if we haven’t already.

  var t = taskHead,
      e;

  while (t) {
    if ((e = clockNow - t._time) >= 0) t._call.call(null, e);
    t = t._next;
  }

  --frame;
}

function wake() {
  clockNow = (clockLast = clock.now()) + clockSkew;
  frame = timeout = 0;

  try {
    timerFlush();
  } finally {
    frame = 0;
    nap();
    clockNow = 0;
  }
}

function poke() {
  var now = clock.now(),
      delay = now - clockLast;
  if (delay > pokeDelay) clockSkew -= delay, clockLast = now;
}

function nap() {
  var t0,
      t1 = taskHead,
      t2,
      time = Infinity;

  while (t1) {
    if (t1._call) {
      if (time > t1._time) time = t1._time;
      t0 = t1, t1 = t1._next;
    } else {
      t2 = t1._next, t1._next = null;
      t1 = t0 ? t0._next = t2 : taskHead = t2;
    }
  }

  taskTail = t0;
  sleep(time);
}

function sleep(time) {
  if (frame) return; // Soonest alarm already set, or will be.

  if (timeout) timeout = clearTimeout(timeout);
  var delay = time - clockNow; // Strictly less than if we recomputed clockNow.

  if (delay > 24) {
    if (time < Infinity) timeout = setTimeout(wake, time - clock.now() - clockSkew);
    if (interval) interval = clearInterval(interval);
  } else {
    if (!interval) clockLast = clock.now(), interval = setInterval(poke, pokeDelay);
    frame = 1, setFrame(wake);
  }
}

/***/ }),
/* 436 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* export default binding */ __WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _timer_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(435);

/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(callback, delay, time) {
  var t = new _timer_js__WEBPACK_IMPORTED_MODULE_0__.Timer();
  delay = delay == null ? 0 : +delay;
  t.restart(elapsed => {
    t.stop();
    callback(elapsed + delay);
  }, delay, time);
  return t;
}

/***/ }),
/* 437 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* export default binding */ __WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _transition_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(438);
/* harmony import */ var _transition_schedule_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(434);
/* harmony import */ var d3_ease__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(472);
/* harmony import */ var d3_timer__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(435);




var defaultTiming = {
  time: null,
  // Set on use.
  delay: 0,
  duration: 250,
  ease: d3_ease__WEBPACK_IMPORTED_MODULE_2__.cubicInOut
};

function inherit(node, id) {
  var timing;

  while (!(timing = node.__transition) || !(timing = timing[id])) {
    if (!(node = node.parentNode)) {
      throw new Error(`transition ${id} not found`);
    }
  }

  return timing;
}

/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(name) {
  var id, timing;

  if (name instanceof _transition_index_js__WEBPACK_IMPORTED_MODULE_0__.Transition) {
    id = name._id, name = name._name;
  } else {
    id = (0,_transition_index_js__WEBPACK_IMPORTED_MODULE_0__.newId)(), (timing = defaultTiming).time = (0,d3_timer__WEBPACK_IMPORTED_MODULE_3__.now)(), name = name == null ? null : name + "";
  }

  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {
    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {
      if (node = group[i]) {
        (0,_transition_schedule_js__WEBPACK_IMPORTED_MODULE_1__.default)(node, name, id, i, group, timing || inherit(node, id));
      }
    }
  }

  return new _transition_index_js__WEBPACK_IMPORTED_MODULE_0__.Transition(groups, this._parents, name, id);
}

/***/ }),
/* 438 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Transition": () => (/* binding */ Transition),
/* harmony export */   "default": () => (/* binding */ transition),
/* harmony export */   "newId": () => (/* binding */ newId)
/* harmony export */ });
/* harmony import */ var d3_selection__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(378);
/* harmony import */ var _attr_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(439);
/* harmony import */ var _attrTween_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(454);
/* harmony import */ var _delay_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(455);
/* harmony import */ var _duration_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(456);
/* harmony import */ var _ease_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(457);
/* harmony import */ var _easeVarying_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(458);
/* harmony import */ var _filter_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(459);
/* harmony import */ var _merge_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(460);
/* harmony import */ var _on_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(461);
/* harmony import */ var _remove_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(462);
/* harmony import */ var _select_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(463);
/* harmony import */ var _selectAll_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(464);
/* harmony import */ var _selection_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(465);
/* harmony import */ var _style_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(466);
/* harmony import */ var _styleTween_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(467);
/* harmony import */ var _text_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(468);
/* harmony import */ var _textTween_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(469);
/* harmony import */ var _transition_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(470);
/* harmony import */ var _tween_js__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(440);
/* harmony import */ var _end_js__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(471);





















var id = 0;
function Transition(groups, parents, name, id) {
  this._groups = groups;
  this._parents = parents;
  this._name = name;
  this._id = id;
}
function transition(name) {
  return (0,d3_selection__WEBPACK_IMPORTED_MODULE_20__.default)().transition(name);
}
function newId() {
  return ++id;
}
var selection_prototype = d3_selection__WEBPACK_IMPORTED_MODULE_20__.default.prototype;
Transition.prototype = transition.prototype = {
  constructor: Transition,
  select: _select_js__WEBPACK_IMPORTED_MODULE_10__.default,
  selectAll: _selectAll_js__WEBPACK_IMPORTED_MODULE_11__.default,
  filter: _filter_js__WEBPACK_IMPORTED_MODULE_6__.default,
  merge: _merge_js__WEBPACK_IMPORTED_MODULE_7__.default,
  selection: _selection_js__WEBPACK_IMPORTED_MODULE_12__.default,
  transition: _transition_js__WEBPACK_IMPORTED_MODULE_17__.default,
  call: selection_prototype.call,
  nodes: selection_prototype.nodes,
  node: selection_prototype.node,
  size: selection_prototype.size,
  empty: selection_prototype.empty,
  each: selection_prototype.each,
  on: _on_js__WEBPACK_IMPORTED_MODULE_8__.default,
  attr: _attr_js__WEBPACK_IMPORTED_MODULE_0__.default,
  attrTween: _attrTween_js__WEBPACK_IMPORTED_MODULE_1__.default,
  style: _style_js__WEBPACK_IMPORTED_MODULE_13__.default,
  styleTween: _styleTween_js__WEBPACK_IMPORTED_MODULE_14__.default,
  text: _text_js__WEBPACK_IMPORTED_MODULE_15__.default,
  textTween: _textTween_js__WEBPACK_IMPORTED_MODULE_16__.default,
  remove: _remove_js__WEBPACK_IMPORTED_MODULE_9__.default,
  tween: _tween_js__WEBPACK_IMPORTED_MODULE_18__.default,
  delay: _delay_js__WEBPACK_IMPORTED_MODULE_2__.default,
  duration: _duration_js__WEBPACK_IMPORTED_MODULE_3__.default,
  ease: _ease_js__WEBPACK_IMPORTED_MODULE_4__.default,
  easeVarying: _easeVarying_js__WEBPACK_IMPORTED_MODULE_5__.default,
  end: _end_js__WEBPACK_IMPORTED_MODULE_19__.default,
  [Symbol.iterator]: selection_prototype[Symbol.iterator]
};

/***/ }),
/* 439 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* export default binding */ __WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var d3_interpolate__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(451);
/* harmony import */ var d3_selection__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(404);
/* harmony import */ var _tween_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(440);
/* harmony import */ var _interpolate_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(441);





function attrRemove(name) {
  return function () {
    this.removeAttribute(name);
  };
}

function attrRemoveNS(fullname) {
  return function () {
    this.removeAttributeNS(fullname.space, fullname.local);
  };
}

function attrConstant(name, interpolate, value1) {
  var string00,
      string1 = value1 + "",
      interpolate0;
  return function () {
    var string0 = this.getAttribute(name);
    return string0 === string1 ? null : string0 === string00 ? interpolate0 : interpolate0 = interpolate(string00 = string0, value1);
  };
}

function attrConstantNS(fullname, interpolate, value1) {
  var string00,
      string1 = value1 + "",
      interpolate0;
  return function () {
    var string0 = this.getAttributeNS(fullname.space, fullname.local);
    return string0 === string1 ? null : string0 === string00 ? interpolate0 : interpolate0 = interpolate(string00 = string0, value1);
  };
}

function attrFunction(name, interpolate, value) {
  var string00, string10, interpolate0;
  return function () {
    var string0,
        value1 = value(this),
        string1;
    if (value1 == null) return void this.removeAttribute(name);
    string0 = this.getAttribute(name);
    string1 = value1 + "";
    return string0 === string1 ? null : string0 === string00 && string1 === string10 ? interpolate0 : (string10 = string1, interpolate0 = interpolate(string00 = string0, value1));
  };
}

function attrFunctionNS(fullname, interpolate, value) {
  var string00, string10, interpolate0;
  return function () {
    var string0,
        value1 = value(this),
        string1;
    if (value1 == null) return void this.removeAttributeNS(fullname.space, fullname.local);
    string0 = this.getAttributeNS(fullname.space, fullname.local);
    string1 = value1 + "";
    return string0 === string1 ? null : string0 === string00 && string1 === string10 ? interpolate0 : (string10 = string1, interpolate0 = interpolate(string00 = string0, value1));
  };
}

/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(name, value) {
  var fullname = (0,d3_selection__WEBPACK_IMPORTED_MODULE_2__.default)(name),
      i = fullname === "transform" ? d3_interpolate__WEBPACK_IMPORTED_MODULE_3__.interpolateTransformSvg : _interpolate_js__WEBPACK_IMPORTED_MODULE_1__.default;
  return this.attrTween(name, typeof value === "function" ? (fullname.local ? attrFunctionNS : attrFunction)(fullname, i, (0,_tween_js__WEBPACK_IMPORTED_MODULE_0__.tweenValue)(this, "attr." + name, value)) : value == null ? (fullname.local ? attrRemoveNS : attrRemove)(fullname) : (fullname.local ? attrConstantNS : attrConstant)(fullname, i, value));
}

/***/ }),
/* 440 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* export default binding */ __WEBPACK_DEFAULT_EXPORT__),
/* harmony export */   "tweenValue": () => (/* binding */ tweenValue)
/* harmony export */ });
/* harmony import */ var _schedule_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(434);


function tweenRemove(id, name) {
  var tween0, tween1;
  return function () {
    var schedule = (0,_schedule_js__WEBPACK_IMPORTED_MODULE_0__.set)(this, id),
        tween = schedule.tween; // If this node shared tween with the previous node,
    // just assign the updated shared tween and we’re done!
    // Otherwise, copy-on-write.

    if (tween !== tween0) {
      tween1 = tween0 = tween;

      for (var i = 0, n = tween1.length; i < n; ++i) {
        if (tween1[i].name === name) {
          tween1 = tween1.slice();
          tween1.splice(i, 1);
          break;
        }
      }
    }

    schedule.tween = tween1;
  };
}

function tweenFunction(id, name, value) {
  var tween0, tween1;
  if (typeof value !== "function") throw new Error();
  return function () {
    var schedule = (0,_schedule_js__WEBPACK_IMPORTED_MODULE_0__.set)(this, id),
        tween = schedule.tween; // If this node shared tween with the previous node,
    // just assign the updated shared tween and we’re done!
    // Otherwise, copy-on-write.

    if (tween !== tween0) {
      tween1 = (tween0 = tween).slice();

      for (var t = {
        name: name,
        value: value
      }, i = 0, n = tween1.length; i < n; ++i) {
        if (tween1[i].name === name) {
          tween1[i] = t;
          break;
        }
      }

      if (i === n) tween1.push(t);
    }

    schedule.tween = tween1;
  };
}

/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(name, value) {
  var id = this._id;
  name += "";

  if (arguments.length < 2) {
    var tween = (0,_schedule_js__WEBPACK_IMPORTED_MODULE_0__.get)(this.node(), id).tween;

    for (var i = 0, n = tween.length, t; i < n; ++i) {
      if ((t = tween[i]).name === name) {
        return t.value;
      }
    }

    return null;
  }

  return this.each((value == null ? tweenRemove : tweenFunction)(id, name, value));
}
function tweenValue(transition, name, value) {
  var id = transition._id;
  transition.each(function () {
    var schedule = (0,_schedule_js__WEBPACK_IMPORTED_MODULE_0__.set)(this, id);
    (schedule.value || (schedule.value = {}))[name] = value.apply(this, arguments);
  });
  return function (node) {
    return (0,_schedule_js__WEBPACK_IMPORTED_MODULE_0__.get)(node, id).value[name];
  };
}

/***/ }),
/* 441 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* export default binding */ __WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var d3_color__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(443);
/* harmony import */ var d3_interpolate__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(442);
/* harmony import */ var d3_interpolate__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(445);
/* harmony import */ var d3_interpolate__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(450);


/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(a, b) {
  var c;
  return (typeof b === "number" ? d3_interpolate__WEBPACK_IMPORTED_MODULE_0__.default : b instanceof d3_color__WEBPACK_IMPORTED_MODULE_1__.default ? d3_interpolate__WEBPACK_IMPORTED_MODULE_2__.default : (c = (0,d3_color__WEBPACK_IMPORTED_MODULE_1__.default)(b)) ? (b = c, d3_interpolate__WEBPACK_IMPORTED_MODULE_2__.default) : d3_interpolate__WEBPACK_IMPORTED_MODULE_3__.default)(a, b);
}

/***/ }),
/* 442 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* export default binding */ __WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(a, b) {
  return a = +a, b = +b, function (t) {
    return a * (1 - t) + b * t;
  };
}

/***/ }),
/* 443 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Color": () => (/* binding */ Color),
/* harmony export */   "darker": () => (/* binding */ darker),
/* harmony export */   "brighter": () => (/* binding */ brighter),
/* harmony export */   "default": () => (/* binding */ color),
/* harmony export */   "rgbConvert": () => (/* binding */ rgbConvert),
/* harmony export */   "rgb": () => (/* binding */ rgb),
/* harmony export */   "Rgb": () => (/* binding */ Rgb),
/* harmony export */   "hslConvert": () => (/* binding */ hslConvert),
/* harmony export */   "hsl": () => (/* binding */ hsl)
/* harmony export */ });
/* harmony import */ var _define_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(444);

function Color() {}
var darker = 0.7;
var brighter = 1 / darker;
var reI = "\\s*([+-]?\\d+)\\s*",
    reN = "\\s*([+-]?\\d*\\.?\\d+(?:[eE][+-]?\\d+)?)\\s*",
    reP = "\\s*([+-]?\\d*\\.?\\d+(?:[eE][+-]?\\d+)?)%\\s*",
    reHex = /^#([0-9a-f]{3,8})$/,
    reRgbInteger = new RegExp("^rgb\\(" + [reI, reI, reI] + "\\)$"),
    reRgbPercent = new RegExp("^rgb\\(" + [reP, reP, reP] + "\\)$"),
    reRgbaInteger = new RegExp("^rgba\\(" + [reI, reI, reI, reN] + "\\)$"),
    reRgbaPercent = new RegExp("^rgba\\(" + [reP, reP, reP, reN] + "\\)$"),
    reHslPercent = new RegExp("^hsl\\(" + [reN, reP, reP] + "\\)$"),
    reHslaPercent = new RegExp("^hsla\\(" + [reN, reP, reP, reN] + "\\)$");
var named = {
  aliceblue: 0xf0f8ff,
  antiquewhite: 0xfaebd7,
  aqua: 0x00ffff,
  aquamarine: 0x7fffd4,
  azure: 0xf0ffff,
  beige: 0xf5f5dc,
  bisque: 0xffe4c4,
  black: 0x000000,
  blanchedalmond: 0xffebcd,
  blue: 0x0000ff,
  blueviolet: 0x8a2be2,
  brown: 0xa52a2a,
  burlywood: 0xdeb887,
  cadetblue: 0x5f9ea0,
  chartreuse: 0x7fff00,
  chocolate: 0xd2691e,
  coral: 0xff7f50,
  cornflowerblue: 0x6495ed,
  cornsilk: 0xfff8dc,
  crimson: 0xdc143c,
  cyan: 0x00ffff,
  darkblue: 0x00008b,
  darkcyan: 0x008b8b,
  darkgoldenrod: 0xb8860b,
  darkgray: 0xa9a9a9,
  darkgreen: 0x006400,
  darkgrey: 0xa9a9a9,
  darkkhaki: 0xbdb76b,
  darkmagenta: 0x8b008b,
  darkolivegreen: 0x556b2f,
  darkorange: 0xff8c00,
  darkorchid: 0x9932cc,
  darkred: 0x8b0000,
  darksalmon: 0xe9967a,
  darkseagreen: 0x8fbc8f,
  darkslateblue: 0x483d8b,
  darkslategray: 0x2f4f4f,
  darkslategrey: 0x2f4f4f,
  darkturquoise: 0x00ced1,
  darkviolet: 0x9400d3,
  deeppink: 0xff1493,
  deepskyblue: 0x00bfff,
  dimgray: 0x696969,
  dimgrey: 0x696969,
  dodgerblue: 0x1e90ff,
  firebrick: 0xb22222,
  floralwhite: 0xfffaf0,
  forestgreen: 0x228b22,
  fuchsia: 0xff00ff,
  gainsboro: 0xdcdcdc,
  ghostwhite: 0xf8f8ff,
  gold: 0xffd700,
  goldenrod: 0xdaa520,
  gray: 0x808080,
  green: 0x008000,
  greenyellow: 0xadff2f,
  grey: 0x808080,
  honeydew: 0xf0fff0,
  hotpink: 0xff69b4,
  indianred: 0xcd5c5c,
  indigo: 0x4b0082,
  ivory: 0xfffff0,
  khaki: 0xf0e68c,
  lavender: 0xe6e6fa,
  lavenderblush: 0xfff0f5,
  lawngreen: 0x7cfc00,
  lemonchiffon: 0xfffacd,
  lightblue: 0xadd8e6,
  lightcoral: 0xf08080,
  lightcyan: 0xe0ffff,
  lightgoldenrodyellow: 0xfafad2,
  lightgray: 0xd3d3d3,
  lightgreen: 0x90ee90,
  lightgrey: 0xd3d3d3,
  lightpink: 0xffb6c1,
  lightsalmon: 0xffa07a,
  lightseagreen: 0x20b2aa,
  lightskyblue: 0x87cefa,
  lightslategray: 0x778899,
  lightslategrey: 0x778899,
  lightsteelblue: 0xb0c4de,
  lightyellow: 0xffffe0,
  lime: 0x00ff00,
  limegreen: 0x32cd32,
  linen: 0xfaf0e6,
  magenta: 0xff00ff,
  maroon: 0x800000,
  mediumaquamarine: 0x66cdaa,
  mediumblue: 0x0000cd,
  mediumorchid: 0xba55d3,
  mediumpurple: 0x9370db,
  mediumseagreen: 0x3cb371,
  mediumslateblue: 0x7b68ee,
  mediumspringgreen: 0x00fa9a,
  mediumturquoise: 0x48d1cc,
  mediumvioletred: 0xc71585,
  midnightblue: 0x191970,
  mintcream: 0xf5fffa,
  mistyrose: 0xffe4e1,
  moccasin: 0xffe4b5,
  navajowhite: 0xffdead,
  navy: 0x000080,
  oldlace: 0xfdf5e6,
  olive: 0x808000,
  olivedrab: 0x6b8e23,
  orange: 0xffa500,
  orangered: 0xff4500,
  orchid: 0xda70d6,
  palegoldenrod: 0xeee8aa,
  palegreen: 0x98fb98,
  paleturquoise: 0xafeeee,
  palevioletred: 0xdb7093,
  papayawhip: 0xffefd5,
  peachpuff: 0xffdab9,
  peru: 0xcd853f,
  pink: 0xffc0cb,
  plum: 0xdda0dd,
  powderblue: 0xb0e0e6,
  purple: 0x800080,
  rebeccapurple: 0x663399,
  red: 0xff0000,
  rosybrown: 0xbc8f8f,
  royalblue: 0x4169e1,
  saddlebrown: 0x8b4513,
  salmon: 0xfa8072,
  sandybrown: 0xf4a460,
  seagreen: 0x2e8b57,
  seashell: 0xfff5ee,
  sienna: 0xa0522d,
  silver: 0xc0c0c0,
  skyblue: 0x87ceeb,
  slateblue: 0x6a5acd,
  slategray: 0x708090,
  slategrey: 0x708090,
  snow: 0xfffafa,
  springgreen: 0x00ff7f,
  steelblue: 0x4682b4,
  tan: 0xd2b48c,
  teal: 0x008080,
  thistle: 0xd8bfd8,
  tomato: 0xff6347,
  turquoise: 0x40e0d0,
  violet: 0xee82ee,
  wheat: 0xf5deb3,
  white: 0xffffff,
  whitesmoke: 0xf5f5f5,
  yellow: 0xffff00,
  yellowgreen: 0x9acd32
};
(0,_define_js__WEBPACK_IMPORTED_MODULE_0__.default)(Color, color, {
  copy: function (channels) {
    return Object.assign(new this.constructor(), this, channels);
  },
  displayable: function () {
    return this.rgb().displayable();
  },
  hex: color_formatHex,
  // Deprecated! Use color.formatHex.
  formatHex: color_formatHex,
  formatHsl: color_formatHsl,
  formatRgb: color_formatRgb,
  toString: color_formatRgb
});

function color_formatHex() {
  return this.rgb().formatHex();
}

function color_formatHsl() {
  return hslConvert(this).formatHsl();
}

function color_formatRgb() {
  return this.rgb().formatRgb();
}

function color(format) {
  var m, l;
  format = (format + "").trim().toLowerCase();
  return (m = reHex.exec(format)) ? (l = m[1].length, m = parseInt(m[1], 16), l === 6 ? rgbn(m) // #ff0000
  : l === 3 ? new Rgb(m >> 8 & 0xf | m >> 4 & 0xf0, m >> 4 & 0xf | m & 0xf0, (m & 0xf) << 4 | m & 0xf, 1) // #f00
  : l === 8 ? rgba(m >> 24 & 0xff, m >> 16 & 0xff, m >> 8 & 0xff, (m & 0xff) / 0xff) // #ff000000
  : l === 4 ? rgba(m >> 12 & 0xf | m >> 8 & 0xf0, m >> 8 & 0xf | m >> 4 & 0xf0, m >> 4 & 0xf | m & 0xf0, ((m & 0xf) << 4 | m & 0xf) / 0xff) // #f000
  : null // invalid hex
  ) : (m = reRgbInteger.exec(format)) ? new Rgb(m[1], m[2], m[3], 1) // rgb(255, 0, 0)
  : (m = reRgbPercent.exec(format)) ? new Rgb(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, 1) // rgb(100%, 0%, 0%)
  : (m = reRgbaInteger.exec(format)) ? rgba(m[1], m[2], m[3], m[4]) // rgba(255, 0, 0, 1)
  : (m = reRgbaPercent.exec(format)) ? rgba(m[1] * 255 / 100, m[2] * 255 / 100, m[3] * 255 / 100, m[4]) // rgb(100%, 0%, 0%, 1)
  : (m = reHslPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, 1) // hsl(120, 50%, 50%)
  : (m = reHslaPercent.exec(format)) ? hsla(m[1], m[2] / 100, m[3] / 100, m[4]) // hsla(120, 50%, 50%, 1)
  : named.hasOwnProperty(format) ? rgbn(named[format]) // eslint-disable-line no-prototype-builtins
  : format === "transparent" ? new Rgb(NaN, NaN, NaN, 0) : null;
}

function rgbn(n) {
  return new Rgb(n >> 16 & 0xff, n >> 8 & 0xff, n & 0xff, 1);
}

function rgba(r, g, b, a) {
  if (a <= 0) r = g = b = NaN;
  return new Rgb(r, g, b, a);
}

function rgbConvert(o) {
  if (!(o instanceof Color)) o = color(o);
  if (!o) return new Rgb();
  o = o.rgb();
  return new Rgb(o.r, o.g, o.b, o.opacity);
}
function rgb(r, g, b, opacity) {
  return arguments.length === 1 ? rgbConvert(r) : new Rgb(r, g, b, opacity == null ? 1 : opacity);
}
function Rgb(r, g, b, opacity) {
  this.r = +r;
  this.g = +g;
  this.b = +b;
  this.opacity = +opacity;
}
(0,_define_js__WEBPACK_IMPORTED_MODULE_0__.default)(Rgb, rgb, (0,_define_js__WEBPACK_IMPORTED_MODULE_0__.extend)(Color, {
  brighter: function (k) {
    k = k == null ? brighter : Math.pow(brighter, k);
    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);
  },
  darker: function (k) {
    k = k == null ? darker : Math.pow(darker, k);
    return new Rgb(this.r * k, this.g * k, this.b * k, this.opacity);
  },
  rgb: function () {
    return this;
  },
  displayable: function () {
    return -0.5 <= this.r && this.r < 255.5 && -0.5 <= this.g && this.g < 255.5 && -0.5 <= this.b && this.b < 255.5 && 0 <= this.opacity && this.opacity <= 1;
  },
  hex: rgb_formatHex,
  // Deprecated! Use color.formatHex.
  formatHex: rgb_formatHex,
  formatRgb: rgb_formatRgb,
  toString: rgb_formatRgb
}));

function rgb_formatHex() {
  return "#" + hex(this.r) + hex(this.g) + hex(this.b);
}

function rgb_formatRgb() {
  var a = this.opacity;
  a = isNaN(a) ? 1 : Math.max(0, Math.min(1, a));
  return (a === 1 ? "rgb(" : "rgba(") + Math.max(0, Math.min(255, Math.round(this.r) || 0)) + ", " + Math.max(0, Math.min(255, Math.round(this.g) || 0)) + ", " + Math.max(0, Math.min(255, Math.round(this.b) || 0)) + (a === 1 ? ")" : ", " + a + ")");
}

function hex(value) {
  value = Math.max(0, Math.min(255, Math.round(value) || 0));
  return (value < 16 ? "0" : "") + value.toString(16);
}

function hsla(h, s, l, a) {
  if (a <= 0) h = s = l = NaN;else if (l <= 0 || l >= 1) h = s = NaN;else if (s <= 0) h = NaN;
  return new Hsl(h, s, l, a);
}

function hslConvert(o) {
  if (o instanceof Hsl) return new Hsl(o.h, o.s, o.l, o.opacity);
  if (!(o instanceof Color)) o = color(o);
  if (!o) return new Hsl();
  if (o instanceof Hsl) return o;
  o = o.rgb();
  var r = o.r / 255,
      g = o.g / 255,
      b = o.b / 255,
      min = Math.min(r, g, b),
      max = Math.max(r, g, b),
      h = NaN,
      s = max - min,
      l = (max + min) / 2;

  if (s) {
    if (r === max) h = (g - b) / s + (g < b) * 6;else if (g === max) h = (b - r) / s + 2;else h = (r - g) / s + 4;
    s /= l < 0.5 ? max + min : 2 - max - min;
    h *= 60;
  } else {
    s = l > 0 && l < 1 ? 0 : h;
  }

  return new Hsl(h, s, l, o.opacity);
}
function hsl(h, s, l, opacity) {
  return arguments.length === 1 ? hslConvert(h) : new Hsl(h, s, l, opacity == null ? 1 : opacity);
}

function Hsl(h, s, l, opacity) {
  this.h = +h;
  this.s = +s;
  this.l = +l;
  this.opacity = +opacity;
}

(0,_define_js__WEBPACK_IMPORTED_MODULE_0__.default)(Hsl, hsl, (0,_define_js__WEBPACK_IMPORTED_MODULE_0__.extend)(Color, {
  brighter: function (k) {
    k = k == null ? brighter : Math.pow(brighter, k);
    return new Hsl(this.h, this.s, this.l * k, this.opacity);
  },
  darker: function (k) {
    k = k == null ? darker : Math.pow(darker, k);
    return new Hsl(this.h, this.s, this.l * k, this.opacity);
  },
  rgb: function () {
    var h = this.h % 360 + (this.h < 0) * 360,
        s = isNaN(h) || isNaN(this.s) ? 0 : this.s,
        l = this.l,
        m2 = l + (l < 0.5 ? l : 1 - l) * s,
        m1 = 2 * l - m2;
    return new Rgb(hsl2rgb(h >= 240 ? h - 240 : h + 120, m1, m2), hsl2rgb(h, m1, m2), hsl2rgb(h < 120 ? h + 240 : h - 120, m1, m2), this.opacity);
  },
  displayable: function () {
    return (0 <= this.s && this.s <= 1 || isNaN(this.s)) && 0 <= this.l && this.l <= 1 && 0 <= this.opacity && this.opacity <= 1;
  },
  formatHsl: function () {
    var a = this.opacity;
    a = isNaN(a) ? 1 : Math.max(0, Math.min(1, a));
    return (a === 1 ? "hsl(" : "hsla(") + (this.h || 0) + ", " + (this.s || 0) * 100 + "%, " + (this.l || 0) * 100 + "%" + (a === 1 ? ")" : ", " + a + ")");
  }
}));
/* From FvD 13.37, CSS Color Module Level 3 */

function hsl2rgb(h, m1, m2) {
  return (h < 60 ? m1 + (m2 - m1) * h / 60 : h < 180 ? m2 : h < 240 ? m1 + (m2 - m1) * (240 - h) / 60 : m1) * 255;
}

/***/ }),
/* 444 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* export default binding */ __WEBPACK_DEFAULT_EXPORT__),
/* harmony export */   "extend": () => (/* binding */ extend)
/* harmony export */ });
/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(constructor, factory, prototype) {
  constructor.prototype = factory.prototype = prototype;
  prototype.constructor = constructor;
}
function extend(parent, definition) {
  var prototype = Object.create(parent.prototype);

  for (var key in definition) prototype[key] = definition[key];

  return prototype;
}

/***/ }),
/* 445 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__),
/* harmony export */   "rgbBasis": () => (/* binding */ rgbBasis),
/* harmony export */   "rgbBasisClosed": () => (/* binding */ rgbBasisClosed)
/* harmony export */ });
/* harmony import */ var d3_color__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(443);
/* harmony import */ var _basis_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(448);
/* harmony import */ var _basisClosed_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(449);
/* harmony import */ var _color_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(446);




/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((function rgbGamma(y) {
  var color = (0,_color_js__WEBPACK_IMPORTED_MODULE_0__.gamma)(y);

  function rgb(start, end) {
    var r = color((start = (0,d3_color__WEBPACK_IMPORTED_MODULE_1__.rgb)(start)).r, (end = (0,d3_color__WEBPACK_IMPORTED_MODULE_1__.rgb)(end)).r),
        g = color(start.g, end.g),
        b = color(start.b, end.b),
        opacity = (0,_color_js__WEBPACK_IMPORTED_MODULE_0__.default)(start.opacity, end.opacity);
    return function (t) {
      start.r = r(t);
      start.g = g(t);
      start.b = b(t);
      start.opacity = opacity(t);
      return start + "";
    };
  }

  rgb.gamma = rgbGamma;
  return rgb;
})(1));

function rgbSpline(spline) {
  return function (colors) {
    var n = colors.length,
        r = new Array(n),
        g = new Array(n),
        b = new Array(n),
        i,
        color;

    for (i = 0; i < n; ++i) {
      color = (0,d3_color__WEBPACK_IMPORTED_MODULE_1__.rgb)(colors[i]);
      r[i] = color.r || 0;
      g[i] = color.g || 0;
      b[i] = color.b || 0;
    }

    r = spline(r);
    g = spline(g);
    b = spline(b);
    color.opacity = 1;
    return function (t) {
      color.r = r(t);
      color.g = g(t);
      color.b = b(t);
      return color + "";
    };
  };
}

var rgbBasis = rgbSpline(_basis_js__WEBPACK_IMPORTED_MODULE_2__.default);
var rgbBasisClosed = rgbSpline(_basisClosed_js__WEBPACK_IMPORTED_MODULE_3__.default);

/***/ }),
/* 446 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "hue": () => (/* binding */ hue),
/* harmony export */   "gamma": () => (/* binding */ gamma),
/* harmony export */   "default": () => (/* binding */ nogamma)
/* harmony export */ });
/* harmony import */ var _constant_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(447);


function linear(a, d) {
  return function (t) {
    return a + t * d;
  };
}

function exponential(a, b, y) {
  return a = Math.pow(a, y), b = Math.pow(b, y) - a, y = 1 / y, function (t) {
    return Math.pow(a + t * b, y);
  };
}

function hue(a, b) {
  var d = b - a;
  return d ? linear(a, d > 180 || d < -180 ? d - 360 * Math.round(d / 360) : d) : (0,_constant_js__WEBPACK_IMPORTED_MODULE_0__.default)(isNaN(a) ? b : a);
}
function gamma(y) {
  return (y = +y) === 1 ? nogamma : function (a, b) {
    return b - a ? exponential(a, b, y) : (0,_constant_js__WEBPACK_IMPORTED_MODULE_0__.default)(isNaN(a) ? b : a);
  };
}
function nogamma(a, b) {
  var d = b - a;
  return d ? linear(a, d) : (0,_constant_js__WEBPACK_IMPORTED_MODULE_0__.default)(isNaN(a) ? b : a);
}

/***/ }),
/* 447 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (x => () => x);

/***/ }),
/* 448 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "basis": () => (/* binding */ basis),
/* harmony export */   "default": () => (/* export default binding */ __WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
function basis(t1, v0, v1, v2, v3) {
  var t2 = t1 * t1,
      t3 = t2 * t1;
  return ((1 - 3 * t1 + 3 * t2 - t3) * v0 + (4 - 6 * t2 + 3 * t3) * v1 + (1 + 3 * t1 + 3 * t2 - 3 * t3) * v2 + t3 * v3) / 6;
}
/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(values) {
  var n = values.length - 1;
  return function (t) {
    var i = t <= 0 ? t = 0 : t >= 1 ? (t = 1, n - 1) : Math.floor(t * n),
        v1 = values[i],
        v2 = values[i + 1],
        v0 = i > 0 ? values[i - 1] : 2 * v1 - v2,
        v3 = i < n - 1 ? values[i + 2] : 2 * v2 - v1;
    return basis((t - i / n) * n, v0, v1, v2, v3);
  };
}

/***/ }),
/* 449 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* export default binding */ __WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _basis_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(448);

/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(values) {
  var n = values.length;
  return function (t) {
    var i = Math.floor(((t %= 1) < 0 ? ++t : t) * n),
        v0 = values[(i + n - 1) % n],
        v1 = values[i % n],
        v2 = values[(i + 1) % n],
        v3 = values[(i + 2) % n];
    return (0,_basis_js__WEBPACK_IMPORTED_MODULE_0__.basis)((t - i / n) * n, v0, v1, v2, v3);
  };
}

/***/ }),
/* 450 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* export default binding */ __WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _number_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(442);

var reA = /[-+]?(?:\d+\.?\d*|\.?\d+)(?:[eE][-+]?\d+)?/g,
    reB = new RegExp(reA.source, "g");

function zero(b) {
  return function () {
    return b;
  };
}

function one(b) {
  return function (t) {
    return b(t) + "";
  };
}

/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(a, b) {
  var bi = reA.lastIndex = reB.lastIndex = 0,
      // scan index for next number in b
  am,
      // current match in a
  bm,
      // current match in b
  bs,
      // string preceding current number in b, if any
  i = -1,
      // index in s
  s = [],
      // string constants and placeholders
  q = []; // number interpolators
  // Coerce inputs to strings.

  a = a + "", b = b + ""; // Interpolate pairs of numbers in a & b.

  while ((am = reA.exec(a)) && (bm = reB.exec(b))) {
    if ((bs = bm.index) > bi) {
      // a string precedes the next number in b
      bs = b.slice(bi, bs);
      if (s[i]) s[i] += bs; // coalesce with previous string
      else s[++i] = bs;
    }

    if ((am = am[0]) === (bm = bm[0])) {
      // numbers in a & b match
      if (s[i]) s[i] += bm; // coalesce with previous string
      else s[++i] = bm;
    } else {
      // interpolate non-matching numbers
      s[++i] = null;
      q.push({
        i: i,
        x: (0,_number_js__WEBPACK_IMPORTED_MODULE_0__.default)(am, bm)
      });
    }

    bi = reB.lastIndex;
  } // Add remains of b.


  if (bi < b.length) {
    bs = b.slice(bi);
    if (s[i]) s[i] += bs; // coalesce with previous string
    else s[++i] = bs;
  } // Special optimization for only a single match.
  // Otherwise, interpolate each of the numbers and rejoin the string.


  return s.length < 2 ? q[0] ? one(q[0].x) : zero(b) : (b = q.length, function (t) {
    for (var i = 0, o; i < b; ++i) s[(o = q[i]).i] = o.x(t);

    return s.join("");
  });
}

/***/ }),
/* 451 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "interpolateTransformCss": () => (/* binding */ interpolateTransformCss),
/* harmony export */   "interpolateTransformSvg": () => (/* binding */ interpolateTransformSvg)
/* harmony export */ });
/* harmony import */ var _number_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(442);
/* harmony import */ var _parse_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(452);



function interpolateTransform(parse, pxComma, pxParen, degParen) {
  function pop(s) {
    return s.length ? s.pop() + " " : "";
  }

  function translate(xa, ya, xb, yb, s, q) {
    if (xa !== xb || ya !== yb) {
      var i = s.push("translate(", null, pxComma, null, pxParen);
      q.push({
        i: i - 4,
        x: (0,_number_js__WEBPACK_IMPORTED_MODULE_0__.default)(xa, xb)
      }, {
        i: i - 2,
        x: (0,_number_js__WEBPACK_IMPORTED_MODULE_0__.default)(ya, yb)
      });
    } else if (xb || yb) {
      s.push("translate(" + xb + pxComma + yb + pxParen);
    }
  }

  function rotate(a, b, s, q) {
    if (a !== b) {
      if (a - b > 180) b += 360;else if (b - a > 180) a += 360; // shortest path

      q.push({
        i: s.push(pop(s) + "rotate(", null, degParen) - 2,
        x: (0,_number_js__WEBPACK_IMPORTED_MODULE_0__.default)(a, b)
      });
    } else if (b) {
      s.push(pop(s) + "rotate(" + b + degParen);
    }
  }

  function skewX(a, b, s, q) {
    if (a !== b) {
      q.push({
        i: s.push(pop(s) + "skewX(", null, degParen) - 2,
        x: (0,_number_js__WEBPACK_IMPORTED_MODULE_0__.default)(a, b)
      });
    } else if (b) {
      s.push(pop(s) + "skewX(" + b + degParen);
    }
  }

  function scale(xa, ya, xb, yb, s, q) {
    if (xa !== xb || ya !== yb) {
      var i = s.push(pop(s) + "scale(", null, ",", null, ")");
      q.push({
        i: i - 4,
        x: (0,_number_js__WEBPACK_IMPORTED_MODULE_0__.default)(xa, xb)
      }, {
        i: i - 2,
        x: (0,_number_js__WEBPACK_IMPORTED_MODULE_0__.default)(ya, yb)
      });
    } else if (xb !== 1 || yb !== 1) {
      s.push(pop(s) + "scale(" + xb + "," + yb + ")");
    }
  }

  return function (a, b) {
    var s = [],
        // string constants and placeholders
    q = []; // number interpolators

    a = parse(a), b = parse(b);
    translate(a.translateX, a.translateY, b.translateX, b.translateY, s, q);
    rotate(a.rotate, b.rotate, s, q);
    skewX(a.skewX, b.skewX, s, q);
    scale(a.scaleX, a.scaleY, b.scaleX, b.scaleY, s, q);
    a = b = null; // gc

    return function (t) {
      var i = -1,
          n = q.length,
          o;

      while (++i < n) s[(o = q[i]).i] = o.x(t);

      return s.join("");
    };
  };
}

var interpolateTransformCss = interpolateTransform(_parse_js__WEBPACK_IMPORTED_MODULE_1__.parseCss, "px, ", "px)", "deg)");
var interpolateTransformSvg = interpolateTransform(_parse_js__WEBPACK_IMPORTED_MODULE_1__.parseSvg, ", ", ")", ")");

/***/ }),
/* 452 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "parseCss": () => (/* binding */ parseCss),
/* harmony export */   "parseSvg": () => (/* binding */ parseSvg)
/* harmony export */ });
/* harmony import */ var _decompose_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(453);

var svgNode;
/* eslint-disable no-undef */

function parseCss(value) {
  const m = new (typeof DOMMatrix === "function" ? DOMMatrix : WebKitCSSMatrix)(value + "");
  return m.isIdentity ? _decompose_js__WEBPACK_IMPORTED_MODULE_0__.identity : (0,_decompose_js__WEBPACK_IMPORTED_MODULE_0__.default)(m.a, m.b, m.c, m.d, m.e, m.f);
}
function parseSvg(value) {
  if (value == null) return _decompose_js__WEBPACK_IMPORTED_MODULE_0__.identity;
  if (!svgNode) svgNode = document.createElementNS("http://www.w3.org/2000/svg", "g");
  svgNode.setAttribute("transform", value);
  if (!(value = svgNode.transform.baseVal.consolidate())) return _decompose_js__WEBPACK_IMPORTED_MODULE_0__.identity;
  value = value.matrix;
  return (0,_decompose_js__WEBPACK_IMPORTED_MODULE_0__.default)(value.a, value.b, value.c, value.d, value.e, value.f);
}

/***/ }),
/* 453 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "identity": () => (/* binding */ identity),
/* harmony export */   "default": () => (/* export default binding */ __WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
var degrees = 180 / Math.PI;
var identity = {
  translateX: 0,
  translateY: 0,
  rotate: 0,
  skewX: 0,
  scaleX: 1,
  scaleY: 1
};
/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(a, b, c, d, e, f) {
  var scaleX, scaleY, skewX;
  if (scaleX = Math.sqrt(a * a + b * b)) a /= scaleX, b /= scaleX;
  if (skewX = a * c + b * d) c -= a * skewX, d -= b * skewX;
  if (scaleY = Math.sqrt(c * c + d * d)) c /= scaleY, d /= scaleY, skewX /= scaleY;
  if (a * d < b * c) a = -a, b = -b, skewX = -skewX, scaleX = -scaleX;
  return {
    translateX: e,
    translateY: f,
    rotate: Math.atan2(b, a) * degrees,
    skewX: Math.atan(skewX) * degrees,
    scaleX: scaleX,
    scaleY: scaleY
  };
}

/***/ }),
/* 454 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* export default binding */ __WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var d3_selection__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(404);


function attrInterpolate(name, i) {
  return function (t) {
    this.setAttribute(name, i.call(this, t));
  };
}

function attrInterpolateNS(fullname, i) {
  return function (t) {
    this.setAttributeNS(fullname.space, fullname.local, i.call(this, t));
  };
}

function attrTweenNS(fullname, value) {
  var t0, i0;

  function tween() {
    var i = value.apply(this, arguments);
    if (i !== i0) t0 = (i0 = i) && attrInterpolateNS(fullname, i);
    return t0;
  }

  tween._value = value;
  return tween;
}

function attrTween(name, value) {
  var t0, i0;

  function tween() {
    var i = value.apply(this, arguments);
    if (i !== i0) t0 = (i0 = i) && attrInterpolate(name, i);
    return t0;
  }

  tween._value = value;
  return tween;
}

/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(name, value) {
  var key = "attr." + name;
  if (arguments.length < 2) return (key = this.tween(key)) && key._value;
  if (value == null) return this.tween(key, null);
  if (typeof value !== "function") throw new Error();
  var fullname = (0,d3_selection__WEBPACK_IMPORTED_MODULE_0__.default)(name);
  return this.tween(key, (fullname.local ? attrTweenNS : attrTween)(fullname, value));
}

/***/ }),
/* 455 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* export default binding */ __WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _schedule_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(434);


function delayFunction(id, value) {
  return function () {
    (0,_schedule_js__WEBPACK_IMPORTED_MODULE_0__.init)(this, id).delay = +value.apply(this, arguments);
  };
}

function delayConstant(id, value) {
  return value = +value, function () {
    (0,_schedule_js__WEBPACK_IMPORTED_MODULE_0__.init)(this, id).delay = value;
  };
}

/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(value) {
  var id = this._id;
  return arguments.length ? this.each((typeof value === "function" ? delayFunction : delayConstant)(id, value)) : (0,_schedule_js__WEBPACK_IMPORTED_MODULE_0__.get)(this.node(), id).delay;
}

/***/ }),
/* 456 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* export default binding */ __WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _schedule_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(434);


function durationFunction(id, value) {
  return function () {
    (0,_schedule_js__WEBPACK_IMPORTED_MODULE_0__.set)(this, id).duration = +value.apply(this, arguments);
  };
}

function durationConstant(id, value) {
  return value = +value, function () {
    (0,_schedule_js__WEBPACK_IMPORTED_MODULE_0__.set)(this, id).duration = value;
  };
}

/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(value) {
  var id = this._id;
  return arguments.length ? this.each((typeof value === "function" ? durationFunction : durationConstant)(id, value)) : (0,_schedule_js__WEBPACK_IMPORTED_MODULE_0__.get)(this.node(), id).duration;
}

/***/ }),
/* 457 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* export default binding */ __WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _schedule_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(434);


function easeConstant(id, value) {
  if (typeof value !== "function") throw new Error();
  return function () {
    (0,_schedule_js__WEBPACK_IMPORTED_MODULE_0__.set)(this, id).ease = value;
  };
}

/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(value) {
  var id = this._id;
  return arguments.length ? this.each(easeConstant(id, value)) : (0,_schedule_js__WEBPACK_IMPORTED_MODULE_0__.get)(this.node(), id).ease;
}

/***/ }),
/* 458 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* export default binding */ __WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _schedule_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(434);


function easeVarying(id, value) {
  return function () {
    var v = value.apply(this, arguments);
    if (typeof v !== "function") throw new Error();
    (0,_schedule_js__WEBPACK_IMPORTED_MODULE_0__.set)(this, id).ease = v;
  };
}

/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(value) {
  if (typeof value !== "function") throw new Error();
  return this.each(easeVarying(this._id, value));
}

/***/ }),
/* 459 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* export default binding */ __WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var d3_selection__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(385);
/* harmony import */ var _index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(438);


/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(match) {
  if (typeof match !== "function") match = (0,d3_selection__WEBPACK_IMPORTED_MODULE_1__.default)(match);

  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {
    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = [], node, i = 0; i < n; ++i) {
      if ((node = group[i]) && match.call(node, node.__data__, i, group)) {
        subgroup.push(node);
      }
    }
  }

  return new _index_js__WEBPACK_IMPORTED_MODULE_0__.Transition(subgroups, this._parents, this._name, this._id);
}

/***/ }),
/* 460 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* export default binding */ __WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(438);

/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(transition) {
  if (transition._id !== this._id) throw new Error();

  for (var groups0 = this._groups, groups1 = transition._groups, m0 = groups0.length, m1 = groups1.length, m = Math.min(m0, m1), merges = new Array(m0), j = 0; j < m; ++j) {
    for (var group0 = groups0[j], group1 = groups1[j], n = group0.length, merge = merges[j] = new Array(n), node, i = 0; i < n; ++i) {
      if (node = group0[i] || group1[i]) {
        merge[i] = node;
      }
    }
  }

  for (; j < m0; ++j) {
    merges[j] = groups0[j];
  }

  return new _index_js__WEBPACK_IMPORTED_MODULE_0__.Transition(merges, this._parents, this._name, this._id);
}

/***/ }),
/* 461 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* export default binding */ __WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _schedule_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(434);


function start(name) {
  return (name + "").trim().split(/^|\s+/).every(function (t) {
    var i = t.indexOf(".");
    if (i >= 0) t = t.slice(0, i);
    return !t || t === "start";
  });
}

function onFunction(id, name, listener) {
  var on0,
      on1,
      sit = start(name) ? _schedule_js__WEBPACK_IMPORTED_MODULE_0__.init : _schedule_js__WEBPACK_IMPORTED_MODULE_0__.set;
  return function () {
    var schedule = sit(this, id),
        on = schedule.on; // If this node shared a dispatch with the previous node,
    // just assign the updated shared dispatch and we’re done!
    // Otherwise, copy-on-write.

    if (on !== on0) (on1 = (on0 = on).copy()).on(name, listener);
    schedule.on = on1;
  };
}

/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(name, listener) {
  var id = this._id;
  return arguments.length < 2 ? (0,_schedule_js__WEBPACK_IMPORTED_MODULE_0__.get)(this.node(), id).on.on(name) : this.each(onFunction(id, name, listener));
}

/***/ }),
/* 462 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* export default binding */ __WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
function removeFunction(id) {
  return function () {
    var parent = this.parentNode;

    for (var i in this.__transition) if (+i !== id) return;

    if (parent) parent.removeChild(this);
  };
}

/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__() {
  return this.on("end.remove", removeFunction(this._id));
}

/***/ }),
/* 463 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* export default binding */ __WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var d3_selection__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(380);
/* harmony import */ var _index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(438);
/* harmony import */ var _schedule_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(434);



/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(select) {
  var name = this._name,
      id = this._id;
  if (typeof select !== "function") select = (0,d3_selection__WEBPACK_IMPORTED_MODULE_2__.default)(select);

  for (var groups = this._groups, m = groups.length, subgroups = new Array(m), j = 0; j < m; ++j) {
    for (var group = groups[j], n = group.length, subgroup = subgroups[j] = new Array(n), node, subnode, i = 0; i < n; ++i) {
      if ((node = group[i]) && (subnode = select.call(node, node.__data__, i, group))) {
        if ("__data__" in node) subnode.__data__ = node.__data__;
        subgroup[i] = subnode;
        (0,_schedule_js__WEBPACK_IMPORTED_MODULE_1__.default)(subgroup[i], name, id, i, subgroup, (0,_schedule_js__WEBPACK_IMPORTED_MODULE_1__.get)(node, id));
      }
    }
  }

  return new _index_js__WEBPACK_IMPORTED_MODULE_0__.Transition(subgroups, this._parents, name, id);
}

/***/ }),
/* 464 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* export default binding */ __WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var d3_selection__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(383);
/* harmony import */ var _index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(438);
/* harmony import */ var _schedule_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(434);



/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(select) {
  var name = this._name,
      id = this._id;
  if (typeof select !== "function") select = (0,d3_selection__WEBPACK_IMPORTED_MODULE_2__.default)(select);

  for (var groups = this._groups, m = groups.length, subgroups = [], parents = [], j = 0; j < m; ++j) {
    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {
      if (node = group[i]) {
        for (var children = select.call(node, node.__data__, i, group), child, inherit = (0,_schedule_js__WEBPACK_IMPORTED_MODULE_1__.get)(node, id), k = 0, l = children.length; k < l; ++k) {
          if (child = children[k]) {
            (0,_schedule_js__WEBPACK_IMPORTED_MODULE_1__.default)(child, name, id, k, children, inherit);
          }
        }

        subgroups.push(children);
        parents.push(node);
      }
    }
  }

  return new _index_js__WEBPACK_IMPORTED_MODULE_0__.Transition(subgroups, parents, name, id);
}

/***/ }),
/* 465 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* export default binding */ __WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var d3_selection__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(378);

var Selection = d3_selection__WEBPACK_IMPORTED_MODULE_0__.default.prototype.constructor;
/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__() {
  return new Selection(this._groups, this._parents);
}

/***/ }),
/* 466 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* export default binding */ __WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var d3_interpolate__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(451);
/* harmony import */ var d3_selection__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(406);
/* harmony import */ var _schedule_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(434);
/* harmony import */ var _tween_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(440);
/* harmony import */ var _interpolate_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(441);






function styleNull(name, interpolate) {
  var string00, string10, interpolate0;
  return function () {
    var string0 = (0,d3_selection__WEBPACK_IMPORTED_MODULE_3__.styleValue)(this, name),
        string1 = (this.style.removeProperty(name), (0,d3_selection__WEBPACK_IMPORTED_MODULE_3__.styleValue)(this, name));
    return string0 === string1 ? null : string0 === string00 && string1 === string10 ? interpolate0 : interpolate0 = interpolate(string00 = string0, string10 = string1);
  };
}

function styleRemove(name) {
  return function () {
    this.style.removeProperty(name);
  };
}

function styleConstant(name, interpolate, value1) {
  var string00,
      string1 = value1 + "",
      interpolate0;
  return function () {
    var string0 = (0,d3_selection__WEBPACK_IMPORTED_MODULE_3__.styleValue)(this, name);
    return string0 === string1 ? null : string0 === string00 ? interpolate0 : interpolate0 = interpolate(string00 = string0, value1);
  };
}

function styleFunction(name, interpolate, value) {
  var string00, string10, interpolate0;
  return function () {
    var string0 = (0,d3_selection__WEBPACK_IMPORTED_MODULE_3__.styleValue)(this, name),
        value1 = value(this),
        string1 = value1 + "";
    if (value1 == null) string1 = value1 = (this.style.removeProperty(name), (0,d3_selection__WEBPACK_IMPORTED_MODULE_3__.styleValue)(this, name));
    return string0 === string1 ? null : string0 === string00 && string1 === string10 ? interpolate0 : (string10 = string1, interpolate0 = interpolate(string00 = string0, value1));
  };
}

function styleMaybeRemove(id, name) {
  var on0,
      on1,
      listener0,
      key = "style." + name,
      event = "end." + key,
      remove;
  return function () {
    var schedule = (0,_schedule_js__WEBPACK_IMPORTED_MODULE_0__.set)(this, id),
        on = schedule.on,
        listener = schedule.value[key] == null ? remove || (remove = styleRemove(name)) : undefined; // If this node shared a dispatch with the previous node,
    // just assign the updated shared dispatch and we’re done!
    // Otherwise, copy-on-write.

    if (on !== on0 || listener0 !== listener) (on1 = (on0 = on).copy()).on(event, listener0 = listener);
    schedule.on = on1;
  };
}

/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(name, value, priority) {
  var i = (name += "") === "transform" ? d3_interpolate__WEBPACK_IMPORTED_MODULE_4__.interpolateTransformCss : _interpolate_js__WEBPACK_IMPORTED_MODULE_2__.default;
  return value == null ? this.styleTween(name, styleNull(name, i)).on("end.style." + name, styleRemove(name)) : typeof value === "function" ? this.styleTween(name, styleFunction(name, i, (0,_tween_js__WEBPACK_IMPORTED_MODULE_1__.tweenValue)(this, "style." + name, value))).each(styleMaybeRemove(this._id, name)) : this.styleTween(name, styleConstant(name, i, value), priority).on("end.style." + name, null);
}

/***/ }),
/* 467 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* export default binding */ __WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
function styleInterpolate(name, i, priority) {
  return function (t) {
    this.style.setProperty(name, i.call(this, t), priority);
  };
}

function styleTween(name, value, priority) {
  var t, i0;

  function tween() {
    var i = value.apply(this, arguments);
    if (i !== i0) t = (i0 = i) && styleInterpolate(name, i, priority);
    return t;
  }

  tween._value = value;
  return tween;
}

/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(name, value, priority) {
  var key = "style." + (name += "");
  if (arguments.length < 2) return (key = this.tween(key)) && key._value;
  if (value == null) return this.tween(key, null);
  if (typeof value !== "function") throw new Error();
  return this.tween(key, styleTween(name, value, priority == null ? "" : priority));
}

/***/ }),
/* 468 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* export default binding */ __WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _tween_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(440);


function textConstant(value) {
  return function () {
    this.textContent = value;
  };
}

function textFunction(value) {
  return function () {
    var value1 = value(this);
    this.textContent = value1 == null ? "" : value1;
  };
}

/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(value) {
  return this.tween("text", typeof value === "function" ? textFunction((0,_tween_js__WEBPACK_IMPORTED_MODULE_0__.tweenValue)(this, "text", value)) : textConstant(value == null ? "" : value + ""));
}

/***/ }),
/* 469 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* export default binding */ __WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
function textInterpolate(i) {
  return function (t) {
    this.textContent = i.call(this, t);
  };
}

function textTween(value) {
  var t0, i0;

  function tween() {
    var i = value.apply(this, arguments);
    if (i !== i0) t0 = (i0 = i) && textInterpolate(i);
    return t0;
  }

  tween._value = value;
  return tween;
}

/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(value) {
  var key = "text";
  if (arguments.length < 1) return (key = this.tween(key)) && key._value;
  if (value == null) return this.tween(key, null);
  if (typeof value !== "function") throw new Error();
  return this.tween(key, textTween(value));
}

/***/ }),
/* 470 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* export default binding */ __WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(438);
/* harmony import */ var _schedule_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(434);


/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__() {
  var name = this._name,
      id0 = this._id,
      id1 = (0,_index_js__WEBPACK_IMPORTED_MODULE_0__.newId)();

  for (var groups = this._groups, m = groups.length, j = 0; j < m; ++j) {
    for (var group = groups[j], n = group.length, node, i = 0; i < n; ++i) {
      if (node = group[i]) {
        var inherit = (0,_schedule_js__WEBPACK_IMPORTED_MODULE_1__.get)(node, id0);
        (0,_schedule_js__WEBPACK_IMPORTED_MODULE_1__.default)(node, name, id1, i, group, {
          time: inherit.time + inherit.delay + inherit.duration,
          delay: 0,
          duration: inherit.duration,
          ease: inherit.ease
        });
      }
    }
  }

  return new _index_js__WEBPACK_IMPORTED_MODULE_0__.Transition(groups, this._parents, name, id1);
}

/***/ }),
/* 471 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* export default binding */ __WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _schedule_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(434);

/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__() {
  var on0,
      on1,
      that = this,
      id = that._id,
      size = that.size();
  return new Promise(function (resolve, reject) {
    var cancel = {
      value: reject
    },
        end = {
      value: function () {
        if (--size === 0) resolve();
      }
    };
    that.each(function () {
      var schedule = (0,_schedule_js__WEBPACK_IMPORTED_MODULE_0__.set)(this, id),
          on = schedule.on; // If this node shared a dispatch with the previous node,
      // just assign the updated shared dispatch and we’re done!
      // Otherwise, copy-on-write.

      if (on !== on0) {
        on1 = (on0 = on).copy();

        on1._.cancel.push(cancel);

        on1._.interrupt.push(cancel);

        on1._.end.push(end);
      }

      schedule.on = on1;
    }); // The selection was empty, resolve end immediately

    if (size === 0) resolve();
  });
}

/***/ }),
/* 472 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "cubicIn": () => (/* binding */ cubicIn),
/* harmony export */   "cubicOut": () => (/* binding */ cubicOut),
/* harmony export */   "cubicInOut": () => (/* binding */ cubicInOut)
/* harmony export */ });
function cubicIn(t) {
  return t * t * t;
}
function cubicOut(t) {
  return --t * t * t + 1;
}
function cubicInOut(t) {
  return ((t *= 2) <= 1 ? t * t * t : (t -= 2) * t * t + 2) / 2;
}

/***/ }),
/* 473 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* export default binding */ __WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _transition_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(438);
/* harmony import */ var _transition_schedule_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(434);


var root = [null];
/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(node, name) {
  var schedules = node.__transition,
      schedule,
      i;

  if (schedules) {
    name = name == null ? null : name + "";

    for (i in schedules) {
      if ((schedule = schedules[i]).state > _transition_schedule_js__WEBPACK_IMPORTED_MODULE_1__.SCHEDULED && schedule.name === name) {
        return new _transition_index_js__WEBPACK_IMPORTED_MODULE_0__.Transition([[node]], root, name, +i);
      }
    }
  }

  return null;
}

/***/ }),
/* 474 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "now": () => (/* reexport safe */ _timer_js__WEBPACK_IMPORTED_MODULE_0__.now),
/* harmony export */   "timer": () => (/* reexport safe */ _timer_js__WEBPACK_IMPORTED_MODULE_0__.timer),
/* harmony export */   "timerFlush": () => (/* reexport safe */ _timer_js__WEBPACK_IMPORTED_MODULE_0__.timerFlush),
/* harmony export */   "timeout": () => (/* reexport safe */ _timeout_js__WEBPACK_IMPORTED_MODULE_1__.default),
/* harmony export */   "interval": () => (/* reexport safe */ _interval_js__WEBPACK_IMPORTED_MODULE_2__.default)
/* harmony export */ });
/* harmony import */ var _timer_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(435);
/* harmony import */ var _timeout_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(436);
/* harmony import */ var _interval_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(475);




/***/ }),
/* 475 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* export default binding */ __WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _timer_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(435);

/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(callback, delay, time) {
  var t = new _timer_js__WEBPACK_IMPORTED_MODULE_0__.Timer(),
      total = delay;
  if (delay == null) return t.restart(callback, delay, time), t;
  t._restart = t.restart;

  t.restart = function (callback, delay, time) {
    delay = +delay, time = time == null ? (0,_timer_js__WEBPACK_IMPORTED_MODULE_0__.now)() : +time;

    t._restart(function tick(elapsed) {
      elapsed += total;

      t._restart(tick, total += delay, time);

      callback(elapsed);
    }, delay, time);
  };

  t.restart(callback, delay, time);
  return t;
}

/***/ }),
/* 476 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "interpolate": () => (/* reexport safe */ _value_js__WEBPACK_IMPORTED_MODULE_0__.default),
/* harmony export */   "interpolateArray": () => (/* reexport safe */ _array_js__WEBPACK_IMPORTED_MODULE_1__.default),
/* harmony export */   "interpolateBasis": () => (/* reexport safe */ _basis_js__WEBPACK_IMPORTED_MODULE_2__.default),
/* harmony export */   "interpolateBasisClosed": () => (/* reexport safe */ _basisClosed_js__WEBPACK_IMPORTED_MODULE_3__.default),
/* harmony export */   "interpolateDate": () => (/* reexport safe */ _date_js__WEBPACK_IMPORTED_MODULE_4__.default),
/* harmony export */   "interpolateDiscrete": () => (/* reexport safe */ _discrete_js__WEBPACK_IMPORTED_MODULE_5__.default),
/* harmony export */   "interpolateHue": () => (/* reexport safe */ _hue_js__WEBPACK_IMPORTED_MODULE_6__.default),
/* harmony export */   "interpolateNumber": () => (/* reexport safe */ _number_js__WEBPACK_IMPORTED_MODULE_7__.default),
/* harmony export */   "interpolateNumberArray": () => (/* reexport safe */ _numberArray_js__WEBPACK_IMPORTED_MODULE_8__.default),
/* harmony export */   "interpolateObject": () => (/* reexport safe */ _object_js__WEBPACK_IMPORTED_MODULE_9__.default),
/* harmony export */   "interpolateRound": () => (/* reexport safe */ _round_js__WEBPACK_IMPORTED_MODULE_10__.default),
/* harmony export */   "interpolateString": () => (/* reexport safe */ _string_js__WEBPACK_IMPORTED_MODULE_11__.default),
/* harmony export */   "interpolateTransformCss": () => (/* reexport safe */ _transform_index_js__WEBPACK_IMPORTED_MODULE_12__.interpolateTransformCss),
/* harmony export */   "interpolateTransformSvg": () => (/* reexport safe */ _transform_index_js__WEBPACK_IMPORTED_MODULE_12__.interpolateTransformSvg),
/* harmony export */   "interpolateZoom": () => (/* reexport safe */ _zoom_js__WEBPACK_IMPORTED_MODULE_13__.default),
/* harmony export */   "interpolateRgb": () => (/* reexport safe */ _rgb_js__WEBPACK_IMPORTED_MODULE_14__.default),
/* harmony export */   "interpolateRgbBasis": () => (/* reexport safe */ _rgb_js__WEBPACK_IMPORTED_MODULE_14__.rgbBasis),
/* harmony export */   "interpolateRgbBasisClosed": () => (/* reexport safe */ _rgb_js__WEBPACK_IMPORTED_MODULE_14__.rgbBasisClosed),
/* harmony export */   "interpolateHsl": () => (/* reexport safe */ _hsl_js__WEBPACK_IMPORTED_MODULE_15__.default),
/* harmony export */   "interpolateHslLong": () => (/* reexport safe */ _hsl_js__WEBPACK_IMPORTED_MODULE_15__.hslLong),
/* harmony export */   "interpolateLab": () => (/* reexport safe */ _lab_js__WEBPACK_IMPORTED_MODULE_16__.default),
/* harmony export */   "interpolateHcl": () => (/* reexport safe */ _hcl_js__WEBPACK_IMPORTED_MODULE_17__.default),
/* harmony export */   "interpolateHclLong": () => (/* reexport safe */ _hcl_js__WEBPACK_IMPORTED_MODULE_17__.hclLong),
/* harmony export */   "interpolateCubehelix": () => (/* reexport safe */ _cubehelix_js__WEBPACK_IMPORTED_MODULE_18__.default),
/* harmony export */   "interpolateCubehelixLong": () => (/* reexport safe */ _cubehelix_js__WEBPACK_IMPORTED_MODULE_18__.cubehelixLong),
/* harmony export */   "piecewise": () => (/* reexport safe */ _piecewise_js__WEBPACK_IMPORTED_MODULE_19__.default),
/* harmony export */   "quantize": () => (/* reexport safe */ _quantize_js__WEBPACK_IMPORTED_MODULE_20__.default)
/* harmony export */ });
/* harmony import */ var _value_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(477);
/* harmony import */ var _array_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(480);
/* harmony import */ var _basis_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(448);
/* harmony import */ var _basisClosed_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(449);
/* harmony import */ var _date_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(478);
/* harmony import */ var _discrete_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(482);
/* harmony import */ var _hue_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(483);
/* harmony import */ var _number_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(442);
/* harmony import */ var _numberArray_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(479);
/* harmony import */ var _object_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(481);
/* harmony import */ var _round_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(484);
/* harmony import */ var _string_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(450);
/* harmony import */ var _transform_index_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(451);
/* harmony import */ var _zoom_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(485);
/* harmony import */ var _rgb_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(445);
/* harmony import */ var _hsl_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(486);
/* harmony import */ var _lab_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(487);
/* harmony import */ var _hcl_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(490);
/* harmony import */ var _cubehelix_js__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(491);
/* harmony import */ var _piecewise_js__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(493);
/* harmony import */ var _quantize_js__WEBPACK_IMPORTED_MODULE_20__ = __webpack_require__(494);






















/***/ }),
/* 477 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* export default binding */ __WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var d3_color__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(443);
/* harmony import */ var _rgb_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(445);
/* harmony import */ var _array_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(480);
/* harmony import */ var _date_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(478);
/* harmony import */ var _number_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(442);
/* harmony import */ var _object_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(481);
/* harmony import */ var _string_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(450);
/* harmony import */ var _constant_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(447);
/* harmony import */ var _numberArray_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(479);









/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(a, b) {
  var t = typeof b,
      c;
  return b == null || t === "boolean" ? (0,_constant_js__WEBPACK_IMPORTED_MODULE_0__.default)(b) : (t === "number" ? _number_js__WEBPACK_IMPORTED_MODULE_1__.default : t === "string" ? (c = (0,d3_color__WEBPACK_IMPORTED_MODULE_2__.default)(b)) ? (b = c, _rgb_js__WEBPACK_IMPORTED_MODULE_3__.default) : _string_js__WEBPACK_IMPORTED_MODULE_4__.default : b instanceof d3_color__WEBPACK_IMPORTED_MODULE_2__.default ? _rgb_js__WEBPACK_IMPORTED_MODULE_3__.default : b instanceof Date ? _date_js__WEBPACK_IMPORTED_MODULE_5__.default : (0,_numberArray_js__WEBPACK_IMPORTED_MODULE_6__.isNumberArray)(b) ? _numberArray_js__WEBPACK_IMPORTED_MODULE_6__.default : Array.isArray(b) ? _array_js__WEBPACK_IMPORTED_MODULE_7__.genericArray : typeof b.valueOf !== "function" && typeof b.toString !== "function" || isNaN(b) ? _object_js__WEBPACK_IMPORTED_MODULE_8__.default : _number_js__WEBPACK_IMPORTED_MODULE_1__.default)(a, b);
}

/***/ }),
/* 478 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* export default binding */ __WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(a, b) {
  var d = new Date();
  return a = +a, b = +b, function (t) {
    return d.setTime(a * (1 - t) + b * t), d;
  };
}

/***/ }),
/* 479 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* export default binding */ __WEBPACK_DEFAULT_EXPORT__),
/* harmony export */   "isNumberArray": () => (/* binding */ isNumberArray)
/* harmony export */ });
/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(a, b) {
  if (!b) b = [];
  var n = a ? Math.min(b.length, a.length) : 0,
      c = b.slice(),
      i;
  return function (t) {
    for (i = 0; i < n; ++i) c[i] = a[i] * (1 - t) + b[i] * t;

    return c;
  };
}
function isNumberArray(x) {
  return ArrayBuffer.isView(x) && !(x instanceof DataView);
}

/***/ }),
/* 480 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* export default binding */ __WEBPACK_DEFAULT_EXPORT__),
/* harmony export */   "genericArray": () => (/* binding */ genericArray)
/* harmony export */ });
/* harmony import */ var _value_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(477);
/* harmony import */ var _numberArray_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(479);


/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(a, b) {
  return ((0,_numberArray_js__WEBPACK_IMPORTED_MODULE_0__.isNumberArray)(b) ? _numberArray_js__WEBPACK_IMPORTED_MODULE_0__.default : genericArray)(a, b);
}
function genericArray(a, b) {
  var nb = b ? b.length : 0,
      na = a ? Math.min(nb, a.length) : 0,
      x = new Array(na),
      c = new Array(nb),
      i;

  for (i = 0; i < na; ++i) x[i] = (0,_value_js__WEBPACK_IMPORTED_MODULE_1__.default)(a[i], b[i]);

  for (; i < nb; ++i) c[i] = b[i];

  return function (t) {
    for (i = 0; i < na; ++i) c[i] = x[i](t);

    return c;
  };
}

/***/ }),
/* 481 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* export default binding */ __WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _value_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(477);

/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(a, b) {
  var i = {},
      c = {},
      k;
  if (a === null || typeof a !== "object") a = {};
  if (b === null || typeof b !== "object") b = {};

  for (k in b) {
    if (k in a) {
      i[k] = (0,_value_js__WEBPACK_IMPORTED_MODULE_0__.default)(a[k], b[k]);
    } else {
      c[k] = b[k];
    }
  }

  return function (t) {
    for (k in i) c[k] = i[k](t);

    return c;
  };
}

/***/ }),
/* 482 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* export default binding */ __WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(range) {
  var n = range.length;
  return function (t) {
    return range[Math.max(0, Math.min(n - 1, Math.floor(t * n)))];
  };
}

/***/ }),
/* 483 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* export default binding */ __WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _color_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(446);

/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(a, b) {
  var i = (0,_color_js__WEBPACK_IMPORTED_MODULE_0__.hue)(+a, +b);
  return function (t) {
    var x = i(t);
    return x - 360 * Math.floor(x / 360);
  };
}

/***/ }),
/* 484 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* export default binding */ __WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(a, b) {
  return a = +a, b = +b, function (t) {
    return Math.round(a * (1 - t) + b * t);
  };
}

/***/ }),
/* 485 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
var epsilon2 = 1e-12;

function cosh(x) {
  return ((x = Math.exp(x)) + 1 / x) / 2;
}

function sinh(x) {
  return ((x = Math.exp(x)) - 1 / x) / 2;
}

function tanh(x) {
  return ((x = Math.exp(2 * x)) - 1) / (x + 1);
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((function zoomRho(rho, rho2, rho4) {
  // p0 = [ux0, uy0, w0]
  // p1 = [ux1, uy1, w1]
  function zoom(p0, p1) {
    var ux0 = p0[0],
        uy0 = p0[1],
        w0 = p0[2],
        ux1 = p1[0],
        uy1 = p1[1],
        w1 = p1[2],
        dx = ux1 - ux0,
        dy = uy1 - uy0,
        d2 = dx * dx + dy * dy,
        i,
        S; // Special case for u0 ≅ u1.

    if (d2 < epsilon2) {
      S = Math.log(w1 / w0) / rho;

      i = function (t) {
        return [ux0 + t * dx, uy0 + t * dy, w0 * Math.exp(rho * t * S)];
      };
    } // General case.
    else {
        var d1 = Math.sqrt(d2),
            b0 = (w1 * w1 - w0 * w0 + rho4 * d2) / (2 * w0 * rho2 * d1),
            b1 = (w1 * w1 - w0 * w0 - rho4 * d2) / (2 * w1 * rho2 * d1),
            r0 = Math.log(Math.sqrt(b0 * b0 + 1) - b0),
            r1 = Math.log(Math.sqrt(b1 * b1 + 1) - b1);
        S = (r1 - r0) / rho;

        i = function (t) {
          var s = t * S,
              coshr0 = cosh(r0),
              u = w0 / (rho2 * d1) * (coshr0 * tanh(rho * s + r0) - sinh(r0));
          return [ux0 + u * dx, uy0 + u * dy, w0 * coshr0 / cosh(rho * s + r0)];
        };
      }

    i.duration = S * 1000 * rho / Math.SQRT2;
    return i;
  }

  zoom.rho = function (_) {
    var _1 = Math.max(1e-3, +_),
        _2 = _1 * _1,
        _4 = _2 * _2;

    return zoomRho(_1, _2, _4);
  };

  return zoom;
})(Math.SQRT2, 2, 4));

/***/ }),
/* 486 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__),
/* harmony export */   "hslLong": () => (/* binding */ hslLong)
/* harmony export */ });
/* harmony import */ var d3_color__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(443);
/* harmony import */ var _color_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(446);



function hsl(hue) {
  return function (start, end) {
    var h = hue((start = (0,d3_color__WEBPACK_IMPORTED_MODULE_0__.hsl)(start)).h, (end = (0,d3_color__WEBPACK_IMPORTED_MODULE_0__.hsl)(end)).h),
        s = (0,_color_js__WEBPACK_IMPORTED_MODULE_1__.default)(start.s, end.s),
        l = (0,_color_js__WEBPACK_IMPORTED_MODULE_1__.default)(start.l, end.l),
        opacity = (0,_color_js__WEBPACK_IMPORTED_MODULE_1__.default)(start.opacity, end.opacity);
    return function (t) {
      start.h = h(t);
      start.s = s(t);
      start.l = l(t);
      start.opacity = opacity(t);
      return start + "";
    };
  };
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (hsl(_color_js__WEBPACK_IMPORTED_MODULE_1__.hue));
var hslLong = hsl(_color_js__WEBPACK_IMPORTED_MODULE_1__.default);

/***/ }),
/* 487 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ lab)
/* harmony export */ });
/* harmony import */ var d3_color__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(488);
/* harmony import */ var _color_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(446);


function lab(start, end) {
  var l = (0,_color_js__WEBPACK_IMPORTED_MODULE_0__.default)((start = (0,d3_color__WEBPACK_IMPORTED_MODULE_1__.default)(start)).l, (end = (0,d3_color__WEBPACK_IMPORTED_MODULE_1__.default)(end)).l),
      a = (0,_color_js__WEBPACK_IMPORTED_MODULE_0__.default)(start.a, end.a),
      b = (0,_color_js__WEBPACK_IMPORTED_MODULE_0__.default)(start.b, end.b),
      opacity = (0,_color_js__WEBPACK_IMPORTED_MODULE_0__.default)(start.opacity, end.opacity);
  return function (t) {
    start.l = l(t);
    start.a = a(t);
    start.b = b(t);
    start.opacity = opacity(t);
    return start + "";
  };
}

/***/ }),
/* 488 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "gray": () => (/* binding */ gray),
/* harmony export */   "default": () => (/* binding */ lab),
/* harmony export */   "Lab": () => (/* binding */ Lab),
/* harmony export */   "lch": () => (/* binding */ lch),
/* harmony export */   "hcl": () => (/* binding */ hcl),
/* harmony export */   "Hcl": () => (/* binding */ Hcl)
/* harmony export */ });
/* harmony import */ var _define_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(444);
/* harmony import */ var _color_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(443);
/* harmony import */ var _math_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(489);


 // https://observablehq.com/@mbostock/lab-and-rgb

const K = 18,
      Xn = 0.96422,
      Yn = 1,
      Zn = 0.82521,
      t0 = 4 / 29,
      t1 = 6 / 29,
      t2 = 3 * t1 * t1,
      t3 = t1 * t1 * t1;

function labConvert(o) {
  if (o instanceof Lab) return new Lab(o.l, o.a, o.b, o.opacity);
  if (o instanceof Hcl) return hcl2lab(o);
  if (!(o instanceof _color_js__WEBPACK_IMPORTED_MODULE_0__.Rgb)) o = (0,_color_js__WEBPACK_IMPORTED_MODULE_0__.rgbConvert)(o);
  var r = rgb2lrgb(o.r),
      g = rgb2lrgb(o.g),
      b = rgb2lrgb(o.b),
      y = xyz2lab((0.2225045 * r + 0.7168786 * g + 0.0606169 * b) / Yn),
      x,
      z;
  if (r === g && g === b) x = z = y;else {
    x = xyz2lab((0.4360747 * r + 0.3850649 * g + 0.1430804 * b) / Xn);
    z = xyz2lab((0.0139322 * r + 0.0971045 * g + 0.7141733 * b) / Zn);
  }
  return new Lab(116 * y - 16, 500 * (x - y), 200 * (y - z), o.opacity);
}

function gray(l, opacity) {
  return new Lab(l, 0, 0, opacity == null ? 1 : opacity);
}
function lab(l, a, b, opacity) {
  return arguments.length === 1 ? labConvert(l) : new Lab(l, a, b, opacity == null ? 1 : opacity);
}
function Lab(l, a, b, opacity) {
  this.l = +l;
  this.a = +a;
  this.b = +b;
  this.opacity = +opacity;
}
(0,_define_js__WEBPACK_IMPORTED_MODULE_1__.default)(Lab, lab, (0,_define_js__WEBPACK_IMPORTED_MODULE_1__.extend)(_color_js__WEBPACK_IMPORTED_MODULE_0__.Color, {
  brighter: function (k) {
    return new Lab(this.l + K * (k == null ? 1 : k), this.a, this.b, this.opacity);
  },
  darker: function (k) {
    return new Lab(this.l - K * (k == null ? 1 : k), this.a, this.b, this.opacity);
  },
  rgb: function () {
    var y = (this.l + 16) / 116,
        x = isNaN(this.a) ? y : y + this.a / 500,
        z = isNaN(this.b) ? y : y - this.b / 200;
    x = Xn * lab2xyz(x);
    y = Yn * lab2xyz(y);
    z = Zn * lab2xyz(z);
    return new _color_js__WEBPACK_IMPORTED_MODULE_0__.Rgb(lrgb2rgb(3.1338561 * x - 1.6168667 * y - 0.4906146 * z), lrgb2rgb(-0.9787684 * x + 1.9161415 * y + 0.0334540 * z), lrgb2rgb(0.0719453 * x - 0.2289914 * y + 1.4052427 * z), this.opacity);
  }
}));

function xyz2lab(t) {
  return t > t3 ? Math.pow(t, 1 / 3) : t / t2 + t0;
}

function lab2xyz(t) {
  return t > t1 ? t * t * t : t2 * (t - t0);
}

function lrgb2rgb(x) {
  return 255 * (x <= 0.0031308 ? 12.92 * x : 1.055 * Math.pow(x, 1 / 2.4) - 0.055);
}

function rgb2lrgb(x) {
  return (x /= 255) <= 0.04045 ? x / 12.92 : Math.pow((x + 0.055) / 1.055, 2.4);
}

function hclConvert(o) {
  if (o instanceof Hcl) return new Hcl(o.h, o.c, o.l, o.opacity);
  if (!(o instanceof Lab)) o = labConvert(o);
  if (o.a === 0 && o.b === 0) return new Hcl(NaN, 0 < o.l && o.l < 100 ? 0 : NaN, o.l, o.opacity);
  var h = Math.atan2(o.b, o.a) * _math_js__WEBPACK_IMPORTED_MODULE_2__.degrees;
  return new Hcl(h < 0 ? h + 360 : h, Math.sqrt(o.a * o.a + o.b * o.b), o.l, o.opacity);
}

function lch(l, c, h, opacity) {
  return arguments.length === 1 ? hclConvert(l) : new Hcl(h, c, l, opacity == null ? 1 : opacity);
}
function hcl(h, c, l, opacity) {
  return arguments.length === 1 ? hclConvert(h) : new Hcl(h, c, l, opacity == null ? 1 : opacity);
}
function Hcl(h, c, l, opacity) {
  this.h = +h;
  this.c = +c;
  this.l = +l;
  this.opacity = +opacity;
}

function hcl2lab(o) {
  if (isNaN(o.h)) return new Lab(o.l, 0, 0, o.opacity);
  var h = o.h * _math_js__WEBPACK_IMPORTED_MODULE_2__.radians;
  return new Lab(o.l, Math.cos(h) * o.c, Math.sin(h) * o.c, o.opacity);
}

(0,_define_js__WEBPACK_IMPORTED_MODULE_1__.default)(Hcl, hcl, (0,_define_js__WEBPACK_IMPORTED_MODULE_1__.extend)(_color_js__WEBPACK_IMPORTED_MODULE_0__.Color, {
  brighter: function (k) {
    return new Hcl(this.h, this.c, this.l + K * (k == null ? 1 : k), this.opacity);
  },
  darker: function (k) {
    return new Hcl(this.h, this.c, this.l - K * (k == null ? 1 : k), this.opacity);
  },
  rgb: function () {
    return hcl2lab(this).rgb();
  }
}));

/***/ }),
/* 489 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "radians": () => (/* binding */ radians),
/* harmony export */   "degrees": () => (/* binding */ degrees)
/* harmony export */ });
const radians = Math.PI / 180;
const degrees = 180 / Math.PI;

/***/ }),
/* 490 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__),
/* harmony export */   "hclLong": () => (/* binding */ hclLong)
/* harmony export */ });
/* harmony import */ var d3_color__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(488);
/* harmony import */ var _color_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(446);



function hcl(hue) {
  return function (start, end) {
    var h = hue((start = (0,d3_color__WEBPACK_IMPORTED_MODULE_0__.hcl)(start)).h, (end = (0,d3_color__WEBPACK_IMPORTED_MODULE_0__.hcl)(end)).h),
        c = (0,_color_js__WEBPACK_IMPORTED_MODULE_1__.default)(start.c, end.c),
        l = (0,_color_js__WEBPACK_IMPORTED_MODULE_1__.default)(start.l, end.l),
        opacity = (0,_color_js__WEBPACK_IMPORTED_MODULE_1__.default)(start.opacity, end.opacity);
    return function (t) {
      start.h = h(t);
      start.c = c(t);
      start.l = l(t);
      start.opacity = opacity(t);
      return start + "";
    };
  };
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (hcl(_color_js__WEBPACK_IMPORTED_MODULE_1__.hue));
var hclLong = hcl(_color_js__WEBPACK_IMPORTED_MODULE_1__.default);

/***/ }),
/* 491 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__),
/* harmony export */   "cubehelixLong": () => (/* binding */ cubehelixLong)
/* harmony export */ });
/* harmony import */ var d3_color__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(492);
/* harmony import */ var _color_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(446);



function cubehelix(hue) {
  return function cubehelixGamma(y) {
    y = +y;

    function cubehelix(start, end) {
      var h = hue((start = (0,d3_color__WEBPACK_IMPORTED_MODULE_0__.default)(start)).h, (end = (0,d3_color__WEBPACK_IMPORTED_MODULE_0__.default)(end)).h),
          s = (0,_color_js__WEBPACK_IMPORTED_MODULE_1__.default)(start.s, end.s),
          l = (0,_color_js__WEBPACK_IMPORTED_MODULE_1__.default)(start.l, end.l),
          opacity = (0,_color_js__WEBPACK_IMPORTED_MODULE_1__.default)(start.opacity, end.opacity);
      return function (t) {
        start.h = h(t);
        start.s = s(t);
        start.l = l(Math.pow(t, y));
        start.opacity = opacity(t);
        return start + "";
      };
    }

    cubehelix.gamma = cubehelixGamma;
    return cubehelix;
  }(1);
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (cubehelix(_color_js__WEBPACK_IMPORTED_MODULE_1__.hue));
var cubehelixLong = cubehelix(_color_js__WEBPACK_IMPORTED_MODULE_1__.default);

/***/ }),
/* 492 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ cubehelix),
/* harmony export */   "Cubehelix": () => (/* binding */ Cubehelix)
/* harmony export */ });
/* harmony import */ var _define_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(444);
/* harmony import */ var _color_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(443);
/* harmony import */ var _math_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(489);



var A = -0.14861,
    B = +1.78277,
    C = -0.29227,
    D = -0.90649,
    E = +1.97294,
    ED = E * D,
    EB = E * B,
    BC_DA = B * C - D * A;

function cubehelixConvert(o) {
  if (o instanceof Cubehelix) return new Cubehelix(o.h, o.s, o.l, o.opacity);
  if (!(o instanceof _color_js__WEBPACK_IMPORTED_MODULE_0__.Rgb)) o = (0,_color_js__WEBPACK_IMPORTED_MODULE_0__.rgbConvert)(o);
  var r = o.r / 255,
      g = o.g / 255,
      b = o.b / 255,
      l = (BC_DA * b + ED * r - EB * g) / (BC_DA + ED - EB),
      bl = b - l,
      k = (E * (g - l) - C * bl) / D,
      s = Math.sqrt(k * k + bl * bl) / (E * l * (1 - l)),
      // NaN if l=0 or l=1
  h = s ? Math.atan2(k, bl) * _math_js__WEBPACK_IMPORTED_MODULE_1__.degrees - 120 : NaN;
  return new Cubehelix(h < 0 ? h + 360 : h, s, l, o.opacity);
}

function cubehelix(h, s, l, opacity) {
  return arguments.length === 1 ? cubehelixConvert(h) : new Cubehelix(h, s, l, opacity == null ? 1 : opacity);
}
function Cubehelix(h, s, l, opacity) {
  this.h = +h;
  this.s = +s;
  this.l = +l;
  this.opacity = +opacity;
}
(0,_define_js__WEBPACK_IMPORTED_MODULE_2__.default)(Cubehelix, cubehelix, (0,_define_js__WEBPACK_IMPORTED_MODULE_2__.extend)(_color_js__WEBPACK_IMPORTED_MODULE_0__.Color, {
  brighter: function (k) {
    k = k == null ? _color_js__WEBPACK_IMPORTED_MODULE_0__.brighter : Math.pow(_color_js__WEBPACK_IMPORTED_MODULE_0__.brighter, k);
    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);
  },
  darker: function (k) {
    k = k == null ? _color_js__WEBPACK_IMPORTED_MODULE_0__.darker : Math.pow(_color_js__WEBPACK_IMPORTED_MODULE_0__.darker, k);
    return new Cubehelix(this.h, this.s, this.l * k, this.opacity);
  },
  rgb: function () {
    var h = isNaN(this.h) ? 0 : (this.h + 120) * _math_js__WEBPACK_IMPORTED_MODULE_1__.radians,
        l = +this.l,
        a = isNaN(this.s) ? 0 : this.s * l * (1 - l),
        cosh = Math.cos(h),
        sinh = Math.sin(h);
    return new _color_js__WEBPACK_IMPORTED_MODULE_0__.Rgb(255 * (l + a * (A * cosh + B * sinh)), 255 * (l + a * (C * cosh + D * sinh)), 255 * (l + a * (E * cosh)), this.opacity);
  }
}));

/***/ }),
/* 493 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ piecewise)
/* harmony export */ });
/* harmony import */ var _value_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(477);

function piecewise(interpolate, values) {
  if (values === undefined) values = interpolate, interpolate = _value_js__WEBPACK_IMPORTED_MODULE_0__.default;
  var i = 0,
      n = values.length - 1,
      v = values[0],
      I = new Array(n < 0 ? 0 : n);

  while (i < n) I[i] = interpolate(v, v = values[++i]);

  return function (t) {
    var i = Math.max(0, Math.min(n - 1, Math.floor(t *= n)));
    return I[i](t - i);
  };
}

/***/ }),
/* 494 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* export default binding */ __WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(interpolator, n) {
  var samples = new Array(n);

  for (var i = 0; i < n; ++i) samples[i] = interpolator(i / (n - 1));

  return samples;
}

/***/ }),
/* 495 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "zoom": () => (/* reexport safe */ _zoom_js__WEBPACK_IMPORTED_MODULE_0__.default),
/* harmony export */   "zoomTransform": () => (/* reexport safe */ _transform_js__WEBPACK_IMPORTED_MODULE_1__.default),
/* harmony export */   "zoomIdentity": () => (/* reexport safe */ _transform_js__WEBPACK_IMPORTED_MODULE_1__.identity)
/* harmony export */ });
/* harmony import */ var _zoom_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(496);
/* harmony import */ var _transform_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(499);



/***/ }),
/* 496 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* export default binding */ __WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var d3_dispatch__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(429);
/* harmony import */ var d3_drag__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(501);
/* harmony import */ var d3_interpolate__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(485);
/* harmony import */ var d3_selection__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(377);
/* harmony import */ var d3_selection__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(424);
/* harmony import */ var d3_transition__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(430);
/* harmony import */ var _constant_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(497);
/* harmony import */ var _event_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(498);
/* harmony import */ var _transform_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(499);
/* harmony import */ var _noevent_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(500);








 // Ignore right-click, since that should open the context menu.
// except for pinch-to-zoom, which is sent as a wheel+ctrlKey event

function defaultFilter(event) {
  return (!event.ctrlKey || event.type === 'wheel') && !event.button;
}

function defaultExtent() {
  var e = this;

  if (e instanceof SVGElement) {
    e = e.ownerSVGElement || e;

    if (e.hasAttribute("viewBox")) {
      e = e.viewBox.baseVal;
      return [[e.x, e.y], [e.x + e.width, e.y + e.height]];
    }

    return [[0, 0], [e.width.baseVal.value, e.height.baseVal.value]];
  }

  return [[0, 0], [e.clientWidth, e.clientHeight]];
}

function defaultTransform() {
  return this.__zoom || _transform_js__WEBPACK_IMPORTED_MODULE_3__.identity;
}

function defaultWheelDelta(event) {
  return -event.deltaY * (event.deltaMode === 1 ? 0.05 : event.deltaMode ? 1 : 0.002) * (event.ctrlKey ? 10 : 1);
}

function defaultTouchable() {
  return navigator.maxTouchPoints || "ontouchstart" in this;
}

function defaultConstrain(transform, extent, translateExtent) {
  var dx0 = transform.invertX(extent[0][0]) - translateExtent[0][0],
      dx1 = transform.invertX(extent[1][0]) - translateExtent[1][0],
      dy0 = transform.invertY(extent[0][1]) - translateExtent[0][1],
      dy1 = transform.invertY(extent[1][1]) - translateExtent[1][1];
  return transform.translate(dx1 > dx0 ? (dx0 + dx1) / 2 : Math.min(0, dx0) || Math.max(0, dx1), dy1 > dy0 ? (dy0 + dy1) / 2 : Math.min(0, dy0) || Math.max(0, dy1));
}

/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__() {
  var filter = defaultFilter,
      extent = defaultExtent,
      constrain = defaultConstrain,
      wheelDelta = defaultWheelDelta,
      touchable = defaultTouchable,
      scaleExtent = [0, Infinity],
      translateExtent = [[-Infinity, -Infinity], [Infinity, Infinity]],
      duration = 250,
      interpolate = d3_interpolate__WEBPACK_IMPORTED_MODULE_5__.default,
      listeners = (0,d3_dispatch__WEBPACK_IMPORTED_MODULE_6__.default)("start", "zoom", "end"),
      touchstarting,
      touchfirst,
      touchending,
      touchDelay = 500,
      wheelDelay = 150,
      clickDistance2 = 0,
      tapDistance = 10;

  function zoom(selection) {
    selection.property("__zoom", defaultTransform).on("wheel.zoom", wheeled).on("mousedown.zoom", mousedowned).on("dblclick.zoom", dblclicked).filter(touchable).on("touchstart.zoom", touchstarted).on("touchmove.zoom", touchmoved).on("touchend.zoom touchcancel.zoom", touchended).style("-webkit-tap-highlight-color", "rgba(0,0,0,0)");
  }

  zoom.transform = function (collection, transform, point, event) {
    var selection = collection.selection ? collection.selection() : collection;
    selection.property("__zoom", defaultTransform);

    if (collection !== selection) {
      schedule(collection, transform, point, event);
    } else {
      selection.interrupt().each(function () {
        gesture(this, arguments).event(event).start().zoom(null, typeof transform === "function" ? transform.apply(this, arguments) : transform).end();
      });
    }
  };

  zoom.scaleBy = function (selection, k, p, event) {
    zoom.scaleTo(selection, function () {
      var k0 = this.__zoom.k,
          k1 = typeof k === "function" ? k.apply(this, arguments) : k;
      return k0 * k1;
    }, p, event);
  };

  zoom.scaleTo = function (selection, k, p, event) {
    zoom.transform(selection, function () {
      var e = extent.apply(this, arguments),
          t0 = this.__zoom,
          p0 = p == null ? centroid(e) : typeof p === "function" ? p.apply(this, arguments) : p,
          p1 = t0.invert(p0),
          k1 = typeof k === "function" ? k.apply(this, arguments) : k;
      return constrain(translate(scale(t0, k1), p0, p1), e, translateExtent);
    }, p, event);
  };

  zoom.translateBy = function (selection, x, y, event) {
    zoom.transform(selection, function () {
      return constrain(this.__zoom.translate(typeof x === "function" ? x.apply(this, arguments) : x, typeof y === "function" ? y.apply(this, arguments) : y), extent.apply(this, arguments), translateExtent);
    }, null, event);
  };

  zoom.translateTo = function (selection, x, y, p, event) {
    zoom.transform(selection, function () {
      var e = extent.apply(this, arguments),
          t = this.__zoom,
          p0 = p == null ? centroid(e) : typeof p === "function" ? p.apply(this, arguments) : p;
      return constrain(_transform_js__WEBPACK_IMPORTED_MODULE_3__.identity.translate(p0[0], p0[1]).scale(t.k).translate(typeof x === "function" ? -x.apply(this, arguments) : -x, typeof y === "function" ? -y.apply(this, arguments) : -y), e, translateExtent);
    }, p, event);
  };

  function scale(transform, k) {
    k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], k));
    return k === transform.k ? transform : new _transform_js__WEBPACK_IMPORTED_MODULE_3__.Transform(k, transform.x, transform.y);
  }

  function translate(transform, p0, p1) {
    var x = p0[0] - p1[0] * transform.k,
        y = p0[1] - p1[1] * transform.k;
    return x === transform.x && y === transform.y ? transform : new _transform_js__WEBPACK_IMPORTED_MODULE_3__.Transform(transform.k, x, y);
  }

  function centroid(extent) {
    return [(+extent[0][0] + +extent[1][0]) / 2, (+extent[0][1] + +extent[1][1]) / 2];
  }

  function schedule(transition, transform, point, event) {
    transition.on("start.zoom", function () {
      gesture(this, arguments).event(event).start();
    }).on("interrupt.zoom end.zoom", function () {
      gesture(this, arguments).event(event).end();
    }).tween("zoom", function () {
      var that = this,
          args = arguments,
          g = gesture(that, args).event(event),
          e = extent.apply(that, args),
          p = point == null ? centroid(e) : typeof point === "function" ? point.apply(that, args) : point,
          w = Math.max(e[1][0] - e[0][0], e[1][1] - e[0][1]),
          a = that.__zoom,
          b = typeof transform === "function" ? transform.apply(that, args) : transform,
          i = interpolate(a.invert(p).concat(w / a.k), b.invert(p).concat(w / b.k));
      return function (t) {
        if (t === 1) t = b; // Avoid rounding error on end.
        else {
            var l = i(t),
                k = w / l[2];
            t = new _transform_js__WEBPACK_IMPORTED_MODULE_3__.Transform(k, p[0] - l[0] * k, p[1] - l[1] * k);
          }
        g.zoom(null, t);
      };
    });
  }

  function gesture(that, args, clean) {
    return !clean && that.__zooming || new Gesture(that, args);
  }

  function Gesture(that, args) {
    this.that = that;
    this.args = args;
    this.active = 0;
    this.sourceEvent = null;
    this.extent = extent.apply(that, args);
    this.taps = 0;
  }

  Gesture.prototype = {
    event: function (event) {
      if (event) this.sourceEvent = event;
      return this;
    },
    start: function () {
      if (++this.active === 1) {
        this.that.__zooming = this;
        this.emit("start");
      }

      return this;
    },
    zoom: function (key, transform) {
      if (this.mouse && key !== "mouse") this.mouse[1] = transform.invert(this.mouse[0]);
      if (this.touch0 && key !== "touch") this.touch0[1] = transform.invert(this.touch0[0]);
      if (this.touch1 && key !== "touch") this.touch1[1] = transform.invert(this.touch1[0]);
      this.that.__zoom = transform;
      this.emit("zoom");
      return this;
    },
    end: function () {
      if (--this.active === 0) {
        delete this.that.__zooming;
        this.emit("end");
      }

      return this;
    },
    emit: function (type) {
      var d = (0,d3_selection__WEBPACK_IMPORTED_MODULE_7__.default)(this.that).datum();
      listeners.call(type, this.that, new _event_js__WEBPACK_IMPORTED_MODULE_2__.default(type, {
        sourceEvent: this.sourceEvent,
        target: zoom,
        type,
        transform: this.that.__zoom,
        dispatch: listeners
      }), d);
    }
  };

  function wheeled(event, ...args) {
    if (!filter.apply(this, arguments)) return;
    var g = gesture(this, args).event(event),
        t = this.__zoom,
        k = Math.max(scaleExtent[0], Math.min(scaleExtent[1], t.k * Math.pow(2, wheelDelta.apply(this, arguments)))),
        p = (0,d3_selection__WEBPACK_IMPORTED_MODULE_8__.default)(event); // If the mouse is in the same location as before, reuse it.
    // If there were recent wheel events, reset the wheel idle timeout.

    if (g.wheel) {
      if (g.mouse[0][0] !== p[0] || g.mouse[0][1] !== p[1]) {
        g.mouse[1] = t.invert(g.mouse[0] = p);
      }

      clearTimeout(g.wheel);
    } // If this wheel event won’t trigger a transform change, ignore it.
    else if (t.k === k) return; // Otherwise, capture the mouse point and location at the start.
      else {
          g.mouse = [p, t.invert(p)];
          (0,d3_transition__WEBPACK_IMPORTED_MODULE_0__.interrupt)(this);
          g.start();
        }

    (0,_noevent_js__WEBPACK_IMPORTED_MODULE_4__.default)(event);
    g.wheel = setTimeout(wheelidled, wheelDelay);
    g.zoom("mouse", constrain(translate(scale(t, k), g.mouse[0], g.mouse[1]), g.extent, translateExtent));

    function wheelidled() {
      g.wheel = null;
      g.end();
    }
  }

  function mousedowned(event, ...args) {
    if (touchending || !filter.apply(this, arguments)) return;
    var g = gesture(this, args, true).event(event),
        v = (0,d3_selection__WEBPACK_IMPORTED_MODULE_7__.default)(event.view).on("mousemove.zoom", mousemoved, true).on("mouseup.zoom", mouseupped, true),
        p = (0,d3_selection__WEBPACK_IMPORTED_MODULE_8__.default)(event, currentTarget),
        currentTarget = event.currentTarget,
        x0 = event.clientX,
        y0 = event.clientY;
    (0,d3_drag__WEBPACK_IMPORTED_MODULE_9__.default)(event.view);
    (0,_noevent_js__WEBPACK_IMPORTED_MODULE_4__.nopropagation)(event);
    g.mouse = [p, this.__zoom.invert(p)];
    (0,d3_transition__WEBPACK_IMPORTED_MODULE_0__.interrupt)(this);
    g.start();

    function mousemoved(event) {
      (0,_noevent_js__WEBPACK_IMPORTED_MODULE_4__.default)(event);

      if (!g.moved) {
        var dx = event.clientX - x0,
            dy = event.clientY - y0;
        g.moved = dx * dx + dy * dy > clickDistance2;
      }

      g.event(event).zoom("mouse", constrain(translate(g.that.__zoom, g.mouse[0] = (0,d3_selection__WEBPACK_IMPORTED_MODULE_8__.default)(event, currentTarget), g.mouse[1]), g.extent, translateExtent));
    }

    function mouseupped(event) {
      v.on("mousemove.zoom mouseup.zoom", null);
      (0,d3_drag__WEBPACK_IMPORTED_MODULE_9__.yesdrag)(event.view, g.moved);
      (0,_noevent_js__WEBPACK_IMPORTED_MODULE_4__.default)(event);
      g.event(event).end();
    }
  }

  function dblclicked(event, ...args) {
    if (!filter.apply(this, arguments)) return;
    var t0 = this.__zoom,
        p0 = (0,d3_selection__WEBPACK_IMPORTED_MODULE_8__.default)(event.changedTouches ? event.changedTouches[0] : event, this),
        p1 = t0.invert(p0),
        k1 = t0.k * (event.shiftKey ? 0.5 : 2),
        t1 = constrain(translate(scale(t0, k1), p0, p1), extent.apply(this, args), translateExtent);
    (0,_noevent_js__WEBPACK_IMPORTED_MODULE_4__.default)(event);
    if (duration > 0) (0,d3_selection__WEBPACK_IMPORTED_MODULE_7__.default)(this).transition().duration(duration).call(schedule, t1, p0, event);else (0,d3_selection__WEBPACK_IMPORTED_MODULE_7__.default)(this).call(zoom.transform, t1, p0, event);
  }

  function touchstarted(event, ...args) {
    if (!filter.apply(this, arguments)) return;
    var touches = event.touches,
        n = touches.length,
        g = gesture(this, args, event.changedTouches.length === n).event(event),
        started,
        i,
        t,
        p;
    (0,_noevent_js__WEBPACK_IMPORTED_MODULE_4__.nopropagation)(event);

    for (i = 0; i < n; ++i) {
      t = touches[i], p = (0,d3_selection__WEBPACK_IMPORTED_MODULE_8__.default)(t, this);
      p = [p, this.__zoom.invert(p), t.identifier];
      if (!g.touch0) g.touch0 = p, started = true, g.taps = 1 + !!touchstarting;else if (!g.touch1 && g.touch0[2] !== p[2]) g.touch1 = p, g.taps = 0;
    }

    if (touchstarting) touchstarting = clearTimeout(touchstarting);

    if (started) {
      if (g.taps < 2) touchfirst = p[0], touchstarting = setTimeout(function () {
        touchstarting = null;
      }, touchDelay);
      (0,d3_transition__WEBPACK_IMPORTED_MODULE_0__.interrupt)(this);
      g.start();
    }
  }

  function touchmoved(event, ...args) {
    if (!this.__zooming) return;
    var g = gesture(this, args).event(event),
        touches = event.changedTouches,
        n = touches.length,
        i,
        t,
        p,
        l;
    (0,_noevent_js__WEBPACK_IMPORTED_MODULE_4__.default)(event);

    for (i = 0; i < n; ++i) {
      t = touches[i], p = (0,d3_selection__WEBPACK_IMPORTED_MODULE_8__.default)(t, this);
      if (g.touch0 && g.touch0[2] === t.identifier) g.touch0[0] = p;else if (g.touch1 && g.touch1[2] === t.identifier) g.touch1[0] = p;
    }

    t = g.that.__zoom;

    if (g.touch1) {
      var p0 = g.touch0[0],
          l0 = g.touch0[1],
          p1 = g.touch1[0],
          l1 = g.touch1[1],
          dp = (dp = p1[0] - p0[0]) * dp + (dp = p1[1] - p0[1]) * dp,
          dl = (dl = l1[0] - l0[0]) * dl + (dl = l1[1] - l0[1]) * dl;
      t = scale(t, Math.sqrt(dp / dl));
      p = [(p0[0] + p1[0]) / 2, (p0[1] + p1[1]) / 2];
      l = [(l0[0] + l1[0]) / 2, (l0[1] + l1[1]) / 2];
    } else if (g.touch0) p = g.touch0[0], l = g.touch0[1];else return;

    g.zoom("touch", constrain(translate(t, p, l), g.extent, translateExtent));
  }

  function touchended(event, ...args) {
    if (!this.__zooming) return;
    var g = gesture(this, args).event(event),
        touches = event.changedTouches,
        n = touches.length,
        i,
        t;
    (0,_noevent_js__WEBPACK_IMPORTED_MODULE_4__.nopropagation)(event);
    if (touchending) clearTimeout(touchending);
    touchending = setTimeout(function () {
      touchending = null;
    }, touchDelay);

    for (i = 0; i < n; ++i) {
      t = touches[i];
      if (g.touch0 && g.touch0[2] === t.identifier) delete g.touch0;else if (g.touch1 && g.touch1[2] === t.identifier) delete g.touch1;
    }

    if (g.touch1 && !g.touch0) g.touch0 = g.touch1, delete g.touch1;
    if (g.touch0) g.touch0[1] = this.__zoom.invert(g.touch0[0]);else {
      g.end(); // If this was a dbltap, reroute to the (optional) dblclick.zoom handler.

      if (g.taps === 2) {
        t = (0,d3_selection__WEBPACK_IMPORTED_MODULE_8__.default)(t, this);

        if (Math.hypot(touchfirst[0] - t[0], touchfirst[1] - t[1]) < tapDistance) {
          var p = (0,d3_selection__WEBPACK_IMPORTED_MODULE_7__.default)(this).on("dblclick.zoom");
          if (p) p.apply(this, arguments);
        }
      }
    }
  }

  zoom.wheelDelta = function (_) {
    return arguments.length ? (wheelDelta = typeof _ === "function" ? _ : (0,_constant_js__WEBPACK_IMPORTED_MODULE_1__.default)(+_), zoom) : wheelDelta;
  };

  zoom.filter = function (_) {
    return arguments.length ? (filter = typeof _ === "function" ? _ : (0,_constant_js__WEBPACK_IMPORTED_MODULE_1__.default)(!!_), zoom) : filter;
  };

  zoom.touchable = function (_) {
    return arguments.length ? (touchable = typeof _ === "function" ? _ : (0,_constant_js__WEBPACK_IMPORTED_MODULE_1__.default)(!!_), zoom) : touchable;
  };

  zoom.extent = function (_) {
    return arguments.length ? (extent = typeof _ === "function" ? _ : (0,_constant_js__WEBPACK_IMPORTED_MODULE_1__.default)([[+_[0][0], +_[0][1]], [+_[1][0], +_[1][1]]]), zoom) : extent;
  };

  zoom.scaleExtent = function (_) {
    return arguments.length ? (scaleExtent[0] = +_[0], scaleExtent[1] = +_[1], zoom) : [scaleExtent[0], scaleExtent[1]];
  };

  zoom.translateExtent = function (_) {
    return arguments.length ? (translateExtent[0][0] = +_[0][0], translateExtent[1][0] = +_[1][0], translateExtent[0][1] = +_[0][1], translateExtent[1][1] = +_[1][1], zoom) : [[translateExtent[0][0], translateExtent[0][1]], [translateExtent[1][0], translateExtent[1][1]]];
  };

  zoom.constrain = function (_) {
    return arguments.length ? (constrain = _, zoom) : constrain;
  };

  zoom.duration = function (_) {
    return arguments.length ? (duration = +_, zoom) : duration;
  };

  zoom.interpolate = function (_) {
    return arguments.length ? (interpolate = _, zoom) : interpolate;
  };

  zoom.on = function () {
    var value = listeners.on.apply(listeners, arguments);
    return value === listeners ? zoom : value;
  };

  zoom.clickDistance = function (_) {
    return arguments.length ? (clickDistance2 = (_ = +_) * _, zoom) : Math.sqrt(clickDistance2);
  };

  zoom.tapDistance = function (_) {
    return arguments.length ? (tapDistance = +_, zoom) : tapDistance;
  };

  return zoom;
}

/***/ }),
/* 497 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (x => () => x);

/***/ }),
/* 498 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ ZoomEvent)
/* harmony export */ });
function ZoomEvent(type, {
  sourceEvent,
  target,
  transform,
  dispatch
}) {
  Object.defineProperties(this, {
    type: {
      value: type,
      enumerable: true,
      configurable: true
    },
    sourceEvent: {
      value: sourceEvent,
      enumerable: true,
      configurable: true
    },
    target: {
      value: target,
      enumerable: true,
      configurable: true
    },
    transform: {
      value: transform,
      enumerable: true,
      configurable: true
    },
    _: {
      value: dispatch
    }
  });
}

/***/ }),
/* 499 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "Transform": () => (/* binding */ Transform),
/* harmony export */   "identity": () => (/* binding */ identity),
/* harmony export */   "default": () => (/* binding */ transform)
/* harmony export */ });
function Transform(k, x, y) {
  this.k = k;
  this.x = x;
  this.y = y;
}
Transform.prototype = {
  constructor: Transform,
  scale: function (k) {
    return k === 1 ? this : new Transform(this.k * k, this.x, this.y);
  },
  translate: function (x, y) {
    return x === 0 & y === 0 ? this : new Transform(this.k, this.x + this.k * x, this.y + this.k * y);
  },
  apply: function (point) {
    return [point[0] * this.k + this.x, point[1] * this.k + this.y];
  },
  applyX: function (x) {
    return x * this.k + this.x;
  },
  applyY: function (y) {
    return y * this.k + this.y;
  },
  invert: function (location) {
    return [(location[0] - this.x) / this.k, (location[1] - this.y) / this.k];
  },
  invertX: function (x) {
    return (x - this.x) / this.k;
  },
  invertY: function (y) {
    return (y - this.y) / this.k;
  },
  rescaleX: function (x) {
    return x.copy().domain(x.range().map(this.invertX, this).map(x.invert, x));
  },
  rescaleY: function (y) {
    return y.copy().domain(y.range().map(this.invertY, this).map(y.invert, y));
  },
  toString: function () {
    return "translate(" + this.x + "," + this.y + ") scale(" + this.k + ")";
  }
};
var identity = new Transform(1, 0, 0);
transform.prototype = Transform.prototype;
function transform(node) {
  while (!node.__zoom) if (!(node = node.parentNode)) return identity;

  return node.__zoom;
}

/***/ }),
/* 500 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "nopropagation": () => (/* binding */ nopropagation),
/* harmony export */   "default": () => (/* export default binding */ __WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
function nopropagation(event) {
  event.stopImmediatePropagation();
}
/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(event) {
  event.preventDefault();
  event.stopImmediatePropagation();
}

/***/ }),
/* 501 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* export default binding */ __WEBPACK_DEFAULT_EXPORT__),
/* harmony export */   "yesdrag": () => (/* binding */ yesdrag)
/* harmony export */ });
/* harmony import */ var d3_selection__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(377);
/* harmony import */ var _noevent_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(502);


/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(view) {
  var root = view.document.documentElement,
      selection = (0,d3_selection__WEBPACK_IMPORTED_MODULE_0__.default)(view).on("dragstart.drag", _noevent_js__WEBPACK_IMPORTED_MODULE_1__.default, true);

  if ("onselectstart" in root) {
    selection.on("selectstart.drag", _noevent_js__WEBPACK_IMPORTED_MODULE_1__.default, true);
  } else {
    root.__noselect = root.style.MozUserSelect;
    root.style.MozUserSelect = "none";
  }
}
function yesdrag(view, noclick) {
  var root = view.document.documentElement,
      selection = (0,d3_selection__WEBPACK_IMPORTED_MODULE_0__.default)(view).on("dragstart.drag", null);

  if (noclick) {
    selection.on("click.drag", _noevent_js__WEBPACK_IMPORTED_MODULE_1__.default, true);
    setTimeout(function () {
      selection.on("click.drag", null);
    }, 0);
  }

  if ("onselectstart" in root) {
    selection.on("selectstart.drag", null);
  } else {
    root.style.MozUserSelect = root.__noselect;
    delete root.__noselect;
  }
}

/***/ }),
/* 502 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "nopropagation": () => (/* binding */ nopropagation),
/* harmony export */   "default": () => (/* export default binding */ __WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
function nopropagation(event) {
  event.stopImmediatePropagation();
}
/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(event) {
  event.preventDefault();
  event.stopImmediatePropagation();
}

/***/ }),
/* 503 */
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

(function (global, factory) {
   true ? factory(exports) : 0;
})(this, function (exports) {
  'use strict';

  function createCommonjsModule(fn) {
    var module = {
      exports: {}
    };
    return fn(module, module.exports), module.exports;
  }

  var expatlib = createCommonjsModule(function (module, exports) {
    var cpp = function () {
      var _scriptDir = typeof document !== 'undefined' && document.currentScript ? document.currentScript.src : undefined;

      return function (cpp) {
        cpp = cpp || {};
        var Module = typeof cpp !== "undefined" ? cpp : {};
        var readyPromiseResolve, readyPromiseReject;
        Module["ready"] = new Promise(function (resolve, reject) {
          readyPromiseResolve = resolve;
          readyPromiseReject = reject;
        });
        var moduleOverrides = {};
        var key;

        for (key in Module) {
          if (Module.hasOwnProperty(key)) {
            moduleOverrides[key] = Module[key];
          }
        }

        var thisProgram = "./this.program";
        var ENVIRONMENT_IS_WEB = true;
        var scriptDirectory = "";

        function locateFile(path) {
          if (Module["locateFile"]) {
            return Module["locateFile"](path, scriptDirectory);
          }

          return scriptDirectory + path;
        }

        var read_, readBinary;
        {
          if (typeof document !== "undefined" && document.currentScript) {
            scriptDirectory = document.currentScript.src;
          }

          if (_scriptDir) {
            scriptDirectory = _scriptDir;
          }

          if (scriptDirectory.indexOf("blob:") !== 0) {
            scriptDirectory = scriptDirectory.substr(0, scriptDirectory.lastIndexOf("/") + 1);
          } else {
            scriptDirectory = "";
          }

          {
            read_ = function shell_read(url) {
              var xhr = new XMLHttpRequest();
              xhr.open("GET", url, false);
              xhr.send(null);
              return xhr.responseText;
            };
          }
        }
        var out = Module["print"] || console.log.bind(console);
        var err = Module["printErr"] || console.warn.bind(console);

        for (key in moduleOverrides) {
          if (moduleOverrides.hasOwnProperty(key)) {
            Module[key] = moduleOverrides[key];
          }
        }

        moduleOverrides = null;
        if (Module["arguments"]) Module["arguments"];
        if (Module["thisProgram"]) thisProgram = Module["thisProgram"];
        if (Module["quit"]) Module["quit"];
        var STACK_ALIGN = 16;

        function alignMemory(size, factor) {
          if (!factor) factor = STACK_ALIGN;
          return Math.ceil(size / factor) * factor;
        }

        var wasmBinary;
        if (Module["wasmBinary"]) wasmBinary = Module["wasmBinary"];
        if (Module["noExitRuntime"]) Module["noExitRuntime"];

        if (typeof WebAssembly !== "object") {
          abort("no native wasm support detected");
        }

        var wasmMemory;
        var ABORT = false;

        function assert(condition, text) {
          if (!condition) {
            abort("Assertion failed: " + text);
          }
        }

        var UTF8Decoder = typeof TextDecoder !== "undefined" ? new TextDecoder("utf8") : undefined;

        function UTF8ArrayToString(heap, idx, maxBytesToRead) {
          var endIdx = idx + maxBytesToRead;
          var endPtr = idx;

          while (heap[endPtr] && !(endPtr >= endIdx)) ++endPtr;

          if (endPtr - idx > 16 && heap.subarray && UTF8Decoder) {
            return UTF8Decoder.decode(heap.subarray(idx, endPtr));
          } else {
            var str = "";

            while (idx < endPtr) {
              var u0 = heap[idx++];

              if (!(u0 & 128)) {
                str += String.fromCharCode(u0);
                continue;
              }

              var u1 = heap[idx++] & 63;

              if ((u0 & 224) == 192) {
                str += String.fromCharCode((u0 & 31) << 6 | u1);
                continue;
              }

              var u2 = heap[idx++] & 63;

              if ((u0 & 240) == 224) {
                u0 = (u0 & 15) << 12 | u1 << 6 | u2;
              } else {
                u0 = (u0 & 7) << 18 | u1 << 12 | u2 << 6 | heap[idx++] & 63;
              }

              if (u0 < 65536) {
                str += String.fromCharCode(u0);
              } else {
                var ch = u0 - 65536;
                str += String.fromCharCode(55296 | ch >> 10, 56320 | ch & 1023);
              }
            }
          }

          return str;
        }

        function UTF8ToString(ptr, maxBytesToRead) {
          return ptr ? UTF8ArrayToString(HEAPU8, ptr, maxBytesToRead) : "";
        }

        function stringToUTF8Array(str, heap, outIdx, maxBytesToWrite) {
          if (!(maxBytesToWrite > 0)) return 0;
          var startIdx = outIdx;
          var endIdx = outIdx + maxBytesToWrite - 1;

          for (var i = 0; i < str.length; ++i) {
            var u = str.charCodeAt(i);

            if (u >= 55296 && u <= 57343) {
              var u1 = str.charCodeAt(++i);
              u = 65536 + ((u & 1023) << 10) | u1 & 1023;
            }

            if (u <= 127) {
              if (outIdx >= endIdx) break;
              heap[outIdx++] = u;
            } else if (u <= 2047) {
              if (outIdx + 1 >= endIdx) break;
              heap[outIdx++] = 192 | u >> 6;
              heap[outIdx++] = 128 | u & 63;
            } else if (u <= 65535) {
              if (outIdx + 2 >= endIdx) break;
              heap[outIdx++] = 224 | u >> 12;
              heap[outIdx++] = 128 | u >> 6 & 63;
              heap[outIdx++] = 128 | u & 63;
            } else {
              if (outIdx + 3 >= endIdx) break;
              heap[outIdx++] = 240 | u >> 18;
              heap[outIdx++] = 128 | u >> 12 & 63;
              heap[outIdx++] = 128 | u >> 6 & 63;
              heap[outIdx++] = 128 | u & 63;
            }
          }

          heap[outIdx] = 0;
          return outIdx - startIdx;
        }

        function stringToUTF8(str, outPtr, maxBytesToWrite) {
          return stringToUTF8Array(str, HEAPU8, outPtr, maxBytesToWrite);
        }

        function lengthBytesUTF8(str) {
          var len = 0;

          for (var i = 0; i < str.length; ++i) {
            var u = str.charCodeAt(i);
            if (u >= 55296 && u <= 57343) u = 65536 + ((u & 1023) << 10) | str.charCodeAt(++i) & 1023;
            if (u <= 127) ++len;else if (u <= 2047) len += 2;else if (u <= 65535) len += 3;else len += 4;
          }

          return len;
        }

        function writeAsciiToMemory(str, buffer, dontAddNull) {
          for (var i = 0; i < str.length; ++i) {
            HEAP8[buffer++ >> 0] = str.charCodeAt(i);
          }

          if (!dontAddNull) HEAP8[buffer >> 0] = 0;
        }

        function alignUp(x, multiple) {
          if (x % multiple > 0) {
            x += multiple - x % multiple;
          }

          return x;
        }

        var buffer, HEAP8, HEAPU8, HEAP32, HEAPF64;

        function updateGlobalBufferAndViews(buf) {
          buffer = buf;
          Module["HEAP8"] = HEAP8 = new Int8Array(buf);
          Module["HEAP16"] = new Int16Array(buf);
          Module["HEAP32"] = HEAP32 = new Int32Array(buf);
          Module["HEAPU8"] = HEAPU8 = new Uint8Array(buf);
          Module["HEAPU16"] = new Uint16Array(buf);
          Module["HEAPU32"] = new Uint32Array(buf);
          Module["HEAPF32"] = new Float32Array(buf);
          Module["HEAPF64"] = HEAPF64 = new Float64Array(buf);
        }

        var INITIAL_MEMORY = Module["INITIAL_MEMORY"] || 16777216;
        var wasmTable;
        var __ATPRERUN__ = [];
        var __ATINIT__ = [];
        var __ATMAIN__ = [];
        var __ATPOSTRUN__ = [];

        function preRun() {
          if (Module["preRun"]) {
            if (typeof Module["preRun"] == "function") Module["preRun"] = [Module["preRun"]];

            while (Module["preRun"].length) {
              addOnPreRun(Module["preRun"].shift());
            }
          }

          callRuntimeCallbacks(__ATPRERUN__);
        }

        function initRuntime() {
          if (!Module["noFSInit"] && !FS.init.initialized) FS.init();
          TTY.init();
          callRuntimeCallbacks(__ATINIT__);
        }

        function preMain() {
          FS.ignorePermissions = false;
          callRuntimeCallbacks(__ATMAIN__);
        }

        function postRun() {
          if (Module["postRun"]) {
            if (typeof Module["postRun"] == "function") Module["postRun"] = [Module["postRun"]];

            while (Module["postRun"].length) {
              addOnPostRun(Module["postRun"].shift());
            }
          }

          callRuntimeCallbacks(__ATPOSTRUN__);
        }

        function addOnPreRun(cb) {
          __ATPRERUN__.unshift(cb);
        }

        function addOnPostRun(cb) {
          __ATPOSTRUN__.unshift(cb);
        }

        var runDependencies = 0;
        var dependenciesFulfilled = null;

        function addRunDependency(id) {
          runDependencies++;

          if (Module["monitorRunDependencies"]) {
            Module["monitorRunDependencies"](runDependencies);
          }
        }

        function removeRunDependency(id) {
          runDependencies--;

          if (Module["monitorRunDependencies"]) {
            Module["monitorRunDependencies"](runDependencies);
          }

          if (runDependencies == 0) {
            if (dependenciesFulfilled) {
              var callback = dependenciesFulfilled;
              dependenciesFulfilled = null;
              callback();
            }
          }
        }

        Module["preloadedImages"] = {};
        Module["preloadedAudios"] = {};

        function abort(what) {
          if (Module["onAbort"]) {
            Module["onAbort"](what);
          }

          what += "";
          err(what);
          ABORT = true;
          what = "abort(" + what + "). Build with -s ASSERTIONS=1 for more info.";
          var e = new WebAssembly.RuntimeError(what);
          readyPromiseReject(e);
          throw e;
        }

        function hasPrefix(str, prefix) {
          return String.prototype.startsWith ? str.startsWith(prefix) : str.indexOf(prefix) === 0;
        }

        var dataURIPrefix = "data:application/octet-stream;base64,";

        function isDataURI(filename) {
          return hasPrefix(filename, dataURIPrefix);
        }

        var wasmBinaryFile = "expatlib.wasm";

        if (!isDataURI(wasmBinaryFile)) {
          wasmBinaryFile = locateFile(wasmBinaryFile);
        }

        function getBinary(file) {
          try {
            if (file == wasmBinaryFile && wasmBinary) {
              return new Uint8Array(wasmBinary);
            }

            if (readBinary) ;else {
              throw "both async and sync fetching of the wasm failed";
            }
          } catch (err) {
            abort(err);
          }
        }

        function getBinaryPromise() {
          if (!wasmBinary && ENVIRONMENT_IS_WEB && typeof fetch === "function") {
            return fetch(wasmBinaryFile, {
              credentials: "same-origin"
            }).then(function (response) {
              if (!response["ok"]) {
                throw "failed to load wasm binary file at '" + wasmBinaryFile + "'";
              }

              return response["arrayBuffer"]();
            }).catch(function () {
              return getBinary(wasmBinaryFile);
            });
          }

          return Promise.resolve().then(function () {
            return getBinary(wasmBinaryFile);
          });
        }

        function createWasm() {
          var info = {
            "a": asmLibraryArg
          };

          function receiveInstance(instance, module) {
            var exports = instance.exports;
            Module["asm"] = exports;
            wasmMemory = Module["asm"]["l"];
            updateGlobalBufferAndViews(wasmMemory.buffer);
            wasmTable = Module["asm"]["m"];
            removeRunDependency();
          }

          addRunDependency();

          function receiveInstantiatedSource(output) {
            receiveInstance(output["instance"]);
          }

          function instantiateArrayBuffer(receiver) {
            return getBinaryPromise().then(function (binary) {
              return WebAssembly.instantiate(binary, info);
            }).then(receiver, function (reason) {
              err("failed to asynchronously prepare wasm: " + reason);
              abort(reason);
            });
          }

          function instantiateAsync() {
            if (!wasmBinary && typeof WebAssembly.instantiateStreaming === "function" && !isDataURI(wasmBinaryFile) && typeof fetch === "function") {
              return fetch(wasmBinaryFile, {
                credentials: "same-origin"
              }).then(function (response) {
                var result = WebAssembly.instantiateStreaming(response, info);
                return result.then(receiveInstantiatedSource, function (reason) {
                  err("wasm streaming compile failed: " + reason);
                  err("falling back to ArrayBuffer instantiation");
                  return instantiateArrayBuffer(receiveInstantiatedSource);
                });
              });
            } else {
              return instantiateArrayBuffer(receiveInstantiatedSource);
            }
          }

          if (Module["instantiateWasm"]) {
            try {
              var exports = Module["instantiateWasm"](info, receiveInstance);
              return exports;
            } catch (e) {
              err("Module.instantiateWasm callback failed with error: " + e);
              return false;
            }
          }

          instantiateAsync().catch(readyPromiseReject);
          return {};
        }

        var tempDouble;
        var tempI64;
        var ASM_CONSTS = {
          1284: function ($0) {
            var self = Module["getCache"](Module["CExpatJS"])[$0];
            if (!self.hasOwnProperty("startElement")) throw "a JSImplementation must implement all functions, you forgot CExpatJS::startElement.";
            self["startElement"]();
          },
          1504: function ($0) {
            var self = Module["getCache"](Module["CExpatJS"])[$0];
            if (!self.hasOwnProperty("endElement")) throw "a JSImplementation must implement all functions, you forgot CExpatJS::endElement.";
            self["endElement"]();
          },
          1716: function ($0) {
            var self = Module["getCache"](Module["CExpatJS"])[$0];
            if (!self.hasOwnProperty("characterData")) throw "a JSImplementation must implement all functions, you forgot CExpatJS::characterData.";
            self["characterData"]();
          }
        };

        function callRuntimeCallbacks(callbacks) {
          while (callbacks.length > 0) {
            var callback = callbacks.shift();

            if (typeof callback == "function") {
              callback(Module);
              continue;
            }

            var func = callback.func;

            if (typeof func === "number") {
              if (callback.arg === undefined) {
                wasmTable.get(func)();
              } else {
                wasmTable.get(func)(callback.arg);
              }
            } else {
              func(callback.arg === undefined ? null : callback.arg);
            }
          }
        }

        var PATH = {
          splitPath: function (filename) {
            var splitPathRe = /^(\/?|)([\s\S]*?)((?:\.{1,2}|[^\/]+?|)(\.[^.\/]*|))(?:[\/]*)$/;
            return splitPathRe.exec(filename).slice(1);
          },
          normalizeArray: function (parts, allowAboveRoot) {
            var up = 0;

            for (var i = parts.length - 1; i >= 0; i--) {
              var last = parts[i];

              if (last === ".") {
                parts.splice(i, 1);
              } else if (last === "..") {
                parts.splice(i, 1);
                up++;
              } else if (up) {
                parts.splice(i, 1);
                up--;
              }
            }

            if (allowAboveRoot) {
              for (; up; up--) {
                parts.unshift("..");
              }
            }

            return parts;
          },
          normalize: function (path) {
            var isAbsolute = path.charAt(0) === "/",
                trailingSlash = path.substr(-1) === "/";
            path = PATH.normalizeArray(path.split("/").filter(function (p) {
              return !!p;
            }), !isAbsolute).join("/");

            if (!path && !isAbsolute) {
              path = ".";
            }

            if (path && trailingSlash) {
              path += "/";
            }

            return (isAbsolute ? "/" : "") + path;
          },
          dirname: function (path) {
            var result = PATH.splitPath(path),
                root = result[0],
                dir = result[1];

            if (!root && !dir) {
              return ".";
            }

            if (dir) {
              dir = dir.substr(0, dir.length - 1);
            }

            return root + dir;
          },
          basename: function (path) {
            if (path === "/") return "/";
            path = PATH.normalize(path);
            path = path.replace(/\/$/, "");
            var lastSlash = path.lastIndexOf("/");
            if (lastSlash === -1) return path;
            return path.substr(lastSlash + 1);
          },
          extname: function (path) {
            return PATH.splitPath(path)[3];
          },
          join: function () {
            var paths = Array.prototype.slice.call(arguments, 0);
            return PATH.normalize(paths.join("/"));
          },
          join2: function (l, r) {
            return PATH.normalize(l + "/" + r);
          }
        };

        function getRandomDevice() {
          if (typeof crypto === "object" && typeof crypto["getRandomValues"] === "function") {
            var randomBuffer = new Uint8Array(1);
            return function () {
              crypto.getRandomValues(randomBuffer);
              return randomBuffer[0];
            };
          } else return function () {
            abort("randomDevice");
          };
        }

        var PATH_FS = {
          resolve: function () {
            var resolvedPath = "",
                resolvedAbsolute = false;

            for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {
              var path = i >= 0 ? arguments[i] : FS.cwd();

              if (typeof path !== "string") {
                throw new TypeError("Arguments to path.resolve must be strings");
              } else if (!path) {
                return "";
              }

              resolvedPath = path + "/" + resolvedPath;
              resolvedAbsolute = path.charAt(0) === "/";
            }

            resolvedPath = PATH.normalizeArray(resolvedPath.split("/").filter(function (p) {
              return !!p;
            }), !resolvedAbsolute).join("/");
            return (resolvedAbsolute ? "/" : "") + resolvedPath || ".";
          },
          relative: function (from, to) {
            from = PATH_FS.resolve(from).substr(1);
            to = PATH_FS.resolve(to).substr(1);

            function trim(arr) {
              var start = 0;

              for (; start < arr.length; start++) {
                if (arr[start] !== "") break;
              }

              var end = arr.length - 1;

              for (; end >= 0; end--) {
                if (arr[end] !== "") break;
              }

              if (start > end) return [];
              return arr.slice(start, end - start + 1);
            }

            var fromParts = trim(from.split("/"));
            var toParts = trim(to.split("/"));
            var length = Math.min(fromParts.length, toParts.length);
            var samePartsLength = length;

            for (var i = 0; i < length; i++) {
              if (fromParts[i] !== toParts[i]) {
                samePartsLength = i;
                break;
              }
            }

            var outputParts = [];

            for (var i = samePartsLength; i < fromParts.length; i++) {
              outputParts.push("..");
            }

            outputParts = outputParts.concat(toParts.slice(samePartsLength));
            return outputParts.join("/");
          }
        };
        var TTY = {
          ttys: [],
          init: function () {},
          shutdown: function () {},
          register: function (dev, ops) {
            TTY.ttys[dev] = {
              input: [],
              output: [],
              ops: ops
            };
            FS.registerDevice(dev, TTY.stream_ops);
          },
          stream_ops: {
            open: function (stream) {
              var tty = TTY.ttys[stream.node.rdev];

              if (!tty) {
                throw new FS.ErrnoError(43);
              }

              stream.tty = tty;
              stream.seekable = false;
            },
            close: function (stream) {
              stream.tty.ops.flush(stream.tty);
            },
            flush: function (stream) {
              stream.tty.ops.flush(stream.tty);
            },
            read: function (stream, buffer, offset, length, pos) {
              if (!stream.tty || !stream.tty.ops.get_char) {
                throw new FS.ErrnoError(60);
              }

              var bytesRead = 0;

              for (var i = 0; i < length; i++) {
                var result;

                try {
                  result = stream.tty.ops.get_char(stream.tty);
                } catch (e) {
                  throw new FS.ErrnoError(29);
                }

                if (result === undefined && bytesRead === 0) {
                  throw new FS.ErrnoError(6);
                }

                if (result === null || result === undefined) break;
                bytesRead++;
                buffer[offset + i] = result;
              }

              if (bytesRead) {
                stream.node.timestamp = Date.now();
              }

              return bytesRead;
            },
            write: function (stream, buffer, offset, length, pos) {
              if (!stream.tty || !stream.tty.ops.put_char) {
                throw new FS.ErrnoError(60);
              }

              try {
                for (var i = 0; i < length; i++) {
                  stream.tty.ops.put_char(stream.tty, buffer[offset + i]);
                }
              } catch (e) {
                throw new FS.ErrnoError(29);
              }

              if (length) {
                stream.node.timestamp = Date.now();
              }

              return i;
            }
          },
          default_tty_ops: {
            get_char: function (tty) {
              if (!tty.input.length) {
                var result = null;

                if (typeof window != "undefined" && typeof window.prompt == "function") {
                  result = window.prompt("Input: ");

                  if (result !== null) {
                    result += "\n";
                  }
                } else if (typeof readline == "function") {
                  result = readline();

                  if (result !== null) {
                    result += "\n";
                  }
                }

                if (!result) {
                  return null;
                }

                tty.input = intArrayFromString(result, true);
              }

              return tty.input.shift();
            },
            put_char: function (tty, val) {
              if (val === null || val === 10) {
                out(UTF8ArrayToString(tty.output, 0));
                tty.output = [];
              } else {
                if (val != 0) tty.output.push(val);
              }
            },
            flush: function (tty) {
              if (tty.output && tty.output.length > 0) {
                out(UTF8ArrayToString(tty.output, 0));
                tty.output = [];
              }
            }
          },
          default_tty1_ops: {
            put_char: function (tty, val) {
              if (val === null || val === 10) {
                err(UTF8ArrayToString(tty.output, 0));
                tty.output = [];
              } else {
                if (val != 0) tty.output.push(val);
              }
            },
            flush: function (tty) {
              if (tty.output && tty.output.length > 0) {
                err(UTF8ArrayToString(tty.output, 0));
                tty.output = [];
              }
            }
          }
        };

        function mmapAlloc(size) {
          var alignedSize = alignMemory(size, 16384);

          var ptr = _malloc(alignedSize);

          while (size < alignedSize) HEAP8[ptr + size++] = 0;

          return ptr;
        }

        var MEMFS = {
          ops_table: null,
          mount: function (mount) {
            return MEMFS.createNode(null, "/", 16384 | 511, 0);
          },
          createNode: function (parent, name, mode, dev) {
            if (FS.isBlkdev(mode) || FS.isFIFO(mode)) {
              throw new FS.ErrnoError(63);
            }

            if (!MEMFS.ops_table) {
              MEMFS.ops_table = {
                dir: {
                  node: {
                    getattr: MEMFS.node_ops.getattr,
                    setattr: MEMFS.node_ops.setattr,
                    lookup: MEMFS.node_ops.lookup,
                    mknod: MEMFS.node_ops.mknod,
                    rename: MEMFS.node_ops.rename,
                    unlink: MEMFS.node_ops.unlink,
                    rmdir: MEMFS.node_ops.rmdir,
                    readdir: MEMFS.node_ops.readdir,
                    symlink: MEMFS.node_ops.symlink
                  },
                  stream: {
                    llseek: MEMFS.stream_ops.llseek
                  }
                },
                file: {
                  node: {
                    getattr: MEMFS.node_ops.getattr,
                    setattr: MEMFS.node_ops.setattr
                  },
                  stream: {
                    llseek: MEMFS.stream_ops.llseek,
                    read: MEMFS.stream_ops.read,
                    write: MEMFS.stream_ops.write,
                    allocate: MEMFS.stream_ops.allocate,
                    mmap: MEMFS.stream_ops.mmap,
                    msync: MEMFS.stream_ops.msync
                  }
                },
                link: {
                  node: {
                    getattr: MEMFS.node_ops.getattr,
                    setattr: MEMFS.node_ops.setattr,
                    readlink: MEMFS.node_ops.readlink
                  },
                  stream: {}
                },
                chrdev: {
                  node: {
                    getattr: MEMFS.node_ops.getattr,
                    setattr: MEMFS.node_ops.setattr
                  },
                  stream: FS.chrdev_stream_ops
                }
              };
            }

            var node = FS.createNode(parent, name, mode, dev);

            if (FS.isDir(node.mode)) {
              node.node_ops = MEMFS.ops_table.dir.node;
              node.stream_ops = MEMFS.ops_table.dir.stream;
              node.contents = {};
            } else if (FS.isFile(node.mode)) {
              node.node_ops = MEMFS.ops_table.file.node;
              node.stream_ops = MEMFS.ops_table.file.stream;
              node.usedBytes = 0;
              node.contents = null;
            } else if (FS.isLink(node.mode)) {
              node.node_ops = MEMFS.ops_table.link.node;
              node.stream_ops = MEMFS.ops_table.link.stream;
            } else if (FS.isChrdev(node.mode)) {
              node.node_ops = MEMFS.ops_table.chrdev.node;
              node.stream_ops = MEMFS.ops_table.chrdev.stream;
            }

            node.timestamp = Date.now();

            if (parent) {
              parent.contents[name] = node;
            }

            return node;
          },
          getFileDataAsRegularArray: function (node) {
            if (node.contents && node.contents.subarray) {
              var arr = [];

              for (var i = 0; i < node.usedBytes; ++i) arr.push(node.contents[i]);

              return arr;
            }

            return node.contents;
          },
          getFileDataAsTypedArray: function (node) {
            if (!node.contents) return new Uint8Array(0);
            if (node.contents.subarray) return node.contents.subarray(0, node.usedBytes);
            return new Uint8Array(node.contents);
          },
          expandFileStorage: function (node, newCapacity) {
            var prevCapacity = node.contents ? node.contents.length : 0;
            if (prevCapacity >= newCapacity) return;
            var CAPACITY_DOUBLING_MAX = 1024 * 1024;
            newCapacity = Math.max(newCapacity, prevCapacity * (prevCapacity < CAPACITY_DOUBLING_MAX ? 2 : 1.125) >>> 0);
            if (prevCapacity != 0) newCapacity = Math.max(newCapacity, 256);
            var oldContents = node.contents;
            node.contents = new Uint8Array(newCapacity);
            if (node.usedBytes > 0) node.contents.set(oldContents.subarray(0, node.usedBytes), 0);
            return;
          },
          resizeFileStorage: function (node, newSize) {
            if (node.usedBytes == newSize) return;

            if (newSize == 0) {
              node.contents = null;
              node.usedBytes = 0;
              return;
            }

            if (!node.contents || node.contents.subarray) {
              var oldContents = node.contents;
              node.contents = new Uint8Array(newSize);

              if (oldContents) {
                node.contents.set(oldContents.subarray(0, Math.min(newSize, node.usedBytes)));
              }

              node.usedBytes = newSize;
              return;
            }

            if (!node.contents) node.contents = [];
            if (node.contents.length > newSize) node.contents.length = newSize;else while (node.contents.length < newSize) node.contents.push(0);
            node.usedBytes = newSize;
          },
          node_ops: {
            getattr: function (node) {
              var attr = {};
              attr.dev = FS.isChrdev(node.mode) ? node.id : 1;
              attr.ino = node.id;
              attr.mode = node.mode;
              attr.nlink = 1;
              attr.uid = 0;
              attr.gid = 0;
              attr.rdev = node.rdev;

              if (FS.isDir(node.mode)) {
                attr.size = 4096;
              } else if (FS.isFile(node.mode)) {
                attr.size = node.usedBytes;
              } else if (FS.isLink(node.mode)) {
                attr.size = node.link.length;
              } else {
                attr.size = 0;
              }

              attr.atime = new Date(node.timestamp);
              attr.mtime = new Date(node.timestamp);
              attr.ctime = new Date(node.timestamp);
              attr.blksize = 4096;
              attr.blocks = Math.ceil(attr.size / attr.blksize);
              return attr;
            },
            setattr: function (node, attr) {
              if (attr.mode !== undefined) {
                node.mode = attr.mode;
              }

              if (attr.timestamp !== undefined) {
                node.timestamp = attr.timestamp;
              }

              if (attr.size !== undefined) {
                MEMFS.resizeFileStorage(node, attr.size);
              }
            },
            lookup: function (parent, name) {
              throw FS.genericErrors[44];
            },
            mknod: function (parent, name, mode, dev) {
              return MEMFS.createNode(parent, name, mode, dev);
            },
            rename: function (old_node, new_dir, new_name) {
              if (FS.isDir(old_node.mode)) {
                var new_node;

                try {
                  new_node = FS.lookupNode(new_dir, new_name);
                } catch (e) {}

                if (new_node) {
                  for (var i in new_node.contents) {
                    throw new FS.ErrnoError(55);
                  }
                }
              }

              delete old_node.parent.contents[old_node.name];
              old_node.name = new_name;
              new_dir.contents[new_name] = old_node;
              old_node.parent = new_dir;
            },
            unlink: function (parent, name) {
              delete parent.contents[name];
            },
            rmdir: function (parent, name) {
              var node = FS.lookupNode(parent, name);

              for (var i in node.contents) {
                throw new FS.ErrnoError(55);
              }

              delete parent.contents[name];
            },
            readdir: function (node) {
              var entries = [".", ".."];

              for (var key in node.contents) {
                if (!node.contents.hasOwnProperty(key)) {
                  continue;
                }

                entries.push(key);
              }

              return entries;
            },
            symlink: function (parent, newname, oldpath) {
              var node = MEMFS.createNode(parent, newname, 511 | 40960, 0);
              node.link = oldpath;
              return node;
            },
            readlink: function (node) {
              if (!FS.isLink(node.mode)) {
                throw new FS.ErrnoError(28);
              }

              return node.link;
            }
          },
          stream_ops: {
            read: function (stream, buffer, offset, length, position) {
              var contents = stream.node.contents;
              if (position >= stream.node.usedBytes) return 0;
              var size = Math.min(stream.node.usedBytes - position, length);

              if (size > 8 && contents.subarray) {
                buffer.set(contents.subarray(position, position + size), offset);
              } else {
                for (var i = 0; i < size; i++) buffer[offset + i] = contents[position + i];
              }

              return size;
            },
            write: function (stream, buffer, offset, length, position, canOwn) {
              if (buffer.buffer === HEAP8.buffer) {
                canOwn = false;
              }

              if (!length) return 0;
              var node = stream.node;
              node.timestamp = Date.now();

              if (buffer.subarray && (!node.contents || node.contents.subarray)) {
                if (canOwn) {
                  node.contents = buffer.subarray(offset, offset + length);
                  node.usedBytes = length;
                  return length;
                } else if (node.usedBytes === 0 && position === 0) {
                  node.contents = buffer.slice(offset, offset + length);
                  node.usedBytes = length;
                  return length;
                } else if (position + length <= node.usedBytes) {
                  node.contents.set(buffer.subarray(offset, offset + length), position);
                  return length;
                }
              }

              MEMFS.expandFileStorage(node, position + length);

              if (node.contents.subarray && buffer.subarray) {
                node.contents.set(buffer.subarray(offset, offset + length), position);
              } else {
                for (var i = 0; i < length; i++) {
                  node.contents[position + i] = buffer[offset + i];
                }
              }

              node.usedBytes = Math.max(node.usedBytes, position + length);
              return length;
            },
            llseek: function (stream, offset, whence) {
              var position = offset;

              if (whence === 1) {
                position += stream.position;
              } else if (whence === 2) {
                if (FS.isFile(stream.node.mode)) {
                  position += stream.node.usedBytes;
                }
              }

              if (position < 0) {
                throw new FS.ErrnoError(28);
              }

              return position;
            },
            allocate: function (stream, offset, length) {
              MEMFS.expandFileStorage(stream.node, offset + length);
              stream.node.usedBytes = Math.max(stream.node.usedBytes, offset + length);
            },
            mmap: function (stream, address, length, position, prot, flags) {
              assert(address === 0);

              if (!FS.isFile(stream.node.mode)) {
                throw new FS.ErrnoError(43);
              }

              var ptr;
              var allocated;
              var contents = stream.node.contents;

              if (!(flags & 2) && contents.buffer === buffer) {
                allocated = false;
                ptr = contents.byteOffset;
              } else {
                if (position > 0 || position + length < contents.length) {
                  if (contents.subarray) {
                    contents = contents.subarray(position, position + length);
                  } else {
                    contents = Array.prototype.slice.call(contents, position, position + length);
                  }
                }

                allocated = true;
                ptr = mmapAlloc(length);

                if (!ptr) {
                  throw new FS.ErrnoError(48);
                }

                HEAP8.set(contents, ptr);
              }

              return {
                ptr: ptr,
                allocated: allocated
              };
            },
            msync: function (stream, buffer, offset, length, mmapFlags) {
              if (!FS.isFile(stream.node.mode)) {
                throw new FS.ErrnoError(43);
              }

              if (mmapFlags & 2) {
                return 0;
              }

              var bytesWritten = MEMFS.stream_ops.write(stream, buffer, 0, length, offset, false);
              return 0;
            }
          }
        };
        var FS = {
          root: null,
          mounts: [],
          devices: {},
          streams: [],
          nextInode: 1,
          nameTable: null,
          currentPath: "/",
          initialized: false,
          ignorePermissions: true,
          trackingDelegate: {},
          tracking: {
            openFlags: {
              READ: 1,
              WRITE: 2
            }
          },
          ErrnoError: null,
          genericErrors: {},
          filesystems: null,
          syncFSRequests: 0,
          lookupPath: function (path, opts) {
            path = PATH_FS.resolve(FS.cwd(), path);
            opts = opts || {};
            if (!path) return {
              path: "",
              node: null
            };
            var defaults = {
              follow_mount: true,
              recurse_count: 0
            };

            for (var key in defaults) {
              if (opts[key] === undefined) {
                opts[key] = defaults[key];
              }
            }

            if (opts.recurse_count > 8) {
              throw new FS.ErrnoError(32);
            }

            var parts = PATH.normalizeArray(path.split("/").filter(function (p) {
              return !!p;
            }), false);
            var current = FS.root;
            var current_path = "/";

            for (var i = 0; i < parts.length; i++) {
              var islast = i === parts.length - 1;

              if (islast && opts.parent) {
                break;
              }

              current = FS.lookupNode(current, parts[i]);
              current_path = PATH.join2(current_path, parts[i]);

              if (FS.isMountpoint(current)) {
                if (!islast || islast && opts.follow_mount) {
                  current = current.mounted.root;
                }
              }

              if (!islast || opts.follow) {
                var count = 0;

                while (FS.isLink(current.mode)) {
                  var link = FS.readlink(current_path);
                  current_path = PATH_FS.resolve(PATH.dirname(current_path), link);
                  var lookup = FS.lookupPath(current_path, {
                    recurse_count: opts.recurse_count
                  });
                  current = lookup.node;

                  if (count++ > 40) {
                    throw new FS.ErrnoError(32);
                  }
                }
              }
            }

            return {
              path: current_path,
              node: current
            };
          },
          getPath: function (node) {
            var path;

            while (true) {
              if (FS.isRoot(node)) {
                var mount = node.mount.mountpoint;
                if (!path) return mount;
                return mount[mount.length - 1] !== "/" ? mount + "/" + path : mount + path;
              }

              path = path ? node.name + "/" + path : node.name;
              node = node.parent;
            }
          },
          hashName: function (parentid, name) {
            var hash = 0;

            for (var i = 0; i < name.length; i++) {
              hash = (hash << 5) - hash + name.charCodeAt(i) | 0;
            }

            return (parentid + hash >>> 0) % FS.nameTable.length;
          },
          hashAddNode: function (node) {
            var hash = FS.hashName(node.parent.id, node.name);
            node.name_next = FS.nameTable[hash];
            FS.nameTable[hash] = node;
          },
          hashRemoveNode: function (node) {
            var hash = FS.hashName(node.parent.id, node.name);

            if (FS.nameTable[hash] === node) {
              FS.nameTable[hash] = node.name_next;
            } else {
              var current = FS.nameTable[hash];

              while (current) {
                if (current.name_next === node) {
                  current.name_next = node.name_next;
                  break;
                }

                current = current.name_next;
              }
            }
          },
          lookupNode: function (parent, name) {
            var errCode = FS.mayLookup(parent);

            if (errCode) {
              throw new FS.ErrnoError(errCode, parent);
            }

            var hash = FS.hashName(parent.id, name);

            for (var node = FS.nameTable[hash]; node; node = node.name_next) {
              var nodeName = node.name;

              if (node.parent.id === parent.id && nodeName === name) {
                return node;
              }
            }

            return FS.lookup(parent, name);
          },
          createNode: function (parent, name, mode, rdev) {
            var node = new FS.FSNode(parent, name, mode, rdev);
            FS.hashAddNode(node);
            return node;
          },
          destroyNode: function (node) {
            FS.hashRemoveNode(node);
          },
          isRoot: function (node) {
            return node === node.parent;
          },
          isMountpoint: function (node) {
            return !!node.mounted;
          },
          isFile: function (mode) {
            return (mode & 61440) === 32768;
          },
          isDir: function (mode) {
            return (mode & 61440) === 16384;
          },
          isLink: function (mode) {
            return (mode & 61440) === 40960;
          },
          isChrdev: function (mode) {
            return (mode & 61440) === 8192;
          },
          isBlkdev: function (mode) {
            return (mode & 61440) === 24576;
          },
          isFIFO: function (mode) {
            return (mode & 61440) === 4096;
          },
          isSocket: function (mode) {
            return (mode & 49152) === 49152;
          },
          flagModes: {
            "r": 0,
            "r+": 2,
            "w": 577,
            "w+": 578,
            "a": 1089,
            "a+": 1090
          },
          modeStringToFlags: function (str) {
            var flags = FS.flagModes[str];

            if (typeof flags === "undefined") {
              throw new Error("Unknown file open mode: " + str);
            }

            return flags;
          },
          flagsToPermissionString: function (flag) {
            var perms = ["r", "w", "rw"][flag & 3];

            if (flag & 512) {
              perms += "w";
            }

            return perms;
          },
          nodePermissions: function (node, perms) {
            if (FS.ignorePermissions) {
              return 0;
            }

            if (perms.indexOf("r") !== -1 && !(node.mode & 292)) {
              return 2;
            } else if (perms.indexOf("w") !== -1 && !(node.mode & 146)) {
              return 2;
            } else if (perms.indexOf("x") !== -1 && !(node.mode & 73)) {
              return 2;
            }

            return 0;
          },
          mayLookup: function (dir) {
            var errCode = FS.nodePermissions(dir, "x");
            if (errCode) return errCode;
            if (!dir.node_ops.lookup) return 2;
            return 0;
          },
          mayCreate: function (dir, name) {
            try {
              var node = FS.lookupNode(dir, name);
              return 20;
            } catch (e) {}

            return FS.nodePermissions(dir, "wx");
          },
          mayDelete: function (dir, name, isdir) {
            var node;

            try {
              node = FS.lookupNode(dir, name);
            } catch (e) {
              return e.errno;
            }

            var errCode = FS.nodePermissions(dir, "wx");

            if (errCode) {
              return errCode;
            }

            if (isdir) {
              if (!FS.isDir(node.mode)) {
                return 54;
              }

              if (FS.isRoot(node) || FS.getPath(node) === FS.cwd()) {
                return 10;
              }
            } else {
              if (FS.isDir(node.mode)) {
                return 31;
              }
            }

            return 0;
          },
          mayOpen: function (node, flags) {
            if (!node) {
              return 44;
            }

            if (FS.isLink(node.mode)) {
              return 32;
            } else if (FS.isDir(node.mode)) {
              if (FS.flagsToPermissionString(flags) !== "r" || flags & 512) {
                return 31;
              }
            }

            return FS.nodePermissions(node, FS.flagsToPermissionString(flags));
          },
          MAX_OPEN_FDS: 4096,
          nextfd: function (fd_start, fd_end) {
            fd_start = fd_start || 0;
            fd_end = fd_end || FS.MAX_OPEN_FDS;

            for (var fd = fd_start; fd <= fd_end; fd++) {
              if (!FS.streams[fd]) {
                return fd;
              }
            }

            throw new FS.ErrnoError(33);
          },
          getStream: function (fd) {
            return FS.streams[fd];
          },
          createStream: function (stream, fd_start, fd_end) {
            if (!FS.FSStream) {
              FS.FSStream = function () {};

              FS.FSStream.prototype = {
                object: {
                  get: function () {
                    return this.node;
                  },
                  set: function (val) {
                    this.node = val;
                  }
                },
                isRead: {
                  get: function () {
                    return (this.flags & 2097155) !== 1;
                  }
                },
                isWrite: {
                  get: function () {
                    return (this.flags & 2097155) !== 0;
                  }
                },
                isAppend: {
                  get: function () {
                    return this.flags & 1024;
                  }
                }
              };
            }

            var newStream = new FS.FSStream();

            for (var p in stream) {
              newStream[p] = stream[p];
            }

            stream = newStream;
            var fd = FS.nextfd(fd_start, fd_end);
            stream.fd = fd;
            FS.streams[fd] = stream;
            return stream;
          },
          closeStream: function (fd) {
            FS.streams[fd] = null;
          },
          chrdev_stream_ops: {
            open: function (stream) {
              var device = FS.getDevice(stream.node.rdev);
              stream.stream_ops = device.stream_ops;

              if (stream.stream_ops.open) {
                stream.stream_ops.open(stream);
              }
            },
            llseek: function () {
              throw new FS.ErrnoError(70);
            }
          },
          major: function (dev) {
            return dev >> 8;
          },
          minor: function (dev) {
            return dev & 255;
          },
          makedev: function (ma, mi) {
            return ma << 8 | mi;
          },
          registerDevice: function (dev, ops) {
            FS.devices[dev] = {
              stream_ops: ops
            };
          },
          getDevice: function (dev) {
            return FS.devices[dev];
          },
          getMounts: function (mount) {
            var mounts = [];
            var check = [mount];

            while (check.length) {
              var m = check.pop();
              mounts.push(m);
              check.push.apply(check, m.mounts);
            }

            return mounts;
          },
          syncfs: function (populate, callback) {
            if (typeof populate === "function") {
              callback = populate;
              populate = false;
            }

            FS.syncFSRequests++;

            if (FS.syncFSRequests > 1) {
              err("warning: " + FS.syncFSRequests + " FS.syncfs operations in flight at once, probably just doing extra work");
            }

            var mounts = FS.getMounts(FS.root.mount);
            var completed = 0;

            function doCallback(errCode) {
              FS.syncFSRequests--;
              return callback(errCode);
            }

            function done(errCode) {
              if (errCode) {
                if (!done.errored) {
                  done.errored = true;
                  return doCallback(errCode);
                }

                return;
              }

              if (++completed >= mounts.length) {
                doCallback(null);
              }
            }

            mounts.forEach(function (mount) {
              if (!mount.type.syncfs) {
                return done(null);
              }

              mount.type.syncfs(mount, populate, done);
            });
          },
          mount: function (type, opts, mountpoint) {
            var root = mountpoint === "/";
            var pseudo = !mountpoint;
            var node;

            if (root && FS.root) {
              throw new FS.ErrnoError(10);
            } else if (!root && !pseudo) {
              var lookup = FS.lookupPath(mountpoint, {
                follow_mount: false
              });
              mountpoint = lookup.path;
              node = lookup.node;

              if (FS.isMountpoint(node)) {
                throw new FS.ErrnoError(10);
              }

              if (!FS.isDir(node.mode)) {
                throw new FS.ErrnoError(54);
              }
            }

            var mount = {
              type: type,
              opts: opts,
              mountpoint: mountpoint,
              mounts: []
            };
            var mountRoot = type.mount(mount);
            mountRoot.mount = mount;
            mount.root = mountRoot;

            if (root) {
              FS.root = mountRoot;
            } else if (node) {
              node.mounted = mount;

              if (node.mount) {
                node.mount.mounts.push(mount);
              }
            }

            return mountRoot;
          },
          unmount: function (mountpoint) {
            var lookup = FS.lookupPath(mountpoint, {
              follow_mount: false
            });

            if (!FS.isMountpoint(lookup.node)) {
              throw new FS.ErrnoError(28);
            }

            var node = lookup.node;
            var mount = node.mounted;
            var mounts = FS.getMounts(mount);
            Object.keys(FS.nameTable).forEach(function (hash) {
              var current = FS.nameTable[hash];

              while (current) {
                var next = current.name_next;

                if (mounts.indexOf(current.mount) !== -1) {
                  FS.destroyNode(current);
                }

                current = next;
              }
            });
            node.mounted = null;
            var idx = node.mount.mounts.indexOf(mount);
            node.mount.mounts.splice(idx, 1);
          },
          lookup: function (parent, name) {
            return parent.node_ops.lookup(parent, name);
          },
          mknod: function (path, mode, dev) {
            var lookup = FS.lookupPath(path, {
              parent: true
            });
            var parent = lookup.node;
            var name = PATH.basename(path);

            if (!name || name === "." || name === "..") {
              throw new FS.ErrnoError(28);
            }

            var errCode = FS.mayCreate(parent, name);

            if (errCode) {
              throw new FS.ErrnoError(errCode);
            }

            if (!parent.node_ops.mknod) {
              throw new FS.ErrnoError(63);
            }

            return parent.node_ops.mknod(parent, name, mode, dev);
          },
          create: function (path, mode) {
            mode = mode !== undefined ? mode : 438;
            mode &= 4095;
            mode |= 32768;
            return FS.mknod(path, mode, 0);
          },
          mkdir: function (path, mode) {
            mode = mode !== undefined ? mode : 511;
            mode &= 511 | 512;
            mode |= 16384;
            return FS.mknod(path, mode, 0);
          },
          mkdirTree: function (path, mode) {
            var dirs = path.split("/");
            var d = "";

            for (var i = 0; i < dirs.length; ++i) {
              if (!dirs[i]) continue;
              d += "/" + dirs[i];

              try {
                FS.mkdir(d, mode);
              } catch (e) {
                if (e.errno != 20) throw e;
              }
            }
          },
          mkdev: function (path, mode, dev) {
            if (typeof dev === "undefined") {
              dev = mode;
              mode = 438;
            }

            mode |= 8192;
            return FS.mknod(path, mode, dev);
          },
          symlink: function (oldpath, newpath) {
            if (!PATH_FS.resolve(oldpath)) {
              throw new FS.ErrnoError(44);
            }

            var lookup = FS.lookupPath(newpath, {
              parent: true
            });
            var parent = lookup.node;

            if (!parent) {
              throw new FS.ErrnoError(44);
            }

            var newname = PATH.basename(newpath);
            var errCode = FS.mayCreate(parent, newname);

            if (errCode) {
              throw new FS.ErrnoError(errCode);
            }

            if (!parent.node_ops.symlink) {
              throw new FS.ErrnoError(63);
            }

            return parent.node_ops.symlink(parent, newname, oldpath);
          },
          rename: function (old_path, new_path) {
            var old_dirname = PATH.dirname(old_path);
            var new_dirname = PATH.dirname(new_path);
            var old_name = PATH.basename(old_path);
            var new_name = PATH.basename(new_path);
            var lookup, old_dir, new_dir;
            lookup = FS.lookupPath(old_path, {
              parent: true
            });
            old_dir = lookup.node;
            lookup = FS.lookupPath(new_path, {
              parent: true
            });
            new_dir = lookup.node;
            if (!old_dir || !new_dir) throw new FS.ErrnoError(44);

            if (old_dir.mount !== new_dir.mount) {
              throw new FS.ErrnoError(75);
            }

            var old_node = FS.lookupNode(old_dir, old_name);
            var relative = PATH_FS.relative(old_path, new_dirname);

            if (relative.charAt(0) !== ".") {
              throw new FS.ErrnoError(28);
            }

            relative = PATH_FS.relative(new_path, old_dirname);

            if (relative.charAt(0) !== ".") {
              throw new FS.ErrnoError(55);
            }

            var new_node;

            try {
              new_node = FS.lookupNode(new_dir, new_name);
            } catch (e) {}

            if (old_node === new_node) {
              return;
            }

            var isdir = FS.isDir(old_node.mode);
            var errCode = FS.mayDelete(old_dir, old_name, isdir);

            if (errCode) {
              throw new FS.ErrnoError(errCode);
            }

            errCode = new_node ? FS.mayDelete(new_dir, new_name, isdir) : FS.mayCreate(new_dir, new_name);

            if (errCode) {
              throw new FS.ErrnoError(errCode);
            }

            if (!old_dir.node_ops.rename) {
              throw new FS.ErrnoError(63);
            }

            if (FS.isMountpoint(old_node) || new_node && FS.isMountpoint(new_node)) {
              throw new FS.ErrnoError(10);
            }

            if (new_dir !== old_dir) {
              errCode = FS.nodePermissions(old_dir, "w");

              if (errCode) {
                throw new FS.ErrnoError(errCode);
              }
            }

            try {
              if (FS.trackingDelegate["willMovePath"]) {
                FS.trackingDelegate["willMovePath"](old_path, new_path);
              }
            } catch (e) {
              err("FS.trackingDelegate['willMovePath']('" + old_path + "', '" + new_path + "') threw an exception: " + e.message);
            }

            FS.hashRemoveNode(old_node);

            try {
              old_dir.node_ops.rename(old_node, new_dir, new_name);
            } catch (e) {
              throw e;
            } finally {
              FS.hashAddNode(old_node);
            }

            try {
              if (FS.trackingDelegate["onMovePath"]) FS.trackingDelegate["onMovePath"](old_path, new_path);
            } catch (e) {
              err("FS.trackingDelegate['onMovePath']('" + old_path + "', '" + new_path + "') threw an exception: " + e.message);
            }
          },
          rmdir: function (path) {
            var lookup = FS.lookupPath(path, {
              parent: true
            });
            var parent = lookup.node;
            var name = PATH.basename(path);
            var node = FS.lookupNode(parent, name);
            var errCode = FS.mayDelete(parent, name, true);

            if (errCode) {
              throw new FS.ErrnoError(errCode);
            }

            if (!parent.node_ops.rmdir) {
              throw new FS.ErrnoError(63);
            }

            if (FS.isMountpoint(node)) {
              throw new FS.ErrnoError(10);
            }

            try {
              if (FS.trackingDelegate["willDeletePath"]) {
                FS.trackingDelegate["willDeletePath"](path);
              }
            } catch (e) {
              err("FS.trackingDelegate['willDeletePath']('" + path + "') threw an exception: " + e.message);
            }

            parent.node_ops.rmdir(parent, name);
            FS.destroyNode(node);

            try {
              if (FS.trackingDelegate["onDeletePath"]) FS.trackingDelegate["onDeletePath"](path);
            } catch (e) {
              err("FS.trackingDelegate['onDeletePath']('" + path + "') threw an exception: " + e.message);
            }
          },
          readdir: function (path) {
            var lookup = FS.lookupPath(path, {
              follow: true
            });
            var node = lookup.node;

            if (!node.node_ops.readdir) {
              throw new FS.ErrnoError(54);
            }

            return node.node_ops.readdir(node);
          },
          unlink: function (path) {
            var lookup = FS.lookupPath(path, {
              parent: true
            });
            var parent = lookup.node;
            var name = PATH.basename(path);
            var node = FS.lookupNode(parent, name);
            var errCode = FS.mayDelete(parent, name, false);

            if (errCode) {
              throw new FS.ErrnoError(errCode);
            }

            if (!parent.node_ops.unlink) {
              throw new FS.ErrnoError(63);
            }

            if (FS.isMountpoint(node)) {
              throw new FS.ErrnoError(10);
            }

            try {
              if (FS.trackingDelegate["willDeletePath"]) {
                FS.trackingDelegate["willDeletePath"](path);
              }
            } catch (e) {
              err("FS.trackingDelegate['willDeletePath']('" + path + "') threw an exception: " + e.message);
            }

            parent.node_ops.unlink(parent, name);
            FS.destroyNode(node);

            try {
              if (FS.trackingDelegate["onDeletePath"]) FS.trackingDelegate["onDeletePath"](path);
            } catch (e) {
              err("FS.trackingDelegate['onDeletePath']('" + path + "') threw an exception: " + e.message);
            }
          },
          readlink: function (path) {
            var lookup = FS.lookupPath(path);
            var link = lookup.node;

            if (!link) {
              throw new FS.ErrnoError(44);
            }

            if (!link.node_ops.readlink) {
              throw new FS.ErrnoError(28);
            }

            return PATH_FS.resolve(FS.getPath(link.parent), link.node_ops.readlink(link));
          },
          stat: function (path, dontFollow) {
            var lookup = FS.lookupPath(path, {
              follow: !dontFollow
            });
            var node = lookup.node;

            if (!node) {
              throw new FS.ErrnoError(44);
            }

            if (!node.node_ops.getattr) {
              throw new FS.ErrnoError(63);
            }

            return node.node_ops.getattr(node);
          },
          lstat: function (path) {
            return FS.stat(path, true);
          },
          chmod: function (path, mode, dontFollow) {
            var node;

            if (typeof path === "string") {
              var lookup = FS.lookupPath(path, {
                follow: !dontFollow
              });
              node = lookup.node;
            } else {
              node = path;
            }

            if (!node.node_ops.setattr) {
              throw new FS.ErrnoError(63);
            }

            node.node_ops.setattr(node, {
              mode: mode & 4095 | node.mode & ~4095,
              timestamp: Date.now()
            });
          },
          lchmod: function (path, mode) {
            FS.chmod(path, mode, true);
          },
          fchmod: function (fd, mode) {
            var stream = FS.getStream(fd);

            if (!stream) {
              throw new FS.ErrnoError(8);
            }

            FS.chmod(stream.node, mode);
          },
          chown: function (path, uid, gid, dontFollow) {
            var node;

            if (typeof path === "string") {
              var lookup = FS.lookupPath(path, {
                follow: !dontFollow
              });
              node = lookup.node;
            } else {
              node = path;
            }

            if (!node.node_ops.setattr) {
              throw new FS.ErrnoError(63);
            }

            node.node_ops.setattr(node, {
              timestamp: Date.now()
            });
          },
          lchown: function (path, uid, gid) {
            FS.chown(path, uid, gid, true);
          },
          fchown: function (fd, uid, gid) {
            var stream = FS.getStream(fd);

            if (!stream) {
              throw new FS.ErrnoError(8);
            }

            FS.chown(stream.node, uid, gid);
          },
          truncate: function (path, len) {
            if (len < 0) {
              throw new FS.ErrnoError(28);
            }

            var node;

            if (typeof path === "string") {
              var lookup = FS.lookupPath(path, {
                follow: true
              });
              node = lookup.node;
            } else {
              node = path;
            }

            if (!node.node_ops.setattr) {
              throw new FS.ErrnoError(63);
            }

            if (FS.isDir(node.mode)) {
              throw new FS.ErrnoError(31);
            }

            if (!FS.isFile(node.mode)) {
              throw new FS.ErrnoError(28);
            }

            var errCode = FS.nodePermissions(node, "w");

            if (errCode) {
              throw new FS.ErrnoError(errCode);
            }

            node.node_ops.setattr(node, {
              size: len,
              timestamp: Date.now()
            });
          },
          ftruncate: function (fd, len) {
            var stream = FS.getStream(fd);

            if (!stream) {
              throw new FS.ErrnoError(8);
            }

            if ((stream.flags & 2097155) === 0) {
              throw new FS.ErrnoError(28);
            }

            FS.truncate(stream.node, len);
          },
          utime: function (path, atime, mtime) {
            var lookup = FS.lookupPath(path, {
              follow: true
            });
            var node = lookup.node;
            node.node_ops.setattr(node, {
              timestamp: Math.max(atime, mtime)
            });
          },
          open: function (path, flags, mode, fd_start, fd_end) {
            if (path === "") {
              throw new FS.ErrnoError(44);
            }

            flags = typeof flags === "string" ? FS.modeStringToFlags(flags) : flags;
            mode = typeof mode === "undefined" ? 438 : mode;

            if (flags & 64) {
              mode = mode & 4095 | 32768;
            } else {
              mode = 0;
            }

            var node;

            if (typeof path === "object") {
              node = path;
            } else {
              path = PATH.normalize(path);

              try {
                var lookup = FS.lookupPath(path, {
                  follow: !(flags & 131072)
                });
                node = lookup.node;
              } catch (e) {}
            }

            var created = false;

            if (flags & 64) {
              if (node) {
                if (flags & 128) {
                  throw new FS.ErrnoError(20);
                }
              } else {
                node = FS.mknod(path, mode, 0);
                created = true;
              }
            }

            if (!node) {
              throw new FS.ErrnoError(44);
            }

            if (FS.isChrdev(node.mode)) {
              flags &= ~512;
            }

            if (flags & 65536 && !FS.isDir(node.mode)) {
              throw new FS.ErrnoError(54);
            }

            if (!created) {
              var errCode = FS.mayOpen(node, flags);

              if (errCode) {
                throw new FS.ErrnoError(errCode);
              }
            }

            if (flags & 512) {
              FS.truncate(node, 0);
            }

            flags &= ~(128 | 512 | 131072);
            var stream = FS.createStream({
              node: node,
              path: FS.getPath(node),
              flags: flags,
              seekable: true,
              position: 0,
              stream_ops: node.stream_ops,
              ungotten: [],
              error: false
            }, fd_start, fd_end);

            if (stream.stream_ops.open) {
              stream.stream_ops.open(stream);
            }

            if (Module["logReadFiles"] && !(flags & 1)) {
              if (!FS.readFiles) FS.readFiles = {};

              if (!(path in FS.readFiles)) {
                FS.readFiles[path] = 1;
                err("FS.trackingDelegate error on read file: " + path);
              }
            }

            try {
              if (FS.trackingDelegate["onOpenFile"]) {
                var trackingFlags = 0;

                if ((flags & 2097155) !== 1) {
                  trackingFlags |= FS.tracking.openFlags.READ;
                }

                if ((flags & 2097155) !== 0) {
                  trackingFlags |= FS.tracking.openFlags.WRITE;
                }

                FS.trackingDelegate["onOpenFile"](path, trackingFlags);
              }
            } catch (e) {
              err("FS.trackingDelegate['onOpenFile']('" + path + "', flags) threw an exception: " + e.message);
            }

            return stream;
          },
          close: function (stream) {
            if (FS.isClosed(stream)) {
              throw new FS.ErrnoError(8);
            }

            if (stream.getdents) stream.getdents = null;

            try {
              if (stream.stream_ops.close) {
                stream.stream_ops.close(stream);
              }
            } catch (e) {
              throw e;
            } finally {
              FS.closeStream(stream.fd);
            }

            stream.fd = null;
          },
          isClosed: function (stream) {
            return stream.fd === null;
          },
          llseek: function (stream, offset, whence) {
            if (FS.isClosed(stream)) {
              throw new FS.ErrnoError(8);
            }

            if (!stream.seekable || !stream.stream_ops.llseek) {
              throw new FS.ErrnoError(70);
            }

            if (whence != 0 && whence != 1 && whence != 2) {
              throw new FS.ErrnoError(28);
            }

            stream.position = stream.stream_ops.llseek(stream, offset, whence);
            stream.ungotten = [];
            return stream.position;
          },
          read: function (stream, buffer, offset, length, position) {
            if (length < 0 || position < 0) {
              throw new FS.ErrnoError(28);
            }

            if (FS.isClosed(stream)) {
              throw new FS.ErrnoError(8);
            }

            if ((stream.flags & 2097155) === 1) {
              throw new FS.ErrnoError(8);
            }

            if (FS.isDir(stream.node.mode)) {
              throw new FS.ErrnoError(31);
            }

            if (!stream.stream_ops.read) {
              throw new FS.ErrnoError(28);
            }

            var seeking = typeof position !== "undefined";

            if (!seeking) {
              position = stream.position;
            } else if (!stream.seekable) {
              throw new FS.ErrnoError(70);
            }

            var bytesRead = stream.stream_ops.read(stream, buffer, offset, length, position);
            if (!seeking) stream.position += bytesRead;
            return bytesRead;
          },
          write: function (stream, buffer, offset, length, position, canOwn) {
            if (length < 0 || position < 0) {
              throw new FS.ErrnoError(28);
            }

            if (FS.isClosed(stream)) {
              throw new FS.ErrnoError(8);
            }

            if ((stream.flags & 2097155) === 0) {
              throw new FS.ErrnoError(8);
            }

            if (FS.isDir(stream.node.mode)) {
              throw new FS.ErrnoError(31);
            }

            if (!stream.stream_ops.write) {
              throw new FS.ErrnoError(28);
            }

            if (stream.seekable && stream.flags & 1024) {
              FS.llseek(stream, 0, 2);
            }

            var seeking = typeof position !== "undefined";

            if (!seeking) {
              position = stream.position;
            } else if (!stream.seekable) {
              throw new FS.ErrnoError(70);
            }

            var bytesWritten = stream.stream_ops.write(stream, buffer, offset, length, position, canOwn);
            if (!seeking) stream.position += bytesWritten;

            try {
              if (stream.path && FS.trackingDelegate["onWriteToFile"]) FS.trackingDelegate["onWriteToFile"](stream.path);
            } catch (e) {
              err("FS.trackingDelegate['onWriteToFile']('" + stream.path + "') threw an exception: " + e.message);
            }

            return bytesWritten;
          },
          allocate: function (stream, offset, length) {
            if (FS.isClosed(stream)) {
              throw new FS.ErrnoError(8);
            }

            if (offset < 0 || length <= 0) {
              throw new FS.ErrnoError(28);
            }

            if ((stream.flags & 2097155) === 0) {
              throw new FS.ErrnoError(8);
            }

            if (!FS.isFile(stream.node.mode) && !FS.isDir(stream.node.mode)) {
              throw new FS.ErrnoError(43);
            }

            if (!stream.stream_ops.allocate) {
              throw new FS.ErrnoError(138);
            }

            stream.stream_ops.allocate(stream, offset, length);
          },
          mmap: function (stream, address, length, position, prot, flags) {
            if ((prot & 2) !== 0 && (flags & 2) === 0 && (stream.flags & 2097155) !== 2) {
              throw new FS.ErrnoError(2);
            }

            if ((stream.flags & 2097155) === 1) {
              throw new FS.ErrnoError(2);
            }

            if (!stream.stream_ops.mmap) {
              throw new FS.ErrnoError(43);
            }

            return stream.stream_ops.mmap(stream, address, length, position, prot, flags);
          },
          msync: function (stream, buffer, offset, length, mmapFlags) {
            if (!stream || !stream.stream_ops.msync) {
              return 0;
            }

            return stream.stream_ops.msync(stream, buffer, offset, length, mmapFlags);
          },
          munmap: function (stream) {
            return 0;
          },
          ioctl: function (stream, cmd, arg) {
            if (!stream.stream_ops.ioctl) {
              throw new FS.ErrnoError(59);
            }

            return stream.stream_ops.ioctl(stream, cmd, arg);
          },
          readFile: function (path, opts) {
            opts = opts || {};
            opts.flags = opts.flags || 0;
            opts.encoding = opts.encoding || "binary";

            if (opts.encoding !== "utf8" && opts.encoding !== "binary") {
              throw new Error('Invalid encoding type "' + opts.encoding + '"');
            }

            var ret;
            var stream = FS.open(path, opts.flags);
            var stat = FS.stat(path);
            var length = stat.size;
            var buf = new Uint8Array(length);
            FS.read(stream, buf, 0, length, 0);

            if (opts.encoding === "utf8") {
              ret = UTF8ArrayToString(buf, 0);
            } else if (opts.encoding === "binary") {
              ret = buf;
            }

            FS.close(stream);
            return ret;
          },
          writeFile: function (path, data, opts) {
            opts = opts || {};
            opts.flags = opts.flags || 577;
            var stream = FS.open(path, opts.flags, opts.mode);

            if (typeof data === "string") {
              var buf = new Uint8Array(lengthBytesUTF8(data) + 1);
              var actualNumBytes = stringToUTF8Array(data, buf, 0, buf.length);
              FS.write(stream, buf, 0, actualNumBytes, undefined, opts.canOwn);
            } else if (ArrayBuffer.isView(data)) {
              FS.write(stream, data, 0, data.byteLength, undefined, opts.canOwn);
            } else {
              throw new Error("Unsupported data type");
            }

            FS.close(stream);
          },
          cwd: function () {
            return FS.currentPath;
          },
          chdir: function (path) {
            var lookup = FS.lookupPath(path, {
              follow: true
            });

            if (lookup.node === null) {
              throw new FS.ErrnoError(44);
            }

            if (!FS.isDir(lookup.node.mode)) {
              throw new FS.ErrnoError(54);
            }

            var errCode = FS.nodePermissions(lookup.node, "x");

            if (errCode) {
              throw new FS.ErrnoError(errCode);
            }

            FS.currentPath = lookup.path;
          },
          createDefaultDirectories: function () {
            FS.mkdir("/tmp");
            FS.mkdir("/home");
            FS.mkdir("/home/web_user");
          },
          createDefaultDevices: function () {
            FS.mkdir("/dev");
            FS.registerDevice(FS.makedev(1, 3), {
              read: function () {
                return 0;
              },
              write: function (stream, buffer, offset, length, pos) {
                return length;
              }
            });
            FS.mkdev("/dev/null", FS.makedev(1, 3));
            TTY.register(FS.makedev(5, 0), TTY.default_tty_ops);
            TTY.register(FS.makedev(6, 0), TTY.default_tty1_ops);
            FS.mkdev("/dev/tty", FS.makedev(5, 0));
            FS.mkdev("/dev/tty1", FS.makedev(6, 0));
            var random_device = getRandomDevice();
            FS.createDevice("/dev", "random", random_device);
            FS.createDevice("/dev", "urandom", random_device);
            FS.mkdir("/dev/shm");
            FS.mkdir("/dev/shm/tmp");
          },
          createSpecialDirectories: function () {
            FS.mkdir("/proc");
            FS.mkdir("/proc/self");
            FS.mkdir("/proc/self/fd");
            FS.mount({
              mount: function () {
                var node = FS.createNode("/proc/self", "fd", 16384 | 511, 73);
                node.node_ops = {
                  lookup: function (parent, name) {
                    var fd = +name;
                    var stream = FS.getStream(fd);
                    if (!stream) throw new FS.ErrnoError(8);
                    var ret = {
                      parent: null,
                      mount: {
                        mountpoint: "fake"
                      },
                      node_ops: {
                        readlink: function () {
                          return stream.path;
                        }
                      }
                    };
                    ret.parent = ret;
                    return ret;
                  }
                };
                return node;
              }
            }, {}, "/proc/self/fd");
          },
          createStandardStreams: function () {
            if (Module["stdin"]) {
              FS.createDevice("/dev", "stdin", Module["stdin"]);
            } else {
              FS.symlink("/dev/tty", "/dev/stdin");
            }

            if (Module["stdout"]) {
              FS.createDevice("/dev", "stdout", null, Module["stdout"]);
            } else {
              FS.symlink("/dev/tty", "/dev/stdout");
            }

            if (Module["stderr"]) {
              FS.createDevice("/dev", "stderr", null, Module["stderr"]);
            } else {
              FS.symlink("/dev/tty1", "/dev/stderr");
            }

            var stdin = FS.open("/dev/stdin", 0);
            var stdout = FS.open("/dev/stdout", 1);
            var stderr = FS.open("/dev/stderr", 1);
          },
          ensureErrnoError: function () {
            if (FS.ErrnoError) return;

            FS.ErrnoError = function ErrnoError(errno, node) {
              this.node = node;

              this.setErrno = function (errno) {
                this.errno = errno;
              };

              this.setErrno(errno);
              this.message = "FS error";
            };

            FS.ErrnoError.prototype = new Error();
            FS.ErrnoError.prototype.constructor = FS.ErrnoError;
            [44].forEach(function (code) {
              FS.genericErrors[code] = new FS.ErrnoError(code);
              FS.genericErrors[code].stack = "<generic error, no stack>";
            });
          },
          staticInit: function () {
            FS.ensureErrnoError();
            FS.nameTable = new Array(4096);
            FS.mount(MEMFS, {}, "/");
            FS.createDefaultDirectories();
            FS.createDefaultDevices();
            FS.createSpecialDirectories();
            FS.filesystems = {
              "MEMFS": MEMFS
            };
          },
          init: function (input, output, error) {
            FS.init.initialized = true;
            FS.ensureErrnoError();
            Module["stdin"] = input || Module["stdin"];
            Module["stdout"] = output || Module["stdout"];
            Module["stderr"] = error || Module["stderr"];
            FS.createStandardStreams();
          },
          quit: function () {
            FS.init.initialized = false;
            var fflush = Module["_fflush"];
            if (fflush) fflush(0);

            for (var i = 0; i < FS.streams.length; i++) {
              var stream = FS.streams[i];

              if (!stream) {
                continue;
              }

              FS.close(stream);
            }
          },
          getMode: function (canRead, canWrite) {
            var mode = 0;
            if (canRead) mode |= 292 | 73;
            if (canWrite) mode |= 146;
            return mode;
          },
          findObject: function (path, dontResolveLastLink) {
            var ret = FS.analyzePath(path, dontResolveLastLink);

            if (ret.exists) {
              return ret.object;
            } else {
              return null;
            }
          },
          analyzePath: function (path, dontResolveLastLink) {
            try {
              var lookup = FS.lookupPath(path, {
                follow: !dontResolveLastLink
              });
              path = lookup.path;
            } catch (e) {}

            var ret = {
              isRoot: false,
              exists: false,
              error: 0,
              name: null,
              path: null,
              object: null,
              parentExists: false,
              parentPath: null,
              parentObject: null
            };

            try {
              var lookup = FS.lookupPath(path, {
                parent: true
              });
              ret.parentExists = true;
              ret.parentPath = lookup.path;
              ret.parentObject = lookup.node;
              ret.name = PATH.basename(path);
              lookup = FS.lookupPath(path, {
                follow: !dontResolveLastLink
              });
              ret.exists = true;
              ret.path = lookup.path;
              ret.object = lookup.node;
              ret.name = lookup.node.name;
              ret.isRoot = lookup.path === "/";
            } catch (e) {
              ret.error = e.errno;
            }

            return ret;
          },
          createPath: function (parent, path, canRead, canWrite) {
            parent = typeof parent === "string" ? parent : FS.getPath(parent);
            var parts = path.split("/").reverse();

            while (parts.length) {
              var part = parts.pop();
              if (!part) continue;
              var current = PATH.join2(parent, part);

              try {
                FS.mkdir(current);
              } catch (e) {}

              parent = current;
            }

            return current;
          },
          createFile: function (parent, name, properties, canRead, canWrite) {
            var path = PATH.join2(typeof parent === "string" ? parent : FS.getPath(parent), name);
            var mode = FS.getMode(canRead, canWrite);
            return FS.create(path, mode);
          },
          createDataFile: function (parent, name, data, canRead, canWrite, canOwn) {
            var path = name ? PATH.join2(typeof parent === "string" ? parent : FS.getPath(parent), name) : parent;
            var mode = FS.getMode(canRead, canWrite);
            var node = FS.create(path, mode);

            if (data) {
              if (typeof data === "string") {
                var arr = new Array(data.length);

                for (var i = 0, len = data.length; i < len; ++i) arr[i] = data.charCodeAt(i);

                data = arr;
              }

              FS.chmod(node, mode | 146);
              var stream = FS.open(node, 577);
              FS.write(stream, data, 0, data.length, 0, canOwn);
              FS.close(stream);
              FS.chmod(node, mode);
            }

            return node;
          },
          createDevice: function (parent, name, input, output) {
            var path = PATH.join2(typeof parent === "string" ? parent : FS.getPath(parent), name);
            var mode = FS.getMode(!!input, !!output);
            if (!FS.createDevice.major) FS.createDevice.major = 64;
            var dev = FS.makedev(FS.createDevice.major++, 0);
            FS.registerDevice(dev, {
              open: function (stream) {
                stream.seekable = false;
              },
              close: function (stream) {
                if (output && output.buffer && output.buffer.length) {
                  output(10);
                }
              },
              read: function (stream, buffer, offset, length, pos) {
                var bytesRead = 0;

                for (var i = 0; i < length; i++) {
                  var result;

                  try {
                    result = input();
                  } catch (e) {
                    throw new FS.ErrnoError(29);
                  }

                  if (result === undefined && bytesRead === 0) {
                    throw new FS.ErrnoError(6);
                  }

                  if (result === null || result === undefined) break;
                  bytesRead++;
                  buffer[offset + i] = result;
                }

                if (bytesRead) {
                  stream.node.timestamp = Date.now();
                }

                return bytesRead;
              },
              write: function (stream, buffer, offset, length, pos) {
                for (var i = 0; i < length; i++) {
                  try {
                    output(buffer[offset + i]);
                  } catch (e) {
                    throw new FS.ErrnoError(29);
                  }
                }

                if (length) {
                  stream.node.timestamp = Date.now();
                }

                return i;
              }
            });
            return FS.mkdev(path, mode, dev);
          },
          forceLoadFile: function (obj) {
            if (obj.isDevice || obj.isFolder || obj.link || obj.contents) return true;

            if (typeof XMLHttpRequest !== "undefined") {
              throw new Error("Lazy loading should have been performed (contents set) in createLazyFile, but it was not. Lazy loading only works in web workers. Use --embed-file or --preload-file in emcc on the main thread.");
            } else if (read_) {
              try {
                obj.contents = intArrayFromString(read_(obj.url), true);
                obj.usedBytes = obj.contents.length;
              } catch (e) {
                throw new FS.ErrnoError(29);
              }
            } else {
              throw new Error("Cannot load without read() or XMLHttpRequest.");
            }
          },
          createLazyFile: function (parent, name, url, canRead, canWrite) {
            function LazyUint8Array() {
              this.lengthKnown = false;
              this.chunks = [];
            }

            LazyUint8Array.prototype.get = function LazyUint8Array_get(idx) {
              if (idx > this.length - 1 || idx < 0) {
                return undefined;
              }

              var chunkOffset = idx % this.chunkSize;
              var chunkNum = idx / this.chunkSize | 0;
              return this.getter(chunkNum)[chunkOffset];
            };

            LazyUint8Array.prototype.setDataGetter = function LazyUint8Array_setDataGetter(getter) {
              this.getter = getter;
            };

            LazyUint8Array.prototype.cacheLength = function LazyUint8Array_cacheLength() {
              var xhr = new XMLHttpRequest();
              xhr.open("HEAD", url, false);
              xhr.send(null);
              if (!(xhr.status >= 200 && xhr.status < 300 || xhr.status === 304)) throw new Error("Couldn't load " + url + ". Status: " + xhr.status);
              var datalength = Number(xhr.getResponseHeader("Content-length"));
              var header;
              var hasByteServing = (header = xhr.getResponseHeader("Accept-Ranges")) && header === "bytes";
              var usesGzip = (header = xhr.getResponseHeader("Content-Encoding")) && header === "gzip";
              var chunkSize = 1024 * 1024;
              if (!hasByteServing) chunkSize = datalength;

              var doXHR = function (from, to) {
                if (from > to) throw new Error("invalid range (" + from + ", " + to + ") or no bytes requested!");
                if (to > datalength - 1) throw new Error("only " + datalength + " bytes available! programmer error!");
                var xhr = new XMLHttpRequest();
                xhr.open("GET", url, false);
                if (datalength !== chunkSize) xhr.setRequestHeader("Range", "bytes=" + from + "-" + to);
                if (typeof Uint8Array != "undefined") xhr.responseType = "arraybuffer";

                if (xhr.overrideMimeType) {
                  xhr.overrideMimeType("text/plain; charset=x-user-defined");
                }

                xhr.send(null);
                if (!(xhr.status >= 200 && xhr.status < 300 || xhr.status === 304)) throw new Error("Couldn't load " + url + ". Status: " + xhr.status);

                if (xhr.response !== undefined) {
                  return new Uint8Array(xhr.response || []);
                } else {
                  return intArrayFromString(xhr.responseText || "", true);
                }
              };

              var lazyArray = this;
              lazyArray.setDataGetter(function (chunkNum) {
                var start = chunkNum * chunkSize;
                var end = (chunkNum + 1) * chunkSize - 1;
                end = Math.min(end, datalength - 1);

                if (typeof lazyArray.chunks[chunkNum] === "undefined") {
                  lazyArray.chunks[chunkNum] = doXHR(start, end);
                }

                if (typeof lazyArray.chunks[chunkNum] === "undefined") throw new Error("doXHR failed!");
                return lazyArray.chunks[chunkNum];
              });

              if (usesGzip || !datalength) {
                chunkSize = datalength = 1;
                datalength = this.getter(0).length;
                chunkSize = datalength;
                out("LazyFiles on gzip forces download of the whole file when length is accessed");
              }

              this._length = datalength;
              this._chunkSize = chunkSize;
              this.lengthKnown = true;
            };

            if (typeof XMLHttpRequest !== "undefined") {
              throw "Cannot do synchronous binary XHRs outside webworkers in modern browsers. Use --embed-file or --preload-file in emcc";
              var lazyArray = new LazyUint8Array();
              var properties = {
                isDevice: false,
                contents: lazyArray
              };
            } else {
              var properties = {
                isDevice: false,
                url: url
              };
            }

            var node = FS.createFile(parent, name, properties, canRead, canWrite);

            if (properties.contents) {
              node.contents = properties.contents;
            } else if (properties.url) {
              node.contents = null;
              node.url = properties.url;
            }

            Object.defineProperties(node, {
              usedBytes: {
                get: function () {
                  return this.contents.length;
                }
              }
            });
            var stream_ops = {};
            var keys = Object.keys(node.stream_ops);
            keys.forEach(function (key) {
              var fn = node.stream_ops[key];

              stream_ops[key] = function forceLoadLazyFile() {
                FS.forceLoadFile(node);
                return fn.apply(null, arguments);
              };
            });

            stream_ops.read = function stream_ops_read(stream, buffer, offset, length, position) {
              FS.forceLoadFile(node);
              var contents = stream.node.contents;
              if (position >= contents.length) return 0;
              var size = Math.min(contents.length - position, length);

              if (contents.slice) {
                for (var i = 0; i < size; i++) {
                  buffer[offset + i] = contents[position + i];
                }
              } else {
                for (var i = 0; i < size; i++) {
                  buffer[offset + i] = contents.get(position + i);
                }
              }

              return size;
            };

            node.stream_ops = stream_ops;
            return node;
          },
          createPreloadedFile: function (parent, name, url, canRead, canWrite, onload, onerror, dontCreateFile, canOwn, preFinish) {
            Browser.init();
            var fullname = name ? PATH_FS.resolve(PATH.join2(parent, name)) : parent;

            function processData(byteArray) {
              function finish(byteArray) {
                if (preFinish) preFinish();

                if (!dontCreateFile) {
                  FS.createDataFile(parent, name, byteArray, canRead, canWrite, canOwn);
                }

                if (onload) onload();
                removeRunDependency();
              }

              var handled = false;
              Module["preloadPlugins"].forEach(function (plugin) {
                if (handled) return;

                if (plugin["canHandle"](fullname)) {
                  plugin["handle"](byteArray, fullname, finish, function () {
                    if (onerror) onerror();
                    removeRunDependency();
                  });
                  handled = true;
                }
              });
              if (!handled) finish(byteArray);
            }

            addRunDependency();

            if (typeof url == "string") {
              Browser.asyncLoad(url, function (byteArray) {
                processData(byteArray);
              }, onerror);
            } else {
              processData(url);
            }
          },
          indexedDB: function () {
            return window.indexedDB || window.mozIndexedDB || window.webkitIndexedDB || window.msIndexedDB;
          },
          DB_NAME: function () {
            return "EM_FS_" + window.location.pathname;
          },
          DB_VERSION: 20,
          DB_STORE_NAME: "FILE_DATA",
          saveFilesToDB: function (paths, onload, onerror) {
            onload = onload || function () {};

            onerror = onerror || function () {};

            var indexedDB = FS.indexedDB();

            try {
              var openRequest = indexedDB.open(FS.DB_NAME(), FS.DB_VERSION);
            } catch (e) {
              return onerror(e);
            }

            openRequest.onupgradeneeded = function openRequest_onupgradeneeded() {
              out("creating db");
              var db = openRequest.result;
              db.createObjectStore(FS.DB_STORE_NAME);
            };

            openRequest.onsuccess = function openRequest_onsuccess() {
              var db = openRequest.result;
              var transaction = db.transaction([FS.DB_STORE_NAME], "readwrite");
              var files = transaction.objectStore(FS.DB_STORE_NAME);
              var ok = 0,
                  fail = 0,
                  total = paths.length;

              function finish() {
                if (fail == 0) onload();else onerror();
              }

              paths.forEach(function (path) {
                var putRequest = files.put(FS.analyzePath(path).object.contents, path);

                putRequest.onsuccess = function putRequest_onsuccess() {
                  ok++;
                  if (ok + fail == total) finish();
                };

                putRequest.onerror = function putRequest_onerror() {
                  fail++;
                  if (ok + fail == total) finish();
                };
              });
              transaction.onerror = onerror;
            };

            openRequest.onerror = onerror;
          },
          loadFilesFromDB: function (paths, onload, onerror) {
            onload = onload || function () {};

            onerror = onerror || function () {};

            var indexedDB = FS.indexedDB();

            try {
              var openRequest = indexedDB.open(FS.DB_NAME(), FS.DB_VERSION);
            } catch (e) {
              return onerror(e);
            }

            openRequest.onupgradeneeded = onerror;

            openRequest.onsuccess = function openRequest_onsuccess() {
              var db = openRequest.result;

              try {
                var transaction = db.transaction([FS.DB_STORE_NAME], "readonly");
              } catch (e) {
                onerror(e);
                return;
              }

              var files = transaction.objectStore(FS.DB_STORE_NAME);
              var ok = 0,
                  fail = 0,
                  total = paths.length;

              function finish() {
                if (fail == 0) onload();else onerror();
              }

              paths.forEach(function (path) {
                var getRequest = files.get(path);

                getRequest.onsuccess = function getRequest_onsuccess() {
                  if (FS.analyzePath(path).exists) {
                    FS.unlink(path);
                  }

                  FS.createDataFile(PATH.dirname(path), PATH.basename(path), getRequest.result, true, true, true);
                  ok++;
                  if (ok + fail == total) finish();
                };

                getRequest.onerror = function getRequest_onerror() {
                  fail++;
                  if (ok + fail == total) finish();
                };
              });
              transaction.onerror = onerror;
            };

            openRequest.onerror = onerror;
          }
        };
        var SYSCALLS = {
          mappings: {},
          DEFAULT_POLLMASK: 5,
          umask: 511,
          calculateAt: function (dirfd, path) {
            if (path[0] !== "/") {
              var dir;

              if (dirfd === -100) {
                dir = FS.cwd();
              } else {
                var dirstream = FS.getStream(dirfd);
                if (!dirstream) throw new FS.ErrnoError(8);
                dir = dirstream.path;
              }

              path = PATH.join2(dir, path);
            }

            return path;
          },
          doStat: function (func, path, buf) {
            try {
              var stat = func(path);
            } catch (e) {
              if (e && e.node && PATH.normalize(path) !== PATH.normalize(FS.getPath(e.node))) {
                return -54;
              }

              throw e;
            }

            HEAP32[buf >> 2] = stat.dev;
            HEAP32[buf + 4 >> 2] = 0;
            HEAP32[buf + 8 >> 2] = stat.ino;
            HEAP32[buf + 12 >> 2] = stat.mode;
            HEAP32[buf + 16 >> 2] = stat.nlink;
            HEAP32[buf + 20 >> 2] = stat.uid;
            HEAP32[buf + 24 >> 2] = stat.gid;
            HEAP32[buf + 28 >> 2] = stat.rdev;
            HEAP32[buf + 32 >> 2] = 0;
            tempI64 = [stat.size >>> 0, (tempDouble = stat.size, +Math.abs(tempDouble) >= 1 ? tempDouble > 0 ? (Math.min(+Math.floor(tempDouble / 4294967296), 4294967295) | 0) >>> 0 : ~~+Math.ceil((tempDouble - +(~~tempDouble >>> 0)) / 4294967296) >>> 0 : 0)], HEAP32[buf + 40 >> 2] = tempI64[0], HEAP32[buf + 44 >> 2] = tempI64[1];
            HEAP32[buf + 48 >> 2] = 4096;
            HEAP32[buf + 52 >> 2] = stat.blocks;
            HEAP32[buf + 56 >> 2] = stat.atime.getTime() / 1e3 | 0;
            HEAP32[buf + 60 >> 2] = 0;
            HEAP32[buf + 64 >> 2] = stat.mtime.getTime() / 1e3 | 0;
            HEAP32[buf + 68 >> 2] = 0;
            HEAP32[buf + 72 >> 2] = stat.ctime.getTime() / 1e3 | 0;
            HEAP32[buf + 76 >> 2] = 0;
            tempI64 = [stat.ino >>> 0, (tempDouble = stat.ino, +Math.abs(tempDouble) >= 1 ? tempDouble > 0 ? (Math.min(+Math.floor(tempDouble / 4294967296), 4294967295) | 0) >>> 0 : ~~+Math.ceil((tempDouble - +(~~tempDouble >>> 0)) / 4294967296) >>> 0 : 0)], HEAP32[buf + 80 >> 2] = tempI64[0], HEAP32[buf + 84 >> 2] = tempI64[1];
            return 0;
          },
          doMsync: function (addr, stream, len, flags, offset) {
            var buffer = HEAPU8.slice(addr, addr + len);
            FS.msync(stream, buffer, offset, len, flags);
          },
          doMkdir: function (path, mode) {
            path = PATH.normalize(path);
            if (path[path.length - 1] === "/") path = path.substr(0, path.length - 1);
            FS.mkdir(path, mode, 0);
            return 0;
          },
          doMknod: function (path, mode, dev) {
            switch (mode & 61440) {
              case 32768:
              case 8192:
              case 24576:
              case 4096:
              case 49152:
                break;

              default:
                return -28;
            }

            FS.mknod(path, mode, dev);
            return 0;
          },
          doReadlink: function (path, buf, bufsize) {
            if (bufsize <= 0) return -28;
            var ret = FS.readlink(path);
            var len = Math.min(bufsize, lengthBytesUTF8(ret));
            var endChar = HEAP8[buf + len];
            stringToUTF8(ret, buf, bufsize + 1);
            HEAP8[buf + len] = endChar;
            return len;
          },
          doAccess: function (path, amode) {
            if (amode & ~7) {
              return -28;
            }

            var node;
            var lookup = FS.lookupPath(path, {
              follow: true
            });
            node = lookup.node;

            if (!node) {
              return -44;
            }

            var perms = "";
            if (amode & 4) perms += "r";
            if (amode & 2) perms += "w";
            if (amode & 1) perms += "x";

            if (perms && FS.nodePermissions(node, perms)) {
              return -2;
            }

            return 0;
          },
          doDup: function (path, flags, suggestFD) {
            var suggest = FS.getStream(suggestFD);
            if (suggest) FS.close(suggest);
            return FS.open(path, flags, 0, suggestFD, suggestFD).fd;
          },
          doReadv: function (stream, iov, iovcnt, offset) {
            var ret = 0;

            for (var i = 0; i < iovcnt; i++) {
              var ptr = HEAP32[iov + i * 8 >> 2];
              var len = HEAP32[iov + (i * 8 + 4) >> 2];
              var curr = FS.read(stream, HEAP8, ptr, len, offset);
              if (curr < 0) return -1;
              ret += curr;
              if (curr < len) break;
            }

            return ret;
          },
          doWritev: function (stream, iov, iovcnt, offset) {
            var ret = 0;

            for (var i = 0; i < iovcnt; i++) {
              var ptr = HEAP32[iov + i * 8 >> 2];
              var len = HEAP32[iov + (i * 8 + 4) >> 2];
              var curr = FS.write(stream, HEAP8, ptr, len, offset);
              if (curr < 0) return -1;
              ret += curr;
            }

            return ret;
          },
          varargs: undefined,
          get: function () {
            SYSCALLS.varargs += 4;
            var ret = HEAP32[SYSCALLS.varargs - 4 >> 2];
            return ret;
          },
          getStr: function (ptr) {
            var ret = UTF8ToString(ptr);
            return ret;
          },
          getStreamFromFD: function (fd) {
            var stream = FS.getStream(fd);
            if (!stream) throw new FS.ErrnoError(8);
            return stream;
          },
          get64: function (low, high) {
            return low;
          }
        };

        function ___sys_getpid() {
          return 42;
        }

        function _abort() {
          abort();
        }

        function _emscripten_asm_const_int(code, sigPtr, argbuf) {
          var args = readAsmConstArgs(sigPtr, argbuf);
          return ASM_CONSTS[code].apply(null, args);
        }

        function _emscripten_memcpy_big(dest, src, num) {
          HEAPU8.copyWithin(dest, src, src + num);
        }

        function _emscripten_get_heap_size() {
          return HEAPU8.length;
        }

        function emscripten_realloc_buffer(size) {
          try {
            wasmMemory.grow(size - buffer.byteLength + 65535 >>> 16);
            updateGlobalBufferAndViews(wasmMemory.buffer);
            return 1;
          } catch (e) {}
        }

        function _emscripten_resize_heap(requestedSize) {
          requestedSize = requestedSize >>> 0;

          var oldSize = _emscripten_get_heap_size();

          var maxHeapSize = 2147483648;

          if (requestedSize > maxHeapSize) {
            return false;
          }

          var minHeapSize = 16777216;

          for (var cutDown = 1; cutDown <= 4; cutDown *= 2) {
            var overGrownHeapSize = oldSize * (1 + .2 / cutDown);
            overGrownHeapSize = Math.min(overGrownHeapSize, requestedSize + 100663296);
            var newSize = Math.min(maxHeapSize, alignUp(Math.max(minHeapSize, requestedSize, overGrownHeapSize), 65536));
            var replacement = emscripten_realloc_buffer(newSize);

            if (replacement) {
              return true;
            }
          }

          return false;
        }

        var ENV = {};

        function getExecutableName() {
          return thisProgram || "./this.program";
        }

        function getEnvStrings() {
          if (!getEnvStrings.strings) {
            var lang = (typeof navigator === "object" && navigator.languages && navigator.languages[0] || "C").replace("-", "_") + ".UTF-8";
            var env = {
              "USER": "web_user",
              "LOGNAME": "web_user",
              "PATH": "/",
              "PWD": "/",
              "HOME": "/home/web_user",
              "LANG": lang,
              "_": getExecutableName()
            };

            for (var x in ENV) {
              env[x] = ENV[x];
            }

            var strings = [];

            for (var x in env) {
              strings.push(x + "=" + env[x]);
            }

            getEnvStrings.strings = strings;
          }

          return getEnvStrings.strings;
        }

        function _environ_get(__environ, environ_buf) {
          try {
            var bufSize = 0;
            getEnvStrings().forEach(function (string, i) {
              var ptr = environ_buf + bufSize;
              HEAP32[__environ + i * 4 >> 2] = ptr;
              writeAsciiToMemory(string, ptr);
              bufSize += string.length + 1;
            });
            return 0;
          } catch (e) {
            if (typeof FS === "undefined" || !(e instanceof FS.ErrnoError)) abort(e);
            return e.errno;
          }
        }

        function _environ_sizes_get(penviron_count, penviron_buf_size) {
          try {
            var strings = getEnvStrings();
            HEAP32[penviron_count >> 2] = strings.length;
            var bufSize = 0;
            strings.forEach(function (string) {
              bufSize += string.length + 1;
            });
            HEAP32[penviron_buf_size >> 2] = bufSize;
            return 0;
          } catch (e) {
            if (typeof FS === "undefined" || !(e instanceof FS.ErrnoError)) abort(e);
            return e.errno;
          }
        }

        function _fd_close(fd) {
          try {
            var stream = SYSCALLS.getStreamFromFD(fd);
            FS.close(stream);
            return 0;
          } catch (e) {
            if (typeof FS === "undefined" || !(e instanceof FS.ErrnoError)) abort(e);
            return e.errno;
          }
        }

        function _fd_seek(fd, offset_low, offset_high, whence, newOffset) {
          try {
            var stream = SYSCALLS.getStreamFromFD(fd);
            var HIGH_OFFSET = 4294967296;
            var offset = offset_high * HIGH_OFFSET + (offset_low >>> 0);
            var DOUBLE_LIMIT = 9007199254740992;

            if (offset <= -DOUBLE_LIMIT || offset >= DOUBLE_LIMIT) {
              return -61;
            }

            FS.llseek(stream, offset, whence);
            tempI64 = [stream.position >>> 0, (tempDouble = stream.position, +Math.abs(tempDouble) >= 1 ? tempDouble > 0 ? (Math.min(+Math.floor(tempDouble / 4294967296), 4294967295) | 0) >>> 0 : ~~+Math.ceil((tempDouble - +(~~tempDouble >>> 0)) / 4294967296) >>> 0 : 0)], HEAP32[newOffset >> 2] = tempI64[0], HEAP32[newOffset + 4 >> 2] = tempI64[1];
            if (stream.getdents && offset === 0 && whence === 0) stream.getdents = null;
            return 0;
          } catch (e) {
            if (typeof FS === "undefined" || !(e instanceof FS.ErrnoError)) abort(e);
            return e.errno;
          }
        }

        function _fd_write(fd, iov, iovcnt, pnum) {
          try {
            var stream = SYSCALLS.getStreamFromFD(fd);
            var num = SYSCALLS.doWritev(stream, iov, iovcnt);
            HEAP32[pnum >> 2] = num;
            return 0;
          } catch (e) {
            if (typeof FS === "undefined" || !(e instanceof FS.ErrnoError)) abort(e);
            return e.errno;
          }
        }

        function _gettimeofday(ptr) {
          var now = Date.now();
          HEAP32[ptr >> 2] = now / 1e3 | 0;
          HEAP32[ptr + 4 >> 2] = now % 1e3 * 1e3 | 0;
          return 0;
        }

        var readAsmConstArgsArray = [];

        function readAsmConstArgs(sigPtr, buf) {
          readAsmConstArgsArray.length = 0;
          var ch;
          buf >>= 2;

          while (ch = HEAPU8[sigPtr++]) {
            var double = ch < 105;
            if (double && buf & 1) buf++;
            readAsmConstArgsArray.push(double ? HEAPF64[buf++ >> 1] : HEAP32[buf]);
            ++buf;
          }

          return readAsmConstArgsArray;
        }

        var FSNode = function (parent, name, mode, rdev) {
          if (!parent) {
            parent = this;
          }

          this.parent = parent;
          this.mount = parent.mount;
          this.mounted = null;
          this.id = FS.nextInode++;
          this.name = name;
          this.mode = mode;
          this.node_ops = {};
          this.stream_ops = {};
          this.rdev = rdev;
        };

        var readMode = 292 | 73;
        var writeMode = 146;
        Object.defineProperties(FSNode.prototype, {
          read: {
            get: function () {
              return (this.mode & readMode) === readMode;
            },
            set: function (val) {
              val ? this.mode |= readMode : this.mode &= ~readMode;
            }
          },
          write: {
            get: function () {
              return (this.mode & writeMode) === writeMode;
            },
            set: function (val) {
              val ? this.mode |= writeMode : this.mode &= ~writeMode;
            }
          },
          isFolder: {
            get: function () {
              return FS.isDir(this.mode);
            }
          },
          isDevice: {
            get: function () {
              return FS.isChrdev(this.mode);
            }
          }
        });
        FS.FSNode = FSNode;
        FS.staticInit();

        function intArrayFromString(stringy, dontAddNull, length) {
          var len = length > 0 ? length : lengthBytesUTF8(stringy) + 1;
          var u8array = new Array(len);
          var numBytesWritten = stringToUTF8Array(stringy, u8array, 0, u8array.length);
          if (dontAddNull) u8array.length = numBytesWritten;
          return u8array;
        }

        __ATINIT__.push({
          func: function () {
            ___wasm_call_ctors();
          }
        });

        var asmLibraryArg = {
          "i": ___sys_getpid,
          "b": _abort,
          "a": _emscripten_asm_const_int,
          "d": _emscripten_memcpy_big,
          "e": _emscripten_resize_heap,
          "f": _environ_get,
          "g": _environ_sizes_get,
          "h": _fd_close,
          "j": _fd_seek,
          "c": _fd_write,
          "k": _gettimeofday
        };
        var asm = createWasm();

        var ___wasm_call_ctors = Module["___wasm_call_ctors"] = function () {
          return (___wasm_call_ctors = Module["___wasm_call_ctors"] = Module["asm"]["n"]).apply(null, arguments);
        };

        var ___em_js__array_bounds_check_error = Module["___em_js__array_bounds_check_error"] = function () {
          return (___em_js__array_bounds_check_error = Module["___em_js__array_bounds_check_error"] = Module["asm"]["o"]).apply(null, arguments);
        };

        var _emscripten_bind_CExpat_CExpat_0 = Module["_emscripten_bind_CExpat_CExpat_0"] = function () {
          return (_emscripten_bind_CExpat_CExpat_0 = Module["_emscripten_bind_CExpat_CExpat_0"] = Module["asm"]["p"]).apply(null, arguments);
        };

        var _emscripten_bind_CExpat_create_0 = Module["_emscripten_bind_CExpat_create_0"] = function () {
          return (_emscripten_bind_CExpat_create_0 = Module["_emscripten_bind_CExpat_create_0"] = Module["asm"]["q"]).apply(null, arguments);
        };

        var _emscripten_bind_CExpat_destroy_0 = Module["_emscripten_bind_CExpat_destroy_0"] = function () {
          return (_emscripten_bind_CExpat_destroy_0 = Module["_emscripten_bind_CExpat_destroy_0"] = Module["asm"]["r"]).apply(null, arguments);
        };

        var _emscripten_bind_CExpat_parse_1 = Module["_emscripten_bind_CExpat_parse_1"] = function () {
          return (_emscripten_bind_CExpat_parse_1 = Module["_emscripten_bind_CExpat_parse_1"] = Module["asm"]["s"]).apply(null, arguments);
        };

        var _emscripten_bind_CExpat_tag_0 = Module["_emscripten_bind_CExpat_tag_0"] = function () {
          return (_emscripten_bind_CExpat_tag_0 = Module["_emscripten_bind_CExpat_tag_0"] = Module["asm"]["t"]).apply(null, arguments);
        };

        var _emscripten_bind_CExpat_attrs_0 = Module["_emscripten_bind_CExpat_attrs_0"] = function () {
          return (_emscripten_bind_CExpat_attrs_0 = Module["_emscripten_bind_CExpat_attrs_0"] = Module["asm"]["u"]).apply(null, arguments);
        };

        var _emscripten_bind_CExpat_content_0 = Module["_emscripten_bind_CExpat_content_0"] = function () {
          return (_emscripten_bind_CExpat_content_0 = Module["_emscripten_bind_CExpat_content_0"] = Module["asm"]["v"]).apply(null, arguments);
        };

        var _emscripten_bind_CExpat_startElement_0 = Module["_emscripten_bind_CExpat_startElement_0"] = function () {
          return (_emscripten_bind_CExpat_startElement_0 = Module["_emscripten_bind_CExpat_startElement_0"] = Module["asm"]["w"]).apply(null, arguments);
        };

        var _emscripten_bind_CExpat_endElement_0 = Module["_emscripten_bind_CExpat_endElement_0"] = function () {
          return (_emscripten_bind_CExpat_endElement_0 = Module["_emscripten_bind_CExpat_endElement_0"] = Module["asm"]["x"]).apply(null, arguments);
        };

        var _emscripten_bind_CExpat_characterData_0 = Module["_emscripten_bind_CExpat_characterData_0"] = function () {
          return (_emscripten_bind_CExpat_characterData_0 = Module["_emscripten_bind_CExpat_characterData_0"] = Module["asm"]["y"]).apply(null, arguments);
        };

        var _emscripten_bind_CExpat___destroy___0 = Module["_emscripten_bind_CExpat___destroy___0"] = function () {
          return (_emscripten_bind_CExpat___destroy___0 = Module["_emscripten_bind_CExpat___destroy___0"] = Module["asm"]["z"]).apply(null, arguments);
        };

        var _emscripten_bind_VoidPtr___destroy___0 = Module["_emscripten_bind_VoidPtr___destroy___0"] = function () {
          return (_emscripten_bind_VoidPtr___destroy___0 = Module["_emscripten_bind_VoidPtr___destroy___0"] = Module["asm"]["A"]).apply(null, arguments);
        };

        var _emscripten_bind_CExpatJS_CExpatJS_0 = Module["_emscripten_bind_CExpatJS_CExpatJS_0"] = function () {
          return (_emscripten_bind_CExpatJS_CExpatJS_0 = Module["_emscripten_bind_CExpatJS_CExpatJS_0"] = Module["asm"]["B"]).apply(null, arguments);
        };

        var _emscripten_bind_CExpatJS_startElement_0 = Module["_emscripten_bind_CExpatJS_startElement_0"] = function () {
          return (_emscripten_bind_CExpatJS_startElement_0 = Module["_emscripten_bind_CExpatJS_startElement_0"] = Module["asm"]["C"]).apply(null, arguments);
        };

        var _emscripten_bind_CExpatJS_endElement_0 = Module["_emscripten_bind_CExpatJS_endElement_0"] = function () {
          return (_emscripten_bind_CExpatJS_endElement_0 = Module["_emscripten_bind_CExpatJS_endElement_0"] = Module["asm"]["D"]).apply(null, arguments);
        };

        var _emscripten_bind_CExpatJS_characterData_0 = Module["_emscripten_bind_CExpatJS_characterData_0"] = function () {
          return (_emscripten_bind_CExpatJS_characterData_0 = Module["_emscripten_bind_CExpatJS_characterData_0"] = Module["asm"]["E"]).apply(null, arguments);
        };

        var _emscripten_bind_CExpatJS___destroy___0 = Module["_emscripten_bind_CExpatJS___destroy___0"] = function () {
          return (_emscripten_bind_CExpatJS___destroy___0 = Module["_emscripten_bind_CExpatJS___destroy___0"] = Module["asm"]["F"]).apply(null, arguments);
        };

        var _malloc = Module["_malloc"] = function () {
          return (_malloc = Module["_malloc"] = Module["asm"]["G"]).apply(null, arguments);
        };

        var _free = Module["_free"] = function () {
          return (_free = Module["_free"] = Module["asm"]["H"]).apply(null, arguments);
        };

        var calledRun;

        dependenciesFulfilled = function runCaller() {
          if (!calledRun) run();
          if (!calledRun) dependenciesFulfilled = runCaller;
        };

        function run(args) {
          if (runDependencies > 0) {
            return;
          }

          preRun();
          if (runDependencies > 0) return;

          function doRun() {
            if (calledRun) return;
            calledRun = true;
            Module["calledRun"] = true;
            if (ABORT) return;
            initRuntime();
            preMain();
            readyPromiseResolve(Module);
            if (Module["onRuntimeInitialized"]) Module["onRuntimeInitialized"]();
            postRun();
          }

          if (Module["setStatus"]) {
            Module["setStatus"]("Running...");
            setTimeout(function () {
              setTimeout(function () {
                Module["setStatus"]("");
              }, 1);
              doRun();
            }, 1);
          } else {
            doRun();
          }
        }

        Module["run"] = run;

        if (Module["preInit"]) {
          if (typeof Module["preInit"] == "function") Module["preInit"] = [Module["preInit"]];

          while (Module["preInit"].length > 0) {
            Module["preInit"].pop()();
          }
        }

        run();

        function WrapperObject() {}

        WrapperObject.prototype = Object.create(WrapperObject.prototype);
        WrapperObject.prototype.constructor = WrapperObject;
        WrapperObject.prototype.__class__ = WrapperObject;
        WrapperObject.__cache__ = {};
        Module["WrapperObject"] = WrapperObject;

        function getCache(__class__) {
          return (__class__ || WrapperObject).__cache__;
        }

        Module["getCache"] = getCache;

        function wrapPointer(ptr, __class__) {
          var cache = getCache(__class__);
          var ret = cache[ptr];
          if (ret) return ret;
          ret = Object.create((__class__ || WrapperObject).prototype);
          ret.ptr = ptr;
          return cache[ptr] = ret;
        }

        Module["wrapPointer"] = wrapPointer;

        function castObject(obj, __class__) {
          return wrapPointer(obj.ptr, __class__);
        }

        Module["castObject"] = castObject;
        Module["NULL"] = wrapPointer(0);

        function destroy(obj) {
          if (!obj["__destroy__"]) throw "Error: Cannot destroy object. (Did you create it yourself?)";
          obj["__destroy__"]();
          delete getCache(obj.__class__)[obj.ptr];
        }

        Module["destroy"] = destroy;

        function compare(obj1, obj2) {
          return obj1.ptr === obj2.ptr;
        }

        Module["compare"] = compare;

        function getPointer(obj) {
          return obj.ptr;
        }

        Module["getPointer"] = getPointer;

        function getClass(obj) {
          return obj.__class__;
        }

        Module["getClass"] = getClass;
        var ensureCache = {
          buffer: 0,
          size: 0,
          pos: 0,
          temps: [],
          needed: 0,
          prepare: function () {
            if (ensureCache.needed) {
              for (var i = 0; i < ensureCache.temps.length; i++) {
                Module["_free"](ensureCache.temps[i]);
              }

              ensureCache.temps.length = 0;
              Module["_free"](ensureCache.buffer);
              ensureCache.buffer = 0;
              ensureCache.size += ensureCache.needed;
              ensureCache.needed = 0;
            }

            if (!ensureCache.buffer) {
              ensureCache.size += 128;
              ensureCache.buffer = Module["_malloc"](ensureCache.size);
              assert(ensureCache.buffer);
            }

            ensureCache.pos = 0;
          },
          alloc: function (array, view) {
            assert(ensureCache.buffer);
            var bytes = view.BYTES_PER_ELEMENT;
            var len = array.length * bytes;
            len = len + 7 & -8;
            var ret;

            if (ensureCache.pos + len >= ensureCache.size) {
              assert(len > 0);
              ensureCache.needed += len;
              ret = Module["_malloc"](len);
              ensureCache.temps.push(ret);
            } else {
              ret = ensureCache.buffer + ensureCache.pos;
              ensureCache.pos += len;
            }

            return ret;
          },
          copy: function (array, view, offset) {
            offset >>>= 0;
            var bytes = view.BYTES_PER_ELEMENT;

            switch (bytes) {
              case 2:
                offset >>>= 1;
                break;

              case 4:
                offset >>>= 2;
                break;

              case 8:
                offset >>>= 3;
                break;
            }

            for (var i = 0; i < array.length; i++) {
              view[offset + i] = array[i];
            }
          }
        };

        function ensureString(value) {
          if (typeof value === "string") {
            var intArray = intArrayFromString(value);
            var offset = ensureCache.alloc(intArray, HEAP8);
            ensureCache.copy(intArray, HEAP8, offset);
            return offset;
          }

          return value;
        }

        function CExpat() {
          this.ptr = _emscripten_bind_CExpat_CExpat_0();
          getCache(CExpat)[this.ptr] = this;
        }

        CExpat.prototype = Object.create(WrapperObject.prototype);
        CExpat.prototype.constructor = CExpat;
        CExpat.prototype.__class__ = CExpat;
        CExpat.__cache__ = {};
        Module["CExpat"] = CExpat;

        CExpat.prototype["create"] = CExpat.prototype.create = function () {
          var self = this.ptr;
          return !!_emscripten_bind_CExpat_create_0(self);
        };

        CExpat.prototype["destroy"] = CExpat.prototype.destroy = function () {
          var self = this.ptr;

          _emscripten_bind_CExpat_destroy_0(self);
        };

        CExpat.prototype["parse"] = CExpat.prototype.parse = function (xml) {
          var self = this.ptr;
          ensureCache.prepare();
          if (xml && typeof xml === "object") xml = xml.ptr;else xml = ensureString(xml);
          return !!_emscripten_bind_CExpat_parse_1(self, xml);
        };

        CExpat.prototype["tag"] = CExpat.prototype.tag = function () {
          var self = this.ptr;
          return UTF8ToString(_emscripten_bind_CExpat_tag_0(self));
        };

        CExpat.prototype["attrs"] = CExpat.prototype.attrs = function () {
          var self = this.ptr;
          return UTF8ToString(_emscripten_bind_CExpat_attrs_0(self));
        };

        CExpat.prototype["content"] = CExpat.prototype.content = function () {
          var self = this.ptr;
          return UTF8ToString(_emscripten_bind_CExpat_content_0(self));
        };

        CExpat.prototype["startElement"] = CExpat.prototype.startElement = function () {
          var self = this.ptr;

          _emscripten_bind_CExpat_startElement_0(self);
        };

        CExpat.prototype["endElement"] = CExpat.prototype.endElement = function () {
          var self = this.ptr;

          _emscripten_bind_CExpat_endElement_0(self);
        };

        CExpat.prototype["characterData"] = CExpat.prototype.characterData = function () {
          var self = this.ptr;

          _emscripten_bind_CExpat_characterData_0(self);
        };

        CExpat.prototype["__destroy__"] = CExpat.prototype.__destroy__ = function () {
          var self = this.ptr;

          _emscripten_bind_CExpat___destroy___0(self);
        };

        function VoidPtr() {
          throw "cannot construct a VoidPtr, no constructor in IDL";
        }

        VoidPtr.prototype = Object.create(WrapperObject.prototype);
        VoidPtr.prototype.constructor = VoidPtr;
        VoidPtr.prototype.__class__ = VoidPtr;
        VoidPtr.__cache__ = {};
        Module["VoidPtr"] = VoidPtr;

        VoidPtr.prototype["__destroy__"] = VoidPtr.prototype.__destroy__ = function () {
          var self = this.ptr;

          _emscripten_bind_VoidPtr___destroy___0(self);
        };

        function CExpatJS() {
          this.ptr = _emscripten_bind_CExpatJS_CExpatJS_0();
          getCache(CExpatJS)[this.ptr] = this;
        }

        CExpatJS.prototype = Object.create(CExpat.prototype);
        CExpatJS.prototype.constructor = CExpatJS;
        CExpatJS.prototype.__class__ = CExpatJS;
        CExpatJS.__cache__ = {};
        Module["CExpatJS"] = CExpatJS;

        CExpatJS.prototype["startElement"] = CExpatJS.prototype.startElement = function () {
          var self = this.ptr;

          _emscripten_bind_CExpatJS_startElement_0(self);
        };

        CExpatJS.prototype["endElement"] = CExpatJS.prototype.endElement = function () {
          var self = this.ptr;

          _emscripten_bind_CExpatJS_endElement_0(self);
        };

        CExpatJS.prototype["characterData"] = CExpatJS.prototype.characterData = function () {
          var self = this.ptr;

          _emscripten_bind_CExpatJS_characterData_0(self);
        };

        CExpatJS.prototype["__destroy__"] = CExpatJS.prototype.__destroy__ = function () {
          var self = this.ptr;

          _emscripten_bind_CExpatJS___destroy___0(self);
        };

        return cpp.ready;
      };
    }();

    module.exports = cpp;
  });
  var expatlib$1 = /*#__PURE__*/Object.freeze( /*#__PURE__*/Object.assign( /*#__PURE__*/Object.create(null), expatlib, {
    'default': expatlib
  }));

  function getGlobal() {
    if (typeof self !== "undefined") {
      return self;
    }

    if (typeof window !== "undefined") {
      return window;
    }

    if (typeof __webpack_require__.g !== "undefined") {
      return __webpack_require__.g;
    }

    throw new Error("unable to locate global object");
  }

  var globalNS = getGlobal();

  var _wasmFolder = globalNS.__hpcc_wasmFolder || undefined;

  function wasmFolder(_) {
    if (!arguments.length) return _wasmFolder;
    var retVal = _wasmFolder;
    _wasmFolder = _;
    return retVal;
  }

  function trimEnd(str, charToRemove) {
    while (str.charAt(str.length - 1) === charToRemove) {
      str = str.substring(0, str.length - 1);
    }

    return str;
  }

  function trimStart(str, charToRemove) {
    while (str.charAt(0) === charToRemove) {
      str = str.substring(1);
    }

    return str;
  }

  function loadWasm(_wasmLib, wf, wasmBinary) {
    var wasmLib = _wasmLib.default || _wasmLib; //  Prevent double load ---

    if (!wasmLib.__hpcc_promise) {
      wasmLib.__hpcc_promise = new Promise(function (resolve) {
        wasmLib({
          wasmBinary: wasmBinary,
          locateFile: function (path, prefix) {
            return trimEnd(wf || wasmFolder() || prefix || ".", "/") + "/" + trimStart(path, "/");
          }
        }).then(function (instance) {
          //  Not a real promise, remove "then" to prevent infinite loop  ---
          delete instance.then;
          resolve(instance);
        });
      });
    }

    return wasmLib.__hpcc_promise;
  } // @ts-ignore


  var StackElement =
  /** @class */
  function () {
    function StackElement(tag, attrs) {
      this.tag = tag;
      this.attrs = attrs;
      this._content = "";
    }

    Object.defineProperty(StackElement.prototype, "content", {
      get: function () {
        return this._content;
      },
      enumerable: false,
      configurable: true
    });

    StackElement.prototype.appendContent = function (content) {
      this._content += content;
    };

    return StackElement;
  }();

  var StackParser =
  /** @class */
  function () {
    function StackParser() {
      this._stack = [];
    }

    StackParser.prototype.parse = function (xml) {
      return parse(xml, this);
    };

    StackParser.prototype.top = function () {
      return this._stack[this._stack.length - 1];
    };

    StackParser.prototype.startElement = function (tag, attrs) {
      var retVal = new StackElement(tag, attrs);

      this._stack.push(retVal);

      return retVal;
    };

    StackParser.prototype.endElement = function (tag) {
      return this._stack.pop();
    };

    StackParser.prototype.characterData = function (content) {
      this.top().appendContent(content);
    };

    return StackParser;
  }();

  function parseAttrs(attrs) {
    var retVal = {};
    var keys = attrs;
    var sep = "" + String.fromCharCode(1);
    var sep2 = "" + sep + sep;
    keys.split(sep2).filter(function (key) {
      return !!key;
    }).forEach(function (key) {
      var parts = key.split(sep);
      retVal[parts[0]] = parts[1];
    });
    return retVal;
  }

  function parse(xml, callback, wasmFolder, wasmBinary) {
    return loadWasm(expatlib$1, wasmFolder, wasmBinary).then(function (module) {
      var parser = new module.CExpatJS();

      parser.startElement = function () {
        callback.startElement(this.tag(), parseAttrs(this.attrs()));
      };

      parser.endElement = function () {
        callback.endElement(this.tag());
      };

      parser.characterData = function () {
        callback.characterData(this.content());
      };

      parser.create();
      var retVal = parser.parse(xml);
      parser.destroy();
      module.destroy(parser);
      return retVal;
    });
  }

  var graphvizlib = createCommonjsModule(function (module, exports) {
    var cpp = function () {
      var _scriptDir = typeof document !== 'undefined' && document.currentScript ? document.currentScript.src : undefined;

      return function (cpp) {
        cpp = cpp || {};
        var Module = typeof cpp !== "undefined" ? cpp : {};
        var readyPromiseResolve, readyPromiseReject;
        Module["ready"] = new Promise(function (resolve, reject) {
          readyPromiseResolve = resolve;
          readyPromiseReject = reject;
        });
        var moduleOverrides = {};
        var key;

        for (key in Module) {
          if (Module.hasOwnProperty(key)) {
            moduleOverrides[key] = Module[key];
          }
        }

        var thisProgram = "./this.program";

        var quit_ = function (status, toThrow) {
          throw toThrow;
        };

        var ENVIRONMENT_IS_WEB = true;
        var scriptDirectory = "";

        function locateFile(path) {
          if (Module["locateFile"]) {
            return Module["locateFile"](path, scriptDirectory);
          }

          return scriptDirectory + path;
        }

        var read_, readBinary;
        {
          if (typeof document !== "undefined" && document.currentScript) {
            scriptDirectory = document.currentScript.src;
          }

          if (_scriptDir) {
            scriptDirectory = _scriptDir;
          }

          if (scriptDirectory.indexOf("blob:") !== 0) {
            scriptDirectory = scriptDirectory.substr(0, scriptDirectory.lastIndexOf("/") + 1);
          } else {
            scriptDirectory = "";
          }

          {
            read_ = function shell_read(url) {
              var xhr = new XMLHttpRequest();
              xhr.open("GET", url, false);
              xhr.send(null);
              return xhr.responseText;
            };
          }
        }
        var out = Module["print"] || console.log.bind(console);
        var err = Module["printErr"] || console.warn.bind(console);

        for (key in moduleOverrides) {
          if (moduleOverrides.hasOwnProperty(key)) {
            Module[key] = moduleOverrides[key];
          }
        }

        moduleOverrides = null;
        if (Module["arguments"]) Module["arguments"];
        if (Module["thisProgram"]) thisProgram = Module["thisProgram"];
        if (Module["quit"]) quit_ = Module["quit"];
        var STACK_ALIGN = 16;

        function alignMemory(size, factor) {
          if (!factor) factor = STACK_ALIGN;
          return Math.ceil(size / factor) * factor;
        }

        var tempRet0 = 0;

        var setTempRet0 = function (value) {
          tempRet0 = value;
        };

        var getTempRet0 = function () {
          return tempRet0;
        };

        var wasmBinary;
        if (Module["wasmBinary"]) wasmBinary = Module["wasmBinary"];
        var noExitRuntime;
        if (Module["noExitRuntime"]) noExitRuntime = Module["noExitRuntime"];

        if (typeof WebAssembly !== "object") {
          abort("no native wasm support detected");
        }

        var wasmMemory;
        var ABORT = false;

        function assert(condition, text) {
          if (!condition) {
            abort("Assertion failed: " + text);
          }
        }

        var UTF8Decoder = typeof TextDecoder !== "undefined" ? new TextDecoder("utf8") : undefined;

        function UTF8ArrayToString(heap, idx, maxBytesToRead) {
          var endIdx = idx + maxBytesToRead;
          var endPtr = idx;

          while (heap[endPtr] && !(endPtr >= endIdx)) ++endPtr;

          if (endPtr - idx > 16 && heap.subarray && UTF8Decoder) {
            return UTF8Decoder.decode(heap.subarray(idx, endPtr));
          } else {
            var str = "";

            while (idx < endPtr) {
              var u0 = heap[idx++];

              if (!(u0 & 128)) {
                str += String.fromCharCode(u0);
                continue;
              }

              var u1 = heap[idx++] & 63;

              if ((u0 & 224) == 192) {
                str += String.fromCharCode((u0 & 31) << 6 | u1);
                continue;
              }

              var u2 = heap[idx++] & 63;

              if ((u0 & 240) == 224) {
                u0 = (u0 & 15) << 12 | u1 << 6 | u2;
              } else {
                u0 = (u0 & 7) << 18 | u1 << 12 | u2 << 6 | heap[idx++] & 63;
              }

              if (u0 < 65536) {
                str += String.fromCharCode(u0);
              } else {
                var ch = u0 - 65536;
                str += String.fromCharCode(55296 | ch >> 10, 56320 | ch & 1023);
              }
            }
          }

          return str;
        }

        function UTF8ToString(ptr, maxBytesToRead) {
          return ptr ? UTF8ArrayToString(HEAPU8, ptr, maxBytesToRead) : "";
        }

        function stringToUTF8Array(str, heap, outIdx, maxBytesToWrite) {
          if (!(maxBytesToWrite > 0)) return 0;
          var startIdx = outIdx;
          var endIdx = outIdx + maxBytesToWrite - 1;

          for (var i = 0; i < str.length; ++i) {
            var u = str.charCodeAt(i);

            if (u >= 55296 && u <= 57343) {
              var u1 = str.charCodeAt(++i);
              u = 65536 + ((u & 1023) << 10) | u1 & 1023;
            }

            if (u <= 127) {
              if (outIdx >= endIdx) break;
              heap[outIdx++] = u;
            } else if (u <= 2047) {
              if (outIdx + 1 >= endIdx) break;
              heap[outIdx++] = 192 | u >> 6;
              heap[outIdx++] = 128 | u & 63;
            } else if (u <= 65535) {
              if (outIdx + 2 >= endIdx) break;
              heap[outIdx++] = 224 | u >> 12;
              heap[outIdx++] = 128 | u >> 6 & 63;
              heap[outIdx++] = 128 | u & 63;
            } else {
              if (outIdx + 3 >= endIdx) break;
              heap[outIdx++] = 240 | u >> 18;
              heap[outIdx++] = 128 | u >> 12 & 63;
              heap[outIdx++] = 128 | u >> 6 & 63;
              heap[outIdx++] = 128 | u & 63;
            }
          }

          heap[outIdx] = 0;
          return outIdx - startIdx;
        }

        function stringToUTF8(str, outPtr, maxBytesToWrite) {
          return stringToUTF8Array(str, HEAPU8, outPtr, maxBytesToWrite);
        }

        function lengthBytesUTF8(str) {
          var len = 0;

          for (var i = 0; i < str.length; ++i) {
            var u = str.charCodeAt(i);
            if (u >= 55296 && u <= 57343) u = 65536 + ((u & 1023) << 10) | str.charCodeAt(++i) & 1023;
            if (u <= 127) ++len;else if (u <= 2047) len += 2;else if (u <= 65535) len += 3;else len += 4;
          }

          return len;
        }

        function writeArrayToMemory(array, buffer) {
          HEAP8.set(array, buffer);
        }

        function writeAsciiToMemory(str, buffer, dontAddNull) {
          for (var i = 0; i < str.length; ++i) {
            HEAP8[buffer++ >> 0] = str.charCodeAt(i);
          }

          if (!dontAddNull) HEAP8[buffer >> 0] = 0;
        }

        function alignUp(x, multiple) {
          if (x % multiple > 0) {
            x += multiple - x % multiple;
          }

          return x;
        }

        var buffer, HEAP8, HEAPU8, HEAP16, HEAP32, HEAPF64;

        function updateGlobalBufferAndViews(buf) {
          buffer = buf;
          Module["HEAP8"] = HEAP8 = new Int8Array(buf);
          Module["HEAP16"] = HEAP16 = new Int16Array(buf);
          Module["HEAP32"] = HEAP32 = new Int32Array(buf);
          Module["HEAPU8"] = HEAPU8 = new Uint8Array(buf);
          Module["HEAPU16"] = new Uint16Array(buf);
          Module["HEAPU32"] = new Uint32Array(buf);
          Module["HEAPF32"] = new Float32Array(buf);
          Module["HEAPF64"] = HEAPF64 = new Float64Array(buf);
        }

        var INITIAL_MEMORY = Module["INITIAL_MEMORY"] || 16777216;
        var wasmTable;
        var __ATPRERUN__ = [];
        var __ATINIT__ = [];
        var __ATMAIN__ = [];
        var __ATPOSTRUN__ = [];

        function preRun() {
          if (Module["preRun"]) {
            if (typeof Module["preRun"] == "function") Module["preRun"] = [Module["preRun"]];

            while (Module["preRun"].length) {
              addOnPreRun(Module["preRun"].shift());
            }
          }

          callRuntimeCallbacks(__ATPRERUN__);
        }

        function initRuntime() {
          if (!Module["noFSInit"] && !FS.init.initialized) FS.init();
          TTY.init();
          callRuntimeCallbacks(__ATINIT__);
        }

        function preMain() {
          FS.ignorePermissions = false;
          callRuntimeCallbacks(__ATMAIN__);
        }

        function postRun() {
          if (Module["postRun"]) {
            if (typeof Module["postRun"] == "function") Module["postRun"] = [Module["postRun"]];

            while (Module["postRun"].length) {
              addOnPostRun(Module["postRun"].shift());
            }
          }

          callRuntimeCallbacks(__ATPOSTRUN__);
        }

        function addOnPreRun(cb) {
          __ATPRERUN__.unshift(cb);
        }

        function addOnPostRun(cb) {
          __ATPOSTRUN__.unshift(cb);
        }

        var runDependencies = 0;
        var dependenciesFulfilled = null;

        function addRunDependency(id) {
          runDependencies++;

          if (Module["monitorRunDependencies"]) {
            Module["monitorRunDependencies"](runDependencies);
          }
        }

        function removeRunDependency(id) {
          runDependencies--;

          if (Module["monitorRunDependencies"]) {
            Module["monitorRunDependencies"](runDependencies);
          }

          if (runDependencies == 0) {
            if (dependenciesFulfilled) {
              var callback = dependenciesFulfilled;
              dependenciesFulfilled = null;
              callback();
            }
          }
        }

        Module["preloadedImages"] = {};
        Module["preloadedAudios"] = {};

        function abort(what) {
          if (Module["onAbort"]) {
            Module["onAbort"](what);
          }

          what += "";
          err(what);
          ABORT = true;
          what = "abort(" + what + "). Build with -s ASSERTIONS=1 for more info.";
          var e = new WebAssembly.RuntimeError(what);
          readyPromiseReject(e);
          throw e;
        }

        function hasPrefix(str, prefix) {
          return String.prototype.startsWith ? str.startsWith(prefix) : str.indexOf(prefix) === 0;
        }

        var dataURIPrefix = "data:application/octet-stream;base64,";

        function isDataURI(filename) {
          return hasPrefix(filename, dataURIPrefix);
        }

        var wasmBinaryFile = "graphvizlib.wasm";

        if (!isDataURI(wasmBinaryFile)) {
          wasmBinaryFile = locateFile(wasmBinaryFile);
        }

        function getBinary(file) {
          try {
            if (file == wasmBinaryFile && wasmBinary) {
              return new Uint8Array(wasmBinary);
            }

            if (readBinary) ;else {
              throw "both async and sync fetching of the wasm failed";
            }
          } catch (err) {
            abort(err);
          }
        }

        function getBinaryPromise() {
          if (!wasmBinary && ENVIRONMENT_IS_WEB && typeof fetch === "function") {
            return fetch(wasmBinaryFile, {
              credentials: "same-origin"
            }).then(function (response) {
              if (!response["ok"]) {
                throw "failed to load wasm binary file at '" + wasmBinaryFile + "'";
              }

              return response["arrayBuffer"]();
            }).catch(function () {
              return getBinary(wasmBinaryFile);
            });
          }

          return Promise.resolve().then(function () {
            return getBinary(wasmBinaryFile);
          });
        }

        function createWasm() {
          var info = {
            "a": asmLibraryArg
          };

          function receiveInstance(instance, module) {
            var exports = instance.exports;
            Module["asm"] = exports;
            wasmMemory = Module["asm"]["R"];
            updateGlobalBufferAndViews(wasmMemory.buffer);
            wasmTable = Module["asm"]["S"];
            removeRunDependency();
          }

          addRunDependency();

          function receiveInstantiatedSource(output) {
            receiveInstance(output["instance"]);
          }

          function instantiateArrayBuffer(receiver) {
            return getBinaryPromise().then(function (binary) {
              return WebAssembly.instantiate(binary, info);
            }).then(receiver, function (reason) {
              err("failed to asynchronously prepare wasm: " + reason);
              abort(reason);
            });
          }

          function instantiateAsync() {
            if (!wasmBinary && typeof WebAssembly.instantiateStreaming === "function" && !isDataURI(wasmBinaryFile) && typeof fetch === "function") {
              return fetch(wasmBinaryFile, {
                credentials: "same-origin"
              }).then(function (response) {
                var result = WebAssembly.instantiateStreaming(response, info);
                return result.then(receiveInstantiatedSource, function (reason) {
                  err("wasm streaming compile failed: " + reason);
                  err("falling back to ArrayBuffer instantiation");
                  return instantiateArrayBuffer(receiveInstantiatedSource);
                });
              });
            } else {
              return instantiateArrayBuffer(receiveInstantiatedSource);
            }
          }

          if (Module["instantiateWasm"]) {
            try {
              var exports = Module["instantiateWasm"](info, receiveInstance);
              return exports;
            } catch (e) {
              err("Module.instantiateWasm callback failed with error: " + e);
              return false;
            }
          }

          instantiateAsync().catch(readyPromiseReject);
          return {};
        }

        var tempDouble;
        var tempI64;
        var ASM_CONSTS = {
          1186: function ($0, $1) {
            var path = UTF8ToString($0);
            var data = UTF8ToString($1);
            FS.createPath("/", PATH.dirname(path));
            FS.writeFile(PATH.join("/", path), data);
          }
        };

        function callRuntimeCallbacks(callbacks) {
          while (callbacks.length > 0) {
            var callback = callbacks.shift();

            if (typeof callback == "function") {
              callback(Module);
              continue;
            }

            var func = callback.func;

            if (typeof func === "number") {
              if (callback.arg === undefined) {
                wasmTable.get(func)();
              } else {
                wasmTable.get(func)(callback.arg);
              }
            } else {
              func(callback.arg === undefined ? null : callback.arg);
            }
          }
        }

        var _emscripten_get_now;

        _emscripten_get_now = function () {
          return performance.now();
        };

        var _emscripten_get_now_is_monotonic = true;

        function setErrNo(value) {
          HEAP32[___errno_location() >> 2] = value;
          return value;
        }

        function _clock_gettime(clk_id, tp) {
          var now;

          if (clk_id === 0) {
            now = Date.now();
          } else if ((clk_id === 1 || clk_id === 4) && _emscripten_get_now_is_monotonic) {
            now = _emscripten_get_now();
          } else {
            setErrNo(28);
            return -1;
          }

          HEAP32[tp >> 2] = now / 1e3 | 0;
          HEAP32[tp + 4 >> 2] = now % 1e3 * 1e3 * 1e3 | 0;
          return 0;
        }

        function ___clock_gettime(a0, a1) {
          return _clock_gettime(a0, a1);
        }

        var ExceptionInfoAttrs = {
          DESTRUCTOR_OFFSET: 0,
          REFCOUNT_OFFSET: 4,
          TYPE_OFFSET: 8,
          CAUGHT_OFFSET: 12,
          RETHROWN_OFFSET: 13,
          SIZE: 16
        };

        function ___cxa_allocate_exception(size) {
          return _malloc(size + ExceptionInfoAttrs.SIZE) + ExceptionInfoAttrs.SIZE;
        }

        function ExceptionInfo(excPtr) {
          this.excPtr = excPtr;
          this.ptr = excPtr - ExceptionInfoAttrs.SIZE;

          this.set_type = function (type) {
            HEAP32[this.ptr + ExceptionInfoAttrs.TYPE_OFFSET >> 2] = type;
          };

          this.get_type = function () {
            return HEAP32[this.ptr + ExceptionInfoAttrs.TYPE_OFFSET >> 2];
          };

          this.set_destructor = function (destructor) {
            HEAP32[this.ptr + ExceptionInfoAttrs.DESTRUCTOR_OFFSET >> 2] = destructor;
          };

          this.get_destructor = function () {
            return HEAP32[this.ptr + ExceptionInfoAttrs.DESTRUCTOR_OFFSET >> 2];
          };

          this.set_refcount = function (refcount) {
            HEAP32[this.ptr + ExceptionInfoAttrs.REFCOUNT_OFFSET >> 2] = refcount;
          };

          this.set_caught = function (caught) {
            caught = caught ? 1 : 0;
            HEAP8[this.ptr + ExceptionInfoAttrs.CAUGHT_OFFSET >> 0] = caught;
          };

          this.get_caught = function () {
            return HEAP8[this.ptr + ExceptionInfoAttrs.CAUGHT_OFFSET >> 0] != 0;
          };

          this.set_rethrown = function (rethrown) {
            rethrown = rethrown ? 1 : 0;
            HEAP8[this.ptr + ExceptionInfoAttrs.RETHROWN_OFFSET >> 0] = rethrown;
          };

          this.get_rethrown = function () {
            return HEAP8[this.ptr + ExceptionInfoAttrs.RETHROWN_OFFSET >> 0] != 0;
          };

          this.init = function (type, destructor) {
            this.set_type(type);
            this.set_destructor(destructor);
            this.set_refcount(0);
            this.set_caught(false);
            this.set_rethrown(false);
          };

          this.add_ref = function () {
            var value = HEAP32[this.ptr + ExceptionInfoAttrs.REFCOUNT_OFFSET >> 2];
            HEAP32[this.ptr + ExceptionInfoAttrs.REFCOUNT_OFFSET >> 2] = value + 1;
          };

          this.release_ref = function () {
            var prev = HEAP32[this.ptr + ExceptionInfoAttrs.REFCOUNT_OFFSET >> 2];
            HEAP32[this.ptr + ExceptionInfoAttrs.REFCOUNT_OFFSET >> 2] = prev - 1;
            return prev === 1;
          };
        }

        function ___cxa_throw(ptr, type, destructor) {
          var info = new ExceptionInfo(ptr);
          info.init(type, destructor);
          throw ptr;
        }

        var PATH = {
          splitPath: function (filename) {
            var splitPathRe = /^(\/?|)([\s\S]*?)((?:\.{1,2}|[^\/]+?|)(\.[^.\/]*|))(?:[\/]*)$/;
            return splitPathRe.exec(filename).slice(1);
          },
          normalizeArray: function (parts, allowAboveRoot) {
            var up = 0;

            for (var i = parts.length - 1; i >= 0; i--) {
              var last = parts[i];

              if (last === ".") {
                parts.splice(i, 1);
              } else if (last === "..") {
                parts.splice(i, 1);
                up++;
              } else if (up) {
                parts.splice(i, 1);
                up--;
              }
            }

            if (allowAboveRoot) {
              for (; up; up--) {
                parts.unshift("..");
              }
            }

            return parts;
          },
          normalize: function (path) {
            var isAbsolute = path.charAt(0) === "/",
                trailingSlash = path.substr(-1) === "/";
            path = PATH.normalizeArray(path.split("/").filter(function (p) {
              return !!p;
            }), !isAbsolute).join("/");

            if (!path && !isAbsolute) {
              path = ".";
            }

            if (path && trailingSlash) {
              path += "/";
            }

            return (isAbsolute ? "/" : "") + path;
          },
          dirname: function (path) {
            var result = PATH.splitPath(path),
                root = result[0],
                dir = result[1];

            if (!root && !dir) {
              return ".";
            }

            if (dir) {
              dir = dir.substr(0, dir.length - 1);
            }

            return root + dir;
          },
          basename: function (path) {
            if (path === "/") return "/";
            path = PATH.normalize(path);
            path = path.replace(/\/$/, "");
            var lastSlash = path.lastIndexOf("/");
            if (lastSlash === -1) return path;
            return path.substr(lastSlash + 1);
          },
          extname: function (path) {
            return PATH.splitPath(path)[3];
          },
          join: function () {
            var paths = Array.prototype.slice.call(arguments, 0);
            return PATH.normalize(paths.join("/"));
          },
          join2: function (l, r) {
            return PATH.normalize(l + "/" + r);
          }
        };

        function getRandomDevice() {
          if (typeof crypto === "object" && typeof crypto["getRandomValues"] === "function") {
            var randomBuffer = new Uint8Array(1);
            return function () {
              crypto.getRandomValues(randomBuffer);
              return randomBuffer[0];
            };
          } else return function () {
            abort("randomDevice");
          };
        }

        var PATH_FS = {
          resolve: function () {
            var resolvedPath = "",
                resolvedAbsolute = false;

            for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {
              var path = i >= 0 ? arguments[i] : FS.cwd();

              if (typeof path !== "string") {
                throw new TypeError("Arguments to path.resolve must be strings");
              } else if (!path) {
                return "";
              }

              resolvedPath = path + "/" + resolvedPath;
              resolvedAbsolute = path.charAt(0) === "/";
            }

            resolvedPath = PATH.normalizeArray(resolvedPath.split("/").filter(function (p) {
              return !!p;
            }), !resolvedAbsolute).join("/");
            return (resolvedAbsolute ? "/" : "") + resolvedPath || ".";
          },
          relative: function (from, to) {
            from = PATH_FS.resolve(from).substr(1);
            to = PATH_FS.resolve(to).substr(1);

            function trim(arr) {
              var start = 0;

              for (; start < arr.length; start++) {
                if (arr[start] !== "") break;
              }

              var end = arr.length - 1;

              for (; end >= 0; end--) {
                if (arr[end] !== "") break;
              }

              if (start > end) return [];
              return arr.slice(start, end - start + 1);
            }

            var fromParts = trim(from.split("/"));
            var toParts = trim(to.split("/"));
            var length = Math.min(fromParts.length, toParts.length);
            var samePartsLength = length;

            for (var i = 0; i < length; i++) {
              if (fromParts[i] !== toParts[i]) {
                samePartsLength = i;
                break;
              }
            }

            var outputParts = [];

            for (var i = samePartsLength; i < fromParts.length; i++) {
              outputParts.push("..");
            }

            outputParts = outputParts.concat(toParts.slice(samePartsLength));
            return outputParts.join("/");
          }
        };
        var TTY = {
          ttys: [],
          init: function () {},
          shutdown: function () {},
          register: function (dev, ops) {
            TTY.ttys[dev] = {
              input: [],
              output: [],
              ops: ops
            };
            FS.registerDevice(dev, TTY.stream_ops);
          },
          stream_ops: {
            open: function (stream) {
              var tty = TTY.ttys[stream.node.rdev];

              if (!tty) {
                throw new FS.ErrnoError(43);
              }

              stream.tty = tty;
              stream.seekable = false;
            },
            close: function (stream) {
              stream.tty.ops.flush(stream.tty);
            },
            flush: function (stream) {
              stream.tty.ops.flush(stream.tty);
            },
            read: function (stream, buffer, offset, length, pos) {
              if (!stream.tty || !stream.tty.ops.get_char) {
                throw new FS.ErrnoError(60);
              }

              var bytesRead = 0;

              for (var i = 0; i < length; i++) {
                var result;

                try {
                  result = stream.tty.ops.get_char(stream.tty);
                } catch (e) {
                  throw new FS.ErrnoError(29);
                }

                if (result === undefined && bytesRead === 0) {
                  throw new FS.ErrnoError(6);
                }

                if (result === null || result === undefined) break;
                bytesRead++;
                buffer[offset + i] = result;
              }

              if (bytesRead) {
                stream.node.timestamp = Date.now();
              }

              return bytesRead;
            },
            write: function (stream, buffer, offset, length, pos) {
              if (!stream.tty || !stream.tty.ops.put_char) {
                throw new FS.ErrnoError(60);
              }

              try {
                for (var i = 0; i < length; i++) {
                  stream.tty.ops.put_char(stream.tty, buffer[offset + i]);
                }
              } catch (e) {
                throw new FS.ErrnoError(29);
              }

              if (length) {
                stream.node.timestamp = Date.now();
              }

              return i;
            }
          },
          default_tty_ops: {
            get_char: function (tty) {
              if (!tty.input.length) {
                var result = null;

                if (typeof window != "undefined" && typeof window.prompt == "function") {
                  result = window.prompt("Input: ");

                  if (result !== null) {
                    result += "\n";
                  }
                } else if (typeof readline == "function") {
                  result = readline();

                  if (result !== null) {
                    result += "\n";
                  }
                }

                if (!result) {
                  return null;
                }

                tty.input = intArrayFromString(result, true);
              }

              return tty.input.shift();
            },
            put_char: function (tty, val) {
              if (val === null || val === 10) {
                out(UTF8ArrayToString(tty.output, 0));
                tty.output = [];
              } else {
                if (val != 0) tty.output.push(val);
              }
            },
            flush: function (tty) {
              if (tty.output && tty.output.length > 0) {
                out(UTF8ArrayToString(tty.output, 0));
                tty.output = [];
              }
            }
          },
          default_tty1_ops: {
            put_char: function (tty, val) {
              if (val === null || val === 10) {
                err(UTF8ArrayToString(tty.output, 0));
                tty.output = [];
              } else {
                if (val != 0) tty.output.push(val);
              }
            },
            flush: function (tty) {
              if (tty.output && tty.output.length > 0) {
                err(UTF8ArrayToString(tty.output, 0));
                tty.output = [];
              }
            }
          }
        };

        function mmapAlloc(size) {
          var alignedSize = alignMemory(size, 16384);

          var ptr = _malloc(alignedSize);

          while (size < alignedSize) HEAP8[ptr + size++] = 0;

          return ptr;
        }

        var MEMFS = {
          ops_table: null,
          mount: function (mount) {
            return MEMFS.createNode(null, "/", 16384 | 511, 0);
          },
          createNode: function (parent, name, mode, dev) {
            if (FS.isBlkdev(mode) || FS.isFIFO(mode)) {
              throw new FS.ErrnoError(63);
            }

            if (!MEMFS.ops_table) {
              MEMFS.ops_table = {
                dir: {
                  node: {
                    getattr: MEMFS.node_ops.getattr,
                    setattr: MEMFS.node_ops.setattr,
                    lookup: MEMFS.node_ops.lookup,
                    mknod: MEMFS.node_ops.mknod,
                    rename: MEMFS.node_ops.rename,
                    unlink: MEMFS.node_ops.unlink,
                    rmdir: MEMFS.node_ops.rmdir,
                    readdir: MEMFS.node_ops.readdir,
                    symlink: MEMFS.node_ops.symlink
                  },
                  stream: {
                    llseek: MEMFS.stream_ops.llseek
                  }
                },
                file: {
                  node: {
                    getattr: MEMFS.node_ops.getattr,
                    setattr: MEMFS.node_ops.setattr
                  },
                  stream: {
                    llseek: MEMFS.stream_ops.llseek,
                    read: MEMFS.stream_ops.read,
                    write: MEMFS.stream_ops.write,
                    allocate: MEMFS.stream_ops.allocate,
                    mmap: MEMFS.stream_ops.mmap,
                    msync: MEMFS.stream_ops.msync
                  }
                },
                link: {
                  node: {
                    getattr: MEMFS.node_ops.getattr,
                    setattr: MEMFS.node_ops.setattr,
                    readlink: MEMFS.node_ops.readlink
                  },
                  stream: {}
                },
                chrdev: {
                  node: {
                    getattr: MEMFS.node_ops.getattr,
                    setattr: MEMFS.node_ops.setattr
                  },
                  stream: FS.chrdev_stream_ops
                }
              };
            }

            var node = FS.createNode(parent, name, mode, dev);

            if (FS.isDir(node.mode)) {
              node.node_ops = MEMFS.ops_table.dir.node;
              node.stream_ops = MEMFS.ops_table.dir.stream;
              node.contents = {};
            } else if (FS.isFile(node.mode)) {
              node.node_ops = MEMFS.ops_table.file.node;
              node.stream_ops = MEMFS.ops_table.file.stream;
              node.usedBytes = 0;
              node.contents = null;
            } else if (FS.isLink(node.mode)) {
              node.node_ops = MEMFS.ops_table.link.node;
              node.stream_ops = MEMFS.ops_table.link.stream;
            } else if (FS.isChrdev(node.mode)) {
              node.node_ops = MEMFS.ops_table.chrdev.node;
              node.stream_ops = MEMFS.ops_table.chrdev.stream;
            }

            node.timestamp = Date.now();

            if (parent) {
              parent.contents[name] = node;
            }

            return node;
          },
          getFileDataAsRegularArray: function (node) {
            if (node.contents && node.contents.subarray) {
              var arr = [];

              for (var i = 0; i < node.usedBytes; ++i) arr.push(node.contents[i]);

              return arr;
            }

            return node.contents;
          },
          getFileDataAsTypedArray: function (node) {
            if (!node.contents) return new Uint8Array(0);
            if (node.contents.subarray) return node.contents.subarray(0, node.usedBytes);
            return new Uint8Array(node.contents);
          },
          expandFileStorage: function (node, newCapacity) {
            var prevCapacity = node.contents ? node.contents.length : 0;
            if (prevCapacity >= newCapacity) return;
            var CAPACITY_DOUBLING_MAX = 1024 * 1024;
            newCapacity = Math.max(newCapacity, prevCapacity * (prevCapacity < CAPACITY_DOUBLING_MAX ? 2 : 1.125) >>> 0);
            if (prevCapacity != 0) newCapacity = Math.max(newCapacity, 256);
            var oldContents = node.contents;
            node.contents = new Uint8Array(newCapacity);
            if (node.usedBytes > 0) node.contents.set(oldContents.subarray(0, node.usedBytes), 0);
            return;
          },
          resizeFileStorage: function (node, newSize) {
            if (node.usedBytes == newSize) return;

            if (newSize == 0) {
              node.contents = null;
              node.usedBytes = 0;
              return;
            }

            if (!node.contents || node.contents.subarray) {
              var oldContents = node.contents;
              node.contents = new Uint8Array(newSize);

              if (oldContents) {
                node.contents.set(oldContents.subarray(0, Math.min(newSize, node.usedBytes)));
              }

              node.usedBytes = newSize;
              return;
            }

            if (!node.contents) node.contents = [];
            if (node.contents.length > newSize) node.contents.length = newSize;else while (node.contents.length < newSize) node.contents.push(0);
            node.usedBytes = newSize;
          },
          node_ops: {
            getattr: function (node) {
              var attr = {};
              attr.dev = FS.isChrdev(node.mode) ? node.id : 1;
              attr.ino = node.id;
              attr.mode = node.mode;
              attr.nlink = 1;
              attr.uid = 0;
              attr.gid = 0;
              attr.rdev = node.rdev;

              if (FS.isDir(node.mode)) {
                attr.size = 4096;
              } else if (FS.isFile(node.mode)) {
                attr.size = node.usedBytes;
              } else if (FS.isLink(node.mode)) {
                attr.size = node.link.length;
              } else {
                attr.size = 0;
              }

              attr.atime = new Date(node.timestamp);
              attr.mtime = new Date(node.timestamp);
              attr.ctime = new Date(node.timestamp);
              attr.blksize = 4096;
              attr.blocks = Math.ceil(attr.size / attr.blksize);
              return attr;
            },
            setattr: function (node, attr) {
              if (attr.mode !== undefined) {
                node.mode = attr.mode;
              }

              if (attr.timestamp !== undefined) {
                node.timestamp = attr.timestamp;
              }

              if (attr.size !== undefined) {
                MEMFS.resizeFileStorage(node, attr.size);
              }
            },
            lookup: function (parent, name) {
              throw FS.genericErrors[44];
            },
            mknod: function (parent, name, mode, dev) {
              return MEMFS.createNode(parent, name, mode, dev);
            },
            rename: function (old_node, new_dir, new_name) {
              if (FS.isDir(old_node.mode)) {
                var new_node;

                try {
                  new_node = FS.lookupNode(new_dir, new_name);
                } catch (e) {}

                if (new_node) {
                  for (var i in new_node.contents) {
                    throw new FS.ErrnoError(55);
                  }
                }
              }

              delete old_node.parent.contents[old_node.name];
              old_node.name = new_name;
              new_dir.contents[new_name] = old_node;
              old_node.parent = new_dir;
            },
            unlink: function (parent, name) {
              delete parent.contents[name];
            },
            rmdir: function (parent, name) {
              var node = FS.lookupNode(parent, name);

              for (var i in node.contents) {
                throw new FS.ErrnoError(55);
              }

              delete parent.contents[name];
            },
            readdir: function (node) {
              var entries = [".", ".."];

              for (var key in node.contents) {
                if (!node.contents.hasOwnProperty(key)) {
                  continue;
                }

                entries.push(key);
              }

              return entries;
            },
            symlink: function (parent, newname, oldpath) {
              var node = MEMFS.createNode(parent, newname, 511 | 40960, 0);
              node.link = oldpath;
              return node;
            },
            readlink: function (node) {
              if (!FS.isLink(node.mode)) {
                throw new FS.ErrnoError(28);
              }

              return node.link;
            }
          },
          stream_ops: {
            read: function (stream, buffer, offset, length, position) {
              var contents = stream.node.contents;
              if (position >= stream.node.usedBytes) return 0;
              var size = Math.min(stream.node.usedBytes - position, length);

              if (size > 8 && contents.subarray) {
                buffer.set(contents.subarray(position, position + size), offset);
              } else {
                for (var i = 0; i < size; i++) buffer[offset + i] = contents[position + i];
              }

              return size;
            },
            write: function (stream, buffer, offset, length, position, canOwn) {
              if (buffer.buffer === HEAP8.buffer) {
                canOwn = false;
              }

              if (!length) return 0;
              var node = stream.node;
              node.timestamp = Date.now();

              if (buffer.subarray && (!node.contents || node.contents.subarray)) {
                if (canOwn) {
                  node.contents = buffer.subarray(offset, offset + length);
                  node.usedBytes = length;
                  return length;
                } else if (node.usedBytes === 0 && position === 0) {
                  node.contents = buffer.slice(offset, offset + length);
                  node.usedBytes = length;
                  return length;
                } else if (position + length <= node.usedBytes) {
                  node.contents.set(buffer.subarray(offset, offset + length), position);
                  return length;
                }
              }

              MEMFS.expandFileStorage(node, position + length);

              if (node.contents.subarray && buffer.subarray) {
                node.contents.set(buffer.subarray(offset, offset + length), position);
              } else {
                for (var i = 0; i < length; i++) {
                  node.contents[position + i] = buffer[offset + i];
                }
              }

              node.usedBytes = Math.max(node.usedBytes, position + length);
              return length;
            },
            llseek: function (stream, offset, whence) {
              var position = offset;

              if (whence === 1) {
                position += stream.position;
              } else if (whence === 2) {
                if (FS.isFile(stream.node.mode)) {
                  position += stream.node.usedBytes;
                }
              }

              if (position < 0) {
                throw new FS.ErrnoError(28);
              }

              return position;
            },
            allocate: function (stream, offset, length) {
              MEMFS.expandFileStorage(stream.node, offset + length);
              stream.node.usedBytes = Math.max(stream.node.usedBytes, offset + length);
            },
            mmap: function (stream, address, length, position, prot, flags) {
              assert(address === 0);

              if (!FS.isFile(stream.node.mode)) {
                throw new FS.ErrnoError(43);
              }

              var ptr;
              var allocated;
              var contents = stream.node.contents;

              if (!(flags & 2) && contents.buffer === buffer) {
                allocated = false;
                ptr = contents.byteOffset;
              } else {
                if (position > 0 || position + length < contents.length) {
                  if (contents.subarray) {
                    contents = contents.subarray(position, position + length);
                  } else {
                    contents = Array.prototype.slice.call(contents, position, position + length);
                  }
                }

                allocated = true;
                ptr = mmapAlloc(length);

                if (!ptr) {
                  throw new FS.ErrnoError(48);
                }

                HEAP8.set(contents, ptr);
              }

              return {
                ptr: ptr,
                allocated: allocated
              };
            },
            msync: function (stream, buffer, offset, length, mmapFlags) {
              if (!FS.isFile(stream.node.mode)) {
                throw new FS.ErrnoError(43);
              }

              if (mmapFlags & 2) {
                return 0;
              }

              var bytesWritten = MEMFS.stream_ops.write(stream, buffer, 0, length, offset, false);
              return 0;
            }
          }
        };
        var FS = {
          root: null,
          mounts: [],
          devices: {},
          streams: [],
          nextInode: 1,
          nameTable: null,
          currentPath: "/",
          initialized: false,
          ignorePermissions: true,
          trackingDelegate: {},
          tracking: {
            openFlags: {
              READ: 1,
              WRITE: 2
            }
          },
          ErrnoError: null,
          genericErrors: {},
          filesystems: null,
          syncFSRequests: 0,
          lookupPath: function (path, opts) {
            path = PATH_FS.resolve(FS.cwd(), path);
            opts = opts || {};
            if (!path) return {
              path: "",
              node: null
            };
            var defaults = {
              follow_mount: true,
              recurse_count: 0
            };

            for (var key in defaults) {
              if (opts[key] === undefined) {
                opts[key] = defaults[key];
              }
            }

            if (opts.recurse_count > 8) {
              throw new FS.ErrnoError(32);
            }

            var parts = PATH.normalizeArray(path.split("/").filter(function (p) {
              return !!p;
            }), false);
            var current = FS.root;
            var current_path = "/";

            for (var i = 0; i < parts.length; i++) {
              var islast = i === parts.length - 1;

              if (islast && opts.parent) {
                break;
              }

              current = FS.lookupNode(current, parts[i]);
              current_path = PATH.join2(current_path, parts[i]);

              if (FS.isMountpoint(current)) {
                if (!islast || islast && opts.follow_mount) {
                  current = current.mounted.root;
                }
              }

              if (!islast || opts.follow) {
                var count = 0;

                while (FS.isLink(current.mode)) {
                  var link = FS.readlink(current_path);
                  current_path = PATH_FS.resolve(PATH.dirname(current_path), link);
                  var lookup = FS.lookupPath(current_path, {
                    recurse_count: opts.recurse_count
                  });
                  current = lookup.node;

                  if (count++ > 40) {
                    throw new FS.ErrnoError(32);
                  }
                }
              }
            }

            return {
              path: current_path,
              node: current
            };
          },
          getPath: function (node) {
            var path;

            while (true) {
              if (FS.isRoot(node)) {
                var mount = node.mount.mountpoint;
                if (!path) return mount;
                return mount[mount.length - 1] !== "/" ? mount + "/" + path : mount + path;
              }

              path = path ? node.name + "/" + path : node.name;
              node = node.parent;
            }
          },
          hashName: function (parentid, name) {
            var hash = 0;

            for (var i = 0; i < name.length; i++) {
              hash = (hash << 5) - hash + name.charCodeAt(i) | 0;
            }

            return (parentid + hash >>> 0) % FS.nameTable.length;
          },
          hashAddNode: function (node) {
            var hash = FS.hashName(node.parent.id, node.name);
            node.name_next = FS.nameTable[hash];
            FS.nameTable[hash] = node;
          },
          hashRemoveNode: function (node) {
            var hash = FS.hashName(node.parent.id, node.name);

            if (FS.nameTable[hash] === node) {
              FS.nameTable[hash] = node.name_next;
            } else {
              var current = FS.nameTable[hash];

              while (current) {
                if (current.name_next === node) {
                  current.name_next = node.name_next;
                  break;
                }

                current = current.name_next;
              }
            }
          },
          lookupNode: function (parent, name) {
            var errCode = FS.mayLookup(parent);

            if (errCode) {
              throw new FS.ErrnoError(errCode, parent);
            }

            var hash = FS.hashName(parent.id, name);

            for (var node = FS.nameTable[hash]; node; node = node.name_next) {
              var nodeName = node.name;

              if (node.parent.id === parent.id && nodeName === name) {
                return node;
              }
            }

            return FS.lookup(parent, name);
          },
          createNode: function (parent, name, mode, rdev) {
            var node = new FS.FSNode(parent, name, mode, rdev);
            FS.hashAddNode(node);
            return node;
          },
          destroyNode: function (node) {
            FS.hashRemoveNode(node);
          },
          isRoot: function (node) {
            return node === node.parent;
          },
          isMountpoint: function (node) {
            return !!node.mounted;
          },
          isFile: function (mode) {
            return (mode & 61440) === 32768;
          },
          isDir: function (mode) {
            return (mode & 61440) === 16384;
          },
          isLink: function (mode) {
            return (mode & 61440) === 40960;
          },
          isChrdev: function (mode) {
            return (mode & 61440) === 8192;
          },
          isBlkdev: function (mode) {
            return (mode & 61440) === 24576;
          },
          isFIFO: function (mode) {
            return (mode & 61440) === 4096;
          },
          isSocket: function (mode) {
            return (mode & 49152) === 49152;
          },
          flagModes: {
            "r": 0,
            "r+": 2,
            "w": 577,
            "w+": 578,
            "a": 1089,
            "a+": 1090
          },
          modeStringToFlags: function (str) {
            var flags = FS.flagModes[str];

            if (typeof flags === "undefined") {
              throw new Error("Unknown file open mode: " + str);
            }

            return flags;
          },
          flagsToPermissionString: function (flag) {
            var perms = ["r", "w", "rw"][flag & 3];

            if (flag & 512) {
              perms += "w";
            }

            return perms;
          },
          nodePermissions: function (node, perms) {
            if (FS.ignorePermissions) {
              return 0;
            }

            if (perms.indexOf("r") !== -1 && !(node.mode & 292)) {
              return 2;
            } else if (perms.indexOf("w") !== -1 && !(node.mode & 146)) {
              return 2;
            } else if (perms.indexOf("x") !== -1 && !(node.mode & 73)) {
              return 2;
            }

            return 0;
          },
          mayLookup: function (dir) {
            var errCode = FS.nodePermissions(dir, "x");
            if (errCode) return errCode;
            if (!dir.node_ops.lookup) return 2;
            return 0;
          },
          mayCreate: function (dir, name) {
            try {
              var node = FS.lookupNode(dir, name);
              return 20;
            } catch (e) {}

            return FS.nodePermissions(dir, "wx");
          },
          mayDelete: function (dir, name, isdir) {
            var node;

            try {
              node = FS.lookupNode(dir, name);
            } catch (e) {
              return e.errno;
            }

            var errCode = FS.nodePermissions(dir, "wx");

            if (errCode) {
              return errCode;
            }

            if (isdir) {
              if (!FS.isDir(node.mode)) {
                return 54;
              }

              if (FS.isRoot(node) || FS.getPath(node) === FS.cwd()) {
                return 10;
              }
            } else {
              if (FS.isDir(node.mode)) {
                return 31;
              }
            }

            return 0;
          },
          mayOpen: function (node, flags) {
            if (!node) {
              return 44;
            }

            if (FS.isLink(node.mode)) {
              return 32;
            } else if (FS.isDir(node.mode)) {
              if (FS.flagsToPermissionString(flags) !== "r" || flags & 512) {
                return 31;
              }
            }

            return FS.nodePermissions(node, FS.flagsToPermissionString(flags));
          },
          MAX_OPEN_FDS: 4096,
          nextfd: function (fd_start, fd_end) {
            fd_start = fd_start || 0;
            fd_end = fd_end || FS.MAX_OPEN_FDS;

            for (var fd = fd_start; fd <= fd_end; fd++) {
              if (!FS.streams[fd]) {
                return fd;
              }
            }

            throw new FS.ErrnoError(33);
          },
          getStream: function (fd) {
            return FS.streams[fd];
          },
          createStream: function (stream, fd_start, fd_end) {
            if (!FS.FSStream) {
              FS.FSStream = function () {};

              FS.FSStream.prototype = {
                object: {
                  get: function () {
                    return this.node;
                  },
                  set: function (val) {
                    this.node = val;
                  }
                },
                isRead: {
                  get: function () {
                    return (this.flags & 2097155) !== 1;
                  }
                },
                isWrite: {
                  get: function () {
                    return (this.flags & 2097155) !== 0;
                  }
                },
                isAppend: {
                  get: function () {
                    return this.flags & 1024;
                  }
                }
              };
            }

            var newStream = new FS.FSStream();

            for (var p in stream) {
              newStream[p] = stream[p];
            }

            stream = newStream;
            var fd = FS.nextfd(fd_start, fd_end);
            stream.fd = fd;
            FS.streams[fd] = stream;
            return stream;
          },
          closeStream: function (fd) {
            FS.streams[fd] = null;
          },
          chrdev_stream_ops: {
            open: function (stream) {
              var device = FS.getDevice(stream.node.rdev);
              stream.stream_ops = device.stream_ops;

              if (stream.stream_ops.open) {
                stream.stream_ops.open(stream);
              }
            },
            llseek: function () {
              throw new FS.ErrnoError(70);
            }
          },
          major: function (dev) {
            return dev >> 8;
          },
          minor: function (dev) {
            return dev & 255;
          },
          makedev: function (ma, mi) {
            return ma << 8 | mi;
          },
          registerDevice: function (dev, ops) {
            FS.devices[dev] = {
              stream_ops: ops
            };
          },
          getDevice: function (dev) {
            return FS.devices[dev];
          },
          getMounts: function (mount) {
            var mounts = [];
            var check = [mount];

            while (check.length) {
              var m = check.pop();
              mounts.push(m);
              check.push.apply(check, m.mounts);
            }

            return mounts;
          },
          syncfs: function (populate, callback) {
            if (typeof populate === "function") {
              callback = populate;
              populate = false;
            }

            FS.syncFSRequests++;

            if (FS.syncFSRequests > 1) {
              err("warning: " + FS.syncFSRequests + " FS.syncfs operations in flight at once, probably just doing extra work");
            }

            var mounts = FS.getMounts(FS.root.mount);
            var completed = 0;

            function doCallback(errCode) {
              FS.syncFSRequests--;
              return callback(errCode);
            }

            function done(errCode) {
              if (errCode) {
                if (!done.errored) {
                  done.errored = true;
                  return doCallback(errCode);
                }

                return;
              }

              if (++completed >= mounts.length) {
                doCallback(null);
              }
            }

            mounts.forEach(function (mount) {
              if (!mount.type.syncfs) {
                return done(null);
              }

              mount.type.syncfs(mount, populate, done);
            });
          },
          mount: function (type, opts, mountpoint) {
            var root = mountpoint === "/";
            var pseudo = !mountpoint;
            var node;

            if (root && FS.root) {
              throw new FS.ErrnoError(10);
            } else if (!root && !pseudo) {
              var lookup = FS.lookupPath(mountpoint, {
                follow_mount: false
              });
              mountpoint = lookup.path;
              node = lookup.node;

              if (FS.isMountpoint(node)) {
                throw new FS.ErrnoError(10);
              }

              if (!FS.isDir(node.mode)) {
                throw new FS.ErrnoError(54);
              }
            }

            var mount = {
              type: type,
              opts: opts,
              mountpoint: mountpoint,
              mounts: []
            };
            var mountRoot = type.mount(mount);
            mountRoot.mount = mount;
            mount.root = mountRoot;

            if (root) {
              FS.root = mountRoot;
            } else if (node) {
              node.mounted = mount;

              if (node.mount) {
                node.mount.mounts.push(mount);
              }
            }

            return mountRoot;
          },
          unmount: function (mountpoint) {
            var lookup = FS.lookupPath(mountpoint, {
              follow_mount: false
            });

            if (!FS.isMountpoint(lookup.node)) {
              throw new FS.ErrnoError(28);
            }

            var node = lookup.node;
            var mount = node.mounted;
            var mounts = FS.getMounts(mount);
            Object.keys(FS.nameTable).forEach(function (hash) {
              var current = FS.nameTable[hash];

              while (current) {
                var next = current.name_next;

                if (mounts.indexOf(current.mount) !== -1) {
                  FS.destroyNode(current);
                }

                current = next;
              }
            });
            node.mounted = null;
            var idx = node.mount.mounts.indexOf(mount);
            node.mount.mounts.splice(idx, 1);
          },
          lookup: function (parent, name) {
            return parent.node_ops.lookup(parent, name);
          },
          mknod: function (path, mode, dev) {
            var lookup = FS.lookupPath(path, {
              parent: true
            });
            var parent = lookup.node;
            var name = PATH.basename(path);

            if (!name || name === "." || name === "..") {
              throw new FS.ErrnoError(28);
            }

            var errCode = FS.mayCreate(parent, name);

            if (errCode) {
              throw new FS.ErrnoError(errCode);
            }

            if (!parent.node_ops.mknod) {
              throw new FS.ErrnoError(63);
            }

            return parent.node_ops.mknod(parent, name, mode, dev);
          },
          create: function (path, mode) {
            mode = mode !== undefined ? mode : 438;
            mode &= 4095;
            mode |= 32768;
            return FS.mknod(path, mode, 0);
          },
          mkdir: function (path, mode) {
            mode = mode !== undefined ? mode : 511;
            mode &= 511 | 512;
            mode |= 16384;
            return FS.mknod(path, mode, 0);
          },
          mkdirTree: function (path, mode) {
            var dirs = path.split("/");
            var d = "";

            for (var i = 0; i < dirs.length; ++i) {
              if (!dirs[i]) continue;
              d += "/" + dirs[i];

              try {
                FS.mkdir(d, mode);
              } catch (e) {
                if (e.errno != 20) throw e;
              }
            }
          },
          mkdev: function (path, mode, dev) {
            if (typeof dev === "undefined") {
              dev = mode;
              mode = 438;
            }

            mode |= 8192;
            return FS.mknod(path, mode, dev);
          },
          symlink: function (oldpath, newpath) {
            if (!PATH_FS.resolve(oldpath)) {
              throw new FS.ErrnoError(44);
            }

            var lookup = FS.lookupPath(newpath, {
              parent: true
            });
            var parent = lookup.node;

            if (!parent) {
              throw new FS.ErrnoError(44);
            }

            var newname = PATH.basename(newpath);
            var errCode = FS.mayCreate(parent, newname);

            if (errCode) {
              throw new FS.ErrnoError(errCode);
            }

            if (!parent.node_ops.symlink) {
              throw new FS.ErrnoError(63);
            }

            return parent.node_ops.symlink(parent, newname, oldpath);
          },
          rename: function (old_path, new_path) {
            var old_dirname = PATH.dirname(old_path);
            var new_dirname = PATH.dirname(new_path);
            var old_name = PATH.basename(old_path);
            var new_name = PATH.basename(new_path);
            var lookup, old_dir, new_dir;
            lookup = FS.lookupPath(old_path, {
              parent: true
            });
            old_dir = lookup.node;
            lookup = FS.lookupPath(new_path, {
              parent: true
            });
            new_dir = lookup.node;
            if (!old_dir || !new_dir) throw new FS.ErrnoError(44);

            if (old_dir.mount !== new_dir.mount) {
              throw new FS.ErrnoError(75);
            }

            var old_node = FS.lookupNode(old_dir, old_name);
            var relative = PATH_FS.relative(old_path, new_dirname);

            if (relative.charAt(0) !== ".") {
              throw new FS.ErrnoError(28);
            }

            relative = PATH_FS.relative(new_path, old_dirname);

            if (relative.charAt(0) !== ".") {
              throw new FS.ErrnoError(55);
            }

            var new_node;

            try {
              new_node = FS.lookupNode(new_dir, new_name);
            } catch (e) {}

            if (old_node === new_node) {
              return;
            }

            var isdir = FS.isDir(old_node.mode);
            var errCode = FS.mayDelete(old_dir, old_name, isdir);

            if (errCode) {
              throw new FS.ErrnoError(errCode);
            }

            errCode = new_node ? FS.mayDelete(new_dir, new_name, isdir) : FS.mayCreate(new_dir, new_name);

            if (errCode) {
              throw new FS.ErrnoError(errCode);
            }

            if (!old_dir.node_ops.rename) {
              throw new FS.ErrnoError(63);
            }

            if (FS.isMountpoint(old_node) || new_node && FS.isMountpoint(new_node)) {
              throw new FS.ErrnoError(10);
            }

            if (new_dir !== old_dir) {
              errCode = FS.nodePermissions(old_dir, "w");

              if (errCode) {
                throw new FS.ErrnoError(errCode);
              }
            }

            try {
              if (FS.trackingDelegate["willMovePath"]) {
                FS.trackingDelegate["willMovePath"](old_path, new_path);
              }
            } catch (e) {
              err("FS.trackingDelegate['willMovePath']('" + old_path + "', '" + new_path + "') threw an exception: " + e.message);
            }

            FS.hashRemoveNode(old_node);

            try {
              old_dir.node_ops.rename(old_node, new_dir, new_name);
            } catch (e) {
              throw e;
            } finally {
              FS.hashAddNode(old_node);
            }

            try {
              if (FS.trackingDelegate["onMovePath"]) FS.trackingDelegate["onMovePath"](old_path, new_path);
            } catch (e) {
              err("FS.trackingDelegate['onMovePath']('" + old_path + "', '" + new_path + "') threw an exception: " + e.message);
            }
          },
          rmdir: function (path) {
            var lookup = FS.lookupPath(path, {
              parent: true
            });
            var parent = lookup.node;
            var name = PATH.basename(path);
            var node = FS.lookupNode(parent, name);
            var errCode = FS.mayDelete(parent, name, true);

            if (errCode) {
              throw new FS.ErrnoError(errCode);
            }

            if (!parent.node_ops.rmdir) {
              throw new FS.ErrnoError(63);
            }

            if (FS.isMountpoint(node)) {
              throw new FS.ErrnoError(10);
            }

            try {
              if (FS.trackingDelegate["willDeletePath"]) {
                FS.trackingDelegate["willDeletePath"](path);
              }
            } catch (e) {
              err("FS.trackingDelegate['willDeletePath']('" + path + "') threw an exception: " + e.message);
            }

            parent.node_ops.rmdir(parent, name);
            FS.destroyNode(node);

            try {
              if (FS.trackingDelegate["onDeletePath"]) FS.trackingDelegate["onDeletePath"](path);
            } catch (e) {
              err("FS.trackingDelegate['onDeletePath']('" + path + "') threw an exception: " + e.message);
            }
          },
          readdir: function (path) {
            var lookup = FS.lookupPath(path, {
              follow: true
            });
            var node = lookup.node;

            if (!node.node_ops.readdir) {
              throw new FS.ErrnoError(54);
            }

            return node.node_ops.readdir(node);
          },
          unlink: function (path) {
            var lookup = FS.lookupPath(path, {
              parent: true
            });
            var parent = lookup.node;
            var name = PATH.basename(path);
            var node = FS.lookupNode(parent, name);
            var errCode = FS.mayDelete(parent, name, false);

            if (errCode) {
              throw new FS.ErrnoError(errCode);
            }

            if (!parent.node_ops.unlink) {
              throw new FS.ErrnoError(63);
            }

            if (FS.isMountpoint(node)) {
              throw new FS.ErrnoError(10);
            }

            try {
              if (FS.trackingDelegate["willDeletePath"]) {
                FS.trackingDelegate["willDeletePath"](path);
              }
            } catch (e) {
              err("FS.trackingDelegate['willDeletePath']('" + path + "') threw an exception: " + e.message);
            }

            parent.node_ops.unlink(parent, name);
            FS.destroyNode(node);

            try {
              if (FS.trackingDelegate["onDeletePath"]) FS.trackingDelegate["onDeletePath"](path);
            } catch (e) {
              err("FS.trackingDelegate['onDeletePath']('" + path + "') threw an exception: " + e.message);
            }
          },
          readlink: function (path) {
            var lookup = FS.lookupPath(path);
            var link = lookup.node;

            if (!link) {
              throw new FS.ErrnoError(44);
            }

            if (!link.node_ops.readlink) {
              throw new FS.ErrnoError(28);
            }

            return PATH_FS.resolve(FS.getPath(link.parent), link.node_ops.readlink(link));
          },
          stat: function (path, dontFollow) {
            var lookup = FS.lookupPath(path, {
              follow: !dontFollow
            });
            var node = lookup.node;

            if (!node) {
              throw new FS.ErrnoError(44);
            }

            if (!node.node_ops.getattr) {
              throw new FS.ErrnoError(63);
            }

            return node.node_ops.getattr(node);
          },
          lstat: function (path) {
            return FS.stat(path, true);
          },
          chmod: function (path, mode, dontFollow) {
            var node;

            if (typeof path === "string") {
              var lookup = FS.lookupPath(path, {
                follow: !dontFollow
              });
              node = lookup.node;
            } else {
              node = path;
            }

            if (!node.node_ops.setattr) {
              throw new FS.ErrnoError(63);
            }

            node.node_ops.setattr(node, {
              mode: mode & 4095 | node.mode & ~4095,
              timestamp: Date.now()
            });
          },
          lchmod: function (path, mode) {
            FS.chmod(path, mode, true);
          },
          fchmod: function (fd, mode) {
            var stream = FS.getStream(fd);

            if (!stream) {
              throw new FS.ErrnoError(8);
            }

            FS.chmod(stream.node, mode);
          },
          chown: function (path, uid, gid, dontFollow) {
            var node;

            if (typeof path === "string") {
              var lookup = FS.lookupPath(path, {
                follow: !dontFollow
              });
              node = lookup.node;
            } else {
              node = path;
            }

            if (!node.node_ops.setattr) {
              throw new FS.ErrnoError(63);
            }

            node.node_ops.setattr(node, {
              timestamp: Date.now()
            });
          },
          lchown: function (path, uid, gid) {
            FS.chown(path, uid, gid, true);
          },
          fchown: function (fd, uid, gid) {
            var stream = FS.getStream(fd);

            if (!stream) {
              throw new FS.ErrnoError(8);
            }

            FS.chown(stream.node, uid, gid);
          },
          truncate: function (path, len) {
            if (len < 0) {
              throw new FS.ErrnoError(28);
            }

            var node;

            if (typeof path === "string") {
              var lookup = FS.lookupPath(path, {
                follow: true
              });
              node = lookup.node;
            } else {
              node = path;
            }

            if (!node.node_ops.setattr) {
              throw new FS.ErrnoError(63);
            }

            if (FS.isDir(node.mode)) {
              throw new FS.ErrnoError(31);
            }

            if (!FS.isFile(node.mode)) {
              throw new FS.ErrnoError(28);
            }

            var errCode = FS.nodePermissions(node, "w");

            if (errCode) {
              throw new FS.ErrnoError(errCode);
            }

            node.node_ops.setattr(node, {
              size: len,
              timestamp: Date.now()
            });
          },
          ftruncate: function (fd, len) {
            var stream = FS.getStream(fd);

            if (!stream) {
              throw new FS.ErrnoError(8);
            }

            if ((stream.flags & 2097155) === 0) {
              throw new FS.ErrnoError(28);
            }

            FS.truncate(stream.node, len);
          },
          utime: function (path, atime, mtime) {
            var lookup = FS.lookupPath(path, {
              follow: true
            });
            var node = lookup.node;
            node.node_ops.setattr(node, {
              timestamp: Math.max(atime, mtime)
            });
          },
          open: function (path, flags, mode, fd_start, fd_end) {
            if (path === "") {
              throw new FS.ErrnoError(44);
            }

            flags = typeof flags === "string" ? FS.modeStringToFlags(flags) : flags;
            mode = typeof mode === "undefined" ? 438 : mode;

            if (flags & 64) {
              mode = mode & 4095 | 32768;
            } else {
              mode = 0;
            }

            var node;

            if (typeof path === "object") {
              node = path;
            } else {
              path = PATH.normalize(path);

              try {
                var lookup = FS.lookupPath(path, {
                  follow: !(flags & 131072)
                });
                node = lookup.node;
              } catch (e) {}
            }

            var created = false;

            if (flags & 64) {
              if (node) {
                if (flags & 128) {
                  throw new FS.ErrnoError(20);
                }
              } else {
                node = FS.mknod(path, mode, 0);
                created = true;
              }
            }

            if (!node) {
              throw new FS.ErrnoError(44);
            }

            if (FS.isChrdev(node.mode)) {
              flags &= ~512;
            }

            if (flags & 65536 && !FS.isDir(node.mode)) {
              throw new FS.ErrnoError(54);
            }

            if (!created) {
              var errCode = FS.mayOpen(node, flags);

              if (errCode) {
                throw new FS.ErrnoError(errCode);
              }
            }

            if (flags & 512) {
              FS.truncate(node, 0);
            }

            flags &= ~(128 | 512 | 131072);
            var stream = FS.createStream({
              node: node,
              path: FS.getPath(node),
              flags: flags,
              seekable: true,
              position: 0,
              stream_ops: node.stream_ops,
              ungotten: [],
              error: false
            }, fd_start, fd_end);

            if (stream.stream_ops.open) {
              stream.stream_ops.open(stream);
            }

            if (Module["logReadFiles"] && !(flags & 1)) {
              if (!FS.readFiles) FS.readFiles = {};

              if (!(path in FS.readFiles)) {
                FS.readFiles[path] = 1;
                err("FS.trackingDelegate error on read file: " + path);
              }
            }

            try {
              if (FS.trackingDelegate["onOpenFile"]) {
                var trackingFlags = 0;

                if ((flags & 2097155) !== 1) {
                  trackingFlags |= FS.tracking.openFlags.READ;
                }

                if ((flags & 2097155) !== 0) {
                  trackingFlags |= FS.tracking.openFlags.WRITE;
                }

                FS.trackingDelegate["onOpenFile"](path, trackingFlags);
              }
            } catch (e) {
              err("FS.trackingDelegate['onOpenFile']('" + path + "', flags) threw an exception: " + e.message);
            }

            return stream;
          },
          close: function (stream) {
            if (FS.isClosed(stream)) {
              throw new FS.ErrnoError(8);
            }

            if (stream.getdents) stream.getdents = null;

            try {
              if (stream.stream_ops.close) {
                stream.stream_ops.close(stream);
              }
            } catch (e) {
              throw e;
            } finally {
              FS.closeStream(stream.fd);
            }

            stream.fd = null;
          },
          isClosed: function (stream) {
            return stream.fd === null;
          },
          llseek: function (stream, offset, whence) {
            if (FS.isClosed(stream)) {
              throw new FS.ErrnoError(8);
            }

            if (!stream.seekable || !stream.stream_ops.llseek) {
              throw new FS.ErrnoError(70);
            }

            if (whence != 0 && whence != 1 && whence != 2) {
              throw new FS.ErrnoError(28);
            }

            stream.position = stream.stream_ops.llseek(stream, offset, whence);
            stream.ungotten = [];
            return stream.position;
          },
          read: function (stream, buffer, offset, length, position) {
            if (length < 0 || position < 0) {
              throw new FS.ErrnoError(28);
            }

            if (FS.isClosed(stream)) {
              throw new FS.ErrnoError(8);
            }

            if ((stream.flags & 2097155) === 1) {
              throw new FS.ErrnoError(8);
            }

            if (FS.isDir(stream.node.mode)) {
              throw new FS.ErrnoError(31);
            }

            if (!stream.stream_ops.read) {
              throw new FS.ErrnoError(28);
            }

            var seeking = typeof position !== "undefined";

            if (!seeking) {
              position = stream.position;
            } else if (!stream.seekable) {
              throw new FS.ErrnoError(70);
            }

            var bytesRead = stream.stream_ops.read(stream, buffer, offset, length, position);
            if (!seeking) stream.position += bytesRead;
            return bytesRead;
          },
          write: function (stream, buffer, offset, length, position, canOwn) {
            if (length < 0 || position < 0) {
              throw new FS.ErrnoError(28);
            }

            if (FS.isClosed(stream)) {
              throw new FS.ErrnoError(8);
            }

            if ((stream.flags & 2097155) === 0) {
              throw new FS.ErrnoError(8);
            }

            if (FS.isDir(stream.node.mode)) {
              throw new FS.ErrnoError(31);
            }

            if (!stream.stream_ops.write) {
              throw new FS.ErrnoError(28);
            }

            if (stream.seekable && stream.flags & 1024) {
              FS.llseek(stream, 0, 2);
            }

            var seeking = typeof position !== "undefined";

            if (!seeking) {
              position = stream.position;
            } else if (!stream.seekable) {
              throw new FS.ErrnoError(70);
            }

            var bytesWritten = stream.stream_ops.write(stream, buffer, offset, length, position, canOwn);
            if (!seeking) stream.position += bytesWritten;

            try {
              if (stream.path && FS.trackingDelegate["onWriteToFile"]) FS.trackingDelegate["onWriteToFile"](stream.path);
            } catch (e) {
              err("FS.trackingDelegate['onWriteToFile']('" + stream.path + "') threw an exception: " + e.message);
            }

            return bytesWritten;
          },
          allocate: function (stream, offset, length) {
            if (FS.isClosed(stream)) {
              throw new FS.ErrnoError(8);
            }

            if (offset < 0 || length <= 0) {
              throw new FS.ErrnoError(28);
            }

            if ((stream.flags & 2097155) === 0) {
              throw new FS.ErrnoError(8);
            }

            if (!FS.isFile(stream.node.mode) && !FS.isDir(stream.node.mode)) {
              throw new FS.ErrnoError(43);
            }

            if (!stream.stream_ops.allocate) {
              throw new FS.ErrnoError(138);
            }

            stream.stream_ops.allocate(stream, offset, length);
          },
          mmap: function (stream, address, length, position, prot, flags) {
            if ((prot & 2) !== 0 && (flags & 2) === 0 && (stream.flags & 2097155) !== 2) {
              throw new FS.ErrnoError(2);
            }

            if ((stream.flags & 2097155) === 1) {
              throw new FS.ErrnoError(2);
            }

            if (!stream.stream_ops.mmap) {
              throw new FS.ErrnoError(43);
            }

            return stream.stream_ops.mmap(stream, address, length, position, prot, flags);
          },
          msync: function (stream, buffer, offset, length, mmapFlags) {
            if (!stream || !stream.stream_ops.msync) {
              return 0;
            }

            return stream.stream_ops.msync(stream, buffer, offset, length, mmapFlags);
          },
          munmap: function (stream) {
            return 0;
          },
          ioctl: function (stream, cmd, arg) {
            if (!stream.stream_ops.ioctl) {
              throw new FS.ErrnoError(59);
            }

            return stream.stream_ops.ioctl(stream, cmd, arg);
          },
          readFile: function (path, opts) {
            opts = opts || {};
            opts.flags = opts.flags || 0;
            opts.encoding = opts.encoding || "binary";

            if (opts.encoding !== "utf8" && opts.encoding !== "binary") {
              throw new Error('Invalid encoding type "' + opts.encoding + '"');
            }

            var ret;
            var stream = FS.open(path, opts.flags);
            var stat = FS.stat(path);
            var length = stat.size;
            var buf = new Uint8Array(length);
            FS.read(stream, buf, 0, length, 0);

            if (opts.encoding === "utf8") {
              ret = UTF8ArrayToString(buf, 0);
            } else if (opts.encoding === "binary") {
              ret = buf;
            }

            FS.close(stream);
            return ret;
          },
          writeFile: function (path, data, opts) {
            opts = opts || {};
            opts.flags = opts.flags || 577;
            var stream = FS.open(path, opts.flags, opts.mode);

            if (typeof data === "string") {
              var buf = new Uint8Array(lengthBytesUTF8(data) + 1);
              var actualNumBytes = stringToUTF8Array(data, buf, 0, buf.length);
              FS.write(stream, buf, 0, actualNumBytes, undefined, opts.canOwn);
            } else if (ArrayBuffer.isView(data)) {
              FS.write(stream, data, 0, data.byteLength, undefined, opts.canOwn);
            } else {
              throw new Error("Unsupported data type");
            }

            FS.close(stream);
          },
          cwd: function () {
            return FS.currentPath;
          },
          chdir: function (path) {
            var lookup = FS.lookupPath(path, {
              follow: true
            });

            if (lookup.node === null) {
              throw new FS.ErrnoError(44);
            }

            if (!FS.isDir(lookup.node.mode)) {
              throw new FS.ErrnoError(54);
            }

            var errCode = FS.nodePermissions(lookup.node, "x");

            if (errCode) {
              throw new FS.ErrnoError(errCode);
            }

            FS.currentPath = lookup.path;
          },
          createDefaultDirectories: function () {
            FS.mkdir("/tmp");
            FS.mkdir("/home");
            FS.mkdir("/home/web_user");
          },
          createDefaultDevices: function () {
            FS.mkdir("/dev");
            FS.registerDevice(FS.makedev(1, 3), {
              read: function () {
                return 0;
              },
              write: function (stream, buffer, offset, length, pos) {
                return length;
              }
            });
            FS.mkdev("/dev/null", FS.makedev(1, 3));
            TTY.register(FS.makedev(5, 0), TTY.default_tty_ops);
            TTY.register(FS.makedev(6, 0), TTY.default_tty1_ops);
            FS.mkdev("/dev/tty", FS.makedev(5, 0));
            FS.mkdev("/dev/tty1", FS.makedev(6, 0));
            var random_device = getRandomDevice();
            FS.createDevice("/dev", "random", random_device);
            FS.createDevice("/dev", "urandom", random_device);
            FS.mkdir("/dev/shm");
            FS.mkdir("/dev/shm/tmp");
          },
          createSpecialDirectories: function () {
            FS.mkdir("/proc");
            FS.mkdir("/proc/self");
            FS.mkdir("/proc/self/fd");
            FS.mount({
              mount: function () {
                var node = FS.createNode("/proc/self", "fd", 16384 | 511, 73);
                node.node_ops = {
                  lookup: function (parent, name) {
                    var fd = +name;
                    var stream = FS.getStream(fd);
                    if (!stream) throw new FS.ErrnoError(8);
                    var ret = {
                      parent: null,
                      mount: {
                        mountpoint: "fake"
                      },
                      node_ops: {
                        readlink: function () {
                          return stream.path;
                        }
                      }
                    };
                    ret.parent = ret;
                    return ret;
                  }
                };
                return node;
              }
            }, {}, "/proc/self/fd");
          },
          createStandardStreams: function () {
            if (Module["stdin"]) {
              FS.createDevice("/dev", "stdin", Module["stdin"]);
            } else {
              FS.symlink("/dev/tty", "/dev/stdin");
            }

            if (Module["stdout"]) {
              FS.createDevice("/dev", "stdout", null, Module["stdout"]);
            } else {
              FS.symlink("/dev/tty", "/dev/stdout");
            }

            if (Module["stderr"]) {
              FS.createDevice("/dev", "stderr", null, Module["stderr"]);
            } else {
              FS.symlink("/dev/tty1", "/dev/stderr");
            }

            var stdin = FS.open("/dev/stdin", 0);
            var stdout = FS.open("/dev/stdout", 1);
            var stderr = FS.open("/dev/stderr", 1);
          },
          ensureErrnoError: function () {
            if (FS.ErrnoError) return;

            FS.ErrnoError = function ErrnoError(errno, node) {
              this.node = node;

              this.setErrno = function (errno) {
                this.errno = errno;
              };

              this.setErrno(errno);
              this.message = "FS error";
            };

            FS.ErrnoError.prototype = new Error();
            FS.ErrnoError.prototype.constructor = FS.ErrnoError;
            [44].forEach(function (code) {
              FS.genericErrors[code] = new FS.ErrnoError(code);
              FS.genericErrors[code].stack = "<generic error, no stack>";
            });
          },
          staticInit: function () {
            FS.ensureErrnoError();
            FS.nameTable = new Array(4096);
            FS.mount(MEMFS, {}, "/");
            FS.createDefaultDirectories();
            FS.createDefaultDevices();
            FS.createSpecialDirectories();
            FS.filesystems = {
              "MEMFS": MEMFS
            };
          },
          init: function (input, output, error) {
            FS.init.initialized = true;
            FS.ensureErrnoError();
            Module["stdin"] = input || Module["stdin"];
            Module["stdout"] = output || Module["stdout"];
            Module["stderr"] = error || Module["stderr"];
            FS.createStandardStreams();
          },
          quit: function () {
            FS.init.initialized = false;
            var fflush = Module["_fflush"];
            if (fflush) fflush(0);

            for (var i = 0; i < FS.streams.length; i++) {
              var stream = FS.streams[i];

              if (!stream) {
                continue;
              }

              FS.close(stream);
            }
          },
          getMode: function (canRead, canWrite) {
            var mode = 0;
            if (canRead) mode |= 292 | 73;
            if (canWrite) mode |= 146;
            return mode;
          },
          findObject: function (path, dontResolveLastLink) {
            var ret = FS.analyzePath(path, dontResolveLastLink);

            if (ret.exists) {
              return ret.object;
            } else {
              return null;
            }
          },
          analyzePath: function (path, dontResolveLastLink) {
            try {
              var lookup = FS.lookupPath(path, {
                follow: !dontResolveLastLink
              });
              path = lookup.path;
            } catch (e) {}

            var ret = {
              isRoot: false,
              exists: false,
              error: 0,
              name: null,
              path: null,
              object: null,
              parentExists: false,
              parentPath: null,
              parentObject: null
            };

            try {
              var lookup = FS.lookupPath(path, {
                parent: true
              });
              ret.parentExists = true;
              ret.parentPath = lookup.path;
              ret.parentObject = lookup.node;
              ret.name = PATH.basename(path);
              lookup = FS.lookupPath(path, {
                follow: !dontResolveLastLink
              });
              ret.exists = true;
              ret.path = lookup.path;
              ret.object = lookup.node;
              ret.name = lookup.node.name;
              ret.isRoot = lookup.path === "/";
            } catch (e) {
              ret.error = e.errno;
            }

            return ret;
          },
          createPath: function (parent, path, canRead, canWrite) {
            parent = typeof parent === "string" ? parent : FS.getPath(parent);
            var parts = path.split("/").reverse();

            while (parts.length) {
              var part = parts.pop();
              if (!part) continue;
              var current = PATH.join2(parent, part);

              try {
                FS.mkdir(current);
              } catch (e) {}

              parent = current;
            }

            return current;
          },
          createFile: function (parent, name, properties, canRead, canWrite) {
            var path = PATH.join2(typeof parent === "string" ? parent : FS.getPath(parent), name);
            var mode = FS.getMode(canRead, canWrite);
            return FS.create(path, mode);
          },
          createDataFile: function (parent, name, data, canRead, canWrite, canOwn) {
            var path = name ? PATH.join2(typeof parent === "string" ? parent : FS.getPath(parent), name) : parent;
            var mode = FS.getMode(canRead, canWrite);
            var node = FS.create(path, mode);

            if (data) {
              if (typeof data === "string") {
                var arr = new Array(data.length);

                for (var i = 0, len = data.length; i < len; ++i) arr[i] = data.charCodeAt(i);

                data = arr;
              }

              FS.chmod(node, mode | 146);
              var stream = FS.open(node, 577);
              FS.write(stream, data, 0, data.length, 0, canOwn);
              FS.close(stream);
              FS.chmod(node, mode);
            }

            return node;
          },
          createDevice: function (parent, name, input, output) {
            var path = PATH.join2(typeof parent === "string" ? parent : FS.getPath(parent), name);
            var mode = FS.getMode(!!input, !!output);
            if (!FS.createDevice.major) FS.createDevice.major = 64;
            var dev = FS.makedev(FS.createDevice.major++, 0);
            FS.registerDevice(dev, {
              open: function (stream) {
                stream.seekable = false;
              },
              close: function (stream) {
                if (output && output.buffer && output.buffer.length) {
                  output(10);
                }
              },
              read: function (stream, buffer, offset, length, pos) {
                var bytesRead = 0;

                for (var i = 0; i < length; i++) {
                  var result;

                  try {
                    result = input();
                  } catch (e) {
                    throw new FS.ErrnoError(29);
                  }

                  if (result === undefined && bytesRead === 0) {
                    throw new FS.ErrnoError(6);
                  }

                  if (result === null || result === undefined) break;
                  bytesRead++;
                  buffer[offset + i] = result;
                }

                if (bytesRead) {
                  stream.node.timestamp = Date.now();
                }

                return bytesRead;
              },
              write: function (stream, buffer, offset, length, pos) {
                for (var i = 0; i < length; i++) {
                  try {
                    output(buffer[offset + i]);
                  } catch (e) {
                    throw new FS.ErrnoError(29);
                  }
                }

                if (length) {
                  stream.node.timestamp = Date.now();
                }

                return i;
              }
            });
            return FS.mkdev(path, mode, dev);
          },
          forceLoadFile: function (obj) {
            if (obj.isDevice || obj.isFolder || obj.link || obj.contents) return true;

            if (typeof XMLHttpRequest !== "undefined") {
              throw new Error("Lazy loading should have been performed (contents set) in createLazyFile, but it was not. Lazy loading only works in web workers. Use --embed-file or --preload-file in emcc on the main thread.");
            } else if (read_) {
              try {
                obj.contents = intArrayFromString(read_(obj.url), true);
                obj.usedBytes = obj.contents.length;
              } catch (e) {
                throw new FS.ErrnoError(29);
              }
            } else {
              throw new Error("Cannot load without read() or XMLHttpRequest.");
            }
          },
          createLazyFile: function (parent, name, url, canRead, canWrite) {
            function LazyUint8Array() {
              this.lengthKnown = false;
              this.chunks = [];
            }

            LazyUint8Array.prototype.get = function LazyUint8Array_get(idx) {
              if (idx > this.length - 1 || idx < 0) {
                return undefined;
              }

              var chunkOffset = idx % this.chunkSize;
              var chunkNum = idx / this.chunkSize | 0;
              return this.getter(chunkNum)[chunkOffset];
            };

            LazyUint8Array.prototype.setDataGetter = function LazyUint8Array_setDataGetter(getter) {
              this.getter = getter;
            };

            LazyUint8Array.prototype.cacheLength = function LazyUint8Array_cacheLength() {
              var xhr = new XMLHttpRequest();
              xhr.open("HEAD", url, false);
              xhr.send(null);
              if (!(xhr.status >= 200 && xhr.status < 300 || xhr.status === 304)) throw new Error("Couldn't load " + url + ". Status: " + xhr.status);
              var datalength = Number(xhr.getResponseHeader("Content-length"));
              var header;
              var hasByteServing = (header = xhr.getResponseHeader("Accept-Ranges")) && header === "bytes";
              var usesGzip = (header = xhr.getResponseHeader("Content-Encoding")) && header === "gzip";
              var chunkSize = 1024 * 1024;
              if (!hasByteServing) chunkSize = datalength;

              var doXHR = function (from, to) {
                if (from > to) throw new Error("invalid range (" + from + ", " + to + ") or no bytes requested!");
                if (to > datalength - 1) throw new Error("only " + datalength + " bytes available! programmer error!");
                var xhr = new XMLHttpRequest();
                xhr.open("GET", url, false);
                if (datalength !== chunkSize) xhr.setRequestHeader("Range", "bytes=" + from + "-" + to);
                if (typeof Uint8Array != "undefined") xhr.responseType = "arraybuffer";

                if (xhr.overrideMimeType) {
                  xhr.overrideMimeType("text/plain; charset=x-user-defined");
                }

                xhr.send(null);
                if (!(xhr.status >= 200 && xhr.status < 300 || xhr.status === 304)) throw new Error("Couldn't load " + url + ". Status: " + xhr.status);

                if (xhr.response !== undefined) {
                  return new Uint8Array(xhr.response || []);
                } else {
                  return intArrayFromString(xhr.responseText || "", true);
                }
              };

              var lazyArray = this;
              lazyArray.setDataGetter(function (chunkNum) {
                var start = chunkNum * chunkSize;
                var end = (chunkNum + 1) * chunkSize - 1;
                end = Math.min(end, datalength - 1);

                if (typeof lazyArray.chunks[chunkNum] === "undefined") {
                  lazyArray.chunks[chunkNum] = doXHR(start, end);
                }

                if (typeof lazyArray.chunks[chunkNum] === "undefined") throw new Error("doXHR failed!");
                return lazyArray.chunks[chunkNum];
              });

              if (usesGzip || !datalength) {
                chunkSize = datalength = 1;
                datalength = this.getter(0).length;
                chunkSize = datalength;
                out("LazyFiles on gzip forces download of the whole file when length is accessed");
              }

              this._length = datalength;
              this._chunkSize = chunkSize;
              this.lengthKnown = true;
            };

            if (typeof XMLHttpRequest !== "undefined") {
              throw "Cannot do synchronous binary XHRs outside webworkers in modern browsers. Use --embed-file or --preload-file in emcc";
              var lazyArray = new LazyUint8Array();
              var properties = {
                isDevice: false,
                contents: lazyArray
              };
            } else {
              var properties = {
                isDevice: false,
                url: url
              };
            }

            var node = FS.createFile(parent, name, properties, canRead, canWrite);

            if (properties.contents) {
              node.contents = properties.contents;
            } else if (properties.url) {
              node.contents = null;
              node.url = properties.url;
            }

            Object.defineProperties(node, {
              usedBytes: {
                get: function () {
                  return this.contents.length;
                }
              }
            });
            var stream_ops = {};
            var keys = Object.keys(node.stream_ops);
            keys.forEach(function (key) {
              var fn = node.stream_ops[key];

              stream_ops[key] = function forceLoadLazyFile() {
                FS.forceLoadFile(node);
                return fn.apply(null, arguments);
              };
            });

            stream_ops.read = function stream_ops_read(stream, buffer, offset, length, position) {
              FS.forceLoadFile(node);
              var contents = stream.node.contents;
              if (position >= contents.length) return 0;
              var size = Math.min(contents.length - position, length);

              if (contents.slice) {
                for (var i = 0; i < size; i++) {
                  buffer[offset + i] = contents[position + i];
                }
              } else {
                for (var i = 0; i < size; i++) {
                  buffer[offset + i] = contents.get(position + i);
                }
              }

              return size;
            };

            node.stream_ops = stream_ops;
            return node;
          },
          createPreloadedFile: function (parent, name, url, canRead, canWrite, onload, onerror, dontCreateFile, canOwn, preFinish) {
            Browser.init();
            var fullname = name ? PATH_FS.resolve(PATH.join2(parent, name)) : parent;

            function processData(byteArray) {
              function finish(byteArray) {
                if (preFinish) preFinish();

                if (!dontCreateFile) {
                  FS.createDataFile(parent, name, byteArray, canRead, canWrite, canOwn);
                }

                if (onload) onload();
                removeRunDependency();
              }

              var handled = false;
              Module["preloadPlugins"].forEach(function (plugin) {
                if (handled) return;

                if (plugin["canHandle"](fullname)) {
                  plugin["handle"](byteArray, fullname, finish, function () {
                    if (onerror) onerror();
                    removeRunDependency();
                  });
                  handled = true;
                }
              });
              if (!handled) finish(byteArray);
            }

            addRunDependency();

            if (typeof url == "string") {
              Browser.asyncLoad(url, function (byteArray) {
                processData(byteArray);
              }, onerror);
            } else {
              processData(url);
            }
          },
          indexedDB: function () {
            return window.indexedDB || window.mozIndexedDB || window.webkitIndexedDB || window.msIndexedDB;
          },
          DB_NAME: function () {
            return "EM_FS_" + window.location.pathname;
          },
          DB_VERSION: 20,
          DB_STORE_NAME: "FILE_DATA",
          saveFilesToDB: function (paths, onload, onerror) {
            onload = onload || function () {};

            onerror = onerror || function () {};

            var indexedDB = FS.indexedDB();

            try {
              var openRequest = indexedDB.open(FS.DB_NAME(), FS.DB_VERSION);
            } catch (e) {
              return onerror(e);
            }

            openRequest.onupgradeneeded = function openRequest_onupgradeneeded() {
              out("creating db");
              var db = openRequest.result;
              db.createObjectStore(FS.DB_STORE_NAME);
            };

            openRequest.onsuccess = function openRequest_onsuccess() {
              var db = openRequest.result;
              var transaction = db.transaction([FS.DB_STORE_NAME], "readwrite");
              var files = transaction.objectStore(FS.DB_STORE_NAME);
              var ok = 0,
                  fail = 0,
                  total = paths.length;

              function finish() {
                if (fail == 0) onload();else onerror();
              }

              paths.forEach(function (path) {
                var putRequest = files.put(FS.analyzePath(path).object.contents, path);

                putRequest.onsuccess = function putRequest_onsuccess() {
                  ok++;
                  if (ok + fail == total) finish();
                };

                putRequest.onerror = function putRequest_onerror() {
                  fail++;
                  if (ok + fail == total) finish();
                };
              });
              transaction.onerror = onerror;
            };

            openRequest.onerror = onerror;
          },
          loadFilesFromDB: function (paths, onload, onerror) {
            onload = onload || function () {};

            onerror = onerror || function () {};

            var indexedDB = FS.indexedDB();

            try {
              var openRequest = indexedDB.open(FS.DB_NAME(), FS.DB_VERSION);
            } catch (e) {
              return onerror(e);
            }

            openRequest.onupgradeneeded = onerror;

            openRequest.onsuccess = function openRequest_onsuccess() {
              var db = openRequest.result;

              try {
                var transaction = db.transaction([FS.DB_STORE_NAME], "readonly");
              } catch (e) {
                onerror(e);
                return;
              }

              var files = transaction.objectStore(FS.DB_STORE_NAME);
              var ok = 0,
                  fail = 0,
                  total = paths.length;

              function finish() {
                if (fail == 0) onload();else onerror();
              }

              paths.forEach(function (path) {
                var getRequest = files.get(path);

                getRequest.onsuccess = function getRequest_onsuccess() {
                  if (FS.analyzePath(path).exists) {
                    FS.unlink(path);
                  }

                  FS.createDataFile(PATH.dirname(path), PATH.basename(path), getRequest.result, true, true, true);
                  ok++;
                  if (ok + fail == total) finish();
                };

                getRequest.onerror = function getRequest_onerror() {
                  fail++;
                  if (ok + fail == total) finish();
                };
              });
              transaction.onerror = onerror;
            };

            openRequest.onerror = onerror;
          }
        };
        var SYSCALLS = {
          mappings: {},
          DEFAULT_POLLMASK: 5,
          umask: 511,
          calculateAt: function (dirfd, path) {
            if (path[0] !== "/") {
              var dir;

              if (dirfd === -100) {
                dir = FS.cwd();
              } else {
                var dirstream = FS.getStream(dirfd);
                if (!dirstream) throw new FS.ErrnoError(8);
                dir = dirstream.path;
              }

              path = PATH.join2(dir, path);
            }

            return path;
          },
          doStat: function (func, path, buf) {
            try {
              var stat = func(path);
            } catch (e) {
              if (e && e.node && PATH.normalize(path) !== PATH.normalize(FS.getPath(e.node))) {
                return -54;
              }

              throw e;
            }

            HEAP32[buf >> 2] = stat.dev;
            HEAP32[buf + 4 >> 2] = 0;
            HEAP32[buf + 8 >> 2] = stat.ino;
            HEAP32[buf + 12 >> 2] = stat.mode;
            HEAP32[buf + 16 >> 2] = stat.nlink;
            HEAP32[buf + 20 >> 2] = stat.uid;
            HEAP32[buf + 24 >> 2] = stat.gid;
            HEAP32[buf + 28 >> 2] = stat.rdev;
            HEAP32[buf + 32 >> 2] = 0;
            tempI64 = [stat.size >>> 0, (tempDouble = stat.size, +Math.abs(tempDouble) >= 1 ? tempDouble > 0 ? (Math.min(+Math.floor(tempDouble / 4294967296), 4294967295) | 0) >>> 0 : ~~+Math.ceil((tempDouble - +(~~tempDouble >>> 0)) / 4294967296) >>> 0 : 0)], HEAP32[buf + 40 >> 2] = tempI64[0], HEAP32[buf + 44 >> 2] = tempI64[1];
            HEAP32[buf + 48 >> 2] = 4096;
            HEAP32[buf + 52 >> 2] = stat.blocks;
            HEAP32[buf + 56 >> 2] = stat.atime.getTime() / 1e3 | 0;
            HEAP32[buf + 60 >> 2] = 0;
            HEAP32[buf + 64 >> 2] = stat.mtime.getTime() / 1e3 | 0;
            HEAP32[buf + 68 >> 2] = 0;
            HEAP32[buf + 72 >> 2] = stat.ctime.getTime() / 1e3 | 0;
            HEAP32[buf + 76 >> 2] = 0;
            tempI64 = [stat.ino >>> 0, (tempDouble = stat.ino, +Math.abs(tempDouble) >= 1 ? tempDouble > 0 ? (Math.min(+Math.floor(tempDouble / 4294967296), 4294967295) | 0) >>> 0 : ~~+Math.ceil((tempDouble - +(~~tempDouble >>> 0)) / 4294967296) >>> 0 : 0)], HEAP32[buf + 80 >> 2] = tempI64[0], HEAP32[buf + 84 >> 2] = tempI64[1];
            return 0;
          },
          doMsync: function (addr, stream, len, flags, offset) {
            var buffer = HEAPU8.slice(addr, addr + len);
            FS.msync(stream, buffer, offset, len, flags);
          },
          doMkdir: function (path, mode) {
            path = PATH.normalize(path);
            if (path[path.length - 1] === "/") path = path.substr(0, path.length - 1);
            FS.mkdir(path, mode, 0);
            return 0;
          },
          doMknod: function (path, mode, dev) {
            switch (mode & 61440) {
              case 32768:
              case 8192:
              case 24576:
              case 4096:
              case 49152:
                break;

              default:
                return -28;
            }

            FS.mknod(path, mode, dev);
            return 0;
          },
          doReadlink: function (path, buf, bufsize) {
            if (bufsize <= 0) return -28;
            var ret = FS.readlink(path);
            var len = Math.min(bufsize, lengthBytesUTF8(ret));
            var endChar = HEAP8[buf + len];
            stringToUTF8(ret, buf, bufsize + 1);
            HEAP8[buf + len] = endChar;
            return len;
          },
          doAccess: function (path, amode) {
            if (amode & ~7) {
              return -28;
            }

            var node;
            var lookup = FS.lookupPath(path, {
              follow: true
            });
            node = lookup.node;

            if (!node) {
              return -44;
            }

            var perms = "";
            if (amode & 4) perms += "r";
            if (amode & 2) perms += "w";
            if (amode & 1) perms += "x";

            if (perms && FS.nodePermissions(node, perms)) {
              return -2;
            }

            return 0;
          },
          doDup: function (path, flags, suggestFD) {
            var suggest = FS.getStream(suggestFD);
            if (suggest) FS.close(suggest);
            return FS.open(path, flags, 0, suggestFD, suggestFD).fd;
          },
          doReadv: function (stream, iov, iovcnt, offset) {
            var ret = 0;

            for (var i = 0; i < iovcnt; i++) {
              var ptr = HEAP32[iov + i * 8 >> 2];
              var len = HEAP32[iov + (i * 8 + 4) >> 2];
              var curr = FS.read(stream, HEAP8, ptr, len, offset);
              if (curr < 0) return -1;
              ret += curr;
              if (curr < len) break;
            }

            return ret;
          },
          doWritev: function (stream, iov, iovcnt, offset) {
            var ret = 0;

            for (var i = 0; i < iovcnt; i++) {
              var ptr = HEAP32[iov + i * 8 >> 2];
              var len = HEAP32[iov + (i * 8 + 4) >> 2];
              var curr = FS.write(stream, HEAP8, ptr, len, offset);
              if (curr < 0) return -1;
              ret += curr;
            }

            return ret;
          },
          varargs: undefined,
          get: function () {
            SYSCALLS.varargs += 4;
            var ret = HEAP32[SYSCALLS.varargs - 4 >> 2];
            return ret;
          },
          getStr: function (ptr) {
            var ret = UTF8ToString(ptr);
            return ret;
          },
          getStreamFromFD: function (fd) {
            var stream = FS.getStream(fd);
            if (!stream) throw new FS.ErrnoError(8);
            return stream;
          },
          get64: function (low, high) {
            return low;
          }
        };

        function ___sys_access(path, amode) {
          try {
            path = SYSCALLS.getStr(path);
            return SYSCALLS.doAccess(path, amode);
          } catch (e) {
            if (typeof FS === "undefined" || !(e instanceof FS.ErrnoError)) abort(e);
            return -e.errno;
          }
        }

        function ___sys_fcntl64(fd, cmd, varargs) {
          SYSCALLS.varargs = varargs;

          try {
            var stream = SYSCALLS.getStreamFromFD(fd);

            switch (cmd) {
              case 0:
                {
                  var arg = SYSCALLS.get();

                  if (arg < 0) {
                    return -28;
                  }

                  var newStream;
                  newStream = FS.open(stream.path, stream.flags, 0, arg);
                  return newStream.fd;
                }

              case 1:
              case 2:
                return 0;

              case 3:
                return stream.flags;

              case 4:
                {
                  var arg = SYSCALLS.get();
                  stream.flags |= arg;
                  return 0;
                }

              case 12:
                {
                  var arg = SYSCALLS.get();
                  var offset = 0;
                  HEAP16[arg + offset >> 1] = 2;
                  return 0;
                }

              case 13:
              case 14:
                return 0;

              case 16:
              case 8:
                return -28;

              case 9:
                setErrNo(28);
                return -1;

              default:
                {
                  return -28;
                }
            }
          } catch (e) {
            if (typeof FS === "undefined" || !(e instanceof FS.ErrnoError)) abort(e);
            return -e.errno;
          }
        }

        function ___sys_fstat64(fd, buf) {
          try {
            var stream = SYSCALLS.getStreamFromFD(fd);
            return SYSCALLS.doStat(FS.stat, stream.path, buf);
          } catch (e) {
            if (typeof FS === "undefined" || !(e instanceof FS.ErrnoError)) abort(e);
            return -e.errno;
          }
        }

        function ___sys_getpid() {
          return 42;
        }

        function ___sys_ioctl(fd, op, varargs) {
          SYSCALLS.varargs = varargs;

          try {
            var stream = SYSCALLS.getStreamFromFD(fd);

            switch (op) {
              case 21509:
              case 21505:
                {
                  if (!stream.tty) return -59;
                  return 0;
                }

              case 21510:
              case 21511:
              case 21512:
              case 21506:
              case 21507:
              case 21508:
                {
                  if (!stream.tty) return -59;
                  return 0;
                }

              case 21519:
                {
                  if (!stream.tty) return -59;
                  var argp = SYSCALLS.get();
                  HEAP32[argp >> 2] = 0;
                  return 0;
                }

              case 21520:
                {
                  if (!stream.tty) return -59;
                  return -28;
                }

              case 21531:
                {
                  var argp = SYSCALLS.get();
                  return FS.ioctl(stream, op, argp);
                }

              case 21523:
                {
                  if (!stream.tty) return -59;
                  return 0;
                }

              case 21524:
                {
                  if (!stream.tty) return -59;
                  return 0;
                }

              default:
                abort("bad ioctl syscall " + op);
            }
          } catch (e) {
            if (typeof FS === "undefined" || !(e instanceof FS.ErrnoError)) abort(e);
            return -e.errno;
          }
        }

        function syscallMmap2(addr, len, prot, flags, fd, off) {
          off <<= 12;
          var ptr;
          var allocated = false;

          if ((flags & 16) !== 0 && addr % 16384 !== 0) {
            return -28;
          }

          if ((flags & 32) !== 0) {
            ptr = _memalign(16384, len);
            if (!ptr) return -48;

            _memset(ptr, 0, len);

            allocated = true;
          } else {
            var info = FS.getStream(fd);
            if (!info) return -8;
            var res = FS.mmap(info, addr, len, off, prot, flags);
            ptr = res.ptr;
            allocated = res.allocated;
          }

          SYSCALLS.mappings[ptr] = {
            malloc: ptr,
            len: len,
            allocated: allocated,
            fd: fd,
            prot: prot,
            flags: flags,
            offset: off
          };
          return ptr;
        }

        function ___sys_mmap2(addr, len, prot, flags, fd, off) {
          try {
            return syscallMmap2(addr, len, prot, flags, fd, off);
          } catch (e) {
            if (typeof FS === "undefined" || !(e instanceof FS.ErrnoError)) abort(e);
            return -e.errno;
          }
        }

        function syscallMunmap(addr, len) {
          if ((addr | 0) === -1 || len === 0) {
            return -28;
          }

          var info = SYSCALLS.mappings[addr];
          if (!info) return 0;

          if (len === info.len) {
            var stream = FS.getStream(info.fd);

            if (info.prot & 2) {
              SYSCALLS.doMsync(addr, stream, len, info.flags, info.offset);
            }

            FS.munmap(stream);
            SYSCALLS.mappings[addr] = null;

            if (info.allocated) {
              _free(info.malloc);
            }
          }

          return 0;
        }

        function ___sys_munmap(addr, len) {
          try {
            return syscallMunmap(addr, len);
          } catch (e) {
            if (typeof FS === "undefined" || !(e instanceof FS.ErrnoError)) abort(e);
            return -e.errno;
          }
        }

        function ___sys_open(path, flags, varargs) {
          SYSCALLS.varargs = varargs;

          try {
            var pathname = SYSCALLS.getStr(path);
            var mode = varargs ? SYSCALLS.get() : 0;
            var stream = FS.open(pathname, flags, mode);
            return stream.fd;
          } catch (e) {
            if (typeof FS === "undefined" || !(e instanceof FS.ErrnoError)) abort(e);
            return -e.errno;
          }
        }

        function ___sys_stat64(path, buf) {
          try {
            path = SYSCALLS.getStr(path);
            return SYSCALLS.doStat(FS.stat, path, buf);
          } catch (e) {
            if (typeof FS === "undefined" || !(e instanceof FS.ErrnoError)) abort(e);
            return -e.errno;
          }
        }

        function ___sys_unlink(path) {
          try {
            path = SYSCALLS.getStr(path);
            FS.unlink(path);
            return 0;
          } catch (e) {
            if (typeof FS === "undefined" || !(e instanceof FS.ErrnoError)) abort(e);
            return -e.errno;
          }
        }

        function _abort() {
          abort();
        }

        function _emscripten_asm_const_int(code, sigPtr, argbuf) {
          var args = readAsmConstArgs(sigPtr, argbuf);
          return ASM_CONSTS[code].apply(null, args);
        }

        function _longjmp(env, value) {
          _setThrew(env, value || 1);

          throw "longjmp";
        }

        function _emscripten_longjmp(a0, a1) {
          return _longjmp(a0, a1);
        }

        function _emscripten_memcpy_big(dest, src, num) {
          HEAPU8.copyWithin(dest, src, src + num);
        }

        function _emscripten_get_heap_size() {
          return HEAPU8.length;
        }

        function emscripten_realloc_buffer(size) {
          try {
            wasmMemory.grow(size - buffer.byteLength + 65535 >>> 16);
            updateGlobalBufferAndViews(wasmMemory.buffer);
            return 1;
          } catch (e) {}
        }

        function _emscripten_resize_heap(requestedSize) {
          requestedSize = requestedSize >>> 0;

          var oldSize = _emscripten_get_heap_size();

          var maxHeapSize = 2147483648;

          if (requestedSize > maxHeapSize) {
            return false;
          }

          var minHeapSize = 16777216;

          for (var cutDown = 1; cutDown <= 4; cutDown *= 2) {
            var overGrownHeapSize = oldSize * (1 + .2 / cutDown);
            overGrownHeapSize = Math.min(overGrownHeapSize, requestedSize + 100663296);
            var newSize = Math.min(maxHeapSize, alignUp(Math.max(minHeapSize, requestedSize, overGrownHeapSize), 65536));
            var replacement = emscripten_realloc_buffer(newSize);

            if (replacement) {
              return true;
            }
          }

          return false;
        }

        var ENV = {};

        function getExecutableName() {
          return thisProgram || "./this.program";
        }

        function getEnvStrings() {
          if (!getEnvStrings.strings) {
            var lang = (typeof navigator === "object" && navigator.languages && navigator.languages[0] || "C").replace("-", "_") + ".UTF-8";
            var env = {
              "USER": "web_user",
              "LOGNAME": "web_user",
              "PATH": "/",
              "PWD": "/",
              "HOME": "/home/web_user",
              "LANG": lang,
              "_": getExecutableName()
            };

            for (var x in ENV) {
              env[x] = ENV[x];
            }

            var strings = [];

            for (var x in env) {
              strings.push(x + "=" + env[x]);
            }

            getEnvStrings.strings = strings;
          }

          return getEnvStrings.strings;
        }

        function _environ_get(__environ, environ_buf) {
          try {
            var bufSize = 0;
            getEnvStrings().forEach(function (string, i) {
              var ptr = environ_buf + bufSize;
              HEAP32[__environ + i * 4 >> 2] = ptr;
              writeAsciiToMemory(string, ptr);
              bufSize += string.length + 1;
            });
            return 0;
          } catch (e) {
            if (typeof FS === "undefined" || !(e instanceof FS.ErrnoError)) abort(e);
            return e.errno;
          }
        }

        function _environ_sizes_get(penviron_count, penviron_buf_size) {
          try {
            var strings = getEnvStrings();
            HEAP32[penviron_count >> 2] = strings.length;
            var bufSize = 0;
            strings.forEach(function (string) {
              bufSize += string.length + 1;
            });
            HEAP32[penviron_buf_size >> 2] = bufSize;
            return 0;
          } catch (e) {
            if (typeof FS === "undefined" || !(e instanceof FS.ErrnoError)) abort(e);
            return e.errno;
          }
        }

        function _exit(status) {
          exit(status);
        }

        function _fd_close(fd) {
          try {
            var stream = SYSCALLS.getStreamFromFD(fd);
            FS.close(stream);
            return 0;
          } catch (e) {
            if (typeof FS === "undefined" || !(e instanceof FS.ErrnoError)) abort(e);
            return e.errno;
          }
        }

        function _fd_fdstat_get(fd, pbuf) {
          try {
            var stream = SYSCALLS.getStreamFromFD(fd);
            var type = stream.tty ? 2 : FS.isDir(stream.mode) ? 3 : FS.isLink(stream.mode) ? 7 : 4;
            HEAP8[pbuf >> 0] = type;
            return 0;
          } catch (e) {
            if (typeof FS === "undefined" || !(e instanceof FS.ErrnoError)) abort(e);
            return e.errno;
          }
        }

        function _fd_read(fd, iov, iovcnt, pnum) {
          try {
            var stream = SYSCALLS.getStreamFromFD(fd);
            var num = SYSCALLS.doReadv(stream, iov, iovcnt);
            HEAP32[pnum >> 2] = num;
            return 0;
          } catch (e) {
            if (typeof FS === "undefined" || !(e instanceof FS.ErrnoError)) abort(e);
            return e.errno;
          }
        }

        function _fd_seek(fd, offset_low, offset_high, whence, newOffset) {
          try {
            var stream = SYSCALLS.getStreamFromFD(fd);
            var HIGH_OFFSET = 4294967296;
            var offset = offset_high * HIGH_OFFSET + (offset_low >>> 0);
            var DOUBLE_LIMIT = 9007199254740992;

            if (offset <= -DOUBLE_LIMIT || offset >= DOUBLE_LIMIT) {
              return -61;
            }

            FS.llseek(stream, offset, whence);
            tempI64 = [stream.position >>> 0, (tempDouble = stream.position, +Math.abs(tempDouble) >= 1 ? tempDouble > 0 ? (Math.min(+Math.floor(tempDouble / 4294967296), 4294967295) | 0) >>> 0 : ~~+Math.ceil((tempDouble - +(~~tempDouble >>> 0)) / 4294967296) >>> 0 : 0)], HEAP32[newOffset >> 2] = tempI64[0], HEAP32[newOffset + 4 >> 2] = tempI64[1];
            if (stream.getdents && offset === 0 && whence === 0) stream.getdents = null;
            return 0;
          } catch (e) {
            if (typeof FS === "undefined" || !(e instanceof FS.ErrnoError)) abort(e);
            return e.errno;
          }
        }

        function _fd_write(fd, iov, iovcnt, pnum) {
          try {
            var stream = SYSCALLS.getStreamFromFD(fd);
            var num = SYSCALLS.doWritev(stream, iov, iovcnt);
            HEAP32[pnum >> 2] = num;
            return 0;
          } catch (e) {
            if (typeof FS === "undefined" || !(e instanceof FS.ErrnoError)) abort(e);
            return e.errno;
          }
        }

        function _getTempRet0() {
          return getTempRet0() | 0;
        }

        function _gettimeofday(ptr) {
          var now = Date.now();
          HEAP32[ptr >> 2] = now / 1e3 | 0;
          HEAP32[ptr + 4 >> 2] = now % 1e3 * 1e3 | 0;
          return 0;
        }

        function _setTempRet0($i) {
          setTempRet0($i | 0);
        }

        function __isLeapYear(year) {
          return year % 4 === 0 && (year % 100 !== 0 || year % 400 === 0);
        }

        function __arraySum(array, index) {
          var sum = 0;

          for (var i = 0; i <= index; sum += array[i++]) {}

          return sum;
        }

        var __MONTH_DAYS_LEAP = [31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];
        var __MONTH_DAYS_REGULAR = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];

        function __addDays(date, days) {
          var newDate = new Date(date.getTime());

          while (days > 0) {
            var leap = __isLeapYear(newDate.getFullYear());

            var currentMonth = newDate.getMonth();
            var daysInCurrentMonth = (leap ? __MONTH_DAYS_LEAP : __MONTH_DAYS_REGULAR)[currentMonth];

            if (days > daysInCurrentMonth - newDate.getDate()) {
              days -= daysInCurrentMonth - newDate.getDate() + 1;
              newDate.setDate(1);

              if (currentMonth < 11) {
                newDate.setMonth(currentMonth + 1);
              } else {
                newDate.setMonth(0);
                newDate.setFullYear(newDate.getFullYear() + 1);
              }
            } else {
              newDate.setDate(newDate.getDate() + days);
              return newDate;
            }
          }

          return newDate;
        }

        function _strftime(s, maxsize, format, tm) {
          var tm_zone = HEAP32[tm + 40 >> 2];
          var date = {
            tm_sec: HEAP32[tm >> 2],
            tm_min: HEAP32[tm + 4 >> 2],
            tm_hour: HEAP32[tm + 8 >> 2],
            tm_mday: HEAP32[tm + 12 >> 2],
            tm_mon: HEAP32[tm + 16 >> 2],
            tm_year: HEAP32[tm + 20 >> 2],
            tm_wday: HEAP32[tm + 24 >> 2],
            tm_yday: HEAP32[tm + 28 >> 2],
            tm_isdst: HEAP32[tm + 32 >> 2],
            tm_gmtoff: HEAP32[tm + 36 >> 2],
            tm_zone: tm_zone ? UTF8ToString(tm_zone) : ""
          };
          var pattern = UTF8ToString(format);
          var EXPANSION_RULES_1 = {
            "%c": "%a %b %d %H:%M:%S %Y",
            "%D": "%m/%d/%y",
            "%F": "%Y-%m-%d",
            "%h": "%b",
            "%r": "%I:%M:%S %p",
            "%R": "%H:%M",
            "%T": "%H:%M:%S",
            "%x": "%m/%d/%y",
            "%X": "%H:%M:%S",
            "%Ec": "%c",
            "%EC": "%C",
            "%Ex": "%m/%d/%y",
            "%EX": "%H:%M:%S",
            "%Ey": "%y",
            "%EY": "%Y",
            "%Od": "%d",
            "%Oe": "%e",
            "%OH": "%H",
            "%OI": "%I",
            "%Om": "%m",
            "%OM": "%M",
            "%OS": "%S",
            "%Ou": "%u",
            "%OU": "%U",
            "%OV": "%V",
            "%Ow": "%w",
            "%OW": "%W",
            "%Oy": "%y"
          };

          for (var rule in EXPANSION_RULES_1) {
            pattern = pattern.replace(new RegExp(rule, "g"), EXPANSION_RULES_1[rule]);
          }

          var WEEKDAYS = ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"];
          var MONTHS = ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"];

          function leadingSomething(value, digits, character) {
            var str = typeof value === "number" ? value.toString() : value || "";

            while (str.length < digits) {
              str = character[0] + str;
            }

            return str;
          }

          function leadingNulls(value, digits) {
            return leadingSomething(value, digits, "0");
          }

          function compareByDay(date1, date2) {
            function sgn(value) {
              return value < 0 ? -1 : value > 0 ? 1 : 0;
            }

            var compare;

            if ((compare = sgn(date1.getFullYear() - date2.getFullYear())) === 0) {
              if ((compare = sgn(date1.getMonth() - date2.getMonth())) === 0) {
                compare = sgn(date1.getDate() - date2.getDate());
              }
            }

            return compare;
          }

          function getFirstWeekStartDate(janFourth) {
            switch (janFourth.getDay()) {
              case 0:
                return new Date(janFourth.getFullYear() - 1, 11, 29);

              case 1:
                return janFourth;

              case 2:
                return new Date(janFourth.getFullYear(), 0, 3);

              case 3:
                return new Date(janFourth.getFullYear(), 0, 2);

              case 4:
                return new Date(janFourth.getFullYear(), 0, 1);

              case 5:
                return new Date(janFourth.getFullYear() - 1, 11, 31);

              case 6:
                return new Date(janFourth.getFullYear() - 1, 11, 30);
            }
          }

          function getWeekBasedYear(date) {
            var thisDate = __addDays(new Date(date.tm_year + 1900, 0, 1), date.tm_yday);

            var janFourthThisYear = new Date(thisDate.getFullYear(), 0, 4);
            var janFourthNextYear = new Date(thisDate.getFullYear() + 1, 0, 4);
            var firstWeekStartThisYear = getFirstWeekStartDate(janFourthThisYear);
            var firstWeekStartNextYear = getFirstWeekStartDate(janFourthNextYear);

            if (compareByDay(firstWeekStartThisYear, thisDate) <= 0) {
              if (compareByDay(firstWeekStartNextYear, thisDate) <= 0) {
                return thisDate.getFullYear() + 1;
              } else {
                return thisDate.getFullYear();
              }
            } else {
              return thisDate.getFullYear() - 1;
            }
          }

          var EXPANSION_RULES_2 = {
            "%a": function (date) {
              return WEEKDAYS[date.tm_wday].substring(0, 3);
            },
            "%A": function (date) {
              return WEEKDAYS[date.tm_wday];
            },
            "%b": function (date) {
              return MONTHS[date.tm_mon].substring(0, 3);
            },
            "%B": function (date) {
              return MONTHS[date.tm_mon];
            },
            "%C": function (date) {
              var year = date.tm_year + 1900;
              return leadingNulls(year / 100 | 0, 2);
            },
            "%d": function (date) {
              return leadingNulls(date.tm_mday, 2);
            },
            "%e": function (date) {
              return leadingSomething(date.tm_mday, 2, " ");
            },
            "%g": function (date) {
              return getWeekBasedYear(date).toString().substring(2);
            },
            "%G": function (date) {
              return getWeekBasedYear(date);
            },
            "%H": function (date) {
              return leadingNulls(date.tm_hour, 2);
            },
            "%I": function (date) {
              var twelveHour = date.tm_hour;
              if (twelveHour == 0) twelveHour = 12;else if (twelveHour > 12) twelveHour -= 12;
              return leadingNulls(twelveHour, 2);
            },
            "%j": function (date) {
              return leadingNulls(date.tm_mday + __arraySum(__isLeapYear(date.tm_year + 1900) ? __MONTH_DAYS_LEAP : __MONTH_DAYS_REGULAR, date.tm_mon - 1), 3);
            },
            "%m": function (date) {
              return leadingNulls(date.tm_mon + 1, 2);
            },
            "%M": function (date) {
              return leadingNulls(date.tm_min, 2);
            },
            "%n": function () {
              return "\n";
            },
            "%p": function (date) {
              if (date.tm_hour >= 0 && date.tm_hour < 12) {
                return "AM";
              } else {
                return "PM";
              }
            },
            "%S": function (date) {
              return leadingNulls(date.tm_sec, 2);
            },
            "%t": function () {
              return "\t";
            },
            "%u": function (date) {
              return date.tm_wday || 7;
            },
            "%U": function (date) {
              var janFirst = new Date(date.tm_year + 1900, 0, 1);
              var firstSunday = janFirst.getDay() === 0 ? janFirst : __addDays(janFirst, 7 - janFirst.getDay());
              var endDate = new Date(date.tm_year + 1900, date.tm_mon, date.tm_mday);

              if (compareByDay(firstSunday, endDate) < 0) {
                var februaryFirstUntilEndMonth = __arraySum(__isLeapYear(endDate.getFullYear()) ? __MONTH_DAYS_LEAP : __MONTH_DAYS_REGULAR, endDate.getMonth() - 1) - 31;
                var firstSundayUntilEndJanuary = 31 - firstSunday.getDate();
                var days = firstSundayUntilEndJanuary + februaryFirstUntilEndMonth + endDate.getDate();
                return leadingNulls(Math.ceil(days / 7), 2);
              }

              return compareByDay(firstSunday, janFirst) === 0 ? "01" : "00";
            },
            "%V": function (date) {
              var janFourthThisYear = new Date(date.tm_year + 1900, 0, 4);
              var janFourthNextYear = new Date(date.tm_year + 1901, 0, 4);
              var firstWeekStartThisYear = getFirstWeekStartDate(janFourthThisYear);
              var firstWeekStartNextYear = getFirstWeekStartDate(janFourthNextYear);

              var endDate = __addDays(new Date(date.tm_year + 1900, 0, 1), date.tm_yday);

              if (compareByDay(endDate, firstWeekStartThisYear) < 0) {
                return "53";
              }

              if (compareByDay(firstWeekStartNextYear, endDate) <= 0) {
                return "01";
              }

              var daysDifference;

              if (firstWeekStartThisYear.getFullYear() < date.tm_year + 1900) {
                daysDifference = date.tm_yday + 32 - firstWeekStartThisYear.getDate();
              } else {
                daysDifference = date.tm_yday + 1 - firstWeekStartThisYear.getDate();
              }

              return leadingNulls(Math.ceil(daysDifference / 7), 2);
            },
            "%w": function (date) {
              return date.tm_wday;
            },
            "%W": function (date) {
              var janFirst = new Date(date.tm_year, 0, 1);
              var firstMonday = janFirst.getDay() === 1 ? janFirst : __addDays(janFirst, janFirst.getDay() === 0 ? 1 : 7 - janFirst.getDay() + 1);
              var endDate = new Date(date.tm_year + 1900, date.tm_mon, date.tm_mday);

              if (compareByDay(firstMonday, endDate) < 0) {
                var februaryFirstUntilEndMonth = __arraySum(__isLeapYear(endDate.getFullYear()) ? __MONTH_DAYS_LEAP : __MONTH_DAYS_REGULAR, endDate.getMonth() - 1) - 31;
                var firstMondayUntilEndJanuary = 31 - firstMonday.getDate();
                var days = firstMondayUntilEndJanuary + februaryFirstUntilEndMonth + endDate.getDate();
                return leadingNulls(Math.ceil(days / 7), 2);
              }

              return compareByDay(firstMonday, janFirst) === 0 ? "01" : "00";
            },
            "%y": function (date) {
              return (date.tm_year + 1900).toString().substring(2);
            },
            "%Y": function (date) {
              return date.tm_year + 1900;
            },
            "%z": function (date) {
              var off = date.tm_gmtoff;
              var ahead = off >= 0;
              off = Math.abs(off) / 60;
              off = off / 60 * 100 + off % 60;
              return (ahead ? "+" : "-") + String("0000" + off).slice(-4);
            },
            "%Z": function (date) {
              return date.tm_zone;
            },
            "%%": function () {
              return "%";
            }
          };

          for (var rule in EXPANSION_RULES_2) {
            if (pattern.indexOf(rule) >= 0) {
              pattern = pattern.replace(new RegExp(rule, "g"), EXPANSION_RULES_2[rule](date));
            }
          }

          var bytes = intArrayFromString(pattern, false);

          if (bytes.length > maxsize) {
            return 0;
          }

          writeArrayToMemory(bytes, s);
          return bytes.length - 1;
        }

        function _strftime_l(s, maxsize, format, tm) {
          return _strftime(s, maxsize, format, tm);
        }

        function _time(ptr) {
          var ret = Date.now() / 1e3 | 0;

          if (ptr) {
            HEAP32[ptr >> 2] = ret;
          }

          return ret;
        }

        function _times(buffer) {
          if (buffer !== 0) {
            _memset(buffer, 0, 16);
          }

          return 0;
        }

        var readAsmConstArgsArray = [];

        function readAsmConstArgs(sigPtr, buf) {
          readAsmConstArgsArray.length = 0;
          var ch;
          buf >>= 2;

          while (ch = HEAPU8[sigPtr++]) {
            var double = ch < 105;
            if (double && buf & 1) buf++;
            readAsmConstArgsArray.push(double ? HEAPF64[buf++ >> 1] : HEAP32[buf]);
            ++buf;
          }

          return readAsmConstArgsArray;
        }

        var FSNode = function (parent, name, mode, rdev) {
          if (!parent) {
            parent = this;
          }

          this.parent = parent;
          this.mount = parent.mount;
          this.mounted = null;
          this.id = FS.nextInode++;
          this.name = name;
          this.mode = mode;
          this.node_ops = {};
          this.stream_ops = {};
          this.rdev = rdev;
        };

        var readMode = 292 | 73;
        var writeMode = 146;
        Object.defineProperties(FSNode.prototype, {
          read: {
            get: function () {
              return (this.mode & readMode) === readMode;
            },
            set: function (val) {
              val ? this.mode |= readMode : this.mode &= ~readMode;
            }
          },
          write: {
            get: function () {
              return (this.mode & writeMode) === writeMode;
            },
            set: function (val) {
              val ? this.mode |= writeMode : this.mode &= ~writeMode;
            }
          },
          isFolder: {
            get: function () {
              return FS.isDir(this.mode);
            }
          },
          isDevice: {
            get: function () {
              return FS.isChrdev(this.mode);
            }
          }
        });
        FS.FSNode = FSNode;
        FS.staticInit();

        function intArrayFromString(stringy, dontAddNull, length) {
          var len = length > 0 ? length : lengthBytesUTF8(stringy) + 1;
          var u8array = new Array(len);
          var numBytesWritten = stringToUTF8Array(stringy, u8array, 0, u8array.length);
          if (dontAddNull) u8array.length = numBytesWritten;
          return u8array;
        }

        __ATINIT__.push({
          func: function () {
            ___wasm_call_ctors();
          }
        });

        var asmLibraryArg = {
          "F": ___clock_gettime,
          "h": ___cxa_allocate_exception,
          "g": ___cxa_throw,
          "K": ___sys_access,
          "s": ___sys_fcntl64,
          "M": ___sys_fstat64,
          "l": ___sys_getpid,
          "H": ___sys_ioctl,
          "I": ___sys_mmap2,
          "J": ___sys_munmap,
          "t": ___sys_open,
          "L": ___sys_stat64,
          "E": ___sys_unlink,
          "q": _abort,
          "Q": _emscripten_asm_const_int,
          "c": _emscripten_longjmp,
          "y": _emscripten_memcpy_big,
          "z": _emscripten_resize_heap,
          "C": _environ_get,
          "D": _environ_sizes_get,
          "e": _exit,
          "k": _fd_close,
          "B": _fd_fdstat_get,
          "G": _fd_read,
          "x": _fd_seek,
          "r": _fd_write,
          "a": _getTempRet0,
          "P": _gettimeofday,
          "N": invoke_di,
          "w": invoke_i,
          "j": invoke_ii,
          "d": invoke_iii,
          "i": invoke_iiii,
          "O": invoke_iiiiiii,
          "f": invoke_vi,
          "p": invoke_vii,
          "o": invoke_viii,
          "n": invoke_viiii,
          "m": invoke_viiiii,
          "b": _setTempRet0,
          "A": _strftime_l,
          "v": _time,
          "u": _times
        };
        var asm = createWasm();

        var ___wasm_call_ctors = Module["___wasm_call_ctors"] = function () {
          return (___wasm_call_ctors = Module["___wasm_call_ctors"] = Module["asm"]["T"]).apply(null, arguments);
        };

        var ___em_js__array_bounds_check_error = Module["___em_js__array_bounds_check_error"] = function () {
          return (___em_js__array_bounds_check_error = Module["___em_js__array_bounds_check_error"] = Module["asm"]["U"]).apply(null, arguments);
        };

        var _emscripten_bind_VoidPtr___destroy___0 = Module["_emscripten_bind_VoidPtr___destroy___0"] = function () {
          return (_emscripten_bind_VoidPtr___destroy___0 = Module["_emscripten_bind_VoidPtr___destroy___0"] = Module["asm"]["V"]).apply(null, arguments);
        };

        var _emscripten_bind_Main_layout_3 = Module["_emscripten_bind_Main_layout_3"] = function () {
          return (_emscripten_bind_Main_layout_3 = Module["_emscripten_bind_Main_layout_3"] = Module["asm"]["W"]).apply(null, arguments);
        };

        var _emscripten_bind_Main_lastError_0 = Module["_emscripten_bind_Main_lastError_0"] = function () {
          return (_emscripten_bind_Main_lastError_0 = Module["_emscripten_bind_Main_lastError_0"] = Module["asm"]["X"]).apply(null, arguments);
        };

        var _emscripten_bind_Main_createFile_2 = Module["_emscripten_bind_Main_createFile_2"] = function () {
          return (_emscripten_bind_Main_createFile_2 = Module["_emscripten_bind_Main_createFile_2"] = Module["asm"]["Y"]).apply(null, arguments);
        };

        var _emscripten_bind_Main_setYInvert_1 = Module["_emscripten_bind_Main_setYInvert_1"] = function () {
          return (_emscripten_bind_Main_setYInvert_1 = Module["_emscripten_bind_Main_setYInvert_1"] = Module["asm"]["Z"]).apply(null, arguments);
        };

        var _emscripten_bind_Main_setNop_1 = Module["_emscripten_bind_Main_setNop_1"] = function () {
          return (_emscripten_bind_Main_setNop_1 = Module["_emscripten_bind_Main_setNop_1"] = Module["asm"]["_"]).apply(null, arguments);
        };

        var _emscripten_bind_Main___destroy___0 = Module["_emscripten_bind_Main___destroy___0"] = function () {
          return (_emscripten_bind_Main___destroy___0 = Module["_emscripten_bind_Main___destroy___0"] = Module["asm"]["$"]).apply(null, arguments);
        };

        var _malloc = Module["_malloc"] = function () {
          return (_malloc = Module["_malloc"] = Module["asm"]["aa"]).apply(null, arguments);
        };

        var _free = Module["_free"] = function () {
          return (_free = Module["_free"] = Module["asm"]["ba"]).apply(null, arguments);
        };

        var ___errno_location = Module["___errno_location"] = function () {
          return (___errno_location = Module["___errno_location"] = Module["asm"]["ca"]).apply(null, arguments);
        };

        var _memset = Module["_memset"] = function () {
          return (_memset = Module["_memset"] = Module["asm"]["da"]).apply(null, arguments);
        };

        var stackSave = Module["stackSave"] = function () {
          return (stackSave = Module["stackSave"] = Module["asm"]["ea"]).apply(null, arguments);
        };

        var stackRestore = Module["stackRestore"] = function () {
          return (stackRestore = Module["stackRestore"] = Module["asm"]["fa"]).apply(null, arguments);
        };

        var _setThrew = Module["_setThrew"] = function () {
          return (_setThrew = Module["_setThrew"] = Module["asm"]["ga"]).apply(null, arguments);
        };

        var _memalign = Module["_memalign"] = function () {
          return (_memalign = Module["_memalign"] = Module["asm"]["ha"]).apply(null, arguments);
        };

        function invoke_ii(index, a1) {
          var sp = stackSave();

          try {
            return wasmTable.get(index)(a1);
          } catch (e) {
            stackRestore(sp);
            if (e !== e + 0 && e !== "longjmp") throw e;

            _setThrew(1, 0);
          }
        }

        function invoke_iii(index, a1, a2) {
          var sp = stackSave();

          try {
            return wasmTable.get(index)(a1, a2);
          } catch (e) {
            stackRestore(sp);
            if (e !== e + 0 && e !== "longjmp") throw e;

            _setThrew(1, 0);
          }
        }

        function invoke_i(index) {
          var sp = stackSave();

          try {
            return wasmTable.get(index)();
          } catch (e) {
            stackRestore(sp);
            if (e !== e + 0 && e !== "longjmp") throw e;

            _setThrew(1, 0);
          }
        }

        function invoke_iiii(index, a1, a2, a3) {
          var sp = stackSave();

          try {
            return wasmTable.get(index)(a1, a2, a3);
          } catch (e) {
            stackRestore(sp);
            if (e !== e + 0 && e !== "longjmp") throw e;

            _setThrew(1, 0);
          }
        }

        function invoke_vii(index, a1, a2) {
          var sp = stackSave();

          try {
            wasmTable.get(index)(a1, a2);
          } catch (e) {
            stackRestore(sp);
            if (e !== e + 0 && e !== "longjmp") throw e;

            _setThrew(1, 0);
          }
        }

        function invoke_viii(index, a1, a2, a3) {
          var sp = stackSave();

          try {
            wasmTable.get(index)(a1, a2, a3);
          } catch (e) {
            stackRestore(sp);
            if (e !== e + 0 && e !== "longjmp") throw e;

            _setThrew(1, 0);
          }
        }

        function invoke_viiii(index, a1, a2, a3, a4) {
          var sp = stackSave();

          try {
            wasmTable.get(index)(a1, a2, a3, a4);
          } catch (e) {
            stackRestore(sp);
            if (e !== e + 0 && e !== "longjmp") throw e;

            _setThrew(1, 0);
          }
        }

        function invoke_vi(index, a1) {
          var sp = stackSave();

          try {
            wasmTable.get(index)(a1);
          } catch (e) {
            stackRestore(sp);
            if (e !== e + 0 && e !== "longjmp") throw e;

            _setThrew(1, 0);
          }
        }

        function invoke_viiiii(index, a1, a2, a3, a4, a5) {
          var sp = stackSave();

          try {
            wasmTable.get(index)(a1, a2, a3, a4, a5);
          } catch (e) {
            stackRestore(sp);
            if (e !== e + 0 && e !== "longjmp") throw e;

            _setThrew(1, 0);
          }
        }

        function invoke_iiiiiii(index, a1, a2, a3, a4, a5, a6) {
          var sp = stackSave();

          try {
            return wasmTable.get(index)(a1, a2, a3, a4, a5, a6);
          } catch (e) {
            stackRestore(sp);
            if (e !== e + 0 && e !== "longjmp") throw e;

            _setThrew(1, 0);
          }
        }

        function invoke_di(index, a1) {
          var sp = stackSave();

          try {
            return wasmTable.get(index)(a1);
          } catch (e) {
            stackRestore(sp);
            if (e !== e + 0 && e !== "longjmp") throw e;

            _setThrew(1, 0);
          }
        }

        var calledRun;

        function ExitStatus(status) {
          this.name = "ExitStatus";
          this.message = "Program terminated with exit(" + status + ")";
          this.status = status;
        }

        dependenciesFulfilled = function runCaller() {
          if (!calledRun) run();
          if (!calledRun) dependenciesFulfilled = runCaller;
        };

        function run(args) {
          if (runDependencies > 0) {
            return;
          }

          preRun();
          if (runDependencies > 0) return;

          function doRun() {
            if (calledRun) return;
            calledRun = true;
            Module["calledRun"] = true;
            if (ABORT) return;
            initRuntime();
            preMain();
            readyPromiseResolve(Module);
            if (Module["onRuntimeInitialized"]) Module["onRuntimeInitialized"]();
            postRun();
          }

          if (Module["setStatus"]) {
            Module["setStatus"]("Running...");
            setTimeout(function () {
              setTimeout(function () {
                Module["setStatus"]("");
              }, 1);
              doRun();
            }, 1);
          } else {
            doRun();
          }
        }

        Module["run"] = run;

        function exit(status, implicit) {
          if (implicit && noExitRuntime && status === 0) {
            return;
          }

          if (noExitRuntime) ;else {
            if (Module["onExit"]) Module["onExit"](status);
            ABORT = true;
          }
          quit_(status, new ExitStatus(status));
        }

        if (Module["preInit"]) {
          if (typeof Module["preInit"] == "function") Module["preInit"] = [Module["preInit"]];

          while (Module["preInit"].length > 0) {
            Module["preInit"].pop()();
          }
        }

        noExitRuntime = true;
        run();

        function WrapperObject() {}

        WrapperObject.prototype = Object.create(WrapperObject.prototype);
        WrapperObject.prototype.constructor = WrapperObject;
        WrapperObject.prototype.__class__ = WrapperObject;
        WrapperObject.__cache__ = {};
        Module["WrapperObject"] = WrapperObject;

        function getCache(__class__) {
          return (__class__ || WrapperObject).__cache__;
        }

        Module["getCache"] = getCache;

        function wrapPointer(ptr, __class__) {
          var cache = getCache(__class__);
          var ret = cache[ptr];
          if (ret) return ret;
          ret = Object.create((__class__ || WrapperObject).prototype);
          ret.ptr = ptr;
          return cache[ptr] = ret;
        }

        Module["wrapPointer"] = wrapPointer;

        function castObject(obj, __class__) {
          return wrapPointer(obj.ptr, __class__);
        }

        Module["castObject"] = castObject;
        Module["NULL"] = wrapPointer(0);

        function destroy(obj) {
          if (!obj["__destroy__"]) throw "Error: Cannot destroy object. (Did you create it yourself?)";
          obj["__destroy__"]();
          delete getCache(obj.__class__)[obj.ptr];
        }

        Module["destroy"] = destroy;

        function compare(obj1, obj2) {
          return obj1.ptr === obj2.ptr;
        }

        Module["compare"] = compare;

        function getPointer(obj) {
          return obj.ptr;
        }

        Module["getPointer"] = getPointer;

        function getClass(obj) {
          return obj.__class__;
        }

        Module["getClass"] = getClass;
        var ensureCache = {
          buffer: 0,
          size: 0,
          pos: 0,
          temps: [],
          needed: 0,
          prepare: function () {
            if (ensureCache.needed) {
              for (var i = 0; i < ensureCache.temps.length; i++) {
                Module["_free"](ensureCache.temps[i]);
              }

              ensureCache.temps.length = 0;
              Module["_free"](ensureCache.buffer);
              ensureCache.buffer = 0;
              ensureCache.size += ensureCache.needed;
              ensureCache.needed = 0;
            }

            if (!ensureCache.buffer) {
              ensureCache.size += 128;
              ensureCache.buffer = Module["_malloc"](ensureCache.size);
              assert(ensureCache.buffer);
            }

            ensureCache.pos = 0;
          },
          alloc: function (array, view) {
            assert(ensureCache.buffer);
            var bytes = view.BYTES_PER_ELEMENT;
            var len = array.length * bytes;
            len = len + 7 & -8;
            var ret;

            if (ensureCache.pos + len >= ensureCache.size) {
              assert(len > 0);
              ensureCache.needed += len;
              ret = Module["_malloc"](len);
              ensureCache.temps.push(ret);
            } else {
              ret = ensureCache.buffer + ensureCache.pos;
              ensureCache.pos += len;
            }

            return ret;
          },
          copy: function (array, view, offset) {
            offset >>>= 0;
            var bytes = view.BYTES_PER_ELEMENT;

            switch (bytes) {
              case 2:
                offset >>>= 1;
                break;

              case 4:
                offset >>>= 2;
                break;

              case 8:
                offset >>>= 3;
                break;
            }

            for (var i = 0; i < array.length; i++) {
              view[offset + i] = array[i];
            }
          }
        };

        function ensureString(value) {
          if (typeof value === "string") {
            var intArray = intArrayFromString(value);
            var offset = ensureCache.alloc(intArray, HEAP8);
            ensureCache.copy(intArray, HEAP8, offset);
            return offset;
          }

          return value;
        }

        function VoidPtr() {
          throw "cannot construct a VoidPtr, no constructor in IDL";
        }

        VoidPtr.prototype = Object.create(WrapperObject.prototype);
        VoidPtr.prototype.constructor = VoidPtr;
        VoidPtr.prototype.__class__ = VoidPtr;
        VoidPtr.__cache__ = {};
        Module["VoidPtr"] = VoidPtr;

        VoidPtr.prototype["__destroy__"] = VoidPtr.prototype.__destroy__ = function () {
          var self = this.ptr;

          _emscripten_bind_VoidPtr___destroy___0(self);
        };

        function Main() {
          throw "cannot construct a Main, no constructor in IDL";
        }

        Main.prototype = Object.create(WrapperObject.prototype);
        Main.prototype.constructor = Main;
        Main.prototype.__class__ = Main;
        Main.__cache__ = {};
        Module["Main"] = Main;

        Main.prototype["layout"] = Main.prototype.layout = function (dot, format, engine) {
          var self = this.ptr;
          ensureCache.prepare();
          if (dot && typeof dot === "object") dot = dot.ptr;else dot = ensureString(dot);
          if (format && typeof format === "object") format = format.ptr;else format = ensureString(format);
          if (engine && typeof engine === "object") engine = engine.ptr;else engine = ensureString(engine);
          return UTF8ToString(_emscripten_bind_Main_layout_3(self, dot, format, engine));
        };

        Main.prototype["lastError"] = Main.prototype.lastError = function () {
          var self = this.ptr;
          return UTF8ToString(_emscripten_bind_Main_lastError_0(self));
        };

        Main.prototype["createFile"] = Main.prototype.createFile = function (file, data) {
          var self = this.ptr;
          ensureCache.prepare();
          if (file && typeof file === "object") file = file.ptr;else file = ensureString(file);
          if (data && typeof data === "object") data = data.ptr;else data = ensureString(data);

          _emscripten_bind_Main_createFile_2(self, file, data);
        };

        Main.prototype["setYInvert"] = Main.prototype.setYInvert = function (yInvert) {
          var self = this.ptr;
          if (yInvert && typeof yInvert === "object") yInvert = yInvert.ptr;

          _emscripten_bind_Main_setYInvert_1(self, yInvert);
        };

        Main.prototype["setNop"] = Main.prototype.setNop = function (nop) {
          var self = this.ptr;
          if (nop && typeof nop === "object") nop = nop.ptr;

          _emscripten_bind_Main_setNop_1(self, nop);
        };

        Main.prototype["__destroy__"] = Main.prototype.__destroy__ = function () {
          var self = this.ptr;

          _emscripten_bind_Main___destroy___0(self);
        };

        return cpp.ready;
      };
    }();

    module.exports = cpp;
  });
  var graphvizlib$1 = /*#__PURE__*/Object.freeze( /*#__PURE__*/Object.assign( /*#__PURE__*/Object.create(null), graphvizlib, {
    'default': graphvizlib
  }));

  var __assign = undefined && undefined.__assign || function () {
    __assign = Object.assign || function (t) {
      for (var s, i = 1, n = arguments.length; i < n; i++) {
        s = arguments[i];

        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
      }

      return t;
    };

    return __assign.apply(this, arguments);
  };

  var __spreadArrays = undefined && undefined.__spreadArrays || function () {
    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;

    for (var r = Array(s), k = 0, i = 0; i < il; i++) for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++) r[k] = a[j];

    return r;
  };

  function imageToFile(image) {
    return {
      path: image.path,
      data: "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"no\"?>\n<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\" \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">\n<svg width=\"" + image.width + "\" height=\"" + image.height + "\"></svg>"
    };
  }

  function imagesToFiles(images) {
    return images.map(imageToFile);
  }

  function createFiles(wasm, _ext) {
    var ext = __assign({
      images: [],
      files: []
    }, _ext);

    __spreadArrays(ext.files, imagesToFiles(ext.images)).forEach(function (file) {
      return wasm.Main.prototype.createFile(file.path, file.data);
    });
  }

  var graphviz = {
    layout: function (dotSource, outputFormat, layoutEngine, ext) {
      if (outputFormat === void 0) {
        outputFormat = "svg";
      }

      if (layoutEngine === void 0) {
        layoutEngine = "dot";
      }

      if (!dotSource) return Promise.resolve("");
      return loadWasm(graphvizlib$1, ext === null || ext === void 0 ? void 0 : ext.wasmFolder, ext === null || ext === void 0 ? void 0 : ext.wasmBinary).then(function (wasm) {
        createFiles(wasm, ext);
        wasm.Main.prototype.setYInvert((ext === null || ext === void 0 ? void 0 : ext.yInvert) ? 1 : 0);
        wasm.Main.prototype.setNop((ext === null || ext === void 0 ? void 0 : ext.nop) ? ext === null || ext === void 0 ? void 0 : ext.nop : 0);
        var retVal = wasm.Main.prototype.layout(dotSource, outputFormat, layoutEngine);

        if (!retVal) {
          throw new Error(wasm.Main.prototype.lastError());
        }

        return retVal;
      });
    },
    circo: function (dotSource, outputFormat, ext) {
      if (outputFormat === void 0) {
        outputFormat = "svg";
      }

      return this.layout(dotSource, outputFormat, "circo", ext);
    },
    dot: function (dotSource, outputFormat, ext) {
      if (outputFormat === void 0) {
        outputFormat = "svg";
      }

      return this.layout(dotSource, outputFormat, "dot", ext);
    },
    fdp: function (dotSource, outputFormat, ext) {
      if (outputFormat === void 0) {
        outputFormat = "svg";
      }

      return this.layout(dotSource, outputFormat, "fdp", ext);
    },
    sfdp: function (dotSource, outputFormat, ext) {
      if (outputFormat === void 0) {
        outputFormat = "svg";
      }

      return this.layout(dotSource, outputFormat, "sfdp", ext);
    },
    neato: function (dotSource, outputFormat, ext) {
      if (outputFormat === void 0) {
        outputFormat = "svg";
      }

      return this.layout(dotSource, outputFormat, "neato", ext);
    },
    osage: function (dotSource, outputFormat, ext) {
      if (outputFormat === void 0) {
        outputFormat = "svg";
      }

      return this.layout(dotSource, outputFormat, "osage", ext);
    },
    patchwork: function (dotSource, outputFormat, ext) {
      if (outputFormat === void 0) {
        outputFormat = "svg";
      }

      return this.layout(dotSource, outputFormat, "patchwork", ext);
    },
    twopi: function (dotSource, outputFormat, ext) {
      if (outputFormat === void 0) {
        outputFormat = "svg";
      }

      return this.layout(dotSource, outputFormat, "twopi", ext);
    }
  };

  var GraphvizSync =
  /** @class */
  function () {
    function GraphvizSync(_wasm) {
      this._wasm = _wasm;
    }

    GraphvizSync.prototype.layout = function (dotSource, outputFormat, layoutEngine, ext) {
      if (outputFormat === void 0) {
        outputFormat = "svg";
      }

      if (layoutEngine === void 0) {
        layoutEngine = "dot";
      }

      if (!dotSource) return "";
      createFiles(this._wasm, ext);

      this._wasm.Main.prototype.setYInvert((ext === null || ext === void 0 ? void 0 : ext.yInvert) ? 1 : 0);

      this._wasm.Main.prototype.setNop((ext === null || ext === void 0 ? void 0 : ext.nop) ? ext === null || ext === void 0 ? void 0 : ext.nop : 0);

      var retVal = this._wasm.Main.prototype.layout(dotSource, outputFormat, layoutEngine);

      if (!retVal) {
        throw new Error(this._wasm.Main.prototype.lastError());
      }

      return retVal;
    };

    GraphvizSync.prototype.circo = function (dotSource, outputFormat, ext) {
      if (outputFormat === void 0) {
        outputFormat = "svg";
      }

      return this.layout(dotSource, outputFormat, "circo", ext);
    };

    GraphvizSync.prototype.dot = function (dotSource, outputFormat, ext) {
      if (outputFormat === void 0) {
        outputFormat = "svg";
      }

      return this.layout(dotSource, outputFormat, "dot", ext);
    };

    GraphvizSync.prototype.fdp = function (dotSource, outputFormat, ext) {
      if (outputFormat === void 0) {
        outputFormat = "svg";
      }

      return this.layout(dotSource, outputFormat, "fdp", ext);
    };

    GraphvizSync.prototype.sfdp = function (dotSource, outputFormat, ext) {
      if (outputFormat === void 0) {
        outputFormat = "svg";
      }

      return this.layout(dotSource, outputFormat, "sfdp", ext);
    };

    GraphvizSync.prototype.neato = function (dotSource, outputFormat, ext) {
      if (outputFormat === void 0) {
        outputFormat = "svg";
      }

      return this.layout(dotSource, outputFormat, "neato", ext);
    };

    GraphvizSync.prototype.osage = function (dotSource, outputFormat, ext) {
      if (outputFormat === void 0) {
        outputFormat = "svg";
      }

      return this.layout(dotSource, outputFormat, "osage", ext);
    };

    GraphvizSync.prototype.patchwork = function (dotSource, outputFormat, ext) {
      if (outputFormat === void 0) {
        outputFormat = "svg";
      }

      return this.layout(dotSource, outputFormat, "patchwork", ext);
    };

    GraphvizSync.prototype.twopi = function (dotSource, outputFormat, ext) {
      if (outputFormat === void 0) {
        outputFormat = "svg";
      }

      return this.layout(dotSource, outputFormat, "twopi", ext);
    };

    return GraphvizSync;
  }();

  function graphvizSync(wasmFolder, wasmBinary) {
    return loadWasm(graphvizlib$1, wasmFolder, wasmBinary).then(function (wasm) {
      return new GraphvizSync(wasm);
    });
  }

  exports.GraphvizSync = GraphvizSync;
  exports.StackParser = StackParser;
  exports.graphviz = graphviz;
  exports.graphvizSync = graphvizSync;
  exports.parse = parse;
  exports.wasmFolder = wasmFolder;
  Object.defineProperty(exports, '__esModule', {
    value: true
  });
});

/***/ }),
/* 504 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "formatDefaultLocale": () => (/* reexport safe */ _defaultLocale_js__WEBPACK_IMPORTED_MODULE_0__.default),
/* harmony export */   "format": () => (/* reexport safe */ _defaultLocale_js__WEBPACK_IMPORTED_MODULE_0__.format),
/* harmony export */   "formatPrefix": () => (/* reexport safe */ _defaultLocale_js__WEBPACK_IMPORTED_MODULE_0__.formatPrefix),
/* harmony export */   "formatLocale": () => (/* reexport safe */ _locale_js__WEBPACK_IMPORTED_MODULE_1__.default),
/* harmony export */   "formatSpecifier": () => (/* reexport safe */ _formatSpecifier_js__WEBPACK_IMPORTED_MODULE_2__.default),
/* harmony export */   "FormatSpecifier": () => (/* reexport safe */ _formatSpecifier_js__WEBPACK_IMPORTED_MODULE_2__.FormatSpecifier),
/* harmony export */   "precisionFixed": () => (/* reexport safe */ _precisionFixed_js__WEBPACK_IMPORTED_MODULE_3__.default),
/* harmony export */   "precisionPrefix": () => (/* reexport safe */ _precisionPrefix_js__WEBPACK_IMPORTED_MODULE_4__.default),
/* harmony export */   "precisionRound": () => (/* reexport safe */ _precisionRound_js__WEBPACK_IMPORTED_MODULE_5__.default)
/* harmony export */ });
/* harmony import */ var _defaultLocale_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(505);
/* harmony import */ var _locale_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(506);
/* harmony import */ var _formatSpecifier_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(510);
/* harmony import */ var _precisionFixed_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(517);
/* harmony import */ var _precisionPrefix_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(518);
/* harmony import */ var _precisionRound_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(519);







/***/ }),
/* 505 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "format": () => (/* binding */ format),
/* harmony export */   "formatPrefix": () => (/* binding */ formatPrefix),
/* harmony export */   "default": () => (/* binding */ defaultLocale)
/* harmony export */ });
/* harmony import */ var _locale_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(506);

var locale;
var format;
var formatPrefix;
defaultLocale({
  thousands: ",",
  grouping: [3],
  currency: ["$", ""]
});
function defaultLocale(definition) {
  locale = (0,_locale_js__WEBPACK_IMPORTED_MODULE_0__.default)(definition);
  format = locale.format;
  formatPrefix = locale.formatPrefix;
  return locale;
}

/***/ }),
/* 506 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* export default binding */ __WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _exponent_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(516);
/* harmony import */ var _formatGroup_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(508);
/* harmony import */ var _formatNumerals_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(509);
/* harmony import */ var _formatSpecifier_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(510);
/* harmony import */ var _formatTrim_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(515);
/* harmony import */ var _formatTypes_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(511);
/* harmony import */ var _formatPrefixAuto_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(514);
/* harmony import */ var _identity_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(507);








var map = Array.prototype.map,
    prefixes = ["y", "z", "a", "f", "p", "n", "µ", "m", "", "k", "M", "G", "T", "P", "E", "Z", "Y"];
/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(locale) {
  var group = locale.grouping === undefined || locale.thousands === undefined ? _identity_js__WEBPACK_IMPORTED_MODULE_0__.default : (0,_formatGroup_js__WEBPACK_IMPORTED_MODULE_1__.default)(map.call(locale.grouping, Number), locale.thousands + ""),
      currencyPrefix = locale.currency === undefined ? "" : locale.currency[0] + "",
      currencySuffix = locale.currency === undefined ? "" : locale.currency[1] + "",
      decimal = locale.decimal === undefined ? "." : locale.decimal + "",
      numerals = locale.numerals === undefined ? _identity_js__WEBPACK_IMPORTED_MODULE_0__.default : (0,_formatNumerals_js__WEBPACK_IMPORTED_MODULE_2__.default)(map.call(locale.numerals, String)),
      percent = locale.percent === undefined ? "%" : locale.percent + "",
      minus = locale.minus === undefined ? "−" : locale.minus + "",
      nan = locale.nan === undefined ? "NaN" : locale.nan + "";

  function newFormat(specifier) {
    specifier = (0,_formatSpecifier_js__WEBPACK_IMPORTED_MODULE_3__.default)(specifier);
    var fill = specifier.fill,
        align = specifier.align,
        sign = specifier.sign,
        symbol = specifier.symbol,
        zero = specifier.zero,
        width = specifier.width,
        comma = specifier.comma,
        precision = specifier.precision,
        trim = specifier.trim,
        type = specifier.type; // The "n" type is an alias for ",g".

    if (type === "n") comma = true, type = "g"; // The "" type, and any invalid type, is an alias for ".12~g".
    else if (!_formatTypes_js__WEBPACK_IMPORTED_MODULE_4__.default[type]) precision === undefined && (precision = 12), trim = true, type = "g"; // If zero fill is specified, padding goes after sign and before digits.

    if (zero || fill === "0" && align === "=") zero = true, fill = "0", align = "="; // Compute the prefix and suffix.
    // For SI-prefix, the suffix is lazily computed.

    var prefix = symbol === "$" ? currencyPrefix : symbol === "#" && /[boxX]/.test(type) ? "0" + type.toLowerCase() : "",
        suffix = symbol === "$" ? currencySuffix : /[%p]/.test(type) ? percent : ""; // What format function should we use?
    // Is this an integer type?
    // Can this type generate exponential notation?

    var formatType = _formatTypes_js__WEBPACK_IMPORTED_MODULE_4__.default[type],
        maybeSuffix = /[defgprs%]/.test(type); // Set the default precision if not specified,
    // or clamp the specified precision to the supported range.
    // For significant precision, it must be in [1, 21].
    // For fixed precision, it must be in [0, 20].

    precision = precision === undefined ? 6 : /[gprs]/.test(type) ? Math.max(1, Math.min(21, precision)) : Math.max(0, Math.min(20, precision));

    function format(value) {
      var valuePrefix = prefix,
          valueSuffix = suffix,
          i,
          n,
          c;

      if (type === "c") {
        valueSuffix = formatType(value) + valueSuffix;
        value = "";
      } else {
        value = +value; // Determine the sign. -0 is not less than 0, but 1 / -0 is!

        var valueNegative = value < 0 || 1 / value < 0; // Perform the initial formatting.

        value = isNaN(value) ? nan : formatType(Math.abs(value), precision); // Trim insignificant zeros.

        if (trim) value = (0,_formatTrim_js__WEBPACK_IMPORTED_MODULE_5__.default)(value); // If a negative value rounds to zero after formatting, and no explicit positive sign is requested, hide the sign.

        if (valueNegative && +value === 0 && sign !== "+") valueNegative = false; // Compute the prefix and suffix.

        valuePrefix = (valueNegative ? sign === "(" ? sign : minus : sign === "-" || sign === "(" ? "" : sign) + valuePrefix;
        valueSuffix = (type === "s" ? prefixes[8 + _formatPrefixAuto_js__WEBPACK_IMPORTED_MODULE_6__.prefixExponent / 3] : "") + valueSuffix + (valueNegative && sign === "(" ? ")" : ""); // Break the formatted value into the integer “value” part that can be
        // grouped, and fractional or exponential “suffix” part that is not.

        if (maybeSuffix) {
          i = -1, n = value.length;

          while (++i < n) {
            if (c = value.charCodeAt(i), 48 > c || c > 57) {
              valueSuffix = (c === 46 ? decimal + value.slice(i + 1) : value.slice(i)) + valueSuffix;
              value = value.slice(0, i);
              break;
            }
          }
        }
      } // If the fill character is not "0", grouping is applied before padding.


      if (comma && !zero) value = group(value, Infinity); // Compute the padding.

      var length = valuePrefix.length + value.length + valueSuffix.length,
          padding = length < width ? new Array(width - length + 1).join(fill) : ""; // If the fill character is "0", grouping is applied after padding.

      if (comma && zero) value = group(padding + value, padding.length ? width - valueSuffix.length : Infinity), padding = ""; // Reconstruct the final output based on the desired alignment.

      switch (align) {
        case "<":
          value = valuePrefix + value + valueSuffix + padding;
          break;

        case "=":
          value = valuePrefix + padding + value + valueSuffix;
          break;

        case "^":
          value = padding.slice(0, length = padding.length >> 1) + valuePrefix + value + valueSuffix + padding.slice(length);
          break;

        default:
          value = padding + valuePrefix + value + valueSuffix;
          break;
      }

      return numerals(value);
    }

    format.toString = function () {
      return specifier + "";
    };

    return format;
  }

  function formatPrefix(specifier, value) {
    var f = newFormat((specifier = (0,_formatSpecifier_js__WEBPACK_IMPORTED_MODULE_3__.default)(specifier), specifier.type = "f", specifier)),
        e = Math.max(-8, Math.min(8, Math.floor((0,_exponent_js__WEBPACK_IMPORTED_MODULE_7__.default)(value) / 3))) * 3,
        k = Math.pow(10, -e),
        prefix = prefixes[8 + e / 3];
    return function (value) {
      return f(k * value) + prefix;
    };
  }

  return {
    format: newFormat,
    formatPrefix: formatPrefix
  };
}

/***/ }),
/* 507 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* export default binding */ __WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(x) {
  return x;
}

/***/ }),
/* 508 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* export default binding */ __WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(grouping, thousands) {
  return function (value, width) {
    var i = value.length,
        t = [],
        j = 0,
        g = grouping[0],
        length = 0;

    while (i > 0 && g > 0) {
      if (length + g + 1 > width) g = Math.max(1, width - length);
      t.push(value.substring(i -= g, i + g));
      if ((length += g + 1) > width) break;
      g = grouping[j = (j + 1) % grouping.length];
    }

    return t.reverse().join(thousands);
  };
}

/***/ }),
/* 509 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* export default binding */ __WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(numerals) {
  return function (value) {
    return value.replace(/[0-9]/g, function (i) {
      return numerals[+i];
    });
  };
}

/***/ }),
/* 510 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* binding */ formatSpecifier),
/* harmony export */   "FormatSpecifier": () => (/* binding */ FormatSpecifier)
/* harmony export */ });
// [[fill]align][sign][symbol][0][width][,][.precision][~][type]
var re = /^(?:(.)?([<>=^]))?([+\-( ])?([$#])?(0)?(\d+)?(,)?(\.\d+)?(~)?([a-z%])?$/i;
function formatSpecifier(specifier) {
  if (!(match = re.exec(specifier))) throw new Error("invalid format: " + specifier);
  var match;
  return new FormatSpecifier({
    fill: match[1],
    align: match[2],
    sign: match[3],
    symbol: match[4],
    zero: match[5],
    width: match[6],
    comma: match[7],
    precision: match[8] && match[8].slice(1),
    trim: match[9],
    type: match[10]
  });
}
formatSpecifier.prototype = FormatSpecifier.prototype; // instanceof

function FormatSpecifier(specifier) {
  this.fill = specifier.fill === undefined ? " " : specifier.fill + "";
  this.align = specifier.align === undefined ? ">" : specifier.align + "";
  this.sign = specifier.sign === undefined ? "-" : specifier.sign + "";
  this.symbol = specifier.symbol === undefined ? "" : specifier.symbol + "";
  this.zero = !!specifier.zero;
  this.width = specifier.width === undefined ? undefined : +specifier.width;
  this.comma = !!specifier.comma;
  this.precision = specifier.precision === undefined ? undefined : +specifier.precision;
  this.trim = !!specifier.trim;
  this.type = specifier.type === undefined ? "" : specifier.type + "";
}

FormatSpecifier.prototype.toString = function () {
  return this.fill + this.align + this.sign + this.symbol + (this.zero ? "0" : "") + (this.width === undefined ? "" : Math.max(1, this.width | 0)) + (this.comma ? "," : "") + (this.precision === undefined ? "" : "." + Math.max(0, this.precision | 0)) + (this.trim ? "~" : "") + this.type;
};

/***/ }),
/* 511 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _formatDecimal_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(512);
/* harmony import */ var _formatPrefixAuto_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(514);
/* harmony import */ var _formatRounded_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(513);



/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ({
  "%": (x, p) => (x * 100).toFixed(p),
  "b": x => Math.round(x).toString(2),
  "c": x => x + "",
  "d": _formatDecimal_js__WEBPACK_IMPORTED_MODULE_0__.default,
  "e": (x, p) => x.toExponential(p),
  "f": (x, p) => x.toFixed(p),
  "g": (x, p) => x.toPrecision(p),
  "o": x => Math.round(x).toString(8),
  "p": (x, p) => (0,_formatRounded_js__WEBPACK_IMPORTED_MODULE_1__.default)(x * 100, p),
  "r": _formatRounded_js__WEBPACK_IMPORTED_MODULE_1__.default,
  "s": _formatPrefixAuto_js__WEBPACK_IMPORTED_MODULE_2__.default,
  "X": x => Math.round(x).toString(16).toUpperCase(),
  "x": x => Math.round(x).toString(16)
});

/***/ }),
/* 512 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* export default binding */ __WEBPACK_DEFAULT_EXPORT__),
/* harmony export */   "formatDecimalParts": () => (/* binding */ formatDecimalParts)
/* harmony export */ });
/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(x) {
  return Math.abs(x = Math.round(x)) >= 1e21 ? x.toLocaleString("en").replace(/,/g, "") : x.toString(10);
} // Computes the decimal coefficient and exponent of the specified number x with
// significant digits p, where x is positive and p is in [1, 21] or undefined.
// For example, formatDecimalParts(1.23) returns ["123", 0].

function formatDecimalParts(x, p) {
  if ((i = (x = p ? x.toExponential(p - 1) : x.toExponential()).indexOf("e")) < 0) return null; // NaN, ±Infinity

  var i,
      coefficient = x.slice(0, i); // The string returned by toExponential either has the form \d\.\d+e[-+]\d+
  // (e.g., 1.2e+3) or the form \de[-+]\d+ (e.g., 1e+3).

  return [coefficient.length > 1 ? coefficient[0] + coefficient.slice(2) : coefficient, +x.slice(i + 1)];
}

/***/ }),
/* 513 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* export default binding */ __WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _formatDecimal_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(512);

/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(x, p) {
  var d = (0,_formatDecimal_js__WEBPACK_IMPORTED_MODULE_0__.formatDecimalParts)(x, p);
  if (!d) return x + "";
  var coefficient = d[0],
      exponent = d[1];
  return exponent < 0 ? "0." + new Array(-exponent).join("0") + coefficient : coefficient.length > exponent + 1 ? coefficient.slice(0, exponent + 1) + "." + coefficient.slice(exponent + 1) : coefficient + new Array(exponent - coefficient.length + 2).join("0");
}

/***/ }),
/* 514 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "prefixExponent": () => (/* binding */ prefixExponent),
/* harmony export */   "default": () => (/* export default binding */ __WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _formatDecimal_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(512);

var prefixExponent;
/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(x, p) {
  var d = (0,_formatDecimal_js__WEBPACK_IMPORTED_MODULE_0__.formatDecimalParts)(x, p);
  if (!d) return x + "";
  var coefficient = d[0],
      exponent = d[1],
      i = exponent - (prefixExponent = Math.max(-8, Math.min(8, Math.floor(exponent / 3))) * 3) + 1,
      n = coefficient.length;
  return i === n ? coefficient : i > n ? coefficient + new Array(i - n + 1).join("0") : i > 0 ? coefficient.slice(0, i) + "." + coefficient.slice(i) : "0." + new Array(1 - i).join("0") + (0,_formatDecimal_js__WEBPACK_IMPORTED_MODULE_0__.formatDecimalParts)(x, Math.max(0, p + i - 1))[0]; // less than 1y!
}

/***/ }),
/* 515 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* export default binding */ __WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
// Trims insignificant zeros, e.g., replaces 1.2000k with 1.2k.
/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(s) {
  out: for (var n = s.length, i = 1, i0 = -1, i1; i < n; ++i) {
    switch (s[i]) {
      case ".":
        i0 = i1 = i;
        break;

      case "0":
        if (i0 === 0) i0 = i;
        i1 = i;
        break;

      default:
        if (!+s[i]) break out;
        if (i0 > 0) i0 = 0;
        break;
    }
  }

  return i0 > 0 ? s.slice(0, i0) + s.slice(i1 + 1) : s;
}

/***/ }),
/* 516 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* export default binding */ __WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _formatDecimal_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(512);

/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(x) {
  return x = (0,_formatDecimal_js__WEBPACK_IMPORTED_MODULE_0__.formatDecimalParts)(Math.abs(x)), x ? x[1] : NaN;
}

/***/ }),
/* 517 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* export default binding */ __WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _exponent_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(516);

/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(step) {
  return Math.max(0, -(0,_exponent_js__WEBPACK_IMPORTED_MODULE_0__.default)(Math.abs(step)));
}

/***/ }),
/* 518 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* export default binding */ __WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _exponent_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(516);

/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(step, value) {
  return Math.max(0, Math.max(-8, Math.min(8, Math.floor((0,_exponent_js__WEBPACK_IMPORTED_MODULE_0__.default)(value) / 3))) * 3 - (0,_exponent_js__WEBPACK_IMPORTED_MODULE_0__.default)(Math.abs(step)));
}

/***/ }),
/* 519 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (/* export default binding */ __WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _exponent_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(516);

/* harmony default export */ function __WEBPACK_DEFAULT_EXPORT__(step, max) {
  step = Math.abs(step), max = Math.abs(max) - step;
  return Math.max(0, (0,_exponent_js__WEBPACK_IMPORTED_MODULE_0__.default)(max) - (0,_exponent_js__WEBPACK_IMPORTED_MODULE_0__.default)(step)) + 1;
}

/***/ }),
/* 520 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "path": () => (/* reexport safe */ _path_js__WEBPACK_IMPORTED_MODULE_0__.default)
/* harmony export */ });
/* harmony import */ var _path_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(521);


/***/ }),
/* 521 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
const pi = Math.PI,
      tau = 2 * pi,
      epsilon = 1e-6,
      tauEpsilon = tau - epsilon;

function Path() {
  this._x0 = this._y0 = // start of current subpath
  this._x1 = this._y1 = null; // end of current subpath

  this._ = "";
}

function path() {
  return new Path();
}

Path.prototype = path.prototype = {
  constructor: Path,
  moveTo: function (x, y) {
    this._ += "M" + (this._x0 = this._x1 = +x) + "," + (this._y0 = this._y1 = +y);
  },
  closePath: function () {
    if (this._x1 !== null) {
      this._x1 = this._x0, this._y1 = this._y0;
      this._ += "Z";
    }
  },
  lineTo: function (x, y) {
    this._ += "L" + (this._x1 = +x) + "," + (this._y1 = +y);
  },
  quadraticCurveTo: function (x1, y1, x, y) {
    this._ += "Q" + +x1 + "," + +y1 + "," + (this._x1 = +x) + "," + (this._y1 = +y);
  },
  bezierCurveTo: function (x1, y1, x2, y2, x, y) {
    this._ += "C" + +x1 + "," + +y1 + "," + +x2 + "," + +y2 + "," + (this._x1 = +x) + "," + (this._y1 = +y);
  },
  arcTo: function (x1, y1, x2, y2, r) {
    x1 = +x1, y1 = +y1, x2 = +x2, y2 = +y2, r = +r;
    var x0 = this._x1,
        y0 = this._y1,
        x21 = x2 - x1,
        y21 = y2 - y1,
        x01 = x0 - x1,
        y01 = y0 - y1,
        l01_2 = x01 * x01 + y01 * y01; // Is the radius negative? Error.

    if (r < 0) throw new Error("negative radius: " + r); // Is this path empty? Move to (x1,y1).

    if (this._x1 === null) {
      this._ += "M" + (this._x1 = x1) + "," + (this._y1 = y1);
    } // Or, is (x1,y1) coincident with (x0,y0)? Do nothing.
    else if (!(l01_2 > epsilon)) ; // Or, are (x0,y0), (x1,y1) and (x2,y2) collinear?
      // Equivalently, is (x1,y1) coincident with (x2,y2)?
      // Or, is the radius zero? Line to (x1,y1).
      else if (!(Math.abs(y01 * x21 - y21 * x01) > epsilon) || !r) {
          this._ += "L" + (this._x1 = x1) + "," + (this._y1 = y1);
        } // Otherwise, draw an arc!
        else {
            var x20 = x2 - x0,
                y20 = y2 - y0,
                l21_2 = x21 * x21 + y21 * y21,
                l20_2 = x20 * x20 + y20 * y20,
                l21 = Math.sqrt(l21_2),
                l01 = Math.sqrt(l01_2),
                l = r * Math.tan((pi - Math.acos((l21_2 + l01_2 - l20_2) / (2 * l21 * l01))) / 2),
                t01 = l / l01,
                t21 = l / l21; // If the start tangent is not coincident with (x0,y0), line to.

            if (Math.abs(t01 - 1) > epsilon) {
              this._ += "L" + (x1 + t01 * x01) + "," + (y1 + t01 * y01);
            }

            this._ += "A" + r + "," + r + ",0,0," + +(y01 * x20 > x01 * y20) + "," + (this._x1 = x1 + t21 * x21) + "," + (this._y1 = y1 + t21 * y21);
          }
  },
  arc: function (x, y, r, a0, a1, ccw) {
    x = +x, y = +y, r = +r, ccw = !!ccw;
    var dx = r * Math.cos(a0),
        dy = r * Math.sin(a0),
        x0 = x + dx,
        y0 = y + dy,
        cw = 1 ^ ccw,
        da = ccw ? a0 - a1 : a1 - a0; // Is the radius negative? Error.

    if (r < 0) throw new Error("negative radius: " + r); // Is this path empty? Move to (x0,y0).

    if (this._x1 === null) {
      this._ += "M" + x0 + "," + y0;
    } // Or, is (x0,y0) not coincident with the previous point? Line to (x0,y0).
    else if (Math.abs(this._x1 - x0) > epsilon || Math.abs(this._y1 - y0) > epsilon) {
        this._ += "L" + x0 + "," + y0;
      } // Is this arc empty? We’re done.


    if (!r) return; // Does the angle go the wrong way? Flip the direction.

    if (da < 0) da = da % tau + tau; // Is this a complete circle? Draw two arcs to complete the circle.

    if (da > tauEpsilon) {
      this._ += "A" + r + "," + r + ",0,1," + cw + "," + (x - dx) + "," + (y - dy) + "A" + r + "," + r + ",0,1," + cw + "," + (this._x1 = x0) + "," + (this._y1 = y0);
    } // Is this arc non-empty? Draw an arc!
    else if (da > epsilon) {
        this._ += "A" + r + "," + r + ",0," + +(da >= pi) + "," + cw + "," + (this._x1 = x + r * Math.cos(a1)) + "," + (this._y1 = y + r * Math.sin(a1));
      }
  },
  rect: function (x, y, w, h) {
    this._ += "M" + (this._x0 = this._x1 = +x) + "," + (this._y0 = this._y1 = +y) + "h" + +w + "v" + +h + "h" + -w + "Z";
  },
  toString: function () {
    return this._;
  }
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (path);

/***/ }),
/* 522 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
function getResources() {
  var resources = {
    baseUrl: "https://raw.githubusercontent.com/mingrammer/diagrams/master/resources/",
    alibabacloud: {
      analytics: {
        AnalyticDb: "analytic-db.png",
        ClickHouse: "click-house.png",
        DataLakeAnalytics: "data-lake-analytics.png",
        ElaticMapReduce: "elatic-map-reduce.png",
        OpenSearch: "open-search.png"
      },
      application: {
        ApiGateway: "api-gateway.png",
        BeeBot: "bee-bot.png",
        BlockchainAsAService: "blockchain-as-a-service.png",
        CloudCallCenter: "cloud-call-center.png",
        CodePipeline: "code-pipeline.png",
        DirectMail: "direct-mail.png",
        LogService: "log-service.png",
        MessageNotificationService: "message-notification-service.png",
        NodeJsPerformancePlatform: "node-js-performance-platform.png",
        OpenSearch: "open-search.png",
        PerformanceTestingService: "performance-testing-service.png",
        RdCloud: "rd-cloud.png",
        SmartConversationAnalysis: "smart-conversation-analysis.png",
        Yida: "yida.png"
      },
      communication: {
        DirectMail: "direct-mail.png",
        MobilePush: "mobile-push.png"
      },
      compute: {
        AutoScaling: "auto-scaling.png",
        BatchCompute: "batch-compute.png",
        ContainerRegistry: "container-registry.png",
        ContainerService: "container-service.png",
        ElasticComputeService: "elastic-compute-service.png",
        ElasticContainerInstance: "elastic-container-instance.png",
        ElasticHighPerformanceComputing: "elastic-high-performance-computing.png",
        ElasticSearch: "elastic-search.png",
        FunctionCompute: "function-compute.png",
        OperationOrchestrationService: "operation-orchestration-service.png",
        ResourceOrchestrationService: "resource-orchestration-service.png",
        ServerLoadBalancer: "server-load-balancer.png",
        ServerlessAppEngine: "serverless-app-engine.png",
        SimpleApplicationServer: "simple-application-server.png",
        WebAppService: "web-app-service.png"
      },
      database: {
        ApsaradbCassandra: "apsaradb-cassandra.png",
        ApsaradbHbase: "apsaradb-hbase.png",
        ApsaradbMemcache: "apsaradb-memcache.png",
        ApsaradbMongodb: "apsaradb-mongodb.png",
        ApsaradbOceanbase: "apsaradb-oceanbase.png",
        ApsaradbPolardb: "apsaradb-polardb.png",
        ApsaradbPostgresql: "apsaradb-postgresql.png",
        ApsaradbPpas: "apsaradb-ppas.png",
        ApsaradbRedis: "apsaradb-redis.png",
        ApsaradbSqlserver: "apsaradb-sqlserver.png",
        DataManagementService: "data-management-service.png",
        DataTransmissionService: "data-transmission-service.png",
        DatabaseBackupService: "database-backup-service.png",
        DisributeRelationalDatabaseService: "disribute-relational-database-service.png",
        GraphDatabaseService: "graph-database-service.png",
        HybriddbForMysql: "hybriddb-for-mysql.png",
        RelationalDatabaseService: "relational-database-service.png"
      },
      iot: {
        IotInternetDeviceId: "iot-internet-device-id.png",
        IotLinkWan: "iot-link-wan.png",
        IotMobileConnectionPackage: "iot-mobile-connection-package.png",
        IotPlatform: "iot-platform.png"
      },
      network: {
        Cdn: "cdn.png",
        CloudEnterpriseNetwork: "cloud-enterprise-network.png",
        ElasticIpAddress: "elastic-ip-address.png",
        ExpressConnect: "express-connect.png",
        NatGateway: "nat-gateway.png",
        ServerLoadBalancer: "server-load-balancer.png",
        SmartAccessGateway: "smart-access-gateway.png",
        VirtualPrivateCloud: "virtual-private-cloud.png",
        VpnGateway: "vpn-gateway.png"
      },
      security: {
        AntiBotService: "anti-bot-service.png",
        AntiDdosBasic: "anti-ddos-basic.png",
        AntiDdosPro: "anti-ddos-pro.png",
        AntifraudService: "antifraud-service.png",
        BastionHost: "bastion-host.png",
        CloudFirewall: "cloud-firewall.png",
        CloudSecurityScanner: "cloud-security-scanner.png",
        ContentModeration: "content-moderation.png",
        CrowdsourcedSecurityTesting: "crowdsourced-security-testing.png",
        DataEncryptionService: "data-encryption-service.png",
        DbAudit: "db-audit.png",
        GameShield: "game-shield.png",
        IdVerification: "id-verification.png",
        ManagedSecurityService: "managed-security-service.png",
        SecurityCenter: "security-center.png",
        ServerGuard: "server-guard.png",
        SslCertificates: "ssl-certificates.png",
        WebApplicationFirewall: "web-application-firewall.png"
      },
      storage: {
        CloudStorageGateway: "cloud-storage-gateway.png",
        FileStorageHdfs: "file-storage-hdfs.png",
        FileStorageNas: "file-storage-nas.png",
        HybridBackupRecovery: "hybrid-backup-recovery.png",
        HybridCloudDisasterRecovery: "hybrid-cloud-disaster-recovery.png",
        Imm: "imm.png",
        ObjectStorageService: "object-storage-service.png",
        ObjectTableStore: "object-table-store.png"
      },
      web: {
        Dns: "dns.png",
        Domain: "domain.png"
      }
    }
  }; ///////////////////////////////////////////////////////////////////////////
  // https://github.com/mingrammer/diagrams/blob/master/config.py

  var ALIASES = {
    "alibabacloud": {
      "application": {
        "LogService": "SLS",
        "MessageNotificationService": "MNS",
        "PerformanceTestingService": "PTS",
        "SmartConversationAnalysis": "SCA"
      },
      "compute": {
        "AutoScaling": "ESS",
        "ElasticComputeService": "ECS",
        "ElasticContainerInstance": "ECI",
        "ElasticHighPerformanceComputing": "EHPC",
        "FunctionCompute": "FC",
        "OperationOrchestrationService": "OOS",
        "ResourceOrchestrationService": "ROS",
        "ServerLoadBalancer": "SLB",
        "ServerlessAppEngine": "SAE",
        "SimpleApplicationServer": "SAS",
        "WebAppService": "WAS"
      },
      "database": {
        "DataManagementService": "DMS",
        "DataTransmissionService": "DTS",
        "DatabaseBackupService": "DBS",
        "DisributeRelationalDatabaseService": "DRDS",
        "GraphDatabaseService": "GDS",
        "RelationalDatabaseService": "RDS"
      },
      "network": {
        "CloudEnterpriseNetwork": "CEN",
        "ElasticIpAddress": "EIP",
        "ServerLoadBalancer": "SLB",
        "VirtualPrivateCloud": "VPC"
      },
      "security": {
        "AntiBotService": "ABS",
        "AntifraudService": "AS",
        "CloudFirewall": "CFW",
        "ContentModeration": "CM",
        "DataEncryptionService": "DES",
        "WebApplicationFirewall": "WAF"
      },
      "storage": {
        "FileStorageHdfs": "HDFS",
        "FileStorageNas": "NAS",
        "HybridBackupRecovery": "HBR",
        "HybridCloudDisasterRecovery": "HDR",
        "ObjectStorageService": "OSS",
        "ObjectTableStore": "OTS"
      }
    }
  }; ///////////////////////////////////////////////////////////////////////////

  function merge(src, node) {
    for (var x in node) {
      var aliase = node[x];

      if (aliase) {
        if (typeof aliase == "string") {
          var obj = src[x];

          if (obj) {
            src[aliase] = obj;
          }
        } else {
          if (src[x]) {
            merge(src[x], node[x]);
          } else {
            src[x] = node[x];
          }
        }
      }
    }
  }

  merge(resources, ALIASES);
  return resources;
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (getResources());

/***/ }),
/* 523 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
function getResources() {
  var resources = {
    baseUrl: "https://raw.githubusercontent.com/mingrammer/diagrams/master/resources/",
    aws: {
      analytics: {
        Analytics: "analytics.png",
        Athena: "athena.png",
        CloudsearchSearchDocuments: "cloudsearch-search-documents.png",
        Cloudsearch: "cloudsearch.png",
        DataLakeResource: "data-lake-resource.png",
        DataPipeline: "data-pipeline.png",
        ElasticsearchService: "elasticsearch-service.png",
        EMRCluster: "emr-cluster.png",
        EMREngineMaprM3: "emr-engine-mapr-m3.png",
        EMREngineMaprM5: "emr-engine-mapr-m5.png",
        EMREngineMaprM7: "emr-engine-mapr-m7.png",
        EMREngine: "emr-engine.png",
        EMRHdfsCluster: "emr-hdfs-cluster.png",
        EMR: "emr.png",
        GlueCrawlers: "glue-crawlers.png",
        GlueDataCatalog: "glue-data-catalog.png",
        Glue: "glue.png",
        KinesisDataAnalytics: "kinesis-data-analytics.png",
        KinesisDataFirehose: "kinesis-data-firehose.png",
        KinesisDataStreams: "kinesis-data-streams.png",
        KinesisVideoStreams: "kinesis-video-streams.png",
        Kinesis: "kinesis.png",
        LakeFormation: "lake-formation.png",
        ManagedStreamingForKafka: "managed-streaming-for-kafka.png",
        Quicksight: "quicksight.png",
        RedshiftDenseComputeNode: "redshift-dense-compute-node.png",
        RedshiftDenseStorageNode: "redshift-dense-storage-node.png",
        Redshift: "redshift.png"
      },
      ar: {
        ArVr: "ar-vr.png",
        Sumerian: "sumerian.png"
      },
      blockchain: {
        BlockchainResource: "blockchain-resource.png",
        Blockchain: "blockchain.png",
        ManagedBlockchain: "managed-blockchain.png",
        QuantumLedgerDatabaseQldb: "quantum-ledger-database-qldb.png"
      },
      business: {
        AlexaForBusiness: "alexa-for-business.png",
        BusinessApplications: "business-applications.png",
        Chime: "chime.png",
        Workmail: "workmail.png"
      },
      compute: {
        ApplicationAutoScaling: "application-auto-scaling.png",
        Batch: "batch.png",
        ComputeOptimizer: "compute-optimizer.png",
        Compute: "compute.png",
        EC2Ami: "ec2-ami.png",
        EC2AutoScaling: "ec2-auto-scaling.png",
        EC2ContainerRegistryImage: "ec2-container-registry-image.png",
        EC2ContainerRegistryRegistry: "ec2-container-registry-registry.png",
        EC2ContainerRegistry: "ec2-container-registry.png",
        EC2ElasticIpAddress: "ec2-elastic-ip-address.png",
        EC2ImageBuilder: "ec2-image-builder.png",
        EC2Instance: "ec2-instance.png",
        EC2Instances: "ec2-instances.png",
        EC2Rescue: "ec2-rescue.png",
        EC2SpotInstance: "ec2-spot-instance.png",
        EC2: "ec2.png",
        ElasticBeanstalkApplication: "elastic-beanstalk-application.png",
        ElasticBeanstalkDeployment: "elastic-beanstalk-deployment.png",
        ElasticBeanstalk: "elastic-beanstalk.png",
        ElasticContainerServiceContainer: "elastic-container-service-container.png",
        ElasticContainerServiceService: "elastic-container-service-service.png",
        ElasticContainerService: "elastic-container-service.png",
        ElasticKubernetesService: "elastic-kubernetes-service.png",
        Fargate: "fargate.png",
        LambdaFunction: "lambda-function.png",
        Lambda: "lambda.png",
        Lightsail: "lightsail.png",
        LocalZones: "local-zones.png",
        Outposts: "outposts.png",
        ServerlessApplicationRepository: "serverless-application-repository.png",
        ThinkboxDeadline: "thinkbox-deadline.png",
        ThinkboxDraft: "thinkbox-draft.png",
        ThinkboxFrost: "thinkbox-frost.png",
        ThinkboxKrakatoa: "thinkbox-krakatoa.png",
        ThinkboxSequoia: "thinkbox-sequoia.png",
        ThinkboxStoke: "thinkbox-stoke.png",
        ThinkboxXmesh: "thinkbox-xmesh.png",
        VmwareCloudOnAWS: "vmware-cloud-on-aws.png",
        Wavelength: "wavelength.png"
      },
      cost: {
        Budgets: "budgets.png",
        CostAndUsageReport: "cost-and-usage-report.png",
        CostExplorer: "cost-explorer.png",
        CostManagement: "cost-management.png",
        ReservedInstanceReporting: "reserved-instance-reporting.png",
        SavingsPlans: "savings-plans.png"
      },
      database: {
        AuroraInstance: "aurora-instance.png",
        Aurora: "aurora.png",
        DatabaseMigrationServiceDatabaseMigrationWorkflow: "database-migration-service-database-migration-workflow.png",
        DatabaseMigrationService: "database-migration-service.png",
        Database: "database.png",
        DocumentdbMongodbCompatibility: "documentdb-mongodb-compatibility.png",
        DynamodbAttribute: "dynamodb-attribute.png",
        DynamodbAttributes: "dynamodb-attributes.png",
        DynamodbDax: "dynamodb-dax.png",
        DynamodbGlobalSecondaryIndex: "dynamodb-global-secondary-index.png",
        DynamodbItem: "dynamodb-item.png",
        DynamodbItems: "dynamodb-items.png",
        DynamodbTable: "dynamodb-table.png",
        Dynamodb: "dynamodb.png",
        ElasticacheCacheNode: "elasticache-cache-node.png",
        ElasticacheForMemcached: "elasticache-for-memcached.png",
        ElasticacheForRedis: "elasticache-for-redis.png",
        Elasticache: "elasticache.png",
        KeyspacesManagedApacheCassandraService: "keyspaces-managed-apache-cassandra-service.png",
        Neptune: "neptune.png",
        QuantumLedgerDatabaseQldb: "quantum-ledger-database-qldb.png",
        RDSInstance: "rds-instance.png",
        RDSMariadbInstance: "rds-mariadb-instance.png",
        RDSMysqlInstance: "rds-mysql-instance.png",
        RDSOnVmware: "rds-on-vmware.png",
        RDSOracleInstance: "rds-oracle-instance.png",
        RDSPostgresqlInstance: "rds-postgresql-instance.png",
        RDSSqlServerInstance: "rds-sql-server-instance.png",
        RDS: "rds.png",
        RedshiftDenseComputeNode: "redshift-dense-compute-node.png",
        RedshiftDenseStorageNode: "redshift-dense-storage-node.png",
        Redshift: "redshift.png",
        Timestream: "timestream.png"
      },
      devtools: {
        CloudDevelopmentKit: "cloud-development-kit.png",
        Cloud9Resource: "cloud9-resource.png",
        Cloud9: "cloud9.png",
        Codebuild: "codebuild.png",
        Codecommit: "codecommit.png",
        Codedeploy: "codedeploy.png",
        Codepipeline: "codepipeline.png",
        Codestar: "codestar.png",
        CommandLineInterface: "command-line-interface.png",
        DeveloperTools: "developer-tools.png",
        ToolsAndSdks: "tools-and-sdks.png",
        XRay: "x-ray.png"
      },
      enablement: {
        CustomerEnablement: "customer-enablement.png",
        Iq: "iq.png",
        ManagedServices: "managed-services.png",
        ProfessionalServices: "professional-services.png",
        Support: "support.png"
      },
      enduser: {
        Appstream20: "appstream-2-0.png",
        DesktopAndAppStreaming: "desktop-and-app-streaming.png",
        Workdocs: "workdocs.png",
        Worklink: "worklink.png",
        Workspaces: "workspaces.png"
      },
      engagement: {
        Connect: "connect.png",
        CustomerEngagement: "customer-engagement.png",
        Pinpoint: "pinpoint.png",
        SimpleEmailServiceSesEmail: "simple-email-service-ses-email.png",
        SimpleEmailServiceSes: "simple-email-service-ses.png"
      },
      game: {
        GameTech: "game-tech.png",
        Gamelift: "gamelift.png"
      },
      general: {
        Client: "client.png",
        Disk: "disk.png",
        Forums: "forums.png",
        General: "general.png",
        GenericDatabase: "generic-database.png",
        GenericFirewall: "generic-firewall.png",
        GenericOfficeBuilding: "generic-office-building.png",
        GenericSamlToken: "generic-saml-token.png",
        GenericSDK: "generic-sdk.png",
        InternetAlt1: "internet-alt1.png",
        InternetAlt2: "internet-alt2.png",
        InternetGateway: "internet-gateway.png",
        Marketplace: "marketplace.png",
        MobileClient: "mobile-client.png",
        Multimedia: "multimedia.png",
        OfficeBuilding: "office-building.png",
        SamlToken: "saml-token.png",
        SDK: "sdk.png",
        SslPadlock: "ssl-padlock.png",
        TapeStorage: "tape-storage.png",
        Toolkit: "toolkit.png",
        TraditionalServer: "traditional-server.png",
        User: "user.png",
        Users: "users.png"
      },
      integration: {
        ApplicationIntegration: "application-integration.png",
        Appsync: "appsync.png",
        ConsoleMobileApplication: "console-mobile-application.png",
        EventResource: "event-resource.png",
        EventbridgeCustomEventBusResource: "eventbridge-custom-event-bus-resource.png",
        EventbridgeDefaultEventBusResource: "eventbridge-default-event-bus-resource.png",
        EventbridgeSaasPartnerEventBusResource: "eventbridge-saas-partner-event-bus-resource.png",
        Eventbridge: "eventbridge.png",
        ExpressWorkflows: "express-workflows.png",
        MQ: "mq.png",
        SimpleNotificationServiceSnsEmailNotification: "simple-notification-service-sns-email-notification.png",
        SimpleNotificationServiceSnsHttpNotification: "simple-notification-service-sns-http-notification.png",
        SimpleNotificationServiceSnsTopic: "simple-notification-service-sns-topic.png",
        SimpleNotificationServiceSns: "simple-notification-service-sns.png",
        SimpleQueueServiceSqsMessage: "simple-queue-service-sqs-message.png",
        SimpleQueueServiceSqsQueue: "simple-queue-service-sqs-queue.png",
        SimpleQueueServiceSqs: "simple-queue-service-sqs.png",
        StepFunctions: "step-functions.png"
      },
      iot: {
        Freertos: "freertos.png",
        InternetOfThings: "internet-of-things.png",
        Iot1Click: "iot-1-click.png",
        IotAction: "iot-action.png",
        IotActuator: "iot-actuator.png",
        IotAlexaEcho: "iot-alexa-echo.png",
        IotAlexaEnabledDevice: "iot-alexa-enabled-device.png",
        IotAlexaSkill: "iot-alexa-skill.png",
        IotAlexaVoiceService: "iot-alexa-voice-service.png",
        IotAnalyticsChannel: "iot-analytics-channel.png",
        IotAnalyticsDataSet: "iot-analytics-data-set.png",
        IotAnalyticsDataStore: "iot-analytics-data-store.png",
        IotAnalyticsNotebook: "iot-analytics-notebook.png",
        IotAnalyticsPipeline: "iot-analytics-pipeline.png",
        IotAnalytics: "iot-analytics.png",
        IotBank: "iot-bank.png",
        IotBicycle: "iot-bicycle.png",
        IotButton: "iot-button.png",
        IotCamera: "iot-camera.png",
        IotCar: "iot-car.png",
        IotCart: "iot-cart.png",
        IotCertificate: "iot-certificate.png",
        IotCoffeePot: "iot-coffee-pot.png",
        IotCore: "iot-core.png",
        IotDesiredState: "iot-desired-state.png",
        IotDeviceDefender: "iot-device-defender.png",
        IotDeviceGateway: "iot-device-gateway.png",
        IotDeviceManagement: "iot-device-management.png",
        IotDoorLock: "iot-door-lock.png",
        IotEvents: "iot-events.png",
        IotFactory: "iot-factory.png",
        IotFireTvStick: "iot-fire-tv-stick.png",
        IotFireTv: "iot-fire-tv.png",
        IotGeneric: "iot-generic.png",
        IotGreengrassConnector: "iot-greengrass-connector.png",
        IotGreengrass: "iot-greengrass.png",
        IotHardwareBoard: "iot-hardware-board.png",
        IotHouse: "iot-house.png",
        IotHttp: "iot-http.png",
        IotHttp2: "iot-http2.png",
        IotJobs: "iot-jobs.png",
        IotLambda: "iot-lambda.png",
        IotLightbulb: "iot-lightbulb.png",
        IotMedicalEmergency: "iot-medical-emergency.png",
        IotMqtt: "iot-mqtt.png",
        IotOverTheAirUpdate: "iot-over-the-air-update.png",
        IotPolicyEmergency: "iot-policy-emergency.png",
        IotPolicy: "iot-policy.png",
        IotReportedState: "iot-reported-state.png",
        IotRule: "iot-rule.png",
        IotSensor: "iot-sensor.png",
        IotServo: "iot-servo.png",
        IotShadow: "iot-shadow.png",
        IotSimulator: "iot-simulator.png",
        IotSitewise: "iot-sitewise.png",
        IotThermostat: "iot-thermostat.png",
        IotThingsGraph: "iot-things-graph.png",
        IotTopic: "iot-topic.png",
        IotTravel: "iot-travel.png",
        IotUtility: "iot-utility.png",
        IotWindfarm: "iot-windfarm.png"
      },
      management: {
        AutoScaling: "auto-scaling.png",
        CloudformationChangeSet: "cloudformation-change-set.png",
        CloudformationStack: "cloudformation-stack.png",
        CloudformationTemplate: "cloudformation-template.png",
        Cloudformation: "cloudformation.png",
        Cloudtrail: "cloudtrail.png",
        CloudwatchAlarm: "cloudwatch-alarm.png",
        CloudwatchEventEventBased: "cloudwatch-event-event-based.png",
        CloudwatchEventTimeBased: "cloudwatch-event-time-based.png",
        CloudwatchRule: "cloudwatch-rule.png",
        Cloudwatch: "cloudwatch.png",
        Codeguru: "codeguru.png",
        CommandLineInterface: "command-line-interface.png",
        Config: "config.png",
        ControlTower: "control-tower.png",
        LicenseManager: "license-manager.png",
        ManagedServices: "managed-services.png",
        ManagementAndGovernance: "management-and-governance.png",
        ManagementConsole: "management-console.png",
        OpsworksApps: "opsworks-apps.png",
        OpsworksDeployments: "opsworks-deployments.png",
        OpsworksInstances: "opsworks-instances.png",
        OpsworksLayers: "opsworks-layers.png",
        OpsworksMonitoring: "opsworks-monitoring.png",
        OpsworksPermissions: "opsworks-permissions.png",
        OpsworksResources: "opsworks-resources.png",
        OpsworksStack: "opsworks-stack.png",
        Opsworks: "opsworks.png",
        OrganizationsAccount: "organizations-account.png",
        OrganizationsOrganizationalUnit: "organizations-organizational-unit.png",
        Organizations: "organizations.png",
        PersonalHealthDashboard: "personal-health-dashboard.png",
        ServiceCatalog: "service-catalog.png",
        SystemsManagerAutomation: "systems-manager-automation.png",
        SystemsManagerDocuments: "systems-manager-documents.png",
        SystemsManagerInventory: "systems-manager-inventory.png",
        SystemsManagerMaintenanceWindows: "systems-manager-maintenance-windows.png",
        SystemsManagerOpscenter: "systems-manager-opscenter.png",
        SystemsManagerParameterStore: "systems-manager-parameter-store.png",
        SystemsManagerPatchManager: "systems-manager-patch-manager.png",
        SystemsManagerRunCommand: "systems-manager-run-command.png",
        SystemsManagerStateManager: "systems-manager-state-manager.png",
        SystemsManager: "systems-manager.png",
        TrustedAdvisorChecklistCost: "trusted-advisor-checklist-cost.png",
        TrustedAdvisorChecklistFaultTolerant: "trusted-advisor-checklist-fault-tolerant.png",
        TrustedAdvisorChecklistPerformance: "trusted-advisor-checklist-performance.png",
        TrustedAdvisorChecklistSecurity: "trusted-advisor-checklist-security.png",
        TrustedAdvisorChecklist: "trusted-advisor-checklist.png",
        TrustedAdvisor: "trusted-advisor.png",
        WellArchitectedTool: "well-architected-tool.png"
      },
      media: {
        ElasticTranscoder: "elastic-transcoder.png",
        ElementalConductor: "elemental-conductor.png",
        ElementalDelta: "elemental-delta.png",
        ElementalLive: "elemental-live.png",
        ElementalMediaconnect: "elemental-mediaconnect.png",
        ElementalMediaconvert: "elemental-mediaconvert.png",
        ElementalMedialive: "elemental-medialive.png",
        ElementalMediapackage: "elemental-mediapackage.png",
        ElementalMediastore: "elemental-mediastore.png",
        ElementalMediatailor: "elemental-mediatailor.png",
        ElementalServer: "elemental-server.png",
        KinesisVideoStreams: "kinesis-video-streams.png",
        MediaServices: "media-services.png"
      },
      migration: {
        ApplicationDiscoveryService: "application-discovery-service.png",
        CloudendureMigration: "cloudendure-migration.png",
        DatabaseMigrationService: "database-migration-service.png",
        DatasyncAgent: "datasync-agent.png",
        Datasync: "datasync.png",
        MigrationAndTransfer: "migration-and-transfer.png",
        MigrationHub: "migration-hub.png",
        ServerMigrationService: "server-migration-service.png",
        SnowballEdge: "snowball-edge.png",
        Snowball: "snowball.png",
        Snowmobile: "snowmobile.png",
        TransferForSftp: "transfer-for-sftp.png"
      },
      ml: {
        ApacheMxnetOnAWS: "apache-mxnet-on-aws.png",
        AugmentedAi: "augmented-ai.png",
        Comprehend: "comprehend.png",
        DeepLearningAmis: "deep-learning-amis.png",
        DeepLearningContainers: "deep-learning-containers.png",
        Deepcomposer: "deepcomposer.png",
        Deeplens: "deeplens.png",
        Deepracer: "deepracer.png",
        ElasticInference: "elastic-inference.png",
        Forecast: "forecast.png",
        FraudDetector: "fraud-detector.png",
        Kendra: "kendra.png",
        Lex: "lex.png",
        MachineLearning: "machine-learning.png",
        Personalize: "personalize.png",
        Polly: "polly.png",
        RekognitionImage: "rekognition-image.png",
        RekognitionVideo: "rekognition-video.png",
        Rekognition: "rekognition.png",
        SagemakerGroundTruth: "sagemaker-ground-truth.png",
        SagemakerModel: "sagemaker-model.png",
        SagemakerNotebook: "sagemaker-notebook.png",
        SagemakerTrainingJob: "sagemaker-training-job.png",
        Sagemaker: "sagemaker.png",
        TensorflowOnAWS: "tensorflow-on-aws.png",
        Textract: "textract.png",
        Transcribe: "transcribe.png",
        Translate: "translate.png"
      },
      mobile: {
        Amplify: "amplify.png",
        APIGatewayEndpoint: "api-gateway-endpoint.png",
        APIGateway: "api-gateway.png",
        Appsync: "appsync.png",
        DeviceFarm: "device-farm.png",
        Mobile: "mobile.png",
        Pinpoint: "pinpoint.png"
      },
      network: {
        APIGatewayEndpoint: "api-gateway-endpoint.png",
        APIGateway: "api-gateway.png",
        AppMesh: "app-mesh.png",
        ClientVpn: "client-vpn.png",
        CloudMap: "cloud-map.png",
        CloudFrontDownloadDistribution: "cloudfront-download-distribution.png",
        CloudFrontEdgeLocation: "cloudfront-edge-location.png",
        CloudFrontStreamingDistribution: "cloudfront-streaming-distribution.png",
        CloudFront: "cloudfront.png",
        DirectConnect: "direct-connect.png",
        ElasticLoadBalancing: "elastic-load-balancing.png",
        ElbApplicationLoadBalancer: "elb-application-load-balancer.png",
        ElbClassicLoadBalancer: "elb-classic-load-balancer.png",
        ElbNetworkLoadBalancer: "elb-network-load-balancer.png",
        Endpoint: "endpoint.png",
        GlobalAccelerator: "global-accelerator.png",
        InternetGateway: "internet-gateway.png",
        Nacl: "nacl.png",
        NATGateway: "nat-gateway.png",
        NetworkingAndContentDelivery: "networking-and-content-delivery.png",
        PrivateSubnet: "private-subnet.png",
        Privatelink: "privatelink.png",
        PublicSubnet: "public-subnet.png",
        Route53HostedZone: "route-53-hosted-zone.png",
        Route53: "route-53.png",
        RouteTable: "route-table.png",
        SiteToSiteVpn: "site-to-site-vpn.png",
        TransitGateway: "transit-gateway.png",
        VPCCustomerGateway: "vpc-customer-gateway.png",
        VPCElasticNetworkAdapter: "vpc-elastic-network-adapter.png",
        VPCElasticNetworkInterface: "vpc-elastic-network-interface.png",
        VPCFlowLogs: "vpc-flow-logs.png",
        VPCPeering: "vpc-peering.png",
        VPCRouter: "vpc-router.png",
        VPCTrafficMirroring: "vpc-traffic-mirroring.png",
        VPC: "vpc.png",
        VpnConnection: "vpn-connection.png",
        VpnGateway: "vpn-gateway.png"
      },
      quantum: {
        Braket: "braket.png",
        QuantumTechnologies: "quantum-technologies.png"
      },
      robotics: {
        RobomakerCloudExtensionRos: "robomaker-cloud-extension-ros.png",
        RobomakerDevelopmentEnvironment: "robomaker-development-environment.png",
        RobomakerFleetManagement: "robomaker-fleet-management.png",
        RobomakerSimulator: "robomaker-simulator.png",
        Robomaker: "robomaker.png",
        Robotics: "robotics.png"
      },
      satellite: {
        GroundStation: "ground-station.png",
        Satellite: "satellite.png"
      },
      security: {
        AdConnector: "ad-connector.png",
        Artifact: "artifact.png",
        CertificateAuthority: "certificate-authority.png",
        CertificateManager: "certificate-manager.png",
        CloudDirectory: "cloud-directory.png",
        Cloudhsm: "cloudhsm.png",
        Cognito: "cognito.png",
        Detective: "detective.png",
        DirectoryService: "directory-service.png",
        FirewallManager: "firewall-manager.png",
        Guardduty: "guardduty.png",
        IdentityAndAccessManagementIamAccessAnalyzer: "identity-and-access-management-iam-access-analyzer.png",
        IdentityAndAccessManagementIamAddOn: "identity-and-access-management-iam-add-on.png",
        IdentityAndAccessManagementIamAWSStsAlternate: "identity-and-access-management-iam-aws-sts-alternate.png",
        IdentityAndAccessManagementIamAWSSts: "identity-and-access-management-iam-aws-sts.png",
        IdentityAndAccessManagementIamDataEncryptionKey: "identity-and-access-management-iam-data-encryption-key.png",
        IdentityAndAccessManagementIamEncryptedData: "identity-and-access-management-iam-encrypted-data.png",
        IdentityAndAccessManagementIamLongTermSecurityCredential: "identity-and-access-management-iam-long-term-security-credential.png",
        IdentityAndAccessManagementIamMfaToken: "identity-and-access-management-iam-mfa-token.png",
        IdentityAndAccessManagementIamPermissions: "identity-and-access-management-iam-permissions.png",
        IdentityAndAccessManagementIamRole: "identity-and-access-management-iam-role.png",
        IdentityAndAccessManagementIamTemporarySecurityCredential: "identity-and-access-management-iam-temporary-security-credential.png",
        IdentityAndAccessManagementIam: "identity-and-access-management-iam.png",
        InspectorAgent: "inspector-agent.png",
        Inspector: "inspector.png",
        KeyManagementService: "key-management-service.png",
        Macie: "macie.png",
        ManagedMicrosoftAd: "managed-microsoft-ad.png",
        ResourceAccessManager: "resource-access-manager.png",
        SecretsManager: "secrets-manager.png",
        SecurityHubFinding: "security-hub-finding.png",
        SecurityHub: "security-hub.png",
        SecurityIdentityAndCompliance: "security-identity-and-compliance.png",
        ShieldAdvanced: "shield-advanced.png",
        Shield: "shield.png",
        SimpleAd: "simple-ad.png",
        SingleSignOn: "single-sign-on.png",
        WAFFilteringRule: "waf-filtering-rule.png",
        WAF: "waf.png"
      },
      storage: {
        Backup: "backup.png",
        CloudendureDisasterRecovery: "cloudendure-disaster-recovery.png",
        EFSInfrequentaccessPrimaryBg: "efs-infrequentaccess-primary-bg.png",
        EFSStandardPrimaryBg: "efs-standard-primary-bg.png",
        ElasticBlockStoreEBSSnapshot: "elastic-block-store-ebs-snapshot.png",
        ElasticBlockStoreEBSVolume: "elastic-block-store-ebs-volume.png",
        ElasticBlockStoreEBS: "elastic-block-store-ebs.png",
        ElasticFileSystemEFSFileSystem: "elastic-file-system-efs-file-system.png",
        ElasticFileSystemEFS: "elastic-file-system-efs.png",
        FsxForLustre: "fsx-for-lustre.png",
        FsxForWindowsFileServer: "fsx-for-windows-file-server.png",
        Fsx: "fsx.png",
        MultipleVolumesResource: "multiple-volumes-resource.png",
        S3GlacierArchive: "s3-glacier-archive.png",
        S3GlacierVault: "s3-glacier-vault.png",
        S3Glacier: "s3-glacier.png",
        SimpleStorageServiceS3BucketWithObjects: "simple-storage-service-s3-bucket-with-objects.png",
        SimpleStorageServiceS3Bucket: "simple-storage-service-s3-bucket.png",
        SimpleStorageServiceS3Object: "simple-storage-service-s3-object.png",
        SimpleStorageServiceS3: "simple-storage-service-s3.png",
        SnowFamilySnowballImportExport: "snow-family-snowball-import-export.png",
        SnowballEdge: "snowball-edge.png",
        Snowball: "snowball.png",
        Snowmobile: "snowmobile.png",
        StorageGatewayCachedVolume: "storage-gateway-cached-volume.png",
        StorageGatewayNonCachedVolume: "storage-gateway-non-cached-volume.png",
        StorageGatewayVirtualTapeLibrary: "storage-gateway-virtual-tape-library.png",
        StorageGateway: "storage-gateway.png",
        Storage: "storage.png"
      }
    }
  }; ///////////////////////////////////////////////////////////////////////////
  // https://github.com/mingrammer/diagrams/blob/master/config.py

  var ALIASES = {
    "aws": {
      "analytics": {
        "ElasticsearchService": "ES"
      },
      "business": {
        "AlexaForBusiness": "A4B"
      },
      "blockchain": {
        "QuantumLedgerDatabaseQldb": "QLDB"
      },
      "compute": {
        "ApplicationAutoScaling": "AutoScaling",
        "EC2Ami": "AMI",
        "EC2ContainerRegistry": "ECR",
        "ElasticBeanstalk": "EB",
        "ElasticContainerService": "ECS",
        "ElasticKubernetesService": "EKS",
        "ServerlessApplicationRepository": "SAR"
      },
      "database": {
        "DatabaseMigrationService": "DMS",
        "DocumentdbMongodbCompatibility": "DocumentDB",
        "DynamodbDax": "DAX",
        "DynamodbGlobalSecondaryIndex": "DynamodbGSI",
        "Database": "DB",
        "Dynamodb": "DDB",
        "Elasticache": "ElastiCache",
        "QuantumLedgerDatabaseQldb": "QLDB"
      },
      "devtools": {
        "CommandLineInterface": "CLI",
        "DeveloperTools": "DevTools"
      },
      "engagement": {
        "SimpleEmailServiceSes": "SES"
      },
      "general": {
        "GenericOfficeBuilding": "OfficeBuilding"
      },
      "integration": {
        "SimpleNotificationServiceSns": "SNS",
        "SimpleQueueServiceSqs": "SQS",
        "StepFunctions": "SF"
      },
      "iot": {
        "Freertos": "FreeRTOS",
        "IotHardwareBoard": "IotBoard"
      },
      "management": {
        "SystemsManager": "SSM",
        "SystemsManagerParameterStore": "ParameterStore"
      },
      "migration": {
        "ApplicationDiscoveryService": "ADS",
        "CloudendureMigration": "CEM",
        "DatabaseMigrationService": "DMS",
        "MigrationAndTransfer": "MAT",
        "ServerMigrationService": "SMS"
      },
      "ml": {
        "DeepLearningContainers": "DLC"
      },
      "network": {
        "CloudFront": "CF",
        "ElasticLoadBalancing": "ELB",
        "ElbApplicationLoadBalancer": "ALB",
        "ElbClassicLoadBalancer": "CLB",
        "ElbNetworkLoadBalancer": "NLB",
        "GlobalAccelerator": "GAX"
      },
      "security": {
        "CertificateManager": "ACM",
        "Cloudhsm": "CloudHSM",
        "DirectoryService": "DS",
        "FirewallManager": "FMS",
        "IdentityAndAccessManagementIamAccessAnalyzer": "IAMAccessAnalyzer",
        "IdentityAndAccessManagementIamAWSSts": "IAMAWSSts",
        "IdentityAndAccessManagementIamPermissions": "IAMPermissions",
        "IdentityAndAccessManagementIamRole": "IAMRole",
        "IdentityAndAccessManagementIam": "IAM",
        "KeyManagementService": "KMS",
        "ResourceAccessManager": "RAM"
      },
      "storage": {
        "CloudendureDisasterRecovery": "CDR",
        "ElasticBlockStoreEBS": "EBS",
        "ElasticFileSystemEFS": "EFS",
        "Fsx": "FSx",
        "SimpleStorageServiceS3": "S3"
      }
    }
  }; ///////////////////////////////////////////////////////////////////////////

  function merge(src, node) {
    for (var x in node) {
      var aliase = node[x];

      if (aliase) {
        if (typeof aliase == "string") {
          var obj = src[x];

          if (obj) {
            src[aliase] = obj;
          }
        } else {
          if (src[x]) {
            merge(src[x], node[x]);
          } else {
            src[x] = node[x];
          }
        }
      }
    }
  }

  merge(resources, ALIASES);
  return resources;
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (getResources());

/***/ }),
/* 524 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
function getResources() {
  var resources = {
    baseUrl: "https://raw.githubusercontent.com/mingrammer/diagrams/master/resources/",
    azure: {
      analytics: {
        AnalysisServices: "analysis-services.png",
        DataExplorerClusters: "data-explorer-clusters.png",
        DataFactories: "data-factories.png",
        DataLakeAnalytics: "data-lake-analytics.png",
        DataLakeStoreGen1: "data-lake-store-gen1.png",
        Databricks: "databricks.png",
        EventHubClusters: "event-hub-clusters.png",
        EventHubs: "event-hubs.png",
        Hdinsightclusters: "hdinsightclusters.png",
        LogAnalyticsWorkspaces: "log-analytics-workspaces.png",
        StreamAnalyticsJobs: "stream-analytics-jobs.png"
      },
      compute: {
        AvailabilitySets: "availability-sets.png",
        BatchAccounts: "batch-accounts.png",
        CitrixVirtualDesktopsEssentials: "citrix-virtual-desktops-essentials.png",
        CloudServicesClassic: "cloud-services-classic.png",
        CloudServices: "cloud-services.png",
        CloudsimpleVirtualMachines: "cloudsimple-virtual-machines.png",
        ContainerInstances: "container-instances.png",
        ContainerRegistries: "container-registries.png",
        DiskSnapshots: "disk-snapshots.png",
        Disks: "disks.png",
        FunctionApps: "function-apps.png",
        KubernetesServices: "kubernetes-services.png",
        MeshApplications: "mesh-applications.png",
        SAPHANAOnAzure: "sap-hana-on-azure.png",
        ServiceFabricClusters: "service-fabric-clusters.png",
        VMClassic: "vm-classic.png",
        VMImages: "vm-images.png",
        VMLinux: "vm-linux.png",
        VMScaleSet: "vm-scale-set.png",
        VMWindows: "vm-windows.png",
        VM: "vm.png"
      },
      database: {
        BlobStorage: "blob-storage.png",
        CacheForRedis: "cache-for-redis.png",
        CosmosDb: "cosmos-db.png",
        DataLake: "data-lake.png",
        DatabaseForMariadbServers: "database-for-mariadb-servers.png",
        DatabaseForMysqlServers: "database-for-mysql-servers.png",
        DatabaseForPostgresqlServers: "database-for-postgresql-servers.png",
        ElasticDatabasePools: "elastic-database-pools.png",
        ElasticJobAgents: "elastic-job-agents.png",
        ManagedDatabases: "managed-databases.png",
        SQLDatabases: "sql-databases.png",
        SQLDatawarehouse: "sql-datawarehouse.png",
        SQLManagedInstances: "sql-managed-instances.png",
        SQLServerStretchDatabases: "sql-server-stretch-databases.png",
        SQLServers: "sql-servers.png",
        VirtualClusters: "virtual-clusters.png",
        VirtualDatacenter: "virtual-datacenter.png"
      },
      devops: {
        ApplicationInsights: "application-insights.png",
        Artifacts: "artifacts.png",
        Boards: "boards.png",
        Devops: "devops.png",
        DevtestLabs: "devtest-labs.png",
        Pipelines: "pipelines.png",
        Repos: "repos.png",
        TestPlans: "test-plans.png"
      },
      general: {
        Allresources: "allresources.png",
        Azurehome: "azurehome.png",
        Developertools: "developertools.png",
        Helpsupport: "helpsupport.png",
        Information: "information.png",
        Managementgroups: "managementgroups.png",
        Marketplace: "marketplace.png",
        Quickstartcenter: "quickstartcenter.png",
        Recent: "recent.png",
        Reservations: "reservations.png",
        Resource: "resource.png",
        Resourcegroups: "resourcegroups.png",
        Servicehealth: "servicehealth.png",
        Shareddashboard: "shareddashboard.png",
        Subscriptions: "subscriptions.png",
        Support: "support.png",
        Supportrequests: "supportrequests.png",
        Tag: "tag.png",
        Tags: "tags.png",
        Templates: "templates.png",
        Twousericon: "twousericon.png",
        Userhealthicon: "userhealthicon.png",
        Usericon: "usericon.png",
        Userprivacy: "userprivacy.png",
        Userresource: "userresource.png",
        Whatsnew: "whatsnew.png"
      },
      identity: {
        AccessReview: "access-review.png",
        ActiveDirectoryConnectHealth: "active-directory-connect-health.png",
        ActiveDirectory: "active-directory.png",
        ADB2C: "ad-b2c.png",
        ADDomainServices: "ad-domain-services.png",
        ADIdentityProtection: "ad-identity-protection.png",
        ADPrivilegedIdentityManagement: "ad-privileged-identity-management.png",
        AppRegistrations: "app-registrations.png",
        ConditionalAccess: "conditional-access.png",
        EnterpriseApplications: "enterprise-applications.png",
        IdentityGovernance: "identity-governance.png",
        InformationProtection: "information-protection.png",
        ManagedIdentities: "managed-identities.png"
      },
      integration: {
        APIForFhir: "api-for-fhir.png",
        APIManagement: "api-management.png",
        AppConfiguration: "app-configuration.png",
        DataCatalog: "data-catalog.png",
        EventGridDomains: "event-grid-domains.png",
        EventGridSubscriptions: "event-grid-subscriptions.png",
        EventGridTopics: "event-grid-topics.png",
        IntegrationAccounts: "integration-accounts.png",
        IntegrationServiceEnvironments: "integration-service-environments.png",
        LogicAppsCustomConnector: "logic-apps-custom-connector.png",
        LogicApps: "logic-apps.png",
        SendgridAccounts: "sendgrid-accounts.png",
        ServiceBusRelays: "service-bus-relays.png",
        ServiceBus: "service-bus.png",
        ServiceCatalogManagedApplicationDefinitions: "service-catalog-managed-application-definitions.png",
        SoftwareAsAService: "software-as-a-service.png",
        StorsimpleDeviceManagers: "storsimple-device-managers.png"
      },
      iot: {
        DeviceProvisioningServices: "device-provisioning-services.png",
        DigitalTwins: "digital-twins.png",
        IotCentralApplications: "iot-central-applications.png",
        IotHubSecurity: "iot-hub-security.png",
        IotHub: "iot-hub.png",
        Maps: "maps.png",
        Sphere: "sphere.png",
        TimeSeriesInsightsEnvironments: "time-series-insights-environments.png",
        TimeSeriesInsightsEventsSources: "time-series-insights-events-sources.png",
        Windows10IotCoreServices: "windows-10-iot-core-services.png"
      },
      migration: {
        DatabaseMigrationServices: "database-migration-services.png",
        MigrationProjects: "migration-projects.png",
        RecoveryServicesVaults: "recovery-services-vaults.png"
      },
      ml: {
        BatchAI: "batch-ai.png",
        BotServices: "bot-services.png",
        CognitiveServices: "cognitive-services.png",
        GenomicsAccounts: "genomics-accounts.png",
        MachineLearningServiceWorkspaces: "machine-learning-service-workspaces.png",
        MachineLearningStudioWebServicePlans: "machine-learning-studio-web-service-plans.png",
        MachineLearningStudioWebServices: "machine-learning-studio-web-services.png",
        MachineLearningStudioWorkspaces: "machine-learning-studio-workspaces.png"
      },
      mobile: {
        AppServiceMobile: "app-service-mobile.png",
        MobileEngagement: "mobile-engagement.png",
        NotificationHubs: "notification-hubs.png"
      },
      network: {
        ApplicationGateway: "application-gateway.png",
        ApplicationSecurityGroups: "application-security-groups.png",
        CDNProfiles: "cdn-profiles.png",
        Connections: "connections.png",
        DDOSProtectionPlans: "ddos-protection-plans.png",
        DNSPrivateZones: "dns-private-zones.png",
        DNSZones: "dns-zones.png",
        ExpressrouteCircuits: "expressroute-circuits.png",
        Firewall: "firewall.png",
        FrontDoors: "front-doors.png",
        LoadBalancers: "load-balancers.png",
        LocalNetworkGateways: "local-network-gateways.png",
        NetworkInterfaces: "network-interfaces.png",
        NetworkSecurityGroupsClassic: "network-security-groups-classic.png",
        NetworkWatcher: "network-watcher.png",
        OnPremisesDataGateways: "on-premises-data-gateways.png",
        PublicIpAddresses: "public-ip-addresses.png",
        ReservedIpAddressesClassic: "reserved-ip-addresses-classic.png",
        RouteFilters: "route-filters.png",
        RouteTables: "route-tables.png",
        ServiceEndpointPolicies: "service-endpoint-policies.png",
        Subnets: "subnets.png",
        TrafficManagerProfiles: "traffic-manager-profiles.png",
        VirtualNetworkClassic: "virtual-network-classic.png",
        VirtualNetworkGateways: "virtual-network-gateways.png",
        VirtualNetworks: "virtual-networks.png",
        VirtualWans: "virtual-wans.png"
      },
      security: {
        KeyVaults: "key-vaults.png",
        SecurityCenter: "security-center.png",
        Sentinel: "sentinel.png"
      },
      storage: {
        ArchiveStorage: "archive-storage.png",
        Azurefxtedgefiler: "azurefxtedgefiler.png",
        BlobStorage: "blob-storage.png",
        DataBoxEdgeDataBoxGateway: "data-box-edge---data-box-gateway.png",
        DataBox: "data-box.png",
        DataLakeStorage: "data-lake-storage.png",
        GeneralStorage: "general-storage.png",
        NetappFiles: "netapp-files.png",
        QueuesStorage: "queues-storage.png",
        StorageAccountsClassic: "storage-accounts-classic.png",
        StorageAccounts: "storage-accounts.png",
        StorageExplorer: "storage-explorer.png",
        StorageSyncServices: "storage-sync-services.png",
        StorsimpleDataManagers: "storsimple-data-managers.png",
        StorsimpleDeviceManagers: "storsimple-device-managers.png",
        TableStorage: "table-storage.png"
      },
      web: {
        APIConnections: "api-connections.png",
        AppServiceCertificates: "app-service-certificates.png",
        AppServiceDomains: "app-service-domains.png",
        AppServiceEnvironments: "app-service-environments.png",
        AppServicePlans: "app-service-plans.png",
        AppServices: "app-services.png",
        MediaServices: "media-services.png",
        NotificationHubNamespaces: "notification-hub-namespaces.png",
        Search: "search.png",
        Signalr: "signalr.png"
      }
    }
  }; ///////////////////////////////////////////////////////////////////////////
  // https://github.com/mingrammer/diagrams/blob/master/config.py

  var ALIASES = {
    "azure": {
      "compute": {
        "ContainerRegistries": "ACR",
        "KubernetesServices": "AKS",
        "VMScaleSet": "VMSS"
      }
    }
  }; ///////////////////////////////////////////////////////////////////////////

  function merge(src, node) {
    for (var x in node) {
      var aliase = node[x];

      if (aliase) {
        if (typeof aliase == "string") {
          var obj = src[x];

          if (obj) {
            src[aliase] = obj;
          }
        } else {
          if (src[x]) {
            merge(src[x], node[x]);
          } else {
            src[x] = node[x];
          }
        }
      }
    }
  }

  merge(resources, ALIASES);
  return resources;
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (getResources());

/***/ }),
/* 525 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
function getResources() {
  var resources = {
    baseUrl: "https://raw.githubusercontent.com/mingrammer/diagrams/master/resources/",
    elastic: {
      elasticsearch: {
        Alerting: "alerting.png",
        Beats: "beats.png",
        Elasticsearch: "elasticsearch.png",
        Kibana: "kibana.png",
        Logstash: "logstash.png",
        MachineLearning: "machine-learning.png",
        Maps: "maps.png",
        Monitoring: "monitoring.png",
        SecuritySettings: "security-settings.png",
        Sql: "sql.png"
      },
      enterprisesearch: {
        AppSearch: "app-search.png",
        EnterpriseSearch: "enterprise-search.png",
        SiteSearch: "site-search.png",
        WorkplaceSearch: "workplace-search.png"
      },
      observability: {
        APM: "apm.png",
        Logs: "logs.png",
        Metrics: "metrics.png",
        Observability: "observability.png",
        Uptime: "uptime.png"
      },
      orchestration: {
        ECE: "ece.png",
        ECK: "eck.png"
      },
      saas: {
        Cloud: "cloud.png",
        Elastic: "elastic.png"
      },
      security: {
        Endpoint: "endpoint.png",
        Security: "security.png",
        SIEM: "siem.png"
      }
    }
  }; ///////////////////////////////////////////////////////////////////////////
  // https://github.com/mingrammer/diagrams/blob/master/config.py

  var ALIASES = {
    "elastic": {
      "elasticsearch": {
        "Logstash": "LogStash"
      }
    }
  }; ///////////////////////////////////////////////////////////////////////////

  function merge(src, node) {
    for (var x in node) {
      var aliase = node[x];

      if (aliase) {
        if (typeof aliase == "string") {
          var obj = src[x];

          if (obj) {
            src[aliase] = obj;
          }
        } else {
          if (src[x]) {
            merge(src[x], node[x]);
          } else {
            src[x] = node[x];
          }
        }
      }
    }
  }

  merge(resources, ALIASES);
  return resources;
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (getResources());

/***/ }),
/* 526 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
function getResources() {
  var resources = {
    baseUrl: "https://raw.githubusercontent.com/mingrammer/diagrams/master/resources/",
    firebase: {
      base: {
        Firebase: "firebase.png"
      },
      develop: {
        Authentication: "authentication.png",
        Firestore: "firestore.png",
        Functions: "functions.png",
        Hosting: "hosting.png",
        MLKit: "ml-kit.png",
        RealtimeDatabase: "realtime-database.png",
        Storage: "storage.png"
      },
      extentions: {
        Extensions: "extensions.png"
      },
      grow: {
        ABTesting: "ab-testing.png",
        AppIndexing: "app-indexing.png",
        DynamicLinks: "dynamic-links.png",
        InAppMessaging: "in-app-messaging.png",
        Invites: "invites.png",
        Messaging: "messaging.png",
        Predictions: "predictions.png",
        RemoteConfig: "remote-config.png"
      },
      quality: {
        AppDistribution: "app-distribution.png",
        CrashReporting: "crash-reporting.png",
        Crashlytics: "crashlytics.png",
        PerformanceMonitoring: "performance-monitoring.png",
        TestLab: "test-lab.png"
      }
    }
  }; ///////////////////////////////////////////////////////////////////////////
  // https://github.com/mingrammer/diagrams/blob/master/config.py

  var ALIASES = {
    "firebase": {
      "grow": {
        "Messaging": "FCM"
      }
    }
  }; ///////////////////////////////////////////////////////////////////////////

  function merge(src, node) {
    for (var x in node) {
      var aliase = node[x];

      if (aliase) {
        if (typeof aliase == "string") {
          var obj = src[x];

          if (obj) {
            src[aliase] = obj;
          }
        } else {
          if (src[x]) {
            merge(src[x], node[x]);
          } else {
            src[x] = node[x];
          }
        }
      }
    }
  }

  merge(resources, ALIASES);
  return resources;
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (getResources());

/***/ }),
/* 527 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
function getResources() {
  var resources = {
    baseUrl: "https://raw.githubusercontent.com/mingrammer/diagrams/master/resources/",
    gcp: {
      analytics: {
        Bigquery: "bigquery.png",
        Composer: "composer.png",
        DataCatalog: "data-catalog.png",
        DataFusion: "data-fusion.png",
        Dataflow: "dataflow.png",
        Datalab: "datalab.png",
        Dataprep: "dataprep.png",
        Dataproc: "dataproc.png",
        Genomics: "genomics.png",
        Pubsub: "pubsub.png"
      },
      api: {
        Endpoints: "endpoints.png"
      },
      compute: {
        AppEngine: "app-engine.png",
        ComputeEngine: "compute-engine.png",
        ContainerOptimizedOS: "container-optimized-os.png",
        Functions: "functions.png",
        GKEOnPrem: "gke-on-prem.png",
        GPU: "gpu.png",
        KubernetesEngine: "kubernetes-engine.png",
        Run: "run.png"
      },
      database: {
        Bigtable: "bigtable.png",
        Datastore: "datastore.png",
        Firestore: "firestore.png",
        Memorystore: "memorystore.png",
        Spanner: "spanner.png",
        SQL: "sql.png"
      },
      devtools: {
        Build: "build.png",
        CodeForIntellij: "code-for-intellij.png",
        Code: "code.png",
        ContainerRegistry: "container-registry.png",
        GradleAppEnginePlugin: "gradle-app-engine-plugin.png",
        IdePlugins: "ide-plugins.png",
        MavenAppEnginePlugin: "maven-app-engine-plugin.png",
        Scheduler: "scheduler.png",
        SDK: "sdk.png",
        SourceRepositories: "source-repositories.png",
        Tasks: "tasks.png",
        TestLab: "test-lab.png",
        ToolsForEclipse: "tools-for-eclipse.png",
        ToolsForPowershell: "tools-for-powershell.png",
        ToolsForVisualStudio: "tools-for-visual-studio.png"
      },
      iot: {
        IotCore: "iot-core.png"
      },
      migration: {
        TransferAppliance: "transfer-appliance.png"
      },
      ml: {
        AdvancedSolutionsLab: "advanced-solutions-lab.png",
        AIHub: "ai-hub.png",
        AIPlatformDataLabelingService: "ai-platform-data-labeling-service.png",
        AIPlatform: "ai-platform.png",
        AutomlNaturalLanguage: "automl-natural-language.png",
        AutomlTables: "automl-tables.png",
        AutomlTranslation: "automl-translation.png",
        AutomlVideoIntelligence: "automl-video-intelligence.png",
        AutomlVision: "automl-vision.png",
        Automl: "automl.png",
        DialogFlowEnterpriseEdition: "dialog-flow-enterprise-edition.png",
        InferenceAPI: "inference-api.png",
        JobsAPI: "jobs-api.png",
        NaturalLanguageAPI: "natural-language-api.png",
        RecommendationsAI: "recommendations-ai.png",
        SpeechToText: "speech-to-text.png",
        TextToSpeech: "text-to-speech.png",
        TPU: "tpu.png",
        TranslationAPI: "translation-api.png",
        VideoIntelligenceAPI: "video-intelligence-api.png",
        VisionAPI: "vision-api.png"
      },
      network: {
        Armor: "armor.png",
        CDN: "cdn.png",
        DedicatedInterconnect: "dedicated-interconnect.png",
        DNS: "dns.png",
        ExternalIpAddresses: "external-ip-addresses.png",
        FirewallRules: "firewall-rules.png",
        LoadBalancing: "load-balancing.png",
        NAT: "nat.png",
        Network: "network.png",
        PartnerInterconnect: "partner-interconnect.png",
        PremiumNetworkTier: "premium-network-tier.png",
        Router: "router.png",
        Routes: "routes.png",
        StandardNetworkTier: "standard-network-tier.png",
        TrafficDirector: "traffic-director.png",
        VirtualPrivateCloud: "virtual-private-cloud.png",
        VPN: "vpn.png"
      },
      operations: {
        Monitoring: "monitoring.png"
      },
      security: {
        Iam: "iam.png",
        IAP: "iap.png",
        KeyManagementService: "key-management-service.png",
        ResourceManager: "resource-manager.png",
        SecurityCommandCenter: "security-command-center.png",
        SecurityScanner: "security-scanner.png"
      },
      storage: {
        Filestore: "filestore.png",
        PersistentDisk: "persistent-disk.png",
        Storage: "storage.png"
      }
    }
  }; ///////////////////////////////////////////////////////////////////////////
  // https://github.com/mingrammer/diagrams/blob/master/config.py

  var ALIASES = {
    "gcp": {
      "analytics": {
        "Bigquery": "BigQuery",
        "Pubsub": "PubSub"
      },
      "compute": {
        "AppEngine": "GAE",
        "Functions": "GCF",
        "ComputeEngine": "GCE",
        "KubernetesEngine": "GKE"
      },
      "database": {
        "Bigtable": "BigTable"
      },
      "devtools": {
        "ContainerRegistry": "GCR"
      },
      "ml": {
        "Automl": "AutoML",
        "NaturalLanguageAPI": "NLAPI",
        "SpeechToText": "STT",
        "TextToSpeech": "TTS"
      },
      "network": {
        "VirtualPrivateCloud": "VPC"
      },
      "security": {
        "KeyManagementService": "KMS",
        "SecurityCommandCenter": "SCC"
      },
      "storage": {
        "Storage": "GCS"
      }
    }
  }; ///////////////////////////////////////////////////////////////////////////

  function merge(src, node) {
    for (var x in node) {
      var aliase = node[x];

      if (aliase) {
        if (typeof aliase == "string") {
          var obj = src[x];

          if (obj) {
            src[aliase] = obj;
          }
        } else {
          if (src[x]) {
            merge(src[x], node[x]);
          } else {
            src[x] = node[x];
          }
        }
      }
    }
  }

  merge(resources, ALIASES);
  return resources;
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (getResources());

/***/ }),
/* 528 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
function getResources() {
  var resources = {
    baseUrl: "https://raw.githubusercontent.com/mingrammer/diagrams/master/resources/",
    generic: {
      blank: {
        Blank: "blank.png"
      },
      compute: {
        Rack: "rack.png"
      },
      database: {
        SQL: "sql.png"
      },
      device: {
        Mobile: "mobile.png",
        Tablet: "tablet.png"
      },
      network: {
        Firewall: "firewall.png",
        Router: "router.png",
        Subnet: "subnet.png",
        Switch: "switch.png",
        VPN: "vpn.png"
      },
      os: {
        Android: "android.png",
        Centos: "centos.png",
        IOS: "ios.png",
        LinuxGeneral: "linux-general.png",
        Suse: "suse.png",
        Ubuntu: "ubuntu.png",
        Windows: "windows.png"
      },
      place: {
        Datacenter: "datacenter.png"
      },
      storage: {
        Storage: "storage.png"
      },
      virtualization: {
        Virtualbox: "virtualbox.png",
        Vmware: "vmware.png",
        XEN: "xen.png"
      }
    }
  }; ///////////////////////////////////////////////////////////////////////////
  // https://github.com/mingrammer/diagrams/blob/master/config.py

  var ALIASES = {
    "generic": {}
  }; ///////////////////////////////////////////////////////////////////////////

  function merge(src, node) {
    for (var x in node) {
      var aliase = node[x];

      if (aliase) {
        if (typeof aliase == "string") {
          var obj = src[x];

          if (obj) {
            src[aliase] = obj;
          }
        } else {
          if (src[x]) {
            merge(src[x], node[x]);
          } else {
            src[x] = node[x];
          }
        }
      }
    }
  }

  merge(resources, ALIASES);
  return resources;
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (getResources());

/***/ }),
/* 529 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
function getResources() {
  var resources = {
    baseUrl: "https://raw.githubusercontent.com/mingrammer/diagrams/master/resources/",
    "ibm": {
      "analytics": {
        Analytics: "analytics.png",
        DataIntegration: "data-integration.png",
        DataRepositories: "data-repositories.png",
        DeviceAnalytics: "device-analytics.png",
        StreamingComputing: "streaming-computing.png"
      },
      "applications": {
        ActionableInsight: "actionable-insight.png",
        Annotate: "annotate.png",
        ApiDeveloperPortal: "api-developer-portal.png",
        ApiPolyglotRuntimes: "api-polyglot-runtimes.png",
        AppServer: "app-server.png",
        ApplicationLogic: "application-logic.png",
        EnterpriseApplications: "enterprise-applications.png",
        Index: "index.png",
        IotApplication: "iot-application.png",
        Microservice: "microservice.png",
        MobileApp: "mobile-app.png",
        Ontology: "ontology.png",
        OpenSourceTools: "open-source-tools.png",
        RuntimeServices: "runtime-services.png",
        SaasApplications: "saas-applications.png",
        ServiceBroker: "service-broker.png",
        SpeechToText: "speech-to-text.png",
        VisualRecognition: "visual-recognition.png",
        Visualization: "visualization.png"
      },
      "blockchain": {
        BlockchainDeveloper: "blockchain-developer.png",
        Blockchain: "blockchain.png",
        CertificateAuthority: "certificate-authority.png",
        ClientApplication: "client-application.png",
        Communication: "communication.png",
        Consensus: "consensus.png",
        EventListener: "event-listener.png",
        Event: "event.png",
        ExistingEnterpriseSystems: "existing-enterprise-systems.png",
        HyperledgerFabric: "hyperledger-fabric.png",
        KeyManagement: "key-management.png",
        Ledger: "ledger.png",
        MembershipServicesProviderApi: "membership-services-provider-api.png",
        Membership: "membership.png",
        MessageBus: "message-bus.png",
        Node: "node.png",
        Services: "services.png",
        SmartContract: "smart-contract.png",
        TransactionManager: "transaction-manager.png",
        Wallet: "wallet.png"
      },
      "compute": {
        BareMetalServer: "bare-metal-server.png",
        ImageService: "image-service.png",
        Instance: "instance.png",
        Key: "key.png",
        PowerInstance: "power-instance.png"
      },
      "data": {
        Caches: "caches.png",
        Cloud: "cloud.png",
        ConversationTrainedDeployed: "conversation-trained-deployed.png",
        DataServices: "data-services.png",
        DataSources: "data-sources.png",
        DeviceIdentityService: "device-identity-service.png",
        DeviceRegistry: "device-registry.png",
        EnterpriseData: "enterprise-data.png",
        EnterpriseUserDirectory: "enterprise-user-directory.png",
        FileRepository: "file-repository.png",
        GroundTruth: "ground-truth.png",
        Model: "model.png",
        TmsDataInterface: "tms-data-interface.png"
      },
      "devops": {
        ArtifactManagement: "artifact-management.png",
        BuildTest: "build-test.png",
        CodeEditor: "code-editor.png",
        CollaborativeDevelopment: "collaborative-development.png",
        ConfigurationManagement: "configuration-management.png",
        ContinuousDeploy: "continuous-deploy.png",
        ContinuousTesting: "continuous-testing.png",
        Devops: "devops.png",
        Provision: "provision.png",
        ReleaseManagement: "release-management.png"
      },
      "general": {
        CloudMessaging: "cloud-messaging.png",
        CloudServices: "cloud-services.png",
        Cloudant: "cloudant.png",
        CognitiveServices: "cognitive-services.png",
        DataSecurity: "data-security.png",
        Enterprise: "enterprise.png",
        GovernanceRiskCompliance: "governance-risk-compliance.png",
        IBMContainers: "ibm-containers.png",
        IBMPublicCloud: "ibm-public-cloud.png",
        IdentityAccessManagement: "identity-access-management.png",
        IdentityProvider: "identity-provider.png",
        InfrastructureSecurity: "infrastructure-security.png",
        Internet: "internet.png",
        IotCloud: "iot-cloud.png",
        MicroservicesApplication: "microservices-application.png",
        MicroservicesMesh: "microservices-mesh.png",
        MonitoringLogging: "monitoring-logging.png",
        Monitoring: "monitoring.png",
        ObjectStorage: "object-storage.png",
        OfflineCapabilities: "offline-capabilities.png",
        Openwhisk: "openwhisk.png",
        PeerCloud: "peer-cloud.png",
        RetrieveRank: "retrieve-rank.png",
        Scalable: "scalable.png",
        ServiceDiscoveryConfiguration: "service-discovery-configuration.png",
        TextToSpeech: "text-to-speech.png",
        TransformationConnectivity: "transformation-connectivity.png"
      },
      "infrastructure": {
        Channels: "channels.png",
        CloudMessaging: "cloud-messaging.png",
        Dashboard: "dashboard.png",
        Diagnostics: "diagnostics.png",
        EdgeServices: "edge-services.png",
        EnterpriseMessaging: "enterprise-messaging.png",
        EventFeed: "event-feed.png",
        InfrastructureServices: "infrastructure-services.png",
        InterserviceCommunication: "interservice-communication.png",
        LoadBalancingRouting: "load-balancing-routing.png",
        MicroservicesMesh: "microservices-mesh.png",
        MobileBackend: "mobile-backend.png",
        MobileProviderNetwork: "mobile-provider-network.png",
        MonitoringLogging: "monitoring-logging.png",
        Monitoring: "monitoring.png",
        PeerServices: "peer-services.png",
        ServiceDiscoveryConfiguration: "service-discovery-configuration.png",
        TransformationConnectivity: "transformation-connectivity.png"
      },
      "management": {
        AlertNotification: "alert-notification.png",
        ApiManagement: "api-management.png",
        CloudManagement: "cloud-management.png",
        ClusterManagement: "cluster-management.png",
        ContentManagement: "content-management.png",
        DataServices: "data-services.png",
        DeviceManagement: "device-management.png",
        InformationGovernance: "information-governance.png",
        ItServiceManagement: "it-service-management.png",
        Management: "management.png",
        MonitoringMetrics: "monitoring-metrics.png",
        ProcessManagement: "process-management.png",
        ProviderCloudPortalService: "provider-cloud-portal-service.png",
        PushNotifications: "push-notifications.png",
        ServiceManagementTools: "service-management-tools.png"
      },
      "network": {
        Bridge: "bridge.png",
        DirectLink: "direct-link.png",
        Enterprise: "rnterprise.png",
        Firewall: "firewall.png",
        FloatingIp: "floating-ip.png",
        Gateway: "gateway.png",
        InternetServices: "internet-services.png",
        LoadBalancerListener: "load-balancer-listener.png",
        LoadBalancerPool: "load-balancer-pool.png",
        LoadBalancer: "load-balancer.png",
        LoadBalancingRouting: "load-balancing-routing.png",
        PublicGateway: "public-gateway.png",
        Region: "region.png",
        Router: "router.png",
        Rules: "rules.png",
        Subnet: "subnet.png",
        TransitGateway: "transit-gateway.png",
        Vpc: "vpc.png",
        VpnConnection: "vpn-connection.png",
        VpnGateway: "vpn-gateway.png",
        VpnPolicy: "vpn-policy.png"
      },
      "security": {
        ApiSecurity: "api-security.png",
        BlockchainSecurityService: "blockchain-security-service.png",
        DataSecurity: "data-security.png",
        Firewall: "firewall.png",
        Gateway: "gateway.png",
        GovernanceRiskCompliance: "governance-risk-compliance.png",
        IdentityAccessManagement: "identity-access-management.png",
        IdentityProvider: "identity-provider.png",
        InfrastructureSecurity: "infrastructure-security.png",
        PhysicalSecurity: "physical-security.png",
        SecurityMonitoringIntelligence: "security-monitoring-intelligence.png",
        SecurityServices: "security-services.png",
        TrustendComputing: "trustend-computing.png",
        Vpn: "vpn.png"
      },
      "social": {
        Communities: "communities.png",
        FileSync: "file-sync.png",
        LiveCollaboration: "live-collaboration.png",
        Messaging: "messaging.png",
        Networking: "networking.png"
      },
      "storage": {
        BlockStorage: "block-storage.png",
        ObjectStorage: "object-storage.png"
      },
      "user": {
        Browser: "browser.png",
        Device: "device.png",
        IntegratedDigitalExperiences: "integrated-digital-experiences.png",
        PhysicalEntity: "physical-entity.png",
        Sensor: "sensor.png",
        User: "user.png"
      }
    }
  }; ///////////////////////////////////////////////////////////////////////////
  // https://github.com/mingrammer/diagrams/blob/master/config.py

  var ALIASES = {
    "ibm": {
      "network": {
        "ACL": "Rules",
        "CIS": "InternetServices",
        "DL": "DirectLink",
        "FIP": "FloatingIp",
        "FloatingIP": "FloatingIp",
        "FW": "Firewall",
        "LB": "LoadBalancer",
        "NLB": "LoadBalancer",
        "PublicGateway": "Gateway",
        "SecurityGroupRules": "Rules",
        "TG": "TransitGateway",
        "VPC": "Vpc",
        "VPNGateway": "VpnGateway",
        "VPNConnection": "VpnConnection",
        "VPNPolicy": "VpnPolicy"
      }
    }
  }; ///////////////////////////////////////////////////////////////////////////

  function merge(src, node) {
    for (var x in node) {
      var aliase = node[x];

      if (aliase) {
        if (typeof aliase == "string") {
          var obj = src[x];

          if (obj) {
            src[aliase] = obj;
          }
        } else {
          if (src[x]) {
            merge(src[x], node[x]);
          } else {
            src[x] = node[x];
          }
        }
      }
    }
  }

  merge(resources, ALIASES);
  return resources;
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (getResources());

/***/ }),
/* 530 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
function getResources() {
  var resources = {
    baseUrl: "https://raw.githubusercontent.com/mingrammer/diagrams/master/resources/",
    k8s: {
      chaos: {
        ChaosMesh: "chaos-mesh.png",
        LitmusChaos: "litmus-chaos.png"
      },
      clusterconfig: {
        HPA: "hpa.png",
        Limits: "limits.png",
        Quota: "quota.png"
      },
      compute: {
        Cronjob: "cronjob.png",
        Deploy: "deploy.png",
        DS: "ds.png",
        Job: "job.png",
        Pod: "pod.png",
        RS: "rs.png",
        STS: "sts.png"
      },
      controlplane: {
        API: "api.png",
        CCM: "c-c-m.png",
        CM: "c-m.png",
        KProxy: "k-proxy.png",
        Kubelet: "kubelet.png",
        Sched: "sched.png"
      },
      ecosystem: {
        ExternalDns: "external-dns.png",
        Helm: "helm.png",
        Krew: "krew.png",
        Kustomize: "kustomize.png"
      },
      group: {
        NS: "ns.png"
      },
      infra: {
        ETCD: "etcd.png",
        Master: "master.png",
        Node: "node.png"
      },
      network: {
        Ep: "ep.png",
        Ing: "ing.png",
        Netpol: "netpol.png",
        SVC: "svc.png"
      },
      others: {
        CRD: "crd.png",
        PSP: "psp.png"
      },
      podconfig: {
        CM: "cm.png",
        Secret: "secret.png"
      },
      rbac: {
        CRole: "c-role.png",
        CRB: "crb.png",
        Group: "group.png",
        RB: "rb.png",
        Role: "role.png",
        SA: "sa.png",
        User: "user.png"
      },
      storage: {
        PV: "pv.png",
        PVC: "pvc.png",
        SC: "sc.png",
        Vol: "vol.png"
      }
    }
  }; ///////////////////////////////////////////////////////////////////////////
  // https://github.com/mingrammer/diagrams/blob/master/config.py

  var ALIASES = {
    "k8s": {
      "clusterconfig": {
        "Limits": "LimitRange",
        "HPA": "HorizontalPodAutoscaler"
      },
      "compute": {
        "Deploy": "Deployment",
        "DS": "DaemonSet",
        "RS": "ReplicaSet",
        "STS": "StatefulSet"
      },
      "controlplane": {
        "API": "APIServer",
        "CM": "ControllerManager",
        "KProxy": "KubeProxy",
        "Sched": "Scheduler"
      },
      "group": {
        "NS": "Namespace"
      },
      "network": {
        "Ep": "Endpoint",
        "Ing": "Ingress",
        "Netpol": "NetworkPolicy",
        "SVC": "Service"
      },
      "podconfig": {
        "CM": "ConfigMap"
      },
      "rbac": {
        "CRole": "ClusterRole",
        "CRB": "ClusterRoleBinding",
        "RB": "RoleBinding",
        "SA": "ServiceAccount"
      },
      "storage": {
        "PV": "PersistentVolume",
        "PVC": "PersistentVolumeClaim",
        "SC": "StorageClass",
        "Vol": "Volume"
      }
    }
  }; ///////////////////////////////////////////////////////////////////////////

  function merge(src, node) {
    for (var x in node) {
      var aliase = node[x];

      if (aliase) {
        if (typeof aliase == "string") {
          var obj = src[x];

          if (obj) {
            src[aliase] = obj;
          }
        } else {
          if (src[x]) {
            merge(src[x], node[x]);
          } else {
            src[x] = node[x];
          }
        }
      }
    }
  }

  merge(resources, ALIASES);
  return resources;
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (getResources());

/***/ }),
/* 531 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
function getResources() {
  var resources = {
    baseUrl: "https://raw.githubusercontent.com/mingrammer/diagrams/master/resources/",
    oci: {
      compute: {
        AutoscaleWhite: "autoscale-white.png",
        Autoscale: "autoscale.png",
        BMWhite: "bm-white.png",
        BM: "bm.png",
        ContainerWhite: "container-white.png",
        Container: "container.png",
        FunctionsWhite: "functions-white.png",
        Functions: "functions.png",
        InstancePoolsWhite: "instance-pools-white.png",
        InstancePools: "instance-pools.png",
        OCIRWhite: "ocir-white.png",
        OCIR: "ocir.png",
        OKEWhite: "oke-white.png",
        OKE: "oke.png",
        VMWhite: "vm-white.png",
        VM: "vm.png"
      },
      connectivity: {
        BackboneWhite: "backbone-white.png",
        Backbone: "backbone.png",
        CDNWhite: "cdn-white.png",
        CDN: "cdn.png",
        CustomerDatacenter: "customer-datacenter.png",
        CustomerDatacntrWhite: "customer-datacntr-white.png",
        CustomerPremiseWhite: "customer-premise-white.png",
        CustomerPremise: "customer-premise.png",
        DisconnectedRegionsWhite: "disconnected-regions-white.png",
        DisconnectedRegions: "disconnected-regions.png",
        DNSWhite: "dns-white.png",
        DNS: "dns.png",
        FastConnectWhite: "fast-connect-white.png",
        FastConnect: "fast-connect.png",
        NATGatewayWhite: "nat-gateway-white.png",
        NATGateway: "nat-gateway.png",
        VPNWhite: "vpn-white.png",
        VPN: "vpn.png"
      },
      database: {
        AutonomousWhite: "autonomous-white.png",
        Autonomous: "autonomous.png",
        BigdataServiceWhite: "bigdata-service-white.png",
        BigdataService: "bigdata-service.png",
        DatabaseServiceWhite: "database-service-white.png",
        DatabaseService: "database-service.png",
        DataflowApacheWhite: "dataflow-apache-white.png",
        DataflowApache: "dataflow-apache.png",
        DcatWhite: "dcat-white.png",
        Dcat: "dcat.png",
        DisWhite: "dis-white.png",
        Dis: "dis.png",
        DMSWhite: "dms-white.png",
        DMS: "dms.png",
        ScienceWhite: "science-white.png",
        Science: "science.png",
        StreamWhite: "stream-white.png",
        Stream: "stream.png"
      },
      devops: {
        APIGatewayWhite: "api-gateway-white.png",
        APIGateway: "api-gateway.png",
        APIServiceWhite: "api-service-white.png",
        APIService: "api-service.png",
        ResourceMgmtWhite: "resource-mgmt-white.png",
        ResourceMgmt: "resource-mgmt.png"
      },
      governance: {
        AuditWhite: "audit-white.png",
        Audit: "audit.png",
        CompartmentsWhite: "compartments-white.png",
        Compartments: "compartments.png",
        GroupsWhite: "groups-white.png",
        Groups: "groups.png",
        LoggingWhite: "logging-white.png",
        Logging: "logging.png",
        OCIDWhite: "ocid-white.png",
        OCID: "ocid.png",
        PoliciesWhite: "policies-white.png",
        Policies: "policies.png",
        TaggingWhite: "tagging-white.png",
        Tagging: "tagging.png"
      },
      monitoring: {
        AlarmWhite: "alarm-white.png",
        Alarm: "alarm.png",
        EmailWhite: "email-white.png",
        Email: "email.png",
        EventsWhite: "events-white.png",
        Events: "events.png",
        HealthCheckWhite: "health-check-white.png",
        HealthCheck: "health-check.png",
        NotificationsWhite: "notifications-white.png",
        Notifications: "notifications.png",
        QueueWhite: "queue-white.png",
        Queue: "queue.png",
        SearchWhite: "search-white.png",
        Search: "search.png",
        TelemetryWhite: "telemetry-white.png",
        Telemetry: "telemetry.png",
        WorkflowWhite: "workflow-white.png",
        Workflow: "workflow.png"
      },
      network: {
        DrgWhite: "drg-white.png",
        Drg: "drg.png",
        FirewallWhite: "firewall-white.png",
        Firewall: "firewall.png",
        InternetGatewayWhite: "internet-gateway-white.png",
        InternetGateway: "internet-gateway.png",
        LoadBalancerWhite: "load-balancer-white.png",
        LoadBalancer: "load-balancer.png",
        RouteTableWhite: "route-table-white.png",
        RouteTable: "route-table.png",
        SecurityListsWhite: "security-lists-white.png",
        SecurityLists: "security-lists.png",
        ServiceGatewayWhite: "service-gateway-white.png",
        ServiceGateway: "service-gateway.png",
        VcnWhite: "vcn-white.png",
        Vcn: "vcn.png"
      },
      security: {
        CloudGuardWhite: "cloud-guard-white.png",
        CloudGuard: "cloud-guard.png",
        DDOSWhite: "ddos-white.png",
        DDOS: "ddos.png",
        EncryptionWhite: "encryption-white.png",
        Encryption: "encryption.png",
        IDAccessWhite: "id-access-white.png",
        IDAccess: "id-access.png",
        KeyManagementWhite: "key-management-white.png",
        KeyManagement: "key-management.png",
        MaxSecurityZoneWhite: "max-security-zone-white.png",
        MaxSecurityZone: "max-security-zone.png",
        VaultWhite: "vault-white.png",
        Vault: "vault.png",
        WAFWhite: "waf-white.png",
        WAF: "waf.png"
      },
      storage: {
        BackupRestoreWhite: "backup-restore-white.png",
        BackupRestore: "backup-restore.png",
        BlockStorageCloneWhite: "block-storage-clone-white.png",
        BlockStorageClone: "block-storage-clone.png",
        BlockStorageWhite: "block-storage-white.png",
        BlockStorage: "block-storage.png",
        BucketsWhite: "buckets-white.png",
        Buckets: "buckets.png",
        DataTransferWhite: "data-transfer-white.png",
        DataTransfer: "data-transfer.png",
        ElasticPerformanceWhite: "elastic-performance-white.png",
        ElasticPerformance: "elastic-performance.png",
        FileStorageWhite: "file-storage-white.png",
        FileStorage: "file-storage.png",
        ObjectStorageWhite: "object-storage-white.png",
        ObjectStorage: "object-storage.png",
        StorageGatewayWhite: "storage-gateway-white.png",
        StorageGateway: "storage-gateway.png"
      }
    }
  }; ///////////////////////////////////////////////////////////////////////////
  // https://github.com/mingrammer/diagrams/blob/master/config.py

  var ALIASES = {
    "oci": {
      "compute": {
        "VM": "VirtualMachine",
        "VMWhite": "VirtualMachineWhite",
        "BM": "BareMetal",
        "BMWhite": "BareMetalWhite",
        "OCIR": "OCIRegistry",
        "OCIRWhite": "OCIRegistryWhite",
        "OKE": "ContainerEngine",
        "OKEWhite": "ContainerEngineWhite"
      },
      "database": {
        "Autonomous": "ADB",
        "AutonomousWhite": "ADBWhite",
        "DatabaseService": "DBService",
        "DatabaseServiceWhite": "DBServiceWhite"
      }
    }
  }; ///////////////////////////////////////////////////////////////////////////

  function merge(src, node) {
    for (var x in node) {
      var aliase = node[x];

      if (aliase) {
        if (typeof aliase == "string") {
          var obj = src[x];

          if (obj) {
            src[aliase] = obj;
          }
        } else {
          if (src[x]) {
            merge(src[x], node[x]);
          } else {
            src[x] = node[x];
          }
        }
      }
    }
  }

  merge(resources, ALIASES);
  return resources;
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (getResources());

/***/ }),
/* 532 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
function getResources() {
  var resources = {
    baseUrl: "https://raw.githubusercontent.com/mingrammer/diagrams/master/resources/",
    onprem: {
      aggregator: {
        Fluentd: "fluentd.png",
        Vector: "vector.png"
      },
      analytics: {
        Beam: "beam.png",
        Databricks: "databricks.png",
        Dbt: "dbt.png",
        Flink: "flink.png",
        Hadoop: "hadoop.png",
        Hive: "hive.png",
        Metabase: "metabase.png",
        Norikra: "norikra.png",
        Powerbi: "powerbi.png",
        Presto: "presto.png",
        Singer: "singer.png",
        Spark: "spark.png",
        Storm: "storm.png",
        Superset: "superset.png",
        Tableau: "tableau.png"
      },
      auth: {
        Boundary: "boundary.png",
        BuzzfeedSso: "buzzfeed-sso.png",
        Oauth2Proxy: "oauth2-proxy.png"
      },
      cd: {
        Spinnaker: "spinnaker.png",
        TektonCli: "tekton-cli.png",
        Tekton: "tekton.png"
      },
      certificates: {
        CertManager: "cert-manager.png",
        LetsEncrypt: "lets-encrypt.png"
      },
      ci: {
        Circleci: "circleci.png",
        Concourseci: "concourseci.png",
        Droneci: "droneci.png",
        GithubActions: "github-actions.png",
        Gitlabci: "gitlabci.png",
        Jenkins: "jenkins.png",
        Teamcity: "teamcity.png",
        Travisci: "travisci.png",
        Zuulci: "zuulci.png"
      },
      client: {
        Client: "client.png",
        User: "user.png",
        Users: "users.png"
      },
      compute: {
        Nomad: "nomad.png",
        Server: "server.png"
      },
      container: {
        Containerd: "containerd.png",
        Crio: "crio.png",
        Docker: "docker.png",
        Firecracker: "firecracker.png",
        Gvisor: "gvisor.png",
        Lxc: "lxc.png",
        Rkt: "rkt.png"
      },
      database: {
        Cassandra: "cassandra.png",
        Clickhouse: "clickhouse.png",
        Cockroachdb: "cockroachdb.png",
        Couchbase: "couchbase.png",
        Couchdb: "couchdb.png",
        Dgraph: "dgraph.png",
        Druid: "druid.png",
        Hbase: "hbase.png",
        Influxdb: "influxdb.png",
        Janusgraph: "janusgraph.png",
        Mariadb: "mariadb.png",
        Mongodb: "mongodb.png",
        Mssql: "mssql.png",
        Mysql: "mysql.png",
        Neo4J: "neo4j.png",
        Oracle: "oracle.png",
        Postgresql: "postgresql.png",
        Scylla: "scylla.png"
      },
      dns: {
        Coredns: "coredns.png",
        Powerdns: "powerdns.png"
      },
      etl: {
        Embulk: "embulk.png"
      },
      gitops: {
        Argocd: "argocd.png",
        Flagger: "flagger.png",
        Flux: "flux.png"
      },
      groupware: {
        Nextcloud: "nextcloud.png"
      },
      iac: {
        Ansible: "ansible.png",
        Atlantis: "atlantis.png",
        Awx: "awx.png",
        Puppet: "puppet.png",
        Terraform: "terraform.png"
      },
      identity: {
        Dex: "dex.png"
      },
      inmemory: {
        Aerospike: "aerospike.png",
        Hazelcast: "hazelcast.png",
        Memcached: "memcached.png",
        Redis: "redis.png"
      },
      logging: {
        Fluentbit: "fluentbit.png",
        Graylog: "graylog.png",
        Loki: "loki.png",
        Rsyslog: "rsyslog.png",
        SyslogNg: "syslog-ng.png"
      },
      mlops: {
        Polyaxon: "polyaxon.png"
      },
      monitoring: {
        Cortex: "cortex.png",
        Datadog: "datadog.png",
        Dynatrace: "dynatrace.png",
        Grafana: "grafana.png",
        Humio: "humio.png",
        Newrelic: "newrelic.png",
        PrometheusOperator: "prometheus-operator.png",
        Prometheus: "prometheus.png",
        Sentry: "sentry.png",
        Splunk: "splunk.png",
        Thanos: "thanos.png",
        Zabbix: "zabbix.png"
      },
      network: {
        Ambassador: "ambassador.png",
        Apache: "apache.png",
        Bind9: "bind-9.png",
        Caddy: "caddy.png",
        Consul: "consul.png",
        Envoy: "envoy.png",
        Etcd: "etcd.png",
        Glassfish: "glassfish.png",
        Gunicorn: "gunicorn.png",
        Haproxy: "haproxy.png",
        Internet: "internet.png",
        Istio: "istio.png",
        Jbossas: "jbossas.png",
        Jetty: "jetty.png",
        Kong: "kong.png",
        Linkerd: "linkerd.png",
        Nginx: "nginx.png",
        Ocelot: "ocelot.png",
        OpenServiceMesh: "open-service-mesh.png",
        Opnsense: "opnsense.png",
        Pfsense: "pfsense.png",
        Pomerium: "pomerium.png",
        Powerdns: "powerdns.png",
        Tomcat: "tomcat.png",
        Traefik: "traefik.png",
        Tyk: "tyk.png",
        Vyos: "vyos.png",
        Wildfly: "wildfly.png",
        Zookeeper: "zookeeper.png"
      },
      proxmox: {
        Pve: "pve.png"
      },
      queue: {
        Activemq: "activemq.png",
        Celery: "celery.png",
        Kafka: "kafka.png",
        Nats: "nats.png",
        Rabbitmq: "rabbitmq.png",
        Zeromq: "zeromq.png"
      },
      search: {
        Solr: "solr.png"
      },
      security: {
        Bitwarden: "bitwarden.png",
        Trivy: "trivy.png",
        Vault: "vault.png"
      },
      storage: {
        CephOsd: "ceph-osd.png",
        Ceph: "ceph.png",
        Glusterfs: "glusterfs.png"
      },
      tracing: {
        Jaeger: "jaeger.png"
      },
      vcs: {
        Git: "git.png",
        Gitea: "gitea.png",
        Github: "github.png",
        Gitlab: "gitlab.png",
        Svn: "svn.png"
      },
      workflow: {
        Airflow: "airflow.png",
        Digdag: "digdag.png",
        Kubeflow: "kubeflow.png",
        Nifi: "nifi.png"
      }
    }
  }; ///////////////////////////////////////////////////////////////////////////
  // https://github.com/mingrammer/diagrams/blob/master/config.py

  var ALIASES = {
    "onprem": {
      "analytics": {
        "Powerbi": "PowerBI"
      },
      "ci": {
        "Circleci": "CircleCI",
        "Concourseci": "ConcourseCI",
        "Droneci": "DroneCI",
        "Gitlabci": "GitlabCI",
        "Travisci": "TravisCI",
        "Teamcity": "TC",
        "Zuulci": "ZuulCI"
      },
      "container": {
        "Lxc": "LXC",
        "Rkt": "RKT"
      },
      "database": {
        "Clickhouse": "ClickHouse",
        "Cockroachdb": "CockroachDB",
        "Couchdb": "CouchDB",
        "Hbase": "HBase",
        "Influxdb": "InfluxDB",
        "Janusgraph": "JanusGraph",
        "Mariadb": "MariaDB",
        "Mongodb": "MongoDB",
        "Mssql": "MSSQL",
        "Mysql": "MySQL",
        "Postgresql": "PostgreSQL"
      },
      "gitops": {
        "Argocd": "ArgoCD"
      },
      "logging": {
        "Fluentbit": "FluentBit",
        "Rsyslog": "RSyslog"
      },
      "network": {
        "Etcd": "ETCD",
        "Haproxy": "HAProxy",
        "OpenServiceMesh": "OSM",
        "Opnsense": "OPNSense",
        "Pfsense": "PFSense",
        "Vyos": "VyOS"
      },
      "proxmox": {
        "Pve": "ProxmoxVE"
      },
      "queue": {
        "Activemq": "ActiveMQ",
        "Rabbitmq": "RabbitMQ",
        "Zeromq": "ZeroMQ"
      },
      "storage": {
        "Ceph": "CEPH",
        "CephOsd": "CEPH_OSD"
      },
      "workflow": {
        "Kubeflow": "KubeFlow",
        "Nifi": "NiFi"
      }
    }
  }; ///////////////////////////////////////////////////////////////////////////

  function merge(src, node) {
    for (var x in node) {
      var aliase = node[x];

      if (aliase) {
        if (typeof aliase == "string") {
          var obj = src[x];

          if (obj) {
            src[aliase] = obj;
          }
        } else {
          if (src[x]) {
            merge(src[x], node[x]);
          } else {
            src[x] = node[x];
          }
        }
      }
    }
  }

  merge(resources, ALIASES);
  return resources;
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (getResources());

/***/ }),
/* 533 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
function getResources() {
  var resources = {
    baseUrl: "https://raw.githubusercontent.com/mingrammer/diagrams/master/resources/",
    openstack: {
      apiproxies: {
        EC2API: "ec2api.png"
      },
      applicationlifecycle: {
        Freezer: "freezer.png",
        Masakari: "masakari.png",
        Murano: "murano.png",
        Solum: "solum.png"
      },
      baremetal: {
        Cyborg: "cyborg.png",
        Ironic: "ironic.png"
      },
      billing: {
        Cloudkitty: "cloudkitty.png"
      },
      compute: {
        Nova: "nova.png",
        Qinling: "qinling.png",
        Zun: "zun.png"
      },
      containerservices: {
        Kuryr: "kuryr.png"
      },
      deployment: {
        Ansible: "ansible.png",
        Charms: "charms.png",
        Chef: "chef.png",
        Helm: "helm.png",
        Kolla: "kolla.png",
        Tripleo: "tripleo.png"
      },
      frontend: {
        Horizon: "horizon.png"
      },
      monitoring: {
        Monasca: "monasca.png",
        Telemetry: "telemetry.png"
      },
      multiregion: {
        Tricircle: "tricircle.png"
      },
      networking: {
        Designate: "designate.png",
        Neutron: "neutron.png",
        Octavia: "octavia.png"
      },
      nfv: {
        Tacker: "tacker.png"
      },
      optimization: {
        Congress: "congress.png",
        Rally: "rally.png",
        Vitrage: "vitrage.png",
        Watcher: "watcher.png"
      },
      orchestration: {
        Blazar: "blazar.png",
        Heat: "heat.png",
        Mistral: "mistral.png",
        Senlin: "senlin.png",
        Zaqar: "zaqar.png"
      },
      packaging: {
        LOCI: "loci.png",
        Puppet: "puppet.png",
        RPM: "rpm.png"
      },
      sharedservices: {
        Barbican: "barbican.png",
        Glance: "glance.png",
        Karbor: "karbor.png",
        Keystone: "keystone.png",
        Searchlight: "searchlight.png"
      },
      storage: {
        Cinder: "cinder.png",
        Manila: "manila.png",
        Swift: "swift.png"
      },
      user: {
        Openstackclient: "openstackclient.png"
      },
      workloadprovisioning: {
        Magnum: "magnum.png",
        Sahara: "sahara.png",
        Trove: "trove.png"
      }
    }
  }; ///////////////////////////////////////////////////////////////////////////
  // https://github.com/mingrammer/diagrams/blob/master/config.py

  var ALIASES = {
    "openstack": {
      "user": {
        "Openstackclient": "OpenStackClient"
      },
      "billing": {
        "Cloudkitty": "CloudKitty"
      },
      "deployment": {
        "Kolla": "KollaAnsible",
        "Tripleo": "TripleO"
      }
    }
  }; ///////////////////////////////////////////////////////////////////////////

  function merge(src, node) {
    for (var x in node) {
      var aliase = node[x];

      if (aliase) {
        if (typeof aliase == "string") {
          var obj = src[x];

          if (obj) {
            src[aliase] = obj;
          }
        } else {
          if (src[x]) {
            merge(src[x], node[x]);
          } else {
            src[x] = node[x];
          }
        }
      }
    }
  }

  merge(resources, ALIASES);
  return resources;
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (getResources());

/***/ }),
/* 534 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
function getResources() {
  var resources = {
    baseUrl: "https://raw.githubusercontent.com/mingrammer/diagrams/master/resources/",
    outscale: {
      compute: {
        Compute: "compute.png",
        DirectConnect: "direct-connect.png"
      },
      network: {
        ClientVpn: "client-vpn.png",
        InternetService: "internet-service.png",
        LoadBalancer: "load-balancer.png",
        NatService: "nat-service.png",
        Net: "net.png",
        SiteToSiteVpng: "site-to-site-vpng.png"
      },
      security: {
        Firewall: "firewall.png",
        IdentityAndAccessManagement: "identity-and-access-management.png"
      },
      storage: {
        SimpleStorageService: "simple-storage-service.png",
        Storage: "storage.png"
      }
    }
  }; ///////////////////////////////////////////////////////////////////////////
  // https://github.com/mingrammer/diagrams/blob/master/config.py

  var ALIASES = {
    "outscale": {
      "Osc": "OSC"
    }
  }; ///////////////////////////////////////////////////////////////////////////

  function merge(src, node) {
    for (var x in node) {
      var aliase = node[x];

      if (aliase) {
        if (typeof aliase == "string") {
          var obj = src[x];

          if (obj) {
            src[aliase] = obj;
          }
        } else {
          if (src[x]) {
            merge(src[x], node[x]);
          } else {
            src[x] = node[x];
          }
        }
      }
    }
  }

  merge(resources, ALIASES);
  return resources;
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (getResources());

/***/ }),
/* 535 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
function getResources() {
  var resources = {
    baseUrl: "https://raw.githubusercontent.com/mingrammer/diagrams/master/resources/",
    programming: {
      flowchart: {
        Action: "action.png",
        Collate: "collate.png",
        Database: "database.png",
        Decision: "decision.png",
        Delay: "delay.png",
        Display: "display.png",
        Document: "document.png",
        InputOutput: "input-output.png",
        Inspection: "inspection.png",
        InternalStorage: "internal-storage.png",
        LoopLimit: "loop-limit.png",
        ManualInput: "manual-input.png",
        ManualLoop: "manual-loop.png",
        Merge: "merge.png",
        MultipleDocuments: "multiple-documents.png",
        OffPageConnectorLeft: "off-page-connector-left.png",
        OffPageConnectorRight: "off-page-connector-right.png",
        Or: "or.png",
        PredefinedProcess: "predefined-process.png",
        Preparation: "preparation.png",
        Sort: "sort.png",
        StartEnd: "start-end.png",
        StoredData: "stored-data.png",
        SummingJunction: "summing-junction.png"
      },
      framework: {
        Angular: "angular.png",
        Backbone: "backbone.png",
        Django: "django.png",
        Ember: "ember.png",
        Fastapi: "fastapi.png",
        Flask: "flask.png",
        Flutter: "flutter.png",
        Laravel: "laravel.png",
        Micronaut: "micronaut.png",
        Rails: "rails.png",
        React: "react.png",
        Spring: "spring.png",
        Vue: "vue.png"
      },
      language: {
        Bash: "bash.png",
        C: "c.png",
        Cpp: "cpp.png",
        Csharp: "csharp.png",
        Dart: "dart.png",
        Elixir: "elixir.png",
        Erlang: "erlang.png",
        Go: "go.png",
        Java: "java.png",
        Javascript: "javascript.png",
        Kotlin: "kotlin.png",
        Matlab: "matlab.png",
        Nodejs: "nodejs.png",
        Php: "php.png",
        Python: "python.png",
        R: "r.png",
        Ruby: "ruby.png",
        Rust: "rust.png",
        Scala: "scala.png",
        Swift: "swift.png",
        Typescript: "typescript.png"
      }
    }
  }; ///////////////////////////////////////////////////////////////////////////
  // https://github.com/mingrammer/diagrams/blob/master/config.py

  var ALIASES = {
    "programming": {
      "framework": {
        "Fastapi": "FastAPI"
      },
      "language": {
        "Javascript": "JavaScript",
        "Nodejs": "NodeJS",
        "Php": "PHP",
        "Typescript": "TypeScript"
      }
    }
  }; ///////////////////////////////////////////////////////////////////////////

  function merge(src, node) {
    for (var x in node) {
      var aliase = node[x];

      if (aliase) {
        if (typeof aliase == "string") {
          var obj = src[x];

          if (obj) {
            src[aliase] = obj;
          }
        } else {
          if (src[x]) {
            merge(src[x], node[x]);
          } else {
            src[x] = node[x];
          }
        }
      }
    }
  }

  merge(resources, ALIASES);
  return resources;
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (getResources());

/***/ }),
/* 536 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
function getResources() {
  var resources = {
    baseUrl: "https://raw.githubusercontent.com/mingrammer/diagrams/master/resources/",
    saas: {
      alerting: {
        Newrelic: "newrelic.png",
        Opsgenie: "opsgenie.png",
        Pushover: "pushover.png"
      },
      analytics: {
        Snowflake: "snowflake.png",
        Stitch: "stitch.png"
      },
      cdn: {
        Akamai: "akamai.png",
        Cloudflare: "cloudflare.png"
      },
      chat: {
        Discord: "discord.png",
        Mattermost: "mattermost.png",
        RocketChat: "rocket-chat.png",
        Slack: "slack.png",
        Teams: "teams.png",
        Telegram: "telegram.png"
      },
      filesharing: {
        Nextcloud: "nextcloud.png"
      },
      identity: {
        Auth0: "auth0.png",
        Okta: "okta.png"
      },
      logging: {
        Datadog: "datadog.png",
        Newrelic: "newrelic.png",
        Papertrail: "papertrail.png"
      },
      media: {
        Cloudinary: "cloudinary.png"
      },
      recommendation: {
        Recombee: "recombee.png"
      },
      social: {
        Facebook: "facebook.png",
        Twitter: "twitter.png"
      }
    }
  }; ///////////////////////////////////////////////////////////////////////////
  // https://github.com/mingrammer/diagrams/blob/master/config.py

  var ALIASES = {
    "saas": {
      "logging": {
        "Datadog": "DataDog",
        "Newrelic": "NewRelic"
      }
    }
  }; ///////////////////////////////////////////////////////////////////////////

  function merge(src, node) {
    for (var x in node) {
      var aliase = node[x];

      if (aliase) {
        if (typeof aliase == "string") {
          var obj = src[x];

          if (obj) {
            src[aliase] = obj;
          }
        } else {
          if (src[x]) {
            merge(src[x], node[x]);
          } else {
            src[x] = node[x];
          }
        }
      }
    }
  }

  merge(resources, ALIASES);
  return resources;
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (getResources());

/***/ }),
/* 537 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
function getResources() {
  var resources = {
    baseUrl: "https://raw.githubusercontent.com/mingrammer/diagrams/master/resources/",
    digitalocean: {
      compute: {
        Containers: "containers.png",
        Docker: "docker.png",
        DropletConnect: "droplet-connect.png",
        DropletSnapshot: "droplet-snapshot.png",
        Droplet: "droplet.png",
        K8SCluster: "k8s-cluster.png",
        K8SNodePool: "k8s-node-pool.png",
        K8SNode: "k8s-node.png"
      },
      database: {
        DbaasPrimaryStandbyMore: "dbaas-primary-standby-more.png",
        DbaasPrimary: "dbaas-primary.png",
        DbaasReadOnly: "dbaas-read-only.png",
        DbaasStandby: "dbaas-standby.png"
      },
      network: {
        Certificate: "certificate.png",
        DomainRegistration: "domain-registration.png",
        Domain: "domain.png",
        Firewall: "firewall.png",
        FloatingIp: "floating-ip.png",
        InternetGateway: "internet-gateway.png",
        LoadBalancer: "load-balancer.png",
        ManagedVpn: "managed-vpn.png",
        Vpc: "vpc.png"
      },
      storage: {
        Folder: "folder.png",
        Space: "space.png",
        VolumeSnapshot: "volume-snapshot.png",
        Volume: "volume.png"
      }
    }
  }; ///////////////////////////////////////////////////////////////////////////
  // https://github.com/mingrammer/diagrams/blob/master/config.py

  var ALIASES = {}; ///////////////////////////////////////////////////////////////////////////

  function merge(src, node) {
    for (var x in node) {
      var aliase = node[x];

      if (aliase) {
        if (typeof aliase == "string") {
          var obj = src[x];

          if (obj) {
            src[aliase] = obj;
          }
        } else {
          if (src[x]) {
            merge(src[x], node[x]);
          } else {
            src[x] = node[x];
          }
        }
      }
    }
  }

  merge(resources, ALIASES);
  return resources;
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (getResources());

/***/ }),
/* 538 */
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
function getResources() {
  var resources = {
    program: {
      // https://github.com/alrra/browser-logos/blob/main/src/README.md
      browser: {
        AndroidWebView: "https://cdn.jsdelivr.net/gh/alrra/browser-logos/src/android-webview/android-webview_256x256.png",
        AndroidWebViewBeta: "https://cdn.jsdelivr.net/gh/alrra/browser-logos/src/android-webview-beta/android-webview-beta_256x256.png",
        AndroidWebViewDev: "https://cdn.jsdelivr.net/gh/alrra/browser-logos/src/android-webview-dev/android-webview-dev_256x256.png",
        AndroidWebViewCanary: "https://cdn.jsdelivr.net/gh/alrra/browser-logos/src/android-webview-canary/android-webview-canary_256x256.png",
        Avant: "https://cdn.jsdelivr.net/gh/alrra/browser-logos/src/avant/avant_256x256.png",
        Basilisk: "https://cdn.jsdelivr.net/gh/alrra/browser-logos/src/basilisk/basilisk_256x256.png",
        Brave: "https://cdn.jsdelivr.net/gh/alrra/browser-logos/src/brave/brave_256x256.png",
        BraveBeta: "https://cdn.jsdelivr.net/gh/alrra/browser-logos/src/brave-beta/brave-beta_256x256.png",
        BraveDeveloper: "https://cdn.jsdelivr.net/gh/alrra/browser-logos/src/brave-dev/brave-dev_256x256.png",
        BraveNightly: "https://cdn.jsdelivr.net/gh/alrra/browser-logos/src/brave-nightly/brave-nightly_256x256.png",
        browsh: "https://cdn.jsdelivr.net/gh/alrra/browser-logos/src/browsh/browsh_256x256.png",
        Chrome: "https://cdn.jsdelivr.net/gh/alrra/browser-logos/src/chrome/chrome_256x256.png",
        ChromeBeta: "https://cdn.jsdelivr.net/gh/alrra/browser-logos/src/chrome-beta/chrome-beta_256x256.png",
        ChromeDev: "https://cdn.jsdelivr.net/gh/alrra/browser-logos/src/chrome-dev/chrome-dev_256x256.png",
        ChromeCanary: "https://cdn.jsdelivr.net/gh/alrra/browser-logos/src/chrome-canary/chrome-canary_256x256.png",
        ChromeDevTools: "https://cdn.jsdelivr.net/gh/alrra/browser-logos/src/chrome-devtools/chrome-devtools_256x256.png",
        Chromium: "https://cdn.jsdelivr.net/gh/alrra/browser-logos/src/chromium/chromium_256x256.png",
        CocCoc: "https://cdn.jsdelivr.net/gh/alrra/browser-logos/src/c%E1%BB%91c-c%E1%BB%91c/c%E1%BB%91c-c%E1%BB%91c_256x256.png",
        Dolphin: "https://cdn.jsdelivr.net/gh/alrra/browser-logos/src/dolphin/dolphin_256x256.png",
        MicrosoftEdge: "https://cdn.jsdelivr.net/gh/alrra/browser-logos/src/edge/edge_256x256.png",
        MicrosoftEdgeBeta: "https://cdn.jsdelivr.net/gh/alrra/browser-logos/src/edge-beta/edge-beta_256x256.png",
        MicrosoftEdgeDev: "https://cdn.jsdelivr.net/gh/alrra/browser-logos/src/edge-dev/edge-dev_256x256.png",
        MicrosoftEdgeCanary: "https://cdn.jsdelivr.net/gh/alrra/browser-logos/src/edge-canary/edge-canary_256x256.png",
        Electron: "https://cdn.jsdelivr.net/gh/alrra/browser-logos/src/electron/electron_256x256.png",
        Epic: "https://cdn.jsdelivr.net/gh/alrra/browser-logos/src/epic/epic.png",
        Falkon: "https://cdn.jsdelivr.net/gh/alrra/browser-logos/src/falkon/falkon_256x256.png",
        Firefox: "https://cdn.jsdelivr.net/gh/alrra/browser-logos/src/firefox/firefox_256x256.png",
        FirefoxBeta: "https://cdn.jsdelivr.net/gh/alrra/browser-logos/src/firefox-beta/firefox-beta_256x256.png",
        FirefoxLite: "https://cdn.jsdelivr.net/gh/alrra/browser-logos/src/firefox-lite/firefox-lite_256x256.png",
        FirefoxDeveloperEdition: "https://cdn.jsdelivr.net/gh/alrra/browser-logos/src/firefox-developer-edition/firefox-developer-edition_256x256.png",
        FirefoxNightly: "https://cdn.jsdelivr.net/gh/alrra/browser-logos/src/firefox-nightly/firefox-nightly_256x256.png",
        FirefoxReality: "https://cdn.jsdelivr.net/gh/alrra/browser-logos/src/firefox-reality/firefox-reality_256x256.png",
        GeckoView: "https://cdn.jsdelivr.net/gh/alrra/browser-logos/src/geckoview/geckoview_256x256.png",
        HermesJavaScriptEngine: "https://cdn.jsdelivr.net/gh/alrra/browser-logos/src/hermes/hermes_256x256.png",
        IceCat: "https://cdn.jsdelivr.net/gh/alrra/browser-logos/src/icecat/icecat_256x256.png",
        jsdom: "https://cdn.jsdelivr.net/gh/alrra/browser-logos/src/jsdom/jsdom_256x256.png",
        Konqueror: "https://cdn.jsdelivr.net/gh/alrra/browser-logos/src/konqueror/konqueror_256x256.png",
        Maxthon: "https://cdn.jsdelivr.net/gh/alrra/browser-logos/src/maxthon/maxthon_256x256.png",
        Midori: "https://cdn.jsdelivr.net/gh/alrra/browser-logos/src/midori/midori_256x256.png",
        NetSurf: "https://cdn.jsdelivr.net/gh/alrra/browser-logos/src/netsurf/netsurf_256x256.png",
        NWjs: "https://cdn.jsdelivr.net/gh/alrra/browser-logos/src/nw.js/nw.js_256x256.png",
        Opera: "https://cdn.jsdelivr.net/gh/alrra/browser-logos/src/opera/opera_256x256.png",
        OperaBeta: "https://cdn.jsdelivr.net/gh/alrra/browser-logos/src/opera-beta/opera-beta_256x256.png",
        OperaDeveloper: "https://cdn.jsdelivr.net/gh/alrra/browser-logos/src/opera-developer/opera-developer_256x256.png",
        OperaGX: "https://cdn.jsdelivr.net/gh/alrra/browser-logos/src/opera-gx/opera-gx_256x256.png",
        OperaMini: "https://cdn.jsdelivr.net/gh/alrra/browser-logos/src/opera-mini/opera-mini_256x256.png",
        OperaMiniBeta: "https://cdn.jsdelivr.net/gh/alrra/browser-logos/src/opera-mini-beta/opera-mini-beta_256x256.png",
        OperaNeon: "https://cdn.jsdelivr.net/gh/alrra/browser-logos/src/opera-neon/opera-neon_256x256.png",
        OperaTouch: "https://cdn.jsdelivr.net/gh/alrra/browser-logos/src/opera-touch/opera-touch_256x256.png",
        Otter: "https://cdn.jsdelivr.net/gh/alrra/browser-logos/src/otter/otter_256x256.png",
        Puffin: "https://cdn.jsdelivr.net/gh/alrra/browser-logos/src/puffin/puffin_256x256.png",
        Safari: "https://cdn.jsdelivr.net/gh/alrra/browser-logos/src/safari/safari_256x256.png",
        SafariTechnologyPreview: "https://cdn.jsdelivr.net/gh/alrra/browser-logos/src/safari-technology-preview/safari-technology-preview_256x256.png",
        SafariforIOS: "https://cdn.jsdelivr.net/gh/alrra/browser-logos/src/safari-ios/safari-ios_256x256.png",
        SamsungInternet: "https://cdn.jsdelivr.net/gh/alrra/browser-logos/src/samsung-internet/samsung-internet_256x256.png",
        SamsungInternetBeta: "https://cdn.jsdelivr.net/gh/alrra/browser-logos/src/samsung-internet-beta/samsung-internet-beta_256x256.png",
        SeaMonkey: "https://cdn.jsdelivr.net/gh/alrra/browser-logos/src/seamonkey/seamonkey_256x256.png",
        Servo: "https://cdn.jsdelivr.net/gh/alrra/browser-logos/src/servo/servo_256x256.png",
        Silk: "https://cdn.jsdelivr.net/gh/alrra/browser-logos/src/silk/silk_256x256.png",
        SogouMobile: "https://cdn.jsdelivr.net/gh/alrra/browser-logos/src/sogou-mobile/sogou-mobile_256x256.png",
        Tor: "https://cdn.jsdelivr.net/gh/alrra/browser-logos/src/tor/tor_256x256.png",
        TorAlpha: "https://cdn.jsdelivr.net/gh/alrra/browser-logos/src/tor-alpha/tor-alpha_256x256.png",
        TorNightly: "https://cdn.jsdelivr.net/gh/alrra/browser-logos/src/tor-nightly/tor-nightly_256x256.png",
        SpiderMonkeyJavaScriptEngine: "https://cdn.jsdelivr.net/gh/alrra/browser-logos/src/spidermonkey/spidermonkey_256x256.png",
        UC: "https://cdn.jsdelivr.net/gh/alrra/browser-logos/src/uc/uc_256x256.png",
        UCMini: "https://cdn.jsdelivr.net/gh/alrra/browser-logos/src/uc-mini/uc-mini_256x256.png",
        V8JavaScriptEngine: "https://cdn.jsdelivr.net/gh/alrra/browser-logos/src/v8/v8_256x256.png",
        V8sIgnitionInterpreter: "https://cdn.jsdelivr.net/gh/alrra/browser-logos/src/v8-ignition/v8-ignition_256x256.png",
        V8sLiftoffBaselineCompilerForWebAssembly: "https://cdn.jsdelivr.net/gh/alrra/browser-logos/src/v8-liftoff/v8-liftoff_256x256.png",
        V8sOrinocoGarbageCollector: "https://cdn.jsdelivr.net/gh/alrra/browser-logos/src/v8-orinoco/v8-orinoco_256x256.png",
        V8sTurboFanOptimizingCompiler: "https://cdn.jsdelivr.net/gh/alrra/browser-logos/src/v8-turbofan/v8-turbofan_256x256.png",
        Vivaldi: "https://cdn.jsdelivr.net/gh/alrra/browser-logos/src/vivaldi/vivaldi_256x256.png",
        VivaldiSnapshot: "https://cdn.jsdelivr.net/gh/alrra/browser-logos/src/vivaldi-snapshot/vivaldi-snapshot.png",
        WebEpiphany: "https://cdn.jsdelivr.net/gh/alrra/browser-logos/src/web/web_256x256.png",
        EpiphanyTechnologyPreview: "https://cdn.jsdelivr.net/gh/alrra/browser-logos/src/epiphany-technology-preview/epiphany-technology-preview_256x256.png",
        WebKitengine: "https://cdn.jsdelivr.net/gh/alrra/browser-logos/src/webkit/webkit_256x256.png",
        WebKitNightly: "https://cdn.jsdelivr.net/gh/alrra/browser-logos/src/webkit-nightly/webkit-nightly_256x256.png",
        Yandex: "https://cdn.jsdelivr.net/gh/alrra/browser-logos/src/yandex/yandex_256x256.png",
        YandexBeta: "https://cdn.jsdelivr.net/gh/alrra/browser-logos/src/yandex-beta/yandex-beta_256x256.png",
        YandexAlpha: "https://cdn.jsdelivr.net/gh/alrra/browser-logos/src/yandex-alpha/yandex-alpha_256x256.png",
        YandexLite: "https://cdn.jsdelivr.net/gh/alrra/browser-logos/src/yandex-lite/yandex-lite_256x256.png"
      },
      // https://github.com/sandroasp/Microsoft-Integration-and-Azure-Stencils-Pack-for-Visio
      office365: {
        Access: "https://cdn.jsdelivr.net/gh/sandroasp/Microsoft-Integration-and-Azure-Stencils-Pack-for-Visio/Office%20365/SVG/Access.svg",
        Bookings: "https://cdn.jsdelivr.net/gh/sandroasp/Microsoft-Integration-and-Azure-Stencils-Pack-for-Visio/Office%20365/SVG/Bookings.svg",
        Calendar: "https://cdn.jsdelivr.net/gh/sandroasp/Microsoft-Integration-and-Azure-Stencils-Pack-for-Visio/Office%20365/SVG/Calendar.svg",
        Delve: "https://cdn.jsdelivr.net/gh/sandroasp/Microsoft-Integration-and-Azure-Stencils-Pack-for-Visio/Office%20365/SVG/Delve.svg",
        Document: "https://cdn.jsdelivr.net/gh/sandroasp/Microsoft-Integration-and-Azure-Stencils-Pack-for-Visio/Office%20365/SVG/Document.svg",
        ExcelDoc: "https://cdn.jsdelivr.net/gh/sandroasp/Microsoft-Integration-and-Azure-Stencils-Pack-for-Visio/Office%20365/SVG/Excel-Doc.svg",
        Excel: "https://cdn.jsdelivr.net/gh/sandroasp/Microsoft-Integration-and-Azure-Stencils-Pack-for-Visio/Office%20365/SVG/Excel.svg",
        Exchange: "https://cdn.jsdelivr.net/gh/sandroasp/Microsoft-Integration-and-Azure-Stencils-Pack-for-Visio/Office%20365/SVG/Exchange.svg",
        Fluid: "https://cdn.jsdelivr.net/gh/sandroasp/Microsoft-Integration-and-Azure-Stencils-Pack-for-Visio/Office%20365/SVG/Fluid.svg",
        Folder: "https://cdn.jsdelivr.net/gh/sandroasp/Microsoft-Integration-and-Azure-Stencils-Pack-for-Visio/Office%20365/SVG/Folder.svg",
        FormDoc: "https://cdn.jsdelivr.net/gh/sandroasp/Microsoft-Integration-and-Azure-Stencils-Pack-for-Visio/Office%20365/SVG/Form-Doc.svg",
        Forms: "https://cdn.jsdelivr.net/gh/sandroasp/Microsoft-Integration-and-Azure-Stencils-Pack-for-Visio/Office%20365/SVG/Forms.svg",
        Kaizala: "https://cdn.jsdelivr.net/gh/sandroasp/Microsoft-Integration-and-Azure-Stencils-Pack-for-Visio/Office%20365/SVG/Kaizala.svg",
        ListsD: "https://cdn.jsdelivr.net/gh/sandroasp/Microsoft-Integration-and-Azure-Stencils-Pack-for-Visio/Office%20365/SVG/Lists-D.svg",
        Lists: "https://cdn.jsdelivr.net/gh/sandroasp/Microsoft-Integration-and-Azure-Stencils-Pack-for-Visio/Office%20365/SVG/Lists.svg",
        Myanalytics: "https://cdn.jsdelivr.net/gh/sandroasp/Microsoft-Integration-and-Azure-Stencils-Pack-for-Visio/Office%20365/SVG/Myanalytics.svg",
        OfPrivacy: "https://cdn.jsdelivr.net/gh/sandroasp/Microsoft-Integration-and-Azure-Stencils-Pack-for-Visio/Office%20365/SVG/Of-Privacy.svg",
        Office365: "https://cdn.jsdelivr.net/gh/sandroasp/Microsoft-Integration-and-Azure-Stencils-Pack-for-Visio/Office%20365/SVG/Office-365.svg",
        Onedrive: "https://cdn.jsdelivr.net/gh/sandroasp/Microsoft-Integration-and-Azure-Stencils-Pack-for-Visio/Office%20365/SVG/Onedrive.svg",
        OnenoteDoc: "https://cdn.jsdelivr.net/gh/sandroasp/Microsoft-Integration-and-Azure-Stencils-Pack-for-Visio/Office%20365/SVG/Onenote-Doc.svg",
        Onenote: "https://cdn.jsdelivr.net/gh/sandroasp/Microsoft-Integration-and-Azure-Stencils-Pack-for-Visio/Office%20365/SVG/Onenote.svg",
        Outlook: "https://cdn.jsdelivr.net/gh/sandroasp/Microsoft-Integration-and-Azure-Stencils-Pack-for-Visio/Office%20365/SVG/Outlook.svg",
        Pdf: "https://cdn.jsdelivr.net/gh/sandroasp/Microsoft-Integration-and-Azure-Stencils-Pack-for-Visio/Office%20365/SVG/Pdf.svg",
        Planner: "https://cdn.jsdelivr.net/gh/sandroasp/Microsoft-Integration-and-Azure-Stencils-Pack-for-Visio/Office%20365/SVG/Planner.svg",
        PowerpointDoc: "https://cdn.jsdelivr.net/gh/sandroasp/Microsoft-Integration-and-Azure-Stencils-Pack-for-Visio/Office%20365/SVG/Powerpoint-Doc.svg",
        Powerpoint: "https://cdn.jsdelivr.net/gh/sandroasp/Microsoft-Integration-and-Azure-Stencils-Pack-for-Visio/Office%20365/SVG/Powerpoint.svg",
        ProjectDoc: "https://cdn.jsdelivr.net/gh/sandroasp/Microsoft-Integration-and-Azure-Stencils-Pack-for-Visio/Office%20365/SVG/Project-Doc.svg",
        Project: "https://cdn.jsdelivr.net/gh/sandroasp/Microsoft-Integration-and-Azure-Stencils-Pack-for-Visio/Office%20365/SVG/Project.svg",
        Publisher: "https://cdn.jsdelivr.net/gh/sandroasp/Microsoft-Integration-and-Azure-Stencils-Pack-for-Visio/Office%20365/SVG/Publisher.svg",
        Rewards: "https://cdn.jsdelivr.net/gh/sandroasp/Microsoft-Integration-and-Azure-Stencils-Pack-for-Visio/Office%20365/SVG/Rewards.svg",
        Sharepoint: "https://cdn.jsdelivr.net/gh/sandroasp/Microsoft-Integration-and-Azure-Stencils-Pack-for-Visio/Office%20365/SVG/Sharepoint.svg",
        SkypeForBusiness: "https://cdn.jsdelivr.net/gh/sandroasp/Microsoft-Integration-and-Azure-Stencils-Pack-for-Visio/Office%20365/SVG/Skype-For-Business.svg",
        Stream: "https://cdn.jsdelivr.net/gh/sandroasp/Microsoft-Integration-and-Azure-Stencils-Pack-for-Visio/Office%20365/SVG/Stream.svg",
        Sway: "https://cdn.jsdelivr.net/gh/sandroasp/Microsoft-Integration-and-Azure-Stencils-Pack-for-Visio/Office%20365/SVG/Sway.svg",
        Teams: "https://cdn.jsdelivr.net/gh/sandroasp/Microsoft-Integration-and-Azure-Stencils-Pack-for-Visio/Office%20365/SVG/Teams.svg",
        ToDo: "https://cdn.jsdelivr.net/gh/sandroasp/Microsoft-Integration-and-Azure-Stencils-Pack-for-Visio/Office%20365/SVG/To-Do.svg",
        VisioDoc: "https://cdn.jsdelivr.net/gh/sandroasp/Microsoft-Integration-and-Azure-Stencils-Pack-for-Visio/Office%20365/SVG/Visio-Doc.svg",
        Visio: "https://cdn.jsdelivr.net/gh/sandroasp/Microsoft-Integration-and-Azure-Stencils-Pack-for-Visio/Office%20365/SVG/Visio.svg",
        Whiteboard: "https://cdn.jsdelivr.net/gh/sandroasp/Microsoft-Integration-and-Azure-Stencils-Pack-for-Visio/Office%20365/SVG/Whiteboard.svg",
        Word: "https://cdn.jsdelivr.net/gh/sandroasp/Microsoft-Integration-and-Azure-Stencils-Pack-for-Visio/Office%20365/SVG/Word.svg",
        Yammer: "https://cdn.jsdelivr.net/gh/sandroasp/Microsoft-Integration-and-Azure-Stencils-Pack-for-Visio/Office%20365/SVG/Yammer.svg"
      }
    },
    // https://github.com/edent/SuperTinyIcons
    supertinyicons: {
      socialmedia: {
        Flickr: "https://edent.github.io/SuperTinyIcons/images/svg/flickr.svg",
        Facebook: "https://edent.github.io/SuperTinyIcons/images/svg/facebook.svg",
        Tumblr: "https://edent.github.io/SuperTinyIcons/images/svg/tumblr.svg",
        Twitter: "https://edent.github.io/SuperTinyIcons/images/svg/twitter.svg",
        LinkedIn: "https://edent.github.io/SuperTinyIcons/images/svg/linkedin.svg",
        Instagram: "https://edent.github.io/SuperTinyIcons/images/svg/instagram.svg",
        Reddit: "https://edent.github.io/SuperTinyIcons/images/svg/reddit.svg",
        Pinterest: "https://edent.github.io/SuperTinyIcons/images/svg/pinterest.svg",
        VK: "https://edent.github.io/SuperTinyIcons/images/svg/vk.svg",
        Mastodon: "https://edent.github.io/SuperTinyIcons/images/svg/mastodon.svg",
        Imgur: "https://edent.github.io/SuperTinyIcons/images/svg/imgur.svg",
        Slack: "https://edent.github.io/SuperTinyIcons/images/svg/slack.svg",
        Devto: "https://edent.github.io/SuperTinyIcons/images/svg/dev_to.svg",
        Goodreads: "https://edent.github.io/SuperTinyIcons/images/svg/goodreads.svg",
        TikTok: "https://edent.github.io/SuperTinyIcons/images/svg/tiktok.svg",
        Friendica: "https://edent.github.io/SuperTinyIcons/images/svg/friendica.svg"
      },
      media: {
        SoundCloud: "https://edent.github.io/SuperTinyIcons/images/svg/soundcloud.svg",
        Vimeo: "https://edent.github.io/SuperTinyIcons/images/svg/vimeo.svg",
        Spotify: "https://edent.github.io/SuperTinyIcons/images/svg/spotify.svg",
        YouTube: "https://edent.github.io/SuperTinyIcons/images/svg/youtube.svg",
        AppleMusic: "https://edent.github.io/SuperTinyIcons/images/svg/apple_music.svg",
        Bandcamp: "https://edent.github.io/SuperTinyIcons/images/svg/bandcamp.svg",
        Deezer: "https://edent.github.io/SuperTinyIcons/images/svg/deezer.svg",
        IHeartRadio: "https://edent.github.io/SuperTinyIcons/images/svg/iheartradio.svg",
        Kodi: "https://edent.github.io/SuperTinyIcons/images/svg/kodi.svg",
        Foobar2000: "https://edent.github.io/SuperTinyIcons/images/svg/foobar2000.svg"
      },
      google: {
        Google: "https://edent.github.io/SuperTinyIcons/images/svg/google.svg",
        GooglePlay: "https://edent.github.io/SuperTinyIcons/images/svg/google_play.svg",
        Gmail: "https://edent.github.io/SuperTinyIcons/images/svg/gmail.svg",
        GoogleCalendar: "https://edent.github.io/SuperTinyIcons/images/svg/google_calendar.svg",
        GoogleCollaborativeContentTools: "https://edent.github.io/SuperTinyIcons/images/svg/google_collaborative_content_tools.svg",
        GoogleDocsEditors: "https://edent.github.io/SuperTinyIcons/images/svg/google_docs_editors.svg",
        GoogleDrive: "https://edent.github.io/SuperTinyIcons/images/svg/google_drive.svg",
        GoogleMeet: "https://edent.github.io/SuperTinyIcons/images/svg/google_meet.svg",
        GoogleMaps: "https://edent.github.io/SuperTinyIcons/images/svg/google_maps.svg",
        GoogleScholar: "https://edent.github.io/SuperTinyIcons/images/svg/google_scholar.svg",
        GoogleDrive: "https://edent.github.io/SuperTinyIcons/images/svg/google_drive.svg",
        GoogleMapsOld: "https://edent.github.io/SuperTinyIcons/images/svg/google_maps_old.svg",
        GoogleMailOld: "https://edent.github.io/SuperTinyIcons/images/svg/gmail_old.svg",
        GoogleDriveOld: "https://edent.github.io/SuperTinyIcons/images/svg/google_drive_old.svg",
        GooglePlus: "https://edent.github.io/SuperTinyIcons/images/svg/google_plus.svg"
      },
      communications: {
        WhatsApp: "https://edent.github.io/SuperTinyIcons/images/svg/whatsapp.svg",
        Telegram: "https://edent.github.io/SuperTinyIcons/images/svg/telegram.svg",
        Skype: "https://edent.github.io/SuperTinyIcons/images/svg/skype.svg",
        Snapchat: "https://edent.github.io/SuperTinyIcons/images/svg/snapchat.svg",
        WeChat: "https://edent.github.io/SuperTinyIcons/images/svg/wechat.svg",
        Signal: "https://edent.github.io/SuperTinyIcons/images/svg/signal.svg",
        Phone: "https://edent.github.io/SuperTinyIcons/images/svg/phone.svg",
        LINE: "https://edent.github.io/SuperTinyIcons/images/svg/line.svg",
        Viber: "https://edent.github.io/SuperTinyIcons/images/svg/viber.svg",
        Mailchimp: "https://edent.github.io/SuperTinyIcons/images/svg/mailchimp.svg",
        Threema: "https://edent.github.io/SuperTinyIcons/images/svg/threema.svg",
        Mattermost: "https://edent.github.io/SuperTinyIcons/images/svg/mattermost.svg",
        Protonmail: "https://edent.github.io/SuperTinyIcons/images/svg/protonmail.svg",
        XMPP: "https://edent.github.io/SuperTinyIcons/images/svg/xmpp.svg",
        Tutanota: "https://edent.github.io/SuperTinyIcons/images/svg/tutanota.svg",
        Messenger: "https://edent.github.io/SuperTinyIcons/images/svg/messenger.svg",
        Discord: "https://edent.github.io/SuperTinyIcons/images/svg/discord.svg",
        Zoom: "https://edent.github.io/SuperTinyIcons/images/svg/zoom.svg",
        Wire: "https://edent.github.io/SuperTinyIcons/images/svg/wire.svg",
        Teamspeak: "https://edent.github.io/SuperTinyIcons/images/svg/teamspeak.svg",
        Element: "https://edent.github.io/SuperTinyIcons/images/svg/element.svg"
      },
      websites: {
        HackerNews: "https://edent.github.io/SuperTinyIcons/images/svg/hackernews.svg",
        StackOverflow: "https://edent.github.io/SuperTinyIcons/images/svg/stackoverflow.svg",
        StackExchange: "https://edent.github.io/SuperTinyIcons/images/svg/stackexchange.svg",
        WordPress: "https://edent.github.io/SuperTinyIcons/images/svg/wordpress.svg",
        GitHub: "https://edent.github.io/SuperTinyIcons/images/svg/github.svg",
        Wikipedia: "https://edent.github.io/SuperTinyIcons/images/svg/wikipedia.svg",
        GitLab: "https://edent.github.io/SuperTinyIcons/images/svg/gitlab.svg",
        Meetup: "https://edent.github.io/SuperTinyIcons/images/svg/meetup.svg",
        EBay: "https://edent.github.io/SuperTinyIcons/images/svg/ebay.svg",
        Kickstarter: "https://edent.github.io/SuperTinyIcons/images/svg/kickstarter.svg",
        Yahoo: "https://edent.github.io/SuperTinyIcons/images/svg/yahoo.svg",
        Evernote: "https://edent.github.io/SuperTinyIcons/images/svg/evernote.svg",
        Yammer: "https://edent.github.io/SuperTinyIcons/images/svg/yammer.svg",
        Blogger: "https://edent.github.io/SuperTinyIcons/images/svg/blogger.svg",
        Cloudflare: "https://edent.github.io/SuperTinyIcons/images/svg/cloudflare.svg",
        Amazon: "https://edent.github.io/SuperTinyIcons/images/svg/amazon.svg",
        Strava: "https://edent.github.io/SuperTinyIcons/images/svg/strava.svg",
        Dribbble: "https://edent.github.io/SuperTinyIcons/images/svg/dribbble.svg",
        CodePen: "https://edent.github.io/SuperTinyIcons/images/svg/codepen.svg",
        DigitalOcean: "https://edent.github.io/SuperTinyIcons/images/svg/digitalocean.svg",
        Medium: "https://edent.github.io/SuperTinyIcons/images/svg/medium.svg",
        Airbnb: "https://edent.github.io/SuperTinyIcons/images/svg/airbnb.svg",
        Delicious: "https://edent.github.io/SuperTinyIcons/images/svg/delicious.svg",
        Disqus: "https://edent.github.io/SuperTinyIcons/images/svg/disqus.svg",
        Ghost: "https://edent.github.io/SuperTinyIcons/images/svg/ghost.svg",
        Sketch: "https://edent.github.io/SuperTinyIcons/images/svg/sketch.svg",
        Trello: "https://edent.github.io/SuperTinyIcons/images/svg/trello.svg",
        QQ: "https://edent.github.io/SuperTinyIcons/images/svg/qq.svg",
        Badoo: "https://edent.github.io/SuperTinyIcons/images/svg/badoo.svg",
        Yelp: "https://edent.github.io/SuperTinyIcons/images/svg/yelp.svg",
        Workato: "https://edent.github.io/SuperTinyIcons/images/svg/workato.svg",
        Untappd: "https://edent.github.io/SuperTinyIcons/images/svg/untappd.svg",
        Vivino: "https://edent.github.io/SuperTinyIcons/images/svg/vivino.svg",
        Apereo: "https://edent.github.io/SuperTinyIcons/images/svg/apereo.svg",
        Twilio: "https://edent.github.io/SuperTinyIcons/images/svg/twilio.svg",
        Plex: "https://edent.github.io/SuperTinyIcons/images/svg/plex.svg",
        XING: "https://edent.github.io/SuperTinyIcons/images/svg/xing.svg",
        Pinboard: "https://edent.github.io/SuperTinyIcons/images/svg/pinboard.svg",
        InternetArchive: "https://edent.github.io/SuperTinyIcons/images/svg/internet_archive.svg",
        Access: "https://edent.github.io/SuperTinyIcons/images/svg/access.svg",
        baidu: "https://edent.github.io/SuperTinyIcons/images/svg/baidu.svg",
        Twitch: "https://edent.github.io/SuperTinyIcons/images/svg/twitch.svg",
        OKru: "https://edent.github.io/SuperTinyIcons/images/svg/ok.svg",
        Pocket: "https://edent.github.io/SuperTinyIcons/images/svg/pocket.svg",
        StumbleUpon: "https://edent.github.io/SuperTinyIcons/images/svg/stumbleupon.svg",
        Opencast: "https://edent.github.io/SuperTinyIcons/images/svg/opencast.svg",
        Buffer: "https://edent.github.io/SuperTinyIcons/images/svg/buffer.svg",
        Upwork: "https://edent.github.io/SuperTinyIcons/images/svg/upwork.svg",
        DuckDuckGo: "https://edent.github.io/SuperTinyIcons/images/svg/duckduckgo.svg",
        Bing: "https://edent.github.io/SuperTinyIcons/images/svg/bing.svg",
        IMDb: "https://edent.github.io/SuperTinyIcons/images/svg/imdb.svg",
        Heroku: "https://edent.github.io/SuperTinyIcons/images/svg/heroku.svg",
        ResearchGate: "https://edent.github.io/SuperTinyIcons/images/svg/researchgate.svg",
        OpenCores: "https://edent.github.io/SuperTinyIcons/images/svg/opencores.svg",
        OpenBenches: "https://edent.github.io/SuperTinyIcons/images/svg/openbenches.svg",
        TripAdvisor: "https://edent.github.io/SuperTinyIcons/images/svg/tripadvisor.svg",
        Sentry: "https://edent.github.io/SuperTinyIcons/images/svg/sentry.svg",
        Behance: "https://edent.github.io/SuperTinyIcons/images/svg/behance.svg",
        Taigaio: "https://edent.github.io/SuperTinyIcons/images/svg/taiga.svg",
        Coilcom: "https://edent.github.io/SuperTinyIcons/images/svg/coil.svg",
        Glitch: "https://edent.github.io/SuperTinyIcons/images/svg/glitch.svg",
        AngelList: "https://edent.github.io/SuperTinyIcons/images/svg/angellist.svg",
        Jellyfin: "https://edent.github.io/SuperTinyIcons/images/svg/jellyfin.svg",
        Gandi: "https://edent.github.io/SuperTinyIcons/images/svg/gandi.svg",
        Kaggle: "https://edent.github.io/SuperTinyIcons/images/svg/kaggle.svg",
        Humblebundle: "https://edent.github.io/SuperTinyIcons/images/svg/humblebundle.svg",
        FfreeCodeCamp: "https://edent.github.io/SuperTinyIcons/images/svg/freecodecamp.svg",
        Codeberg: "https://edent.github.io/SuperTinyIcons/images/svg/codeberg.svg",
        BitBucket: "https://edent.github.io/SuperTinyIcons/images/svg/bitbucket.svg",
        Etsy: "https://edent.github.io/SuperTinyIcons/images/svg/etsy.svg",
        Intercom: "https://edent.github.io/SuperTinyIcons/images/svg/intercom.svg",
        Intercom: "https://edent.github.io/SuperTinyIcons/images/svg/overleaf.svg",
        Malt: "https://edent.github.io/SuperTinyIcons/images/svg/malt.svg"
      },
      internet: {
        RSS: "https://edent.github.io/SuperTinyIcons/images/svg/rss.svg",
        Mail: "https://edent.github.io/SuperTinyIcons/images/svg/mail.svg",
        Email: "https://edent.github.io/SuperTinyIcons/images/svg/email.svg",
        HTML5: "https://edent.github.io/SuperTinyIcons/images/svg/html5.svg",
        WiFi: "https://edent.github.io/SuperTinyIcons/images/svg/wifi.svg",
        W3C: "https://edent.github.io/SuperTinyIcons/images/svg/w3c.svg",
        TheUnicodeConsortium: "https://edent.github.io/SuperTinyIcons/images/svg/unicode.svg",
        Markdown: "https://edent.github.io/SuperTinyIcons/images/svg/markdown.svg",
        HAML: "https://edent.github.io/SuperTinyIcons/images/svg/haml.svg",
        Microformats: "https://edent.github.io/SuperTinyIcons/images/svg/microformats.svg",
        CSS3: "https://edent.github.io/SuperTinyIcons/images/svg/css3.svg"
      },
      browsers: {
        Chrome: "https://edent.github.io/SuperTinyIcons/images/svg/chrome.svg",
        Firefox: "https://edent.github.io/SuperTinyIcons/images/svg/firefox.svg",
        SamsungInternet: "https://edent.github.io/SuperTinyIcons/images/svg/samsung_internet.svg",
        Edge: "https://edent.github.io/SuperTinyIcons/images/svg/edge.svg",
        Opera: "https://edent.github.io/SuperTinyIcons/images/svg/opera.svg",
        Safari: "https://edent.github.io/SuperTinyIcons/images/svg/safari.svg",
        Chromium: "https://edent.github.io/SuperTinyIcons/images/svg/chromium.svg"
      },
      podcasts: {
        ITunes: "https://edent.github.io/SuperTinyIcons/images/svg/itunes_podcasts.svg",
        Google: "https://edent.github.io/SuperTinyIcons/images/svg/google_podcasts.svg",
        PocketCasts: "https://edent.github.io/SuperTinyIcons/images/svg/pocketcasts.svg",
        Stitcher: "https://edent.github.io/SuperTinyIcons/images/svg/stitcher.svg",
        TuneIn: "https://edent.github.io/SuperTinyIcons/images/svg/tunein.svg",
        Acast: "https://edent.github.io/SuperTinyIcons/images/svg/acast.svg",
        Overcast: "https://edent.github.io/SuperTinyIcons/images/svg/overcast.svg"
      },
      logos: {
        Apple: "https://edent.github.io/SuperTinyIcons/images/svg/apple.svg",
        NPM: "https://edent.github.io/SuperTinyIcons/images/svg/npm.svg",
        Docker: "https://edent.github.io/SuperTinyIcons/images/svg/docker.svg",
        IBM: "https://edent.github.io/SuperTinyIcons/images/svg/ibm.svg",
        OpenSource: "https://edent.github.io/SuperTinyIcons/images/svg/opensource.svg",
        Intel: "https://edent.github.io/SuperTinyIcons/images/svg/intel.svg",
        VLC: "https://edent.github.io/SuperTinyIcons/images/svg/vlc.svg",
        Vegetarian: "https://edent.github.io/SuperTinyIcons/images/svg/vegetarian.svg",
        Espressif: "https://edent.github.io/SuperTinyIcons/images/svg/espressif.svg",
        NHS: "https://edent.github.io/SuperTinyIcons/images/svg/nhs.svg",
        Orcid: "https://edent.github.io/SuperTinyIcons/images/svg/orcid.svg",
        HP: "https://edent.github.io/SuperTinyIcons/images/svg/hp.svg",
        RedHat: "https://edent.github.io/SuperTinyIcons/images/svg/redhat.svg",
        CentOS: "https://edent.github.io/SuperTinyIcons/images/svg/centos.svg",
        Git: "https://edent.github.io/SuperTinyIcons/images/svg/git.svg",
        Microsoft: "https://edent.github.io/SuperTinyIcons/images/svg/microsoft.svg",
        Grafana: "https://edent.github.io/SuperTinyIcons/images/svg/grafana.svg",
        Ubiquiti: "https://edent.github.io/SuperTinyIcons/images/svg/ubiquiti.svg",
        Adobe: "https://edent.github.io/SuperTinyIcons/images/svg/adobe.svg",
        Homekit: "https://edent.github.io/SuperTinyIcons/images/svg/homekit.svg",
        Pixelfed: "https://edent.github.io/SuperTinyIcons/images/svg/pixelfed.svg",
        Samsung: "https://edent.github.io/SuperTinyIcons/images/svg/samsung.svg",
        Samsung: "https://edent.github.io/SuperTinyIcons/images/svg/samsung_s.svg",
        Samsung: "https://edent.github.io/SuperTinyIcons/images/svg/samsung_swoop.svg",
        Uphold: "https://edent.github.io/SuperTinyIcons/images/svg/uphold.svg",
        CoinPot: "https://edent.github.io/SuperTinyIcons/images/svg/coinpot.svg",
        ThisAmericanLife: "https://edent.github.io/SuperTinyIcons/images/svg/thisamericanlife.svg",
        WHATWG: "https://edent.github.io/SuperTinyIcons/images/svg/whatwg.svg"
      },
      security: {
        Tox: "https://edent.github.io/SuperTinyIcons/images/svg/tox.svg",
        Lock: "https://edent.github.io/SuperTinyIcons/images/svg/lock.svg",
        LastPass: "https://edent.github.io/SuperTinyIcons/images/svg/lastpass.svg",
        Symantec: "https://edent.github.io/SuperTinyIcons/images/svg/symantec.svg",
        Yubico: "https://edent.github.io/SuperTinyIcons/images/svg/yubico.svg",
        Keybase: "https://edent.github.io/SuperTinyIcons/images/svg/keybase.svg",
        Authy: "https://edent.github.io/SuperTinyIcons/images/svg/authy.svg",
        HackerOne: "https://edent.github.io/SuperTinyIcons/images/svg/hackerone.svg",
        Bitwarden: "https://edent.github.io/SuperTinyIcons/images/svg/bitwarden.svg",
        Auth0: "https://edent.github.io/SuperTinyIcons/images/svg/auth0.svg",
        AndOTP: "https://edent.github.io/SuperTinyIcons/images/svg/andotp.svg",
        OpenBugBounty: "https://edent.github.io/SuperTinyIcons/images/svg/openbugbounty.svg",
        OpenVPN: "https://edent.github.io/SuperTinyIcons/images/svg/openvpn.svg",
        KeePassDX: "https://edent.github.io/SuperTinyIcons/images/svg/keepassdx.svg",
        WireGuard: "https://edent.github.io/SuperTinyIcons/images/svg/wireguard.svg"
      },
      payments: {
        PayPal: "https://edent.github.io/SuperTinyIcons/images/svg/paypal.svg",
        Bitcoin: "https://edent.github.io/SuperTinyIcons/images/svg/bitcoin.svg",
        Ethereum: "https://edent.github.io/SuperTinyIcons/images/svg/ethereum.svg",
        Liberapay: "https://edent.github.io/SuperTinyIcons/images/svg/liberapay.svg",
        KoFi: "https://edent.github.io/SuperTinyIcons/images/svg/ko-fi.svg",
        Flattr: "https://edent.github.io/SuperTinyIcons/images/svg/flattr.svg",
        Patreon: "https://edent.github.io/SuperTinyIcons/images/svg/patreon.svg",
        Venmo: "https://edent.github.io/SuperTinyIcons/images/svg/venmo.svg",
        SquareCashApp: "https://edent.github.io/SuperTinyIcons/images/svg/square_cash.svg",
        OpenCollective: "https://edent.github.io/SuperTinyIcons/images/svg/opencollective.svg",
        GateHub: "https://edent.github.io/SuperTinyIcons/images/svg/gatehub.svg"
      },
      programming: {
        Python: "https://edent.github.io/SuperTinyIcons/images/svg/python.svg",
        Julia: "https://edent.github.io/SuperTinyIcons/images/svg/julia.svg",
        PHP: "https://edent.github.io/SuperTinyIcons/images/svg/php.svg",
        Laravel: "https://edent.github.io/SuperTinyIcons/images/svg/laravel.svg",
        Drupal: "https://edent.github.io/SuperTinyIcons/images/svg/drupal.svg",
        React: "https://edent.github.io/SuperTinyIcons/images/svg/react.svg",
        Angular: "https://edent.github.io/SuperTinyIcons/images/svg/angular.svg",
        Sass: "https://edent.github.io/SuperTinyIcons/images/svg/sass.svg",
        JSON: "https://edent.github.io/SuperTinyIcons/images/svg/json.svg",
        Yarn: "https://edent.github.io/SuperTinyIcons/images/svg/yarn.svg",
        Go: "https://edent.github.io/SuperTinyIcons/images/svg/go.svg",
        Java: "https://edent.github.io/SuperTinyIcons/images/svg/java.svg",
        Rust: "https://edent.github.io/SuperTinyIcons/images/svg/rust.svg",
        Clojure: "https://edent.github.io/SuperTinyIcons/images/svg/clojure.svg",
        CoffeeScript: "https://edent.github.io/SuperTinyIcons/images/svg/coffeescript.svg",
        JavaScript: "https://edent.github.io/SuperTinyIcons/images/svg/javascript.svg",
        Flutter: "https://edent.github.io/SuperTinyIcons/images/svg/flutter.svg",
        Backbone: "https://edent.github.io/SuperTinyIcons/images/svg/backbone.svg",
        Vue: "https://edent.github.io/SuperTinyIcons/images/svg/vue.svg",
        Gradle: "https://edent.github.io/SuperTinyIcons/images/svg/gradle.svg",
        AmberFramework: "https://edent.github.io/SuperTinyIcons/images/svg/amberframework.svg",
        Gitea: "https://edent.github.io/SuperTinyIcons/images/svg/gitea.svg",
        Droneio: "https://edent.github.io/SuperTinyIcons/images/svg/drone.svg",
        RubyGems: "https://edent.github.io/SuperTinyIcons/images/svg/rubygems.svg",
        LuckyFramework: "https://edent.github.io/SuperTinyIcons/images/svg/luckyframework.svg",
        Wekan: "https://edent.github.io/SuperTinyIcons/images/svg/wekan.svg",
        KemalFramework: "https://edent.github.io/SuperTinyIcons/images/svg/kemal.svg",
        RubyOnRails: "https://edent.github.io/SuperTinyIcons/images/svg/rubyonrails.svg",
        Kotlin: "https://edent.github.io/SuperTinyIcons/images/svg/kotlin.svg",
        Crystal: "https://edent.github.io/SuperTinyIcons/images/svg/crystal.svg",
        SemaphoreCI: "https://edent.github.io/SuperTinyIcons/images/svg/semaphoreci.svg",
        DjangoProject: "https://edent.github.io/SuperTinyIcons/images/svg/djangoproject.svg",
        Ruby: "https://edent.github.io/SuperTinyIcons/images/svg/ruby.svg",
        SVG: "https://edent.github.io/SuperTinyIcons/images/svg/svg.svg",
        SVG: "https://edent.github.io/SuperTinyIcons/images/svg/preact.svg",
        Svelte: "https://edent.github.io/SuperTinyIcons/images/svg/svelte.svg",
        CPlusPlus: "https://edent.github.io/SuperTinyIcons/images/svg/cplusplus.svg",
        Elastic: "https://edent.github.io/SuperTinyIcons/images/svg/elastic.svg"
      },
      os: {
        Android: "https://edent.github.io/SuperTinyIcons/images/svg/android.svg",
        ArchLinux: "https://edent.github.io/SuperTinyIcons/images/svg/arch_linux.svg",
        Linux: "https://edent.github.io/SuperTinyIcons/images/svg/linux.svg",
        Ubuntu: "https://edent.github.io/SuperTinyIcons/images/svg/ubuntu.svg",
        Windows: "https://edent.github.io/SuperTinyIcons/images/svg/windows.svg",
        ElementaryOS: "https://edent.github.io/SuperTinyIcons/images/svg/elementaryos.svg",
        Debian: "https://edent.github.io/SuperTinyIcons/images/svg/debian.svg",
        LinuxMint: "https://edent.github.io/SuperTinyIcons/images/svg/linux_mint.svg",
        MacOS: "https://edent.github.io/SuperTinyIcons/images/svg/macos.svg",
        FreeBSD: "https://edent.github.io/SuperTinyIcons/images/svg/freebsd.svg"
      },
      gaming: {
        Steam: "https://edent.github.io/SuperTinyIcons/images/svg/steam.svg",
        GOGcom: "https://edent.github.io/SuperTinyIcons/images/svg/gogcom.svg",
        Ubisoft: "https://edent.github.io/SuperTinyIcons/images/svg/ubisoft.svg",
        Uplay: "https://edent.github.io/SuperTinyIcons/images/svg/uplay.svg",
        ElectronicArts: "https://edent.github.io/SuperTinyIcons/images/svg/ea.svg",
        Minecraft: "https://edent.github.io/SuperTinyIcons/images/svg/minecraft.svg",
        Itchio: "https://edent.github.io/SuperTinyIcons/images/svg/itch_io.svg"
      },
      misc: {
        Calendar: "https://edent.github.io/SuperTinyIcons/images/svg/calendar.svg",
        SlideShare: "https://edent.github.io/SuperTinyIcons/images/svg/slideshare.svg",
        Dropbox: "https://edent.github.io/SuperTinyIcons/images/svg/dropbox.svg",
        PDF: "https://edent.github.io/SuperTinyIcons/images/svg/pdf.svg",
        Digidentity: "https://edent.github.io/SuperTinyIcons/images/svg/digidentity.svg",
        Bluetooth: "https://edent.github.io/SuperTinyIcons/images/svg/bluetooth.svg",
        EPub: "https://edent.github.io/SuperTinyIcons/images/svg/epub.svg",
        NextCloud: "https://edent.github.io/SuperTinyIcons/images/svg/nextcloud.svg",
        RaspberryPi: "https://edent.github.io/SuperTinyIcons/images/svg/raspberry_pi.svg",
        Printer: "https://edent.github.io/SuperTinyIcons/images/svg/print.svg",
        Uber: "https://edent.github.io/SuperTinyIcons/images/svg/uber.svg",
        AmazonS3: "https://edent.github.io/SuperTinyIcons/images/svg/amazon_s3.svg",
        Ansible: "https://edent.github.io/SuperTinyIcons/images/svg/ansible.svg",
        Gojek: "https://edent.github.io/SuperTinyIcons/images/svg/gojek.svg",
        AmazonAlexa: "https://edent.github.io/SuperTinyIcons/images/svg/amazon_alexa.svg",
        Finder: "https://edent.github.io/SuperTinyIcons/images/svg/finder.svg",
        Roundcube: "https://edent.github.io/SuperTinyIcons/images/svg/roundcube.svg",
        Fritz: "https://edent.github.io/SuperTinyIcons/images/svg/fritz.svg",
        JacobinMagazine: "https://edent.github.io/SuperTinyIcons/images/svg/jacobin.svg",
        Keskonfai: "https://edent.github.io/SuperTinyIcons/images/svg/keskonfai.svg",
        SublimeText: "https://edent.github.io/SuperTinyIcons/images/svg/sublimetext.svg"
      }
    }
  };
  return resources;
}

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (getResources());

/***/ })
/******/ 	]);
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/compat get default export */
/******/ 	(() => {
/******/ 		// getDefaultExport function for compatibility with non-harmony modules
/******/ 		__webpack_require__.n = (module) => {
/******/ 			var getter = module && module.__esModule ?
/******/ 				() => (module['default']) :
/******/ 				() => (module);
/******/ 			__webpack_require__.d(getter, { a: getter });
/******/ 			return getter;
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/global */
/******/ 	(() => {
/******/ 		__webpack_require__.g = (function() {
/******/ 			if (typeof globalThis === 'object') return globalThis;
/******/ 			try {
/******/ 				return this || new Function('return this')();
/******/ 			} catch (e) {
/******/ 				if (typeof window === 'object') return window;
/******/ 			}
/******/ 		})();
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
var __webpack_exports__ = {};
// This entry need to be wrapped in an IIFE because it need to be in strict mode.
(() => {
"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var canvg__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(1);
/* harmony import */ var d3_selection__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(377);
/* harmony import */ var d3_graphviz__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(374);
/* harmony import */ var d3_graphviz__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(d3_graphviz__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _resources_alibabacloud__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(522);
/* harmony import */ var _resources_aws__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(523);
/* harmony import */ var _resources_azure__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(524);
/* harmony import */ var _resources_elastic__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(525);
/* harmony import */ var _resources_firebase__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(526);
/* harmony import */ var _resources_gcp__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(527);
/* harmony import */ var _resources_generic__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(528);
/* harmony import */ var _resources_ibm__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(529);
/* harmony import */ var _resources_k8s__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(530);
/* harmony import */ var _resources_oci__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(531);
/* harmony import */ var _resources_onprem__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(532);
/* harmony import */ var _resources_openstack__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(533);
/* harmony import */ var _resources_outscale__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(534);
/* harmony import */ var _resources_programming__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(535);
/* harmony import */ var _resources_saas__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(536);
/* harmony import */ var _resources_digitalocean__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(537);
/* harmony import */ var _resources_additional__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(538);



const _ = d3_graphviz__WEBPACK_IMPORTED_MODULE_1__.graphviz;

















var diagramResources = { ..._resources_alibabacloud__WEBPACK_IMPORTED_MODULE_2__.default,
  ..._resources_aws__WEBPACK_IMPORTED_MODULE_3__.default,
  ..._resources_azure__WEBPACK_IMPORTED_MODULE_4__.default,
  ..._resources_elastic__WEBPACK_IMPORTED_MODULE_5__.default,
  ..._resources_firebase__WEBPACK_IMPORTED_MODULE_6__.default,
  ..._resources_gcp__WEBPACK_IMPORTED_MODULE_7__.default,
  ..._resources_generic__WEBPACK_IMPORTED_MODULE_8__.default,
  ..._resources_ibm__WEBPACK_IMPORTED_MODULE_9__.default,
  ..._resources_k8s__WEBPACK_IMPORTED_MODULE_10__.default,
  ..._resources_oci__WEBPACK_IMPORTED_MODULE_11__.default,
  ..._resources_onprem__WEBPACK_IMPORTED_MODULE_12__.default,
  ..._resources_openstack__WEBPACK_IMPORTED_MODULE_13__.default,
  ..._resources_outscale__WEBPACK_IMPORTED_MODULE_14__.default,
  ..._resources_programming__WEBPACK_IMPORTED_MODULE_15__.default,
  ..._resources_saas__WEBPACK_IMPORTED_MODULE_16__.default,
  ..._resources_digitalocean__WEBPACK_IMPORTED_MODULE_17__.default,
  ..._resources_additional__WEBPACK_IMPORTED_MODULE_18__.default
}; // sysgram.js
// version : ${SYSDIAGRAM_VERSION}
// authors : Jeong-Ho, Eun
// license : MIT
// https://succeun.github.io/sysgram.js
// Ansi Color for Console log

var ansi = {
  reset: "\x1b[0m",
  bright: "\x1b[1m",
  dim: "\x1b[2m",
  underscore: "\x1b[4m",
  blink: "\x1b[5m",
  reverse: "\x1b[7m",
  hidden: "\x1b[8m",
  black: "\x1b[30m",
  red: "\x1b[31m",
  green: "\x1b[32m",
  yellow: "\x1b[33m",
  blue: "\x1b[34m",
  magenta: "\x1b[35m",
  cyan: "\x1b[36m",
  white: "\x1b[37m",
  bg_black: "\x1b[40m",
  bg_red: "\x1b[41m",
  bg_green: "\x1b[42m",
  bg_yellow: "\x1b[43m",
  bg_blue: "\x1b[44m",
  bg_magenta: "\x1b[45m",
  bg_cyan: "\x1b[46m",
  bg_white: "\x1b[47m"
}; ////////////////////////////////////////////////////////////////////////////////////
// Default Attributes

var defaultAttrs = {
  digraph: {
    // https://graphviz.org/doc/info/attrs.html
    fontcolor: "#2D3436",
    fontname: "Sans-Serif",
    fontsize: "15",
    nodesep: "0.60",
    pad: "0.5",
    // Padding when fiting
    ranksep: "0.75",
    splines: "ortho",
    // none(""), line(false), polyline, curved, ortho, spline(true)
    //labelloc: "b",			// t(top), b(bottom, default), c(center)
    rankdir: "LR",
    // TB(default), LR, BT, RL
    compound: true // If true, allow edges between clusters.
    //nodesep: 0.25,			// minimum space between two adjacent nodes in the same rank
    //ranksep: 0.5,				// minimum vertical distance between rank

  },
  node: {
    // https://graphviz.org/doc/info/attrs.html
    shape: "none",
    style: "rounded",
    // dashed, dotted, solid, invis, bold, filled, striped, wedged, diagonals, rounded (together possible: dashed,filled)
    fixedsize: true,
    width: "1.4",
    height: "1.9",
    labelloc: "b",
    // t(top), b(bottom), c(center, default)
    // imagepos attribute is not backward compatible
    // TODO: check graphviz version to see if "imagepos" is available >= 2.40
    // https://github.com/xflr6/graphviz/blob/master/graphviz/backend.py#L248
    //imagepos: "mc",
    imagescale: true,
    fontname: "Sans-Serif",
    fontsize: "13",
    fontcolor: "#2D3436",
    target: "_blank"
  },
  edge: {
    // https://graphviz.org/doc/info/attrs.html
    fontname: "Sans-Serif",
    fontsize: "13",
    fontcolor: "#2D3436",
    color: "#7B8894",
    style: "" // dashed, dotted, solid, invis, bold, tapered (together possible: dashed,bold)

  },
  subgraph: {
    // https://graphviz.org/doc/info/attrs.html
    //shape: "box",
    style: "rounded",
    // dashed, dotted, solid, invis, bold, filled, striped, rounded
    labeljust: "l",
    // l(left), r(right), c(center)
    pencolor: "#AEB6BE",
    // border color used to draw the bounding box around a cluster.
    fontname: "Sans-Serif",
    fontsize: "12",
    labelloc: "t",
    // t(top, default), b(bottom), c(center)
    bgcolor: null,
    rankdir: "LR",
    peripheries: 1 // border

  },
  subgraphBgcolors: ["#E5F5FD", "#EBF3E7", "#ECE8F6", "#FDF7E3", "#FDEAE3", "#E1FCFA", "#FCE1F9"],
  table: {
    // https://graphviz.org/doc/info/shapes.html#html
    border: 0,
    // Node attribute is lowercase, table attribute is uppercase
    cellborder: 1,
    cellspacing: 0,
    bgcolor: "white"
  },
  td: {
    // https://graphviz.org/doc/info/shapes.html#html
    bgcolor: "white",
    width: "50px" // mininum width

  },
  record: {
    shape: "record",
    // record, Mrecord
    fixedsize: false,
    height: "0",
    style: "wedged" // dashed, dotted, solid, invis, bold, filled, striped, wedged, diagonals, rounded (together possible: dashed,filled)

  },
  graphviz: {
    // https://github.com/magjac/d3-graphviz#supported-options
    width: "100%",
    height: "100%",
    fit: true,
    engine: "dot",
    // circo, dot (default), fdp, neato, osage, patchwork, twopi
    zoom: true,
    // drag & zoom enable/disable
    useWorker: false,
    useSharedWorker: false
  },
  iconSize: {
    width: "256px",
    height: "256px"
  },
  toImage: {
    delay: 200,
    format: "png",
    quality: 1,
    scale: 1
  },
  highlight: {
    enable: true,
    color: "black",
    shadow: true
  },
  fullscreen: {
    enable: true,
    event: "click",
    css: {
      ".sysgram_mask": {
        "position": "fixed",
        "height": "100%",
        "z-index": "900",
        "background-color": "#555",
        "opacity": "0.9",
        "left": "0px",
        "top": "0px",
        "width": "0%"
      },
      ".sysgram_mask.show": {
        "width": "100%"
      },
      "[data-sysgram-processed=true].fullscreen": {
        "z-index": "999",
        "position": "fixed",
        "margin": "auto",
        "width": "calc(100% - 80px)",
        "height": "calc(100% - 80px)",
        "left": "0",
        "right": "0",
        "top": "0",
        "bottom": "0",
        "cursor": "pointer",
        "border": "2px solid #ccc",
        "box-shadow": "0 2px 8px 0 rgb(0 0 0 / 16%)",
        "min-width": "calc(100% - 80px) !important",
        "min-height": "calc(100% - 80px) !important",
        "background-color": "white",
        "border-radius": "4px"
      },
      "[data-sysgram-processed=true].fullscreen svg": {
        "max-width": "100% !important",
        "max-height": "100% !important",
        //"height": "auto",
        "position": "absolute",
        "left": "50%",
        "top": "50%",
        "transform": "translate(-50%, -50%)",
        "background-color": "#fff",
        "border-radius": "4px"
      }
    }
  },
  selector: ".sysgram",
  startOnLoad: true,
  verbose: false,
  // log output to console
  width: null,
  // When you set the width, content's width is set after rendering.
  height: null // When you set the height, content's height is set after rendering.

}; ////////////////////////////////////////////////////////////////////////////////////
// Context

var rootNode = null;
var nodeQueue = [];
var currentNode = null;
var allNodes = {}; // To determine if it has been created at least once per uuid

var allEdges = {};
var allClusters = {};
var icons = {}; // image urls of Node
// Storing variables in scripts

var context = {
  eval: function (expr) {
    return eval(expr);
  },
  attributes: null
};
var ctx = new Proxy(context, {
  get: function (target, prop) {
    return Reflect.get(target, prop);
  },
  set: function (target, prop, value) {
    if (prop) {
      if (Array.isArray(value)) {
        value = ArrayNode(value);
      }
    }

    return Reflect.set(target, prop, value);
  }
});

function reset() {
  rootNode = null;
  nodeQueue = [];
  currentNode = null;
  allNodes = {};
  allEdges = {}; // remove variables in context

  for (var key in context) {
    if (key == 'eval') continue;
    delete context[key];
  }

  context.attributes = cloneObject(defaultAttrs); // Define attributes to be used within scripts, not global default attributes
}

function addNode(node) {
  if (allNodes[node.uuid] == null) {
    if (currentNode.type == "cluster") {
      node.cluster_uuid = currentNode.uuid; // If it is included in the cluster
    }

    currentNode[node.uuid] = node;
    allNodes[node.uuid] = node;
  }
}

var directs = {
  'none': '-',
  'forward': '->',
  'back': '<-',
  'both': '<->'
};

function addEdge(startNode, endNode, direct, attrs) {
  //	direct: none, forward, back, both
  attrs = attrs || {};
  attrs.dir = direct;
  var startAttrs = startNode.attrs();
  var endAttrs = endNode.attrs();

  if (startAttrs.tooltip && endAttrs.tooltip && direct && !attrs.edgetooltip) {
    attrs.edgetooltip = `${startAttrs.tooltip} ${directs[direct]} ${endAttrs.tooltip}`;
  } // for highlight


  startNode.connectedNodes[endNode.uuid] = direct == "forward" ? "-" : direct == "back" ? "<" : direct == "both" ? "<" : "-";
  endNode.connectedNodes[startNode.uuid] = direct == "forward" ? "<" : direct == "back" ? "-" : direct == "both" ? "<" : "-";
  var key = `${startNode.uuid} -> ${endNode.uuid}`;

  if (attrs.sport != null || attrs.eport != null) {
    var sport = attrs.sport != null ? ":" + attrs.sport : "";
    var eport = attrs.eport != null ? ":" + attrs.eport : "";
    delete attrs.sport;
    delete attrs.eport;
    key = `${startNode.uuid + sport} -> ${endNode.uuid + eport}`;
  }

  if (allEdges[key] == null) {
    allEdges[key] = {
      key: key,
      startnode: startNode,
      endnode: endNode,
      direct: direct,
      attrs: function () {
        return attrs;
      }
    };
  }
}

function diagram_enter(diagram) {
  rootNode = diagram;
  currentNode = rootNode;
  nodeQueue.push(currentNode);
}

function diagram_exit(diagram) {
  currentNode = nodeQueue.splice(-1, 1)[0]; // remove last element
}

function cluster_enter(cluster) {
  currentNode[cluster.uuid] = cluster;
  currentNode = cluster;
  nodeQueue.push(currentNode);
  allClusters[cluster.uuid] = cluster;
}

function cluster_exit(cluster) {
  nodeQueue.pop();
  currentNode = nodeQueue[nodeQueue.length - 1];
} ///////////////////////////////////////////////////////////////////////////////////
// Diagram, Cluster, Node, Edge, ArrayNode


function getArguments(args, baseAttrs) {
  var name = null;
  var callbackFunc = null;
  var attrs = null;

  for (var i = 0; i < args.length; i++) {
    var arg = args[i];

    if (typeof arg === "function") {
      callbackFunc = arg;
    } else if (typeof arg === "string") {
      name = arg;
    } else if (isObject(arg)) {
      attrs = arg;
    }
  }

  name = name == null ? "" : name;

  callbackFunc = callbackFunc || function () {};

  attrs = attrs || {};

  if (baseAttrs) {
    attrs = mergeAttrs(baseAttrs, attrs);
  }

  return {
    name: name,
    callbackFunc: callbackFunc,
    attrs: attrs
  };
}

function convEdge(edgeattrs, startNode, endNode) {
  // cluster connect, ltail (logical tail: start point)
  if (edgeattrs && edgeattrs.ltail && startNode) {
    if (startNode.cluster_uuid) {
      edgeattrs.ltail = startNode.cluster_uuid;
    } else {
      console.warn(`'${startNode.name}[${startNode.uuid}]' is not cluster member.`);
    }
  } // cluster connect, lhead (logical head: end point)


  if (edgeattrs && edgeattrs.lhead && endNode) {
    if (endNode.cluster_uuid) {
      edgeattrs.lhead = endNode.cluster_uuid;
    } else {
      console.warn(`'${endNode.name}[${endNode.uuid}]' is not cluster member.`);
    }
  }

  return edgeattrs;
}

function connect(me, node, direct) {
  if (!node) throw new Error('The node parameter for the connection is null.');

  if (Array.isArray(node)) {
    // natvie array
    node = ArrayNode(node);
  }

  if (me.type == 'edge') {
    me = me.startNode;
  }

  if (Array.isArray(me)) {
    connectGroup(me, node, direct);
  } else if (me.type == 'array_node') {
    connectGroup(me.nodes, node, direct);
  } else {
    if (node.type == 'edge') {
      // ignored direct
      var edge = node;
      me.edgeattrs = edge.attrs(me);
      edge.startNode = me;
    } else if (node.type == 'array_node') {
      var nodes = node.nodes;

      for (var i = 0; i < nodes.length; i++) {
        addNode(nodes[i]);
        addEdge(me, nodes[i], direct, convEdge(me.edgeattrs, me, nodes[i]));
      }

      me.edgeattrs = null;
    } else {
      addNode(node);
      addEdge(me, node, direct, convEdge(me.edgeattrs, me, node));
      me.edgeattrs = null;
    }
  }

  return node;
} // nodes must be native array.


function connectGroup(nodes, node, direct) {
  if (!node) throw new Error('The node parameter for the connection is null.');

  if (Array.isArray(node)) {
    // natvie array
    node = ArrayNode(node);
  }

  if (node.type == 'edge') {
    // ignored direct
    var edge = node;

    for (var i = 0; i < nodes.length; i++) {
      nodes[i].edgeattrs = edge.attrs(nodes[i]);
    }

    edge.startNode = nodes;
  } else if (node.type == 'array_node') {
    for (var i = 0; i < nodes.length; i++) {
      var tgts = node.nodes;

      for (var j = 0; j < tgts.length; j++) {
        addNode(tgts[j]);
        addEdge(nodes[i], tgts[j], direct, convEdge(nodes[i].edgeattrs, nodes[i], tgts[j]));
        nodes[i].edgeattrs = null;
      }
    }
  } else {
    addNode(node);

    for (var i = 0; i < nodes.length; i++) {
      addEdge(nodes[i], node, direct, convEdge(nodes[i].edgeattrs, nodes[i], node));
      nodes[i].edgeattrs = null;
    }
  }

  return node;
}

function Node(name, attrs, icon) {
  attrs = isObject(name) ? name : attrs; // If the first argument is a attributes other than a name

  attrs = attrs || {};
  attrs = mergeAttrs(ctx.attributes.node, attrs);

  if (typeof name == "string") {
    attrs.label = name;

    if (!attrs.tooltip) {
      attrs.tooltip = name;
    }
  } else {
    name = "";
  }

  if (icon) {
    icons[icon] = true;
    attrs.image = icon;
  }

  var node = {
    type: 'node',
    uuid: uuid(),
    name: name,
    connectedNodes: {},
    link: function (node) {
      // -
      return connect(this, node, 'none');
    },
    outin: function (node) {
      // <<
      return connect(this, node, 'back');
    },
    inout: function (node) {
      // >>
      return connect(this, node, 'forward');
    },
    both: function (node) {
      // << >>
      return connect(this, node, 'both');
    },
    edge: function () {
      return connect(this, Edge.apply(null, arguments), '');
    },
    edgeattrs: null,
    attrs: function () {
      return attrs;
    }
  };
  node._ = node.link; // alias (-)

  node.$_ = node.outin; // alias (<<) <-

  node._$ = node.inout; // alias (>>) ->

  node.$_$ = node.both; // alias (<< >>) <->

  node.left = node.outin; // alias (<<)

  node.right = node.inout; // alias (>>)

  node.e = node.edge; // alias (edge)

  addNode(node);
  return node;
}

function ArrayNode(nodes) {
  if (!Array.isArray(nodes)) {
    throw new Error('Nodes is not array.');
  }

  nodes.forEach(function (element) {
    addNode(element);
  });
  var group = {
    type: 'array_node',
    nodes: nodes,
    uuid: uuid(),
    name: '_array_node_',
    link: function (node) {
      // -
      return connectGroup(nodes, node, 'none');
    },
    outin: function (node) {
      // <<
      return connectGroup(nodes, node, 'back');
    },
    inout: function (node) {
      // >>
      return connectGroup(nodes, node, 'forward');
    },
    both: function (node) {
      // << >>
      return connectGroup(nodes, node, 'both');
    },
    edge: function () {
      return connect(this, Edge.apply(null, arguments), '');
    },
    push: function (val) {
      this.nodes.push(val);
    }
  };
  group._ = group.link; // alias (-)

  group.$_ = group.outin; // alias (<<) <-

  group._$ = group.inout; // alias (>>) ->

  group.$_$ = group.both; // alias (<< >>) <->

  group.left = group.outin; // alias (<<)

  group.right = group.inout; // alias (>>)

  group.e = group.edge; // alias (edge)

  return group;
}

function Edge(name, attrs) {
  var args = getArguments(arguments, ctx.attributes.edge);
  name = args.name;
  attrs = args.attrs;

  if (attrs.label) {
    attrs.edgetooltip = attrs.label;
  } else {
    attrs.label = name;

    if (!attrs.edgetooltip) {
      attrs.edgetooltip = name;
    }
  }

  var edge = {
    type: 'edge',
    uuid: uuid(),
    name: '_edge_',
    link: function (node) {
      // -
      return connect(this, node, 'none');
    },
    outin: function (node) {
      // <<
      return connect(this, node, 'back');
    },
    inout: function (node) {
      // >>
      return connect(this, node, 'forward');
    },
    both: function (node) {
      // << >>
      return connect(this, node, 'both');
    },
    attrs: function () {
      return attrs;
    }
  };
  edge._ = edge.link; // alias (-)

  edge.$_ = edge.outin; // alias (<<) <-

  edge._$ = edge.inout; // alias (>>) ->

  edge.$_$ = edge.both; // alias (<< >>) <->

  edge.left = edge.outin; // alias (<<)

  edge.right = edge.inout; // alias (>>)

  return edge;
}

function Cluster(name, callbackFunc, attrs) {
  var args = getArguments(arguments, ctx.attributes.subgraph);
  name = args.name;
  attrs = args.attrs;
  callbackFunc = args.callbackFunc;
  attrs.label = name;

  if (!attrs.tooltip) {
    attrs.tooltip = name;
  }

  var cluster = {
    type: 'cluster',
    uuid: 'cluster_' + uuid(),
    name: name,
    attrs: function () {
      return attrs;
    }
  };
  cluster_enter(cluster);
  callbackFunc.call(ctx, cluster);
  cluster_exit(cluster);
  return cluster;
}

function Diagram(name, callbackFunc, attrs) {
  var args = getArguments(arguments, ctx.attributes.digraph);
  name = args.name;
  attrs = args.attrs;
  callbackFunc = args.callbackFunc;
  attrs.label = name;

  if (!attrs.tooltip) {
    attrs.tooltip = name;
  }

  var diagram = {
    type: 'diagram',
    name: name,
    attrs: function () {
      return attrs;
    }
  };
  diagram_enter(diagram);
  callbackFunc.call(ctx, diagram);
  diagram_exit(diagram);
  return diagram;
}

var Custom = function (name, icon, attrs) {
  if (isObject(name)) {
    attrs = name;
    name = null;
  }

  if (isObject(icon)) {
    attrs = icon;
    icon = null;
  }

  return Node(name || "Custom", attrs, icon);
};

var Dummy = function () {
  var attrs = attrs || {};
  attrs.bgcolor = "#00000000"; // transparent or #00000000

  attrs.peripheries = 0; // Border 0

  var node = Node("", attrs);
  node.dummy = true;
  return node;
};

var DummyCluster = function (callbackFunc, attrs) {
  var args = getArguments(arguments, ctx.attributes.digraph);
  attrs = args.attrs;
  callbackFunc = args.callbackFunc;
  attrs.bgcolor = "#00000000"; // transparent or #00000000

  attrs.peripheries = 0; // Border 0

  var cluster = Cluster("", callbackFunc, attrs);
  cluster.dummy = true;
  return cluster;
};

function Table(attrs) {
  // Node attribute is lowercase, table attribute is uppercase
  attrs = attrs || {};
  attrs = mergeAttrs(ctx.attributes.table, attrs);
  var table = {
    type: 'table',
    tds: [],
    uuid: uuid(),
    name: '_table_',
    connectedNodes: {},
    link: function (node) {
      // -
      return connect(this, node, 'none');
    },
    outin: function (node) {
      // <<
      return connect(this, node, 'back');
    },
    inout: function (node) {
      // >>
      return connect(this, node, 'forward');
    },
    both: function (node) {
      // << >>
      return connect(this, node, 'both');
    },
    edge: function () {
      return connect(this, Edge.apply(null, arguments), '');
    },
    td: function (name, attrs) {
      var td = Td(this, this.tds.length, name, attrs);
      this.tds.push(td);
      return table;
    },
    edgeattrs: null,
    attrs: function () {
      var label = [];
      label.push(`<<TABLE${toTableAttrs(attrs)}>`);

      for (var i in this.tds) {
        var td = this.tds[i];
        label.push(td.attrs().label);
      }

      label.push(`</TABLE>>`);
      attrs.label = label.join("");
      attrs.tooltip = this.tds.length > 0 ? stripHTML(this.tds[0].name) : ""; // forced

      attrs.shape = "plain";
      attrs.fixedsize = false;
      return attrs;
    }
  };
  table._ = table.link; // alias (-)

  table.$_ = table.outin; // alias (<<) <-

  table._$ = table.inout; // alias (>>) ->

  table.$_$ = table.both; // alias (<< >>) <->

  table.left = table.outin; // alias (<<)

  table.right = table.inout; // alias (>>)

  table.e = table.edge; // alias (edge)

  addNode(table);
  return table;
}

function Td(table, index, name, attrs) {
  attrs = isObject(name) ? name : attrs; // If the first argument is a attributes other than a name

  attrs = attrs || {};
  attrs = mergeAttrs(ctx.attributes.td, attrs);

  if (typeof name != "string") {
    name = "";
  }

  var td = {
    type: 'td',
    name: name,
    attrs: function () {
      attrs.label = `<TR><TD PORT="${index}"${toTdAttrs(attrs)}>${this.name}</TD></TR>`;
      return attrs;
    }
  };
  return td;
}

function Record(attrs) {
  attrs = attrs || {};
  attrs = mergeAttrs(ctx.attributes.record, attrs);
  var record = {
    type: 'record',
    rows: [],
    uuid: uuid(),
    connectedNodes: {},
    link: function (node) {
      // -
      return connect(this, node, 'none');
    },
    outin: function (node) {
      // <<
      return connect(this, node, 'back');
    },
    inout: function (node) {
      // >>
      return connect(this, node, 'forward');
    },
    both: function (node) {
      // << >>
      return connect(this, node, 'both');
    },
    edge: function () {
      return connect(this, Edge.apply(null, arguments), '');
    },
    row: function (name) {
      this.rows.push(name);
      return record;
    },
    edgeattrs: null,
    attrs: function () {
      var label = [];

      for (var i in this.rows) {
        var name = this.rows[i];
        label.push("<" + this.rows.length + ">" + name); // { ... }
      }

      attrs.label = label.join("|");
      attrs.tooltip = this.rows.length > 0 ? stripHTML(this.rows[0]) : "";
      return attrs;
    }
  };
  record._ = record.link; // alias (-)

  record.$_ = record.outin; // alias (<<) <-

  record._$ = record.inout; // alias (>>) ->

  record.$_$ = record.both; // alias (<< >>) <->

  record.left = record.outin; // alias (<<)

  record.right = record.inout; // alias (>>)

  record.e = record.edge; // alias (edge)

  addNode(record);
  return record;
} ///////////////////////////////////////////////////////////////////////////////////
// Public function


var isLoadedResources = false;

function generate(scriptOrFunction) {
  loadResources();
  var script = scriptOrFunction;

  if (typeof scriptOrFunction == "function") {
    script = "(" + scriptOrFunction.toString() + ")()";
  }

  if (!script || script.trim().length == 0) {
    console.warn("Script for rendering is null or empty.");
    return "";
  }

  reset();

  try {
    ctx['eval'](script);
  } catch (e) {
    printError(e, script);

    if (ctx.onErrorOccurred) {
      ctx.onErrorOccurred(e);
    } else {
      throw e;
    }
  }

  if (ctx.attributes.fullscreen.enable) {
    initFullscreen();
  }

  var dot = generateDot();
  log(`${ansi.blue}Generated DOT language: ${ansi.red}${dot}`);
  return dot;
}

function generateDot() {
  var lines = [];
  lines.push(`digraph "${rootNode.name}" {`);
  lines.push(`	graph ${toAttrs(rootNode.attrs())}`);
  lines.push(`	node ${toAttrs(ctx.attributes.node)}`);
  lines.push(`	edge ${toAttrs(ctx.attributes.edge)}`);
  lines.push(``);
  generateDotNode(lines, rootNode, 1, 1);
  lines.push(``);
  generateDotEdge(lines, allEdges);
  lines.push(`}`);
  return lines.join('\r\n');
}

function generateDotNode(lines, parent, depth, clusterDepth) {
  var tab = tabs(depth);

  for (var key in parent) {
    var node = parent[key];

    if (node && node.type) {
      if (node.type == 'cluster') {
        lines.push(`${tab}subgraph ${node.uuid} {`);
        var attrs = node.attrs();

        if (!attrs.bgcolor) {
          // Dummy is already set to the transparent background color.
          attrs.bgcolor = ctx.attributes.subgraphBgcolors[clusterDepth - 1];
        }

        lines.push(`${tabs(depth + 1)}graph ${toAttrs(attrs, ctx.attributes.digraph)}`);
        generateDotNode(lines, node, depth + 1, node.dummy ? clusterDepth : clusterDepth + 1);
        lines.push(`${tab}}`);
      } else if (node.type == 'node') {
        // ignored array_node
        lines.push(`${tab}${key} ${toAttrs(node.attrs(), ctx.attributes.node)}`);
      } else if (node.type == 'table') {
        lines.push(`${tab}${key} ${toAttrs(node.attrs(), ctx.attributes.node)}`);
      } else if (node.type == 'record') {
        lines.push(`${tab}${key} ${toAttrs(node.attrs(), ctx.attributes.node)}`);
      }
    }
  }
}

function generateDotEdge(lines, edges) {
  for (var key in edges) {
    var edge = edges[key];
    var attrs = edge.attrs();
    lines.push(`	${edge.key} ${toAttrs(attrs, ctx.attributes.edge)}`);
  }
}

function defineNamespaceResources(dir, namespace) {
  for (var key in namespace) {
    if (!namespace[key] || typeof namespace[key] == "function") {
      continue;
    }

    defineResource(dir, namespace, key);
  }
}

function defineResource(dir, namespace, key) {
  var image = namespace[key];

  if (image.startsWith('http:') || image.startsWith('https:') || image.startsWith('file:')) {
    image = image;
  } else {
    image = dir ? dir + image : image;
  }

  namespace[key] = function () {
    var obj = getArguments(arguments);
    var args = [];
    args[0] = obj.name || key;
    args[1] = obj.attrs;
    args[2] = image;
    var node = Node.apply(null, args);
    return node;
  };

  namespace[key].imageURL = image;
}

function render(selectorOrElement, scriptOrFunction, graphvizOptions, callbackFunction) {
  var dot = generate(scriptOrFunction);

  if (dot) {
    var graphviz = createGraphviz(selectorOrElement, graphvizOptions);
    return renderDot(selectorOrElement, graphviz, dot, callbackFunction);
  }

  return null;
}

function createGraphviz(selectorOrElement, graphvizOptions) {
  graphvizOptions = graphvizOptions || {};
  graphvizOptions = mergeAttrs(ctx.attributes.graphviz, graphvizOptions);
  log("Graphviz options: ", graphvizOptions);

  if (graphvizOptions.scale) {
    if (!graphvizOptions.width || !graphvizOptions.height || String(graphvizOptions.width).indexOf("%") != -1 || String(graphvizOptions.height).indexOf("%") != -1) {
      console.warn("To use scale in graphviz, width and height must be set but not %. [ex: {... scale: 0.5, width: 700, height: 400 ...} ]");
    }
  }

  var element = "string" == typeof selectorOrElement ? document.querySelector(selectorOrElement) : selectorOrElement;

  if (!selectorOrElement) {
    throw new Error("The selector or element is null or emtpy.");
  }

  var graphviz = d3_selection__WEBPACK_IMPORTED_MODULE_19__.default(selectorOrElement).graphviz(graphvizOptions);
  element.graphviz = graphviz; // Assigned sysgram reference

  graphviz.sysgram_ctx = cloneObject(ctx);
  graphviz.sysgram_allNodes = cloneObject(allNodes);
  graphviz.sysgram_allEdges = cloneObject(allEdges);
  graphviz.sysgram_allClusters = cloneObject(allClusters);
  graphviz.attributer(function (d) {
    if (d.tag == "g" && d.key) {
      if (graphviz.sysgram_allNodes[d.key]) {
        d.sysgram_data = graphviz.sysgram_allNodes[d.key];
      } else if (graphviz.sysgram_allEdges[d.key]) {
        d.sysgram_data = graphviz.sysgram_allEdges[d.key];
      } else if (graphviz.sysgram_allClusters[d.key]) {
        d.sysgram_data = graphviz.sysgram_allClusters[d.key];
      }
    }
  }); // hack

  graphviz.toImage = function (name, options) {
    var svg = this.getSVG();
    return svg ? toImage(svg, name, options) : null;
  };

  graphviz.getSVG = function () {
    return element.querySelector('svg');
  };

  Object.entries(icons).forEach(([key, value]) => {
    graphviz.addImage(key, ctx.attributes.iconSize.width, ctx.attributes.iconSize.height);
  });
  return graphviz;
}

function renderDot(selectorOrElement, graphviz, dot, callbackFunc) {
  callbackFunc = callbackFunc || function () {};

  var element = "string" == typeof selectorOrElement ? document.querySelector(selectorOrElement) : selectorOrElement;
  graphviz.renderDot(dot, function () {
    element.setAttribute("data-sysgram-processed", "true");

    if (ctx.attributes.width) {
      element.style.width = ctx.attributes.width;
    }

    if (ctx.attributes.height) {
      element.style.height = ctx.attributes.height;
    }

    if (graphviz.sysgram_ctx.onCompleted) {
      graphviz.sysgram_ctx.onCompleted(element, this);
    }

    if (ctx.attributes.highlight.enable) {
      var func = highlight(ctx.attributes.highlight);
      func(element, graphviz);
    }

    if (ctx.attributes.fullscreen.enable) {
      var func = fullscreen(ctx.attributes.fullscreen);
      func(element, graphviz);
    }

    callbackFunc(element, graphviz);
  });
  return {
    dot: dot,
    graphviz: graphviz
  };
} ///////////////////////////////////////////////////////////////////////////
// DOMContentLoaded


var isLoaded = false;

function initialize(attributes, callbackFunc) {
  attributes = attributes || {};
  var selector = attributes.selector || defaultAttrs.selector;
  var startOnLoad = attributes.startOnLoad != null ? attributes.startOnLoad : defaultAttrs.startOnLoad;

  if (startOnLoad) {
    if (!isLoaded) {
      window.addEventListener('DOMContentLoaded', function (event) {
        init(selector, attributes);
      });
    } else {
      console.warn("Sysgram.js is already running on load.");
    }

    isLoaded = true;
  } else {
    init(selector, attributes, callbackFunc);
  }
}

function init(selector, attributes, callbackFunc) {
  // Change default attributes
  defaultAttrs = mergeAttrs(defaultAttrs, attributes);
  var elements = document.querySelectorAll(selector);

  for (var i = 0; i < elements.length; i++) {
    var element = elements[i];
    var code = getTextCode(element);

    if (!code) {
      code = element.getAttribute("data-sysgram-function");
      code = window[code]; // get function object from function name(string)
    }

    if (!code) {
      throw new Error("Not found script code from inner html or attribute.");
    }

    element.innerHTML = "";
    render(element, code, {}, function (element, graphviz) {
      if (callbackFunc) {
        callbackFunc(element, graphviz);
      }
    });
  }
}

function initWithCode(code, selector, attributes, callbackFunc) {
  // Change default attributes
  defaultAttrs = mergeAttrs(defaultAttrs, attributes);
  var element = typeof selector == "string" ? document.querySelector(selector) : selector;
  render(element, code, {}, function (element, graphviz) {
    if (callbackFunc) {
      callbackFunc(element, graphviz);
    }
  });
} ///////////////////////////////////////////////////////////////////////////
// Load Resources


var diagrams = {}; // Preset namespace resources to be used in scripts

function loadResources(resourceJson, baseUrl) {
  if (!isLoadedResources) {
    resourceJson = resourceJson || diagramResources;
    baseUrl = baseUrl || diagramResources.baseUrl;
    var baseUrl = baseUrl || "https://raw.githubusercontent.com/mingrammer/diagrams/master/resources";
    baseUrl = baseUrl.endsWith("/") ? baseUrl.substring(0, baseUrl.length - 1) : baseUrl;

    for (var x in resourceJson) {
      if (x == 'baseUrl') continue;
      diagrams[x] = resourceJson[x];

      for (var y in resourceJson[x]) {
        var dir = "";

        if (y.startsWith('http:') || y.startsWith('https:') || y.startsWith('file:')) {
          dir = y;
        } else {
          dir = `${baseUrl}/${x}/${y}/`;
        }

        defineNamespaceResources(dir, resourceJson[x][y]);
      }
    }

    isLoadedResources = true;
  }

  return diagrams;
} ///////////////////////////////////////////////////////////////////////////
// To Image from Canvas, SVG


async function copyToCanvas(selectorOrElement, format, quality, scale, delay) {
  var svg = typeof selectorOrElement == "string" ? document.querySelector(selectorOrElement) : selectorOrElement;
  var svgData = new XMLSerializer().serializeToString(svg);
  var svgSize = svg.getBoundingClientRect();
  var canvas = document.createElement('canvas'); //Resize can break shadows

  canvas.width = svgSize.width * scale;
  canvas.height = svgSize.height * scale;
  canvas.style.width = svgSize.width;
  canvas.style.height = svgSize.height;
  var canvasCtx = canvas.getContext("2d");
  canvasCtx.scale(scale, scale);
  var v = canvg__WEBPACK_IMPORTED_MODULE_0__.default.fromString(canvasCtx, svgData, {
    ignoreMouse: true,
    ignoreAnimation: true,
    createImage: function (src, anonymousCrossOrigin) {
      return new Promise(function (resolve) {
        var img = new Image();
        img.crossOrigin = "Anonymous";
        img.addEventListener("load", function () {
          resolve(img);
        }, false);
        img.src = src;
      });
    }
  });
  await v.start();
  return new Promise(function (resolve) {
    setTimeout(function () {
      var file = canvas.toDataURL("image/" + format, quality);
      resolve(file);
    }, delay);
  });
}

function downloadImage(file, filename, format) {
  var a = document.createElement('a');
  a.download = filename + "." + format;
  a.href = file;
  document.body.appendChild(a);
  a.click();
}

var countImage = 0;

async function toImage(target, name, options) {
  name = name || "sysgram-" + ++countImage;
  options = options || {};
  options.format = options.format || ctx.attributes.toImage.format;
  options.scale = options.scale || ctx.attributes.toImage.scale;
  options.quality = options.quality || ctx.attributes.toImage.quality;
  options.download = options.download == null ? true : options.download;
  options.delay = options.delay || ctx.attributes.toImage.delay;
  return await copyToCanvas(target, options.format, options.quality, options.scale, options.delay).then(function (file) {
    if (options.download) {
      downloadImage(file, name, options.format);
    }

    return file;
  }).catch(console.error);
} ////////////////////////////////////////////////////////////////////////////////////
// Util function


function uuid() {
  return 'nxxxxxxxxxxxxxxxyxxxxxxxxxxxxxxx'.replace(/[xy]/g, function (c) {
    var r = Math.random() * 16 | 0,
        v = c == 'x' ? r : r & 0x3 | 0x8;
    return v.toString(16);
  });
}

function isHTML(str) {
  if (str) {
    // if HTML Tag contain, ex: label=< <b>..</b> >
    return str.match("^<( |\n|\r|\t)*<") != null && str.match(">( |\n|\r|\t)*>$") != null;
  }

  return false;
}

function stripHTML(str) {
  return str.replace(/<[^>]*>?/gm, '');
}

function isUpper(str) {
  return !/[a-z]/.test(str) && /[A-Z]/.test(str);
}

function toAttrs(attrs, baseAttrs) {
  var values = [];
  var keys = Object.keys(attrs);

  for (var i in keys) {
    var k = keys[i];
    if (attrs[k] == null) continue;
    if (baseAttrs && baseAttrs[k] == attrs[k]) continue;

    if (k == "label") {
      if (isHTML(attrs[k])) {
        values.push(`label=${attrs[k]}`);
      } else {
        values.push(`${k}="${attrs[k]}"`);
      }
    } else if (k == "tooltip") {
      if (isHTML(attrs[k])) {
        values.push(`${k}="-"`);
        continue;
      }

      values.push(`${k}="${attrs[k]}"`);
    } else if (k == "edgetooltip") {
      var tmp = attrs[k].split(" -> ");

      if (tmp && tmp.length == 2) {
        var left = tmp[0];
        var right = tmp[1];

        if (isHTML(left) || isHTML(right)) {
          values.push(`${k}="-"`);
          continue;
        }
      }

      values.push(`${k}="${attrs[k]}"`);
    } else if (k == "imagescale") {
      values.push(`${k}=${attrs[k]}`);
    } else {
      values.push(`${k}="${attrs[k]}"`);
    }
  }

  return '[' + values.join(", ") + ']';
}

var tableAttrs = [];
("ALIGN,BGCOLOR,BORDER,CELLBORDER,CELLPADDING,CELLSPACING,COLOR,COLUMNS,FIXEDSIZE,GRADIENTANGLE,HEIGHT,HREF,ID,PORT," + "ROWS,SIDES,STYLE,TARGET,TITLE,TOOLTIP,VALIGN,WIDTH").split(",").forEach(function (val) {
  tableAttrs[val] = 1;
});

function toTableAttrs(obj) {
  var values = [];
  var keys = Object.keys(obj);

  for (var i in keys) {
    var k = keys[i];
    if (!tableAttrs[k.toUpperCase()]) continue;
    if (obj[k] == null) continue;
    if (k == "label") continue;
    values.push(`${k}="${obj[k]}"`);
  }

  return values.length > 0 ? " " + values.join(" ") : "";
}

var tdAttrs = [];
("ALIGN,BALIGN,BGCOLOR,BORDER,CELLPADDING,CELLSPACING,COLOR,COLSPAN,FIXEDSIZE,GRADIENTANGLE,HEIGHT,HREF,ID,PORT,ROWSPAN," + "SIDES,STYLE,TARGET,TITLE,TOOLTIP,VALIGN,WIDTH").split(",").forEach(function (val) {
  tdAttrs[val] = 1;
});

function toTdAttrs(obj) {
  var values = [];
  var keys = Object.keys(obj);

  for (var i in keys) {
    var k = keys[i];
    if (!tdAttrs[k.toUpperCase()]) continue;
    if (obj[k] == null) continue;
    if (k == "label") continue;
    values.push(`${k}="${obj[k]}"`);
  }

  return values.length > 0 ? " " + values.join(" ") : "";
}

function tabs(count) {
  var tabs = [];

  for (var i = 0; i < count; i++) {
    tabs.push('\t');
  }

  return tabs.join('');
}

function cloneObject(obj, target) {
  target = target || {};

  for (var key in obj) {
    if (typeof obj[key] == "object" && obj[key] != null) {
      var child = target[key] || {};
      target[key] = cloneObject(obj[key], child);
    } else {
      target[key] = obj[key];
    }
  }

  return target;
}

function mergeAttrs(src, target) {
  var attrs = {};
  if (src) cloneObject(src, attrs);
  if (target) cloneObject(target, attrs);
  return attrs;
}

function getFromUrl(yourUrl) {
  var httpreq = new XMLHttpRequest(); // a new request

  httpreq.open("GET", yourUrl, false);
  httpreq.send(null);
  return httpreq.responseText;
}

function isObject(input) {
  // IE8 will treat undefined and null as object if it wasn't for
  // input != null
  return input != null && Object.prototype.toString.call(input) === '[object Object]';
}

function log() {
  if (ctx.attributes.verbose) {
    console.log.apply(null, arguments);
  }
}

function printError(e, script) {
  if (e.stack) {
    var items = e.stack.split("\n");

    for (var i = 0; i < items.length; i++) {
      var item = items[i];
      var match = item.match(/<anonymous>:([0-9]+):([0-9]+)/);

      if (match && match.length == 3) {
        var row = parseInt(match[1]);
        var col = parseInt(match[2]);
        var lines = script.split("\n");
        var line = lines[row - 1];
        console.log(`${ansi.blue}Sysgram.js Script Error: ${ansi.red}${e.message}
${ansi.blue}[${row}:${col}] ${ansi.red}${line}
${" ".repeat(4 + match[1].length + match[2].length) + toSpace(line, col - 1)}^^^`);
        e.detail = `[${row}:${col}] ${line}
${" ".repeat(4 + match[1].length + match[2].length) + toSpace(line, col - 1)}^^^`;
        break;
      }
    }
  }

  function toSpace(line, limit) {
    var spaces = "";

    for (var i = 0; i < limit; i++) {
      spaces += line[i] == "\t" ? "    " : " ";
    }

    return spaces;
  }
}

function getTextCode(element) {
  // If it is difficult to put it in a <div> like a table tag label, use <!-- --> to get the code if you put the code.
  var code = element.textContent;

  if (code.trim() == "") {
    var node = element.firstChild;

    while (node != null) {
      if (node.nodeType == 8) {
        // COMMENT_NODE
        code = node.nodeValue;
        break;
      }

      node = node.nextSibling;
    }
  }

  return code;
}

function existsSelector(selector) {
  for (var i = 0; i < document.styleSheets.length; i++) {
    if (!document.styleSheets[i].href) {
      var rules = document.styleSheets[i].rules || document.styleSheets[i].cssRules;

      for (var x in rules) {
        var txt = rules[x].selectorText;

        if (typeof txt == 'string') {
          if (txt == selector) {
            return true;
          }
        }
      }
    }
  }

  return false;
}

function addCSSRule(rule) {
  var style = document.createElement('style');
  document.head.appendChild(style);
  style.type = 'text/css';
  style.sheet.insertRule(rule);
} ///////////////////////////////////////////////////////////////////////////
// Return


var sysgram = {
  version: "0.1.1",
  initialize: initialize,
  init: init,
  initWithCode: initWithCode,
  loadResources: loadResources,
  attributes: defaultAttrs,
  generate: generate,
  render: render,
  toImage: toImage,
  util: {
    getTextCode: getTextCode
  }
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (sysgram); ///////////////////////////////////////////////////////////////////////////
// Embedded Helper

function highlight(config) {
  return function (element, graphviz) {
    var elt = d3_selection__WEBPACK_IMPORTED_MODULE_19__.default(element);
    var nodes = elt.selectAll(".node");
    var edges = elt.selectAll(".edge");
    var clusters = elt.selectAll(".cluster");
    nodes.on("mouseover", mouseOver(0.2)).on("mouseout", mouseOut);
    nodes.style("transition", "all 0.3s");
    edges.selectAll("path").style("transition", "all 0.3s");
    edges.selectAll("polygon").style("transition", "all 0.3s");
    edges.selectAll("text").style("transition", "all 0.3s");

    function isConnected(a, b) {
      return a.sysgram_data.connectedNodes[b.key] != null || a.key == b.key;
    }

    function setShadow(el) {
      if (config.shadow == true) el.style.filter = "drop-shadow(rgba(0, 0, 0, 0.7) 3px 3px 2px)";
    }

    function resetShadow(el) {
      if (config.shadow == true) el.style.filter = null;
    }

    function mouseOver(opacity) {
      return function (event, d) {
        nodes.select(function (o) {
          var value = isConnected(d, o) ? 1 : opacity;

          if (value == 1) {
            setShadow(this);
          }

          this.style.strokeOpacity = value;
          this.style.fillOpacity = value;
        });
        edges.select(function (o) {
          if (this.initHighlight == null) {
            this.path = this.querySelector("path"); // line

            if (this.path) {
              this.path_stroke = this.path.getAttribute("stroke");
            }

            this.polygon1 = this.querySelector("polygon:nth-of-type(1)"); // arrow

            if (this.polygon1) {
              this.polygon1_stroke = this.polygon1.getAttribute("stroke");
              this.polygon1_fill = this.polygon1.getAttribute("fill");
            }

            this.polygon2 = this.querySelector("polygon:nth-of-type(2)"); // arrow

            if (this.polygon2) {
              this.polygon2_stroke = this.polygon2.getAttribute("stroke");
              this.polygon2_fill = this.polygon2.getAttribute("fill");
            }

            this.initHighlight = true;
          }

          var value = o.key.indexOf(d.key) >= 0 ? 1 : opacity;

          if (value == 1) {
            if (this.path) {
              this.path.style.stroke = config.color;
              setShadow(this.path);
            }

            if (this.polygon1) {
              this.polygon1.style.stroke = config.color;
              this.polygon1.style.fill = config.color;
              setShadow(this.polygon1);
            }

            if (this.polygon2) {
              this.polygon2.style.stroke = config.color;
              this.polygon2.style.fill = config.color;
              setShadow(this.polygon2);
            }
          }

          this.style.strokeOpacity = value;
          this.style.fillOpacity = value;
        });
      };
    }

    function mouseOut(event, d) {
      nodes.select(function (o) {
        resetShadow(this);
        this.style.strokeOpacity = 1; // nodes.style("stroke-opacity", 1);

        this.style.fillOpacity = 1; // nodes.style("fill-opacity", 1);
      });
      edges.select(function (o) {
        if (this.path) {
          this.path.style.stroke = this.path_stroke;
          resetShadow(this.path);
        }

        if (this.polygon1) {
          this.polygon1.style.stroke = this.polygon1_stroke;
          this.polygon1.style.fill = this.polygon1_fill;
          resetShadow(this.polygon1);
        }

        if (this.polygon2) {
          this.polygon2.style.stroke = this.polygon2_stroke;
          this.polygon2.style.fill = this.polygon2_fill;
          resetShadow(this.polygon2);
        }

        this.style.strokeOpacity = 1;
        this.style.fillOpacity = 1;
      });
    }
  };
}

var isInitFullScreen = false;

function initFullscreen() {
  if (!isInitFullScreen) {
    for (var selector in ctx.attributes.fullscreen.css) {
      var isRule = existsSelector(selector);

      if (!isRule) {
        var cssRule = ctx.attributes.fullscreen.css[selector];
        var txt = [];
        txt.push(selector + " {");

        for (var k in cssRule) {
          txt.push(`${k}: ${cssRule[k]};`);
        }

        txt.push("}");
        addCSSRule(txt.join(" "));
      }
    } // create mask


    var mask = document.createElement("div");
    mask.className = "sysgram_mask";
    document.body.appendChild(mask);
  }

  isInitFullScreen = true;
}

function fullscreen(config) {
  return function (element, graphviz) {
    element.addEventListener(config.event, function (e) {
      this.classList.toggle("fullscreen");
      document.querySelector(".sysgram_mask").classList.toggle("show");
    });
  };
}
})();

__webpack_exports__ = __webpack_exports__.default;
/******/ 	return __webpack_exports__;
/******/ })()
;
});
//# sourceMappingURL=sysgram.bundle.js.map